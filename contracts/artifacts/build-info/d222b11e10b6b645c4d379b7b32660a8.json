{
	"id": "d222b11e10b6b645c4d379b7b32660a8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Take3Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\";\r\n\r\ncontract Take3Token is\r\n    ContextUpgradeable,\r\n    IERC20Upgradeable,\r\n    OwnableUpgradeable\r\n{\r\n    using SafeMathUpgradeable for uint256;\r\n    mapping(address => uint256) private _rOwned;\r\n    mapping(address => uint256) private _tOwned;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => bool) private _isExcludedFromFee;\r\n    mapping(address => bool) private _isExcluded;\r\n    address[] private _excluded;\r\n\r\n    uint256 private constant MAX = ~uint256(0);\r\n    uint256 private _tTotal;\r\n    uint256 private _rTotal;\r\n    uint256 private _tFeeTotal;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint256 private _decimals;\r\n\r\n    uint256 public _taxFee;\r\n    uint256 private _previousTaxFee;\r\n    uint256 public _maxTxAmount;\r\n\r\n    address[] private _signers;\r\n    mapping(address => bool) private _mapSigners;\r\n    mapping(uint256 => bool) public uniqueIdExists;\r\n\r\n    function initialize(\r\n        string memory _NAME,\r\n        string memory _SYMBOL,\r\n        uint256 _DECIMALS,\r\n        uint256 _supply,\r\n        uint256 _txFee,\r\n        uint256 _MAXAMOUNT,\r\n        //uint256 SELLMAXAMOUNT,\r\n        address tokenOwner\r\n    ) public initializer {\r\n        __Ownable_init();\r\n\r\n        _name = _NAME;\r\n        _symbol = _SYMBOL;\r\n        _decimals = _DECIMALS;\r\n        _tTotal = _supply * 10**_decimals;\r\n        _rTotal = (MAX - (MAX % _tTotal));\r\n        _taxFee = _txFee;\r\n        _previousTaxFee = _txFee;\r\n        _maxTxAmount = _MAXAMOUNT * 10**_decimals;\r\n\r\n        _rOwned[tokenOwner] = _rTotal;\r\n\r\n        //exclude owner and this contract from fee\r\n        _isExcludedFromFee[tokenOwner] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        excludeFromReward(tokenOwner);\r\n        excludeFromReward(address(this));\r\n\r\n        //_owner = tokenOwner;\r\n        emit Transfer(address(0), tokenOwner, _tTotal);\r\n    }\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint256) {\r\n        return _decimals;\r\n    }\r\n\r\n    function version() public pure virtual returns (string memory) {\r\n        return \"1\";\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        if (_isExcluded[account]) return _tOwned[account];\r\n        return tokenFromReflection(_rOwned[account]);\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(\r\n            sender,\r\n            _msgSender(),\r\n            _allowances[sender][_msgSender()].sub(\r\n                amount,\r\n                \"ERC20: transfer amount exceeds allowance\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].add(addedValue)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].sub(\r\n                subtractedValue,\r\n                \"ERC20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function isExcludedFromReward(address account) public view returns (bool) {\r\n        return _isExcluded[account];\r\n    }\r\n\r\n    function totalFees() public view returns (uint256) {\r\n        return _tFeeTotal;\r\n    }\r\n\r\n    function deliver(uint256 tAmount) public {\r\n        address sender = _msgSender();\r\n        require(\r\n            !_isExcluded[sender],\r\n            \"Excluded addresses cannot call this function\"\r\n        );\r\n        (uint256 rAmount, , , , ) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _rTotal = _rTotal.sub(rAmount);\r\n        _tFeeTotal = _tFeeTotal.add(tAmount);\r\n    }\r\n\r\n    function reflectionFromToken(uint256 tAmount, bool deductTransferFee)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(tAmount <= _tTotal, \"Amount must be less than supply\");\r\n        if (!deductTransferFee) {\r\n            (uint256 rAmount, , , , ) = _getValues(tAmount);\r\n            return rAmount;\r\n        } else {\r\n            (, uint256 rTransferAmount, , , ) = _getValues(tAmount);\r\n            return rTransferAmount;\r\n        }\r\n    }\r\n\r\n    function tokenFromReflection(uint256 rAmount)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(\r\n            rAmount <= _rTotal,\r\n            \"Amount must be less than total reflections\"\r\n        );\r\n        uint256 currentRate = _getRate();\r\n        return rAmount.div(currentRate);\r\n    }\r\n\r\n    function excludeFromReward(address account) public onlyOwner {\r\n        // require(account != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, 'We can not exclude Uniswap router.');\r\n        require(!_isExcluded[account], \"Account is already excluded\");\r\n        if (_rOwned[account] > 0) {\r\n            _tOwned[account] = tokenFromReflection(_rOwned[account]);\r\n        }\r\n        _isExcluded[account] = true;\r\n        _excluded.push(account);\r\n    }\r\n\r\n    function includeInReward(address account) external onlyOwner {\r\n        require(_isExcluded[account], \"Account is already excluded\");\r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (_excluded[i] == account) {\r\n                _excluded[i] = _excluded[_excluded.length - 1];\r\n                _tOwned[account] = 0;\r\n                _isExcluded[account] = false;\r\n                _excluded.pop();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function excludeFromFee(address account) public onlyOwner {\r\n        _isExcludedFromFee[account] = true;\r\n    }\r\n\r\n    function includeInFee(address account) public onlyOwner {\r\n        _isExcludedFromFee[account] = false;\r\n    }\r\n\r\n    function setTaxFeePercent(uint256 taxFee) external onlyOwner {\r\n        _taxFee = taxFee;\r\n    }\r\n\r\n    function setMaxTxPercent(uint256 maxTxPercent) public onlyOwner {\r\n        _maxTxAmount = maxTxPercent * 10**_decimals;\r\n    }\r\n\r\n    //to recieve ETH from uniswapV2Router when swaping\r\n    receive() external payable {}\r\n\r\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\r\n        _rTotal = _rTotal.sub(rFee);\r\n        _tFeeTotal = _tFeeTotal.add(tFee);\r\n    }\r\n\r\n    function _getValues(uint256 tAmount)\r\n        private\r\n        view\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            uint256 //,uint256\r\n        )\r\n    {\r\n        (\r\n            uint256 tTransferAmount,\r\n            uint256 tFee //,uint256 tLiquidity\r\n        ) = _getTValues(tAmount);\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\r\n            tAmount,\r\n            tFee,\r\n            //tLiquidity,\r\n            _getRate()\r\n        );\r\n        return (\r\n            rAmount,\r\n            rTransferAmount,\r\n            rFee,\r\n            tTransferAmount,\r\n            tFee\r\n            //tLiquidity\r\n        );\r\n    }\r\n\r\n    function _getTValues(uint256 tAmount)\r\n        private\r\n        view\r\n        returns (uint256, uint256)\r\n    //uint256\r\n    {\r\n        uint256 tFee = calculateTaxFee(tAmount);\r\n        //uint256 tLiquidity = calculateLiquidityFee(tAmount);\r\n        uint256 tTransferAmount = tAmount.sub(tFee); //.sub(tLiquidity);\r\n        return (tTransferAmount, tFee); //, tLiquidity);\r\n    }\r\n\r\n    function _getRValues(\r\n        uint256 tAmount,\r\n        uint256 tFee,\r\n        //uint256 tLiquidity,\r\n        uint256 currentRate\r\n    )\r\n        private\r\n        pure\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256\r\n        )\r\n    {\r\n        uint256 rAmount = tAmount.mul(currentRate);\r\n        uint256 rFee = tFee.mul(currentRate);\r\n        //uint256 rLiquidity = tLiquidity.mul(currentRate);\r\n        uint256 rTransferAmount = rAmount.sub(rFee); //.sub(rLiquidity);\r\n        return (rAmount, rTransferAmount, rFee);\r\n    }\r\n\r\n    function _getRate() private view returns (uint256) {\r\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\r\n        return rSupply.div(tSupply);\r\n    }\r\n\r\n    function _getCurrentSupply() private view returns (uint256, uint256) {\r\n        uint256 rSupply = _rTotal;\r\n        uint256 tSupply = _tTotal;\r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (\r\n                _rOwned[_excluded[i]] > rSupply ||\r\n                _tOwned[_excluded[i]] > tSupply\r\n            ) return (_rTotal, _tTotal);\r\n            rSupply = rSupply.sub(_rOwned[_excluded[i]]);\r\n            tSupply = tSupply.sub(_tOwned[_excluded[i]]);\r\n        }\r\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\r\n        return (rSupply, tSupply);\r\n    }\r\n\r\n    // function _takeLiquidity(uint256 tLiquidity) private {\r\n    //     uint256 currentRate = _getRate();\r\n    //     uint256 rLiquidity = tLiquidity.mul(currentRate);\r\n    //     _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity);\r\n    //     if (_isExcluded[address(this)])\r\n    //         _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity);\r\n    // }\r\n\r\n    function claimTokens() public onlyOwner {\r\n        payable(owner()).transfer(address(this).balance);\r\n    }\r\n\r\n    function calculateTaxFee(uint256 _amount) private view returns (uint256) {\r\n        return _amount.mul(_taxFee).div(10**2);\r\n    }\r\n\r\n    function removeAllFee() private {\r\n        if (_taxFee == 0) return;\r\n\r\n        _previousTaxFee = _taxFee;\r\n        //_previousLiquidityFee = _liquidityFee;\r\n\r\n        _taxFee = 0;\r\n        //_liquidityFee = 0;\r\n    }\r\n\r\n    function restoreAllFee() private {\r\n        _taxFee = _previousTaxFee;\r\n        //_liquidityFee = _previousLiquidityFee;\r\n    }\r\n\r\n    function isExcludedFromFee(address account) public view returns (bool) {\r\n        return _isExcludedFromFee[account];\r\n    }\r\n\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        if (from != owner() && to != owner())\r\n            require(\r\n                amount <= _maxTxAmount,\r\n                \"Transfer amount exceeds the maxTxAmount.\"\r\n            );\r\n\r\n        // is the token balance of this contract address over the min number of\r\n        // tokens that we need to initiate a swap + liquidity lock?\r\n        // also, don't get caught in a circular liquidity event.\r\n        // also, don't swap & liquify if sender is uniswap pair.\r\n        uint256 contractTokenBalance = balanceOf(address(this));\r\n\r\n        if (contractTokenBalance >= _maxTxAmount) {\r\n            contractTokenBalance = _maxTxAmount;\r\n        }\r\n\r\n        // bool overMinTokenBalance = contractTokenBalance >=\r\n        //     numTokensSellToAddToLiquidity;\r\n        // if (\r\n        //     overMinTokenBalance &&\r\n        //     !inSwapAndLiquify &&\r\n        //     from != uniswapV2Pair &&\r\n        //     swapAndLiquifyEnabled\r\n        // ) {\r\n        //     contractTokenBalance = numTokensSellToAddToLiquidity;\r\n        //     //add liquidity\r\n        //     swapAndLiquify(contractTokenBalance);\r\n        // }\r\n\r\n        //indicates if fee should be deducted from transfer\r\n        bool takeFee = true;\r\n\r\n        //if any account belongs to _isExcludedFromFee account then remove the fee\r\n        if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {\r\n            takeFee = false;\r\n        }\r\n\r\n        //transfer amount, it will take tax, burn, liquidity fee\r\n        _tokenTransfer(from, to, amount, takeFee);\r\n    }\r\n\r\n    // function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {\r\n    //     // split the contract balance into halves\r\n    //     uint256 half = contractTokenBalance.div(2);\r\n    //     uint256 otherHalf = contractTokenBalance.sub(half);\r\n\r\n    //     // capture the contract's current ETH balance.\r\n    //     // this is so that we can capture exactly the amount of ETH that the\r\n    //     // swap creates, and not make the liquidity event include any ETH that\r\n    //     // has been manually sent to the contract\r\n    //     uint256 initialBalance = address(this).balance;\r\n\r\n    //     // swap tokens for ETH\r\n    //     swapTokensForEth(half); // <- this breaks the ETH -> HATE swap when swap+liquify is triggered\r\n\r\n    //     // how much ETH did we just swap into?\r\n    //     uint256 newBalance = address(this).balance.sub(initialBalance);\r\n\r\n    //     // add liquidity to uniswap\r\n    //     addLiquidity(otherHalf, newBalance);\r\n\r\n    //     emit SwapAndLiquify(half, newBalance, otherHalf);\r\n    // }\r\n\r\n    // function swapTokensForEth(uint256 tokenAmount) private {\r\n    //     // generate the uniswap pair path of token -> weth\r\n    //     address[] memory path = new address[](2);\r\n    //     path[0] = address(this);\r\n    //     path[1] = uniswapV2Router.WETH();\r\n\r\n    //     _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n\r\n    //     // make the swap\r\n    //     uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n    //         tokenAmount,\r\n    //         0, // accept any amount of ETH\r\n    //         path,\r\n    //         address(this),\r\n    //         block.timestamp\r\n    //     );\r\n    // }\r\n\r\n    // function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\r\n    //     // approve token transfer to cover all possible scenarios\r\n    //     _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n\r\n    //     // add the liquidity\r\n    //     uniswapV2Router.addLiquidityETH{value: ethAmount}(\r\n    //         address(this),\r\n    //         tokenAmount,\r\n    //         0, // slippage is unavoidable\r\n    //         0, // slippage is unavoidable\r\n    //         owner(),\r\n    //         block.timestamp\r\n    //     );\r\n    // }\r\n\r\n    //this method is responsible for taking all fee, if takeFee is true\r\n    function _tokenTransfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount,\r\n        bool takeFee\r\n    ) private {\r\n        if (!takeFee) removeAllFee();\r\n\r\n        if (_isExcluded[sender] && !_isExcluded[recipient]) {\r\n            _transferFromExcluded(sender, recipient, amount);\r\n        } else if (!_isExcluded[sender] && _isExcluded[recipient]) {\r\n            _transferToExcluded(sender, recipient, amount);\r\n        } else if (!_isExcluded[sender] && !_isExcluded[recipient]) {\r\n            _transferStandard(sender, recipient, amount);\r\n        } else if (_isExcluded[sender] && _isExcluded[recipient]) {\r\n            _transferBothExcluded(sender, recipient, amount);\r\n        } else {\r\n            _transferStandard(sender, recipient, amount);\r\n        }\r\n\r\n        if (!takeFee) restoreAllFee();\r\n    }\r\n\r\n    function _transferStandard(\r\n        address sender,\r\n        address recipient,\r\n        uint256 tAmount\r\n    ) private {\r\n        (\r\n            uint256 rAmount,\r\n            uint256 rTransferAmount,\r\n            uint256 rFee,\r\n            uint256 tTransferAmount,\r\n            uint256 tFee //,uint256 tLiquidity\r\n        ) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\r\n        //_takeLiquidity(tLiquidity);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _transferToExcluded(\r\n        address sender,\r\n        address recipient,\r\n        uint256 tAmount\r\n    ) private {\r\n        (\r\n            uint256 rAmount,\r\n            uint256 rTransferAmount,\r\n            uint256 rFee,\r\n            uint256 tTransferAmount,\r\n            uint256 tFee //,uint256 tLiquidity\r\n        ) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\r\n        //_takeLiquidity(tLiquidity);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _transferFromExcluded(\r\n        address sender,\r\n        address recipient,\r\n        uint256 tAmount\r\n    ) private {\r\n        (\r\n            uint256 rAmount,\r\n            uint256 rTransferAmount,\r\n            uint256 rFee,\r\n            uint256 tTransferAmount,\r\n            uint256 tFee //,uint256 tLiquidity\r\n        ) = _getValues(tAmount);\r\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\r\n        //_takeLiquidity(tLiquidity);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _transferBothExcluded(\r\n        address sender,\r\n        address recipient,\r\n        uint256 tAmount\r\n    ) private {\r\n        (\r\n            uint256 rAmount,\r\n            uint256 rTransferAmount,\r\n            uint256 rFee,\r\n            uint256 tTransferAmount,\r\n            uint256 tFee //,uint256 tLiquidity\r\n        ) = _getValues(tAmount);\r\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\r\n        //_takeLiquidity(tLiquidity);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function signers() external view returns (address[] memory) {\r\n        return _signers;\r\n    }\r\n\r\n    function setSigners(address[] memory signers_) external virtual onlyOwner {\r\n        _updateMap(_signers, false, _mapSigners);\r\n        delete _signers;\r\n        _signers = signers_;\r\n        _updateMap(signers_, true, _mapSigners);\r\n    }\r\n\r\n    function mapSigner(address signer) external view returns (bool) {\r\n        return _mapSigners[signer];\r\n    }\r\n\r\n    function _updateMap(\r\n        address[] memory arr,\r\n        bool status,\r\n        mapping(address => bool) storage map\r\n    ) internal {\r\n        for (uint64 i = 0; i < arr.length; i++) {\r\n            map[arr[i]] = status;\r\n        }\r\n    }\r\n\r\n    function _permitTransfer(\r\n        address recipient,\r\n        uint256 uniqueId,\r\n        uint256 amount,\r\n        uint256 deadline,\r\n        uint8[] memory v,\r\n        bytes32[] memory r,\r\n        bytes32[] memory s\r\n    ) public virtual {\r\n        require(deadline >= block.timestamp, \"Expired deadline\");\r\n        require(!uniqueIdExists[uniqueId], \"Unique id exists\");\r\n\r\n        address sender = msg.sender;\r\n        address owner = super.owner();\r\n\r\n        bytes32 permitTxHash = keccak256(\r\n            abi.encode(owner, sender, recipient, amount, uniqueId, deadline)\r\n        );\r\n\r\n        address lastAddr = address(0);\r\n        uint8 verifiedSigners = 0;\r\n        for (uint64 i = 0; i < v.length; i++) {\r\n            address recovered = ecrecover(permitTxHash, v[i], r[i], s[i]);\r\n            if (recovered > lastAddr && _mapSigners[recovered])\r\n                verifiedSigners++;\r\n            lastAddr = recovered;\r\n        }\r\n\r\n        require(verifiedSigners == 3, \"Invalid signers\");\r\n\r\n        uniqueIdExists[uniqueId] = true;\r\n        transfer(recipient, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMathUpgradeable {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 644,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208630b8cbb7394cb9eb9b53692c2e1d677c40cb9dd45fb91e50cbea1260d43abd64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208630b8cbb7394cb9eb9b53692c2e1d677c40cb9dd45fb91e50cbea1260d43abd64736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 ADDRESS 0xB8 0xCB 0xB7 CODECOPY 0x4C 0xB9 0xEB SWAP12 MSTORE8 PUSH10 0x2C2E1D677C40CB9DD45F 0xB9 0x1E POP 0xCB 0xEA SLT PUSH1 0xD4 GASPRICE 0xBD PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "194:7172:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:7172:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208630b8cbb7394cb9eb9b53692c2e1d677c40cb9dd45fb91e50cbea1260d43abd64736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 ADDRESS 0xB8 0xCB 0xB7 CODECOPY 0x4C 0xB9 0xEB SWAP12 MSTORE8 PUSH10 0x2C2E1D677C40CB9DD45F 0xB9 0x1E POP 0xCB 0xEA SLT PUSH1 0xD4 GASPRICE 0xBD PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "194:7172:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208630b8cbb7394cb9eb9b53692c2e1d677c40cb9dd45fb91e50cbea1260d43abd64736f6c634300080b0033",
									".code": [
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 644,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol": {
				"SafeMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":482:6793  library SafeMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":482:6793  library SafeMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fb05407f9df73108fd43aa4ed03c08e39c983afdb1ea6d8217680a3bd70bb2bd64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb05407f9df73108fd43aa4ed03c08e39c983afdb1ea6d8217680a3bd70bb2bd64736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB SDIV BLOCKHASH PUSH32 0x9DF73108FD43AA4ED03C08E39C983AFDB1EA6D8217680A3BD70BB2BD64736F6C PUSH4 0x4300080B STOP CALLER ",
							"sourceMap": "482:6311:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6311:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb05407f9df73108fd43aa4ed03c08e39c983afdb1ea6d8217680a3bd70bb2bd64736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB SDIV BLOCKHASH PUSH32 0x9DF73108FD43AA4ED03C08E39C983AFDB1EA6D8217680A3BD70BB2BD64736F6C PUSH4 0x4300080B STOP CALLER ",
							"sourceMap": "482:6311:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb05407f9df73108fd43aa4ed03c08e39c983afdb1ea6d8217680a3bd70bb2bd64736f6c634300080b0033",
									".code": [
										{
											"begin": 482,
											"end": 6793,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":\"SafeMathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e\",\"dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Take3Token.sol": {
				"Take3Token": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_maxTxAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "uniqueId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8[]",
									"name": "v",
									"type": "uint8[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "r",
									"type": "bytes32[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "s",
									"type": "bytes32[]"
								}
							],
							"name": "_permitTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_taxFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tAmount",
									"type": "uint256"
								}
							],
							"name": "deliver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeInFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeInReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_NAME",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_SYMBOL",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_DECIMALS",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_supply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_txFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_MAXAMOUNT",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcludedFromFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcludedFromReward",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "mapSigner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tAmount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "deductTransferFee",
									"type": "bool"
								}
							],
							"name": "reflectionFromToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxTxPercent",
									"type": "uint256"
								}
							],
							"name": "setMaxTxPercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "signers_",
									"type": "address[]"
								}
							],
							"name": "setSigners",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "taxFee",
									"type": "uint256"
								}
							],
							"name": "setTaxFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signers",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rAmount",
									"type": "uint256"
								}
							],
							"name": "tokenFromReflection",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uniqueIdExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Take3Token.sol\":385:21470  contract Take3Token is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Take3Token.sol\":385:21470  contract Take3Token is... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x52390c02\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xa3772662\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xd543dbeb\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xd543dbeb\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xea2f0b37\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf9342285\n      eq\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0xa3772662\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xa6e57d99\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x715018a6\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x7d1db4a5\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x88f82020\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x52390c02\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x5342acb4\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x3685d419\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x437823ec\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x437823ec\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x4549b039\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x46f0975a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x48c54b9d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x4990560f\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup1\n      0x3685d419\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3b124fe7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x3bd5d173\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x13114a9d\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x13114a9d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2d838119\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      0x061c82d0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x07c351dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Take3Token.sol\":7402:7498  function setTaxFeePercent(uint256 taxFee) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/Take3Token.sol\":2307:2390  function name() public view returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Take3Token.sol\":20014:20123  function mapSigner(address signer) external view returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":20096:20115  _mapSigners[signer] */\n      and\n        /* \"contracts/Take3Token.sol\":20072:20076  bool */\n      0x00\n        /* \"contracts/Take3Token.sol\":20096:20115  _mapSigners[signer] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":20096:20107  _mapSigners */\n      0x75\n        /* \"contracts/Take3Token.sol\":20096:20115  _mapSigners[signer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/Take3Token.sol\":20014:20123  function mapSigner(address signer) external view returns (bool) {... */\n      jump\n    tag_59:\n      mload(0x40)\n        /* \"#utility.yul\":1335:1349   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1328:1350   */\n      iszero\n        /* \"#utility.yul\":1310:1351   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1298:1300   */\n      0x20\n        /* \"#utility.yul\":1283:1301   */\n      add\n        /* \"contracts/Take3Token.sol\":20014:20123  function mapSigner(address signer) external view returns (bool) {... */\n      tag_56\n        /* \"#utility.yul\":1170:1357   */\n      jump\n        /* \"contracts/Take3Token.sol\":3394:3587  function approve(address spender, uint256 amount)... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_59\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":4893:4980  function totalFees() public view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n        /* \"contracts/Take3Token.sol\":4962:4972  _tFeeTotal */\n      sload(0x6d)\n        /* \"contracts/Take3Token.sol\":4893:4980  function totalFees() public view returns (uint256) {... */\n    tag_72:\n      mload(0x40)\n        /* \"#utility.yul\":1767:1792   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1755:1757   */\n      0x20\n        /* \"#utility.yul\":1740:1758   */\n      add\n        /* \"contracts/Take3Token.sol\":4893:4980  function totalFees() public view returns (uint256) {... */\n      tag_56\n        /* \"#utility.yul\":1621:1798   */\n      jump\n        /* \"contracts/Take3Token.sol\":2686:2781  function totalSupply() public view override returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n        /* \"contracts/Take3Token.sol\":2766:2773  _tTotal */\n      sload(0x6b)\n        /* \"contracts/Take3Token.sol\":2686:2781  function totalSupply() public view override returns (uint256) {... */\n      jump(tag_72)\n        /* \"contracts/Take3Token.sol\":3595:4041  function transferFrom(... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_59\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":5896:6218  function tokenFromReflection(uint256 rAmount)... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_72\n      tag_88\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":2493:2578  function decimals() public view returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n        /* \"contracts/Take3Token.sol\":2561:2570  _decimals */\n      sload(0x70)\n        /* \"contracts/Take3Token.sol\":2493:2578  function decimals() public view returns (uint256) {... */\n      jump(tag_72)\n        /* \"contracts/Take3Token.sol\":6680:7157  function includeInReward(address account) external onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_49\n      tag_97\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":4049:4349  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_59\n      tag_101\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":1086:1108  uint256 public _taxFee */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_72\n      sload(0x71)\n      dup2\n      jump\n        /* \"contracts/Take3Token.sol\":4988:5405  function deliver(uint256 tAmount) public {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_49\n      tag_110\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":7165:7276  function excludeFromFee(address account) public onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_49\n      tag_114\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":5413:5888  function reflectionFromToken(uint256 tAmount, bool deductTransferFee)... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_72\n      tag_118\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_118:\n      tag_120\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":19665:19759  function signers() external view returns (address[] memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":10745:10852  function claimTokens() public onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_49\n      tag_129\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":20380:21467  function _permitTransfer(... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_49\n      tag_132\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_132:\n      tag_134\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":6226:6672  function excludeFromReward(address account) public onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_49\n      tag_137\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":11358:11482  function isExcludedFromFee(address account) public view returns (bool) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_59\n      tag_141\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":11447:11474  _isExcludedFromFee[account] */\n      and\n        /* \"contracts/Take3Token.sol\":11423:11427  bool */\n      0x00\n        /* \"contracts/Take3Token.sol\":11447:11474  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":11447:11465  _isExcludedFromFee */\n      0x68\n        /* \"contracts/Take3Token.sol\":11447:11474  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/Take3Token.sol\":11358:11482  function isExcludedFromFee(address account) public view returns (bool) {... */\n      jump\n        /* \"contracts/Take3Token.sol\":2586:2678  function version() public pure virtual returns (string memory) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n        /* \"contracts/Take3Token.sol\":2660:2670  return \"1\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xf8, 0x31)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/Take3Token.sol\":2586:2678  function version() public pure virtual returns (string memory) {... */\n      jump(tag_54)\n        /* \"contracts/Take3Token.sol\":2789:2987  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_72\n      tag_150\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_49\n      tag_155\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":1153:1180  uint256 public _maxTxAmount */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_72\n      sload(0x73)\n      dup2\n      jump\n        /* \"contracts/Take3Token.sol\":4765:4885  function isExcludedFromReward(address account) public view returns (bool) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_59\n      tag_162\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":4857:4877  _isExcluded[account] */\n      and\n        /* \"contracts/Take3Token.sol\":4833:4837  bool */\n      0x00\n        /* \"contracts/Take3Token.sol\":4857:4877  _isExcluded[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":4857:4868  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":4857:4877  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/Take3Token.sol\":4765:4885  function isExcludedFromReward(address account) public view returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      sload(0x33)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6370:6421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6358:6360   */\n      0x20\n        /* \"#utility.yul\":6343:6361   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      tag_56\n        /* \"#utility.yul\":6224:6427   */\n      jump\n        /* \"contracts/Take3Token.sol\":2398:2485  function symbol() public view returns (string memory) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      tag_54\n      tag_172\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":19767:20006  function setSigners(address[] memory signers_) external virtual onlyOwner {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      tag_49\n      tag_176\n      calldatasize\n      0x04\n      tag_177\n      jump\t// in\n    tag_176:\n      tag_178\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":4357:4757  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      tag_59\n      tag_181\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_181:\n      tag_182\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":1328:2299  function initialize(... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      tag_49\n      tag_186\n      calldatasize\n      0x04\n      tag_187\n      jump\t// in\n    tag_186:\n      tag_188\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":2995:3194  function transfer(address recipient, uint256 amount)... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      tag_59\n      tag_191\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_191:\n      tag_192\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":7506:7632  function setMaxTxPercent(uint256 maxTxPercent) public onlyOwner {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      pop\n      tag_49\n      tag_196\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_196:\n      tag_197\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":3202:3386  function allowance(address owner, address spender)... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_198\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_198:\n      pop\n      tag_72\n      tag_200\n      calldatasize\n      0x04\n      tag_201\n      jump\t// in\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":3351:3369  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/Take3Token.sol\":3319:3326  uint256 */\n      0x00\n        /* \"contracts/Take3Token.sol\":3351:3369  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":3351:3362  _allowances */\n      0x67\n        /* \"contracts/Take3Token.sol\":3351:3369  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Take3Token.sol\":3351:3378  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Take3Token.sol\":3202:3386  function allowance(address owner, address spender)... */\n      jump\n        /* \"contracts/Take3Token.sol\":7284:7394  function includeInFee(address account) public onlyOwner {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n      tag_49\n      tag_206\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_206:\n      tag_207\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_208\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_208:\n      pop\n      tag_49\n      tag_210\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_210:\n      tag_211\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":1273:1319  mapping(uint256 => bool) public uniqueIdExists */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_212\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_212:\n      pop\n      tag_59\n      tag_214\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_214:\n      mstore(0x20, 0x76)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/Take3Token.sol\":7402:7498  function setTaxFeePercent(uint256 taxFee) external onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"contracts/Take3Token.sol\":7474:7481  _taxFee */\n      0x71\n        /* \"contracts/Take3Token.sol\":7474:7490  _taxFee = taxFee */\n      sstore\n        /* \"contracts/Take3Token.sol\":7402:7498  function setTaxFeePercent(uint256 taxFee) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":2307:2390  function name() public view returns (string memory) {... */\n    tag_55:\n        /* \"contracts/Take3Token.sol\":2344:2357  string memory */\n      0x60\n        /* \"contracts/Take3Token.sol\":2377:2382  _name */\n      0x6e\n        /* \"contracts/Take3Token.sol\":2370:2382  return _name */\n      dup1\n      sload\n      tag_222\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_224\n      swap1\n      tag_223\n      jump\t// in\n    tag_224:\n      dup1\n      iszero\n      tag_225\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_226\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_225)\n    tag_226:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_227:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_227\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_225:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Take3Token.sol\":2307:2390  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":3394:3587  function approve(address spender, uint256 amount)... */\n    tag_69:\n        /* \"contracts/Take3Token.sol\":3496:3500  bool */\n      0x00\n        /* \"contracts/Take3Token.sol\":3518:3557  _approve(_msgSender(), spender, amount) */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"contracts/Take3Token.sol\":3541:3548  spender */\n      dup5\n        /* \"contracts/Take3Token.sol\":3550:3556  amount */\n      dup5\n        /* \"contracts/Take3Token.sol\":3518:3526  _approve */\n      tag_233\n        /* \"contracts/Take3Token.sol\":3518:3557  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_230:\n      pop\n        /* \"contracts/Take3Token.sol\":3575:3579  true */\n      0x01\n        /* \"contracts/Take3Token.sol\":3394:3587  function approve(address spender, uint256 amount)... */\n    tag_229:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":3595:4041  function transferFrom(... */\n    tag_84:\n        /* \"contracts/Take3Token.sol\":3727:3731  bool */\n      0x00\n        /* \"contracts/Take3Token.sol\":3744:3780  _transfer(sender, recipient, amount) */\n      tag_237\n        /* \"contracts/Take3Token.sol\":3754:3760  sender */\n      dup5\n        /* \"contracts/Take3Token.sol\":3762:3771  recipient */\n      dup5\n        /* \"contracts/Take3Token.sol\":3773:3779  amount */\n      dup5\n        /* \"contracts/Take3Token.sol\":3744:3753  _transfer */\n      tag_238\n        /* \"contracts/Take3Token.sol\":3744:3780  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/Take3Token.sol\":3791:4011  _approve(... */\n      tag_239\n        /* \"contracts/Take3Token.sol\":3814:3820  sender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"contracts/Take3Token.sol\":3862:4000  _allowances[sender][_msgSender()].sub(... */\n      tag_241\n        /* \"contracts/Take3Token.sol\":3918:3924  amount */\n      dup6\n        /* \"contracts/Take3Token.sol\":3862:4000  _allowances[sender][_msgSender()].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":3862:3881  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":3862:3873  _allowances */\n      0x67\n        /* \"contracts/Take3Token.sol\":3862:3881  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"contracts/Take3Token.sol\":3862:3895  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/Take3Token.sol\":3862:3899  _allowances[sender][_msgSender()].sub */\n      tag_243\n        /* \"contracts/Take3Token.sol\":3862:4000  _allowances[sender][_msgSender()].sub(... */\n      jump\t// in\n    tag_241:\n        /* \"contracts/Take3Token.sol\":3791:3799  _approve */\n      tag_233\n        /* \"contracts/Take3Token.sol\":3791:4011  _approve(... */\n      jump\t// in\n    tag_239:\n      pop\n        /* \"contracts/Take3Token.sol\":4029:4033  true */\n      0x01\n        /* \"contracts/Take3Token.sol\":3595:4041  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":5896:6218  function tokenFromReflection(uint256 rAmount)... */\n    tag_89:\n        /* \"contracts/Take3Token.sol\":5990:5997  uint256 */\n      0x00\n        /* \"contracts/Take3Token.sol\":6048:6055  _rTotal */\n      sload(0x6c)\n        /* \"contracts/Take3Token.sol\":6037:6044  rAmount */\n      dup3\n        /* \"contracts/Take3Token.sol\":6037:6055  rAmount <= _rTotal */\n      gt\n      iszero\n        /* \"contracts/Take3Token.sol\":6015:6125  require(... */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9618:9620   */\n      0x20\n        /* \"contracts/Take3Token.sol\":6015:6125  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9600:9621   */\n      mstore\n        /* \"#utility.yul\":9657:9659   */\n      0x2a\n        /* \"#utility.yul\":9637:9655   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9630:9660   */\n      mstore\n        /* \"#utility.yul\":9696:9730   */\n      0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072\n        /* \"#utility.yul\":9676:9694   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9669:9731   */\n      mstore\n      shl(0xb0, 0x65666c656374696f6e73)\n        /* \"#utility.yul\":9747:9765   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9740:9780   */\n      mstore\n        /* \"#utility.yul\":9797:9816   */\n      0x84\n      add\n        /* \"contracts/Take3Token.sol\":6015:6125  require(... */\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"contracts/Take3Token.sol\":6136:6155  uint256 currentRate */\n      0x00\n        /* \"contracts/Take3Token.sol\":6158:6168  _getRate() */\n      tag_248\n        /* \"contracts/Take3Token.sol\":6158:6166  _getRate */\n      tag_249\n        /* \"contracts/Take3Token.sol\":6158:6168  _getRate() */\n      jump\t// in\n    tag_248:\n        /* \"contracts/Take3Token.sol\":6136:6168  uint256 currentRate = _getRate() */\n      swap1\n      pop\n        /* \"contracts/Take3Token.sol\":6186:6210  rAmount.div(currentRate) */\n      tag_250\n        /* \"contracts/Take3Token.sol\":6186:6193  rAmount */\n      dup4\n        /* \"contracts/Take3Token.sol\":6136:6168  uint256 currentRate = _getRate() */\n      dup3\n        /* \"contracts/Take3Token.sol\":6186:6197  rAmount.div */\n      tag_251\n        /* \"contracts/Take3Token.sol\":6186:6210  rAmount.div(currentRate) */\n      jump\t// in\n    tag_250:\n        /* \"contracts/Take3Token.sol\":6179:6210  return rAmount.div(currentRate) */\n      swap4\n        /* \"contracts/Take3Token.sol\":5896:6218  function tokenFromReflection(uint256 rAmount)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":6680:7157  function includeInReward(address account) external onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_254\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":6760:6780  _isExcluded[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":6760:6771  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":6760:6780  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":6752:6812  require(_isExcluded[account], \"Account is already excluded\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10029:10031   */\n      0x20\n        /* \"contracts/Take3Token.sol\":6752:6812  require(_isExcluded[account], \"Account is already excluded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10011:10032   */\n      mstore\n        /* \"#utility.yul\":10068:10070   */\n      0x1b\n        /* \"#utility.yul\":10048:10066   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10041:10071   */\n      mstore\n        /* \"#utility.yul\":10107:10136   */\n      0x4163636f756e7420697320616c7265616479206578636c756465640000000000\n        /* \"#utility.yul\":10087:10105   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10080:10137   */\n      mstore\n        /* \"#utility.yul\":10154:10172   */\n      0x64\n      add\n        /* \"contracts/Take3Token.sol\":6752:6812  require(_isExcluded[account], \"Account is already excluded\") */\n      tag_246\n        /* \"#utility.yul\":9827:10178   */\n      jump\n        /* \"contracts/Take3Token.sol\":6752:6812  require(_isExcluded[account], \"Account is already excluded\") */\n    tag_256:\n        /* \"contracts/Take3Token.sol\":6828:6837  uint256 i */\n      0x00\n        /* \"contracts/Take3Token.sol\":6823:7150  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_259:\n        /* \"contracts/Take3Token.sol\":6847:6856  _excluded */\n      0x6a\n        /* \"contracts/Take3Token.sol\":6847:6863  _excluded.length */\n      sload\n        /* \"contracts/Take3Token.sol\":6843:6863  i < _excluded.length */\n      dup2\n      lt\n        /* \"contracts/Take3Token.sol\":6823:7150  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"contracts/Take3Token.sol\":6905:6912  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":6889:6912  _excluded[i] == account */\n      and\n        /* \"contracts/Take3Token.sol\":6889:6898  _excluded */\n      0x6a\n        /* \"contracts/Take3Token.sol\":6899:6900  i */\n      dup3\n        /* \"contracts/Take3Token.sol\":6889:6901  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_263\n      jumpi\n      tag_263\n      tag_264\n      jump\t// in\n    tag_263:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Take3Token.sol\":6889:6912  _excluded[i] == account */\n      eq\n        /* \"contracts/Take3Token.sol\":6885:7139  if (_excluded[i] == account) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/Take3Token.sol\":6948:6957  _excluded */\n      0x6a\n        /* \"contracts/Take3Token.sol\":6958:6974  _excluded.length */\n      dup1\n      sload\n        /* \"contracts/Take3Token.sol\":6958:6978  _excluded.length - 1 */\n      tag_267\n      swap1\n        /* \"contracts/Take3Token.sol\":6977:6978  1 */\n      0x01\n      swap1\n        /* \"contracts/Take3Token.sol\":6958:6978  _excluded.length - 1 */\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"contracts/Take3Token.sol\":6948:6979  _excluded[_excluded.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_270\n      jumpi\n      tag_270\n      tag_264\n      jump\t// in\n    tag_270:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"contracts/Take3Token.sol\":6933:6942  _excluded */\n      0x6a\n        /* \"contracts/Take3Token.sol\":6933:6945  _excluded[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":6948:6979  _excluded[_excluded.length - 1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/Take3Token.sol\":6943:6944  i */\n      dup4\n      swap1\n        /* \"contracts/Take3Token.sol\":6933:6945  _excluded[i] */\n      dup2\n      lt\n      tag_273\n      jumpi\n      tag_273\n      tag_264\n      jump\t// in\n    tag_273:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/Take3Token.sol\":6933:6979  _excluded[i] = _excluded[_excluded.length - 1] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":6998:7014  _tOwned[account] */\n      swap2\n      dup5\n      and\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":6998:7005  _tOwned */\n      0x66\n        /* \"contracts/Take3Token.sol\":6998:7014  _tOwned[account] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Take3Token.sol\":6998:7018  _tOwned[account] = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":7037:7048  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":7037:7057  _isExcluded[account] */\n      swap1\n      swap3\n      mstore\n      keccak256\n        /* \"contracts/Take3Token.sol\":7037:7065  _isExcluded[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":7084:7093  _excluded */\n      0x6a\n        /* \"contracts/Take3Token.sol\":7084:7099  _excluded.pop() */\n      dup1\n      sload\n      dup1\n      tag_276\n      jumpi\n      tag_276\n      tag_277\n      jump\t// in\n    tag_276:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":6823:7150  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      pop\n        /* \"contracts/Take3Token.sol\":6680:7157  function includeInReward(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":6885:7139  if (_excluded[i] == account) {... */\n    tag_266:\n        /* \"contracts/Take3Token.sol\":6865:6868  i++ */\n      dup1\n      tag_279\n      dup2\n      tag_280\n      jump\t// in\n    tag_279:\n      swap2\n      pop\n      pop\n        /* \"contracts/Take3Token.sol\":6823:7150  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_259)\n    tag_260:\n      pop\n        /* \"contracts/Take3Token.sol\":6680:7157  function includeInReward(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":4049:4349  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"contracts/Take3Token.sol\":4164:4168  bool */\n      0x00\n        /* \"contracts/Take3Token.sol\":4258:4283  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":4258:4269  _allowances */\n      0x67\n        /* \"contracts/Take3Token.sol\":4258:4283  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":4258:4292  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":4164:4168  bool */\n      swap1\n      swap2\n        /* \"contracts/Take3Token.sol\":4186:4319  _approve(... */\n      tag_230\n      swap2\n        /* \"contracts/Take3Token.sol\":4236:4243  spender */\n      dup6\n      swap1\n        /* \"contracts/Take3Token.sol\":4258:4308  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_241\n      swap1\n        /* \"contracts/Take3Token.sol\":4297:4307  addedValue */\n      dup7\n        /* \"contracts/Take3Token.sol\":4258:4296  _allowances[_msgSender()][spender].add */\n      tag_286\n        /* \"contracts/Take3Token.sol\":4258:4308  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":4988:5405  function deliver(uint256 tAmount) public {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"contracts/Take3Token.sol\":5040:5054  address sender */\n      0x00\n        /* \"contracts/Take3Token.sol\":5103:5122  _isExcluded[sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":5103:5114  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":5103:5122  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":5102:5122  !_isExcluded[sender] */\n      iszero\n        /* \"contracts/Take3Token.sol\":5080:5194  require(... */\n      tag_289\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11051:11053   */\n      0x20\n        /* \"contracts/Take3Token.sol\":5080:5194  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11033:11054   */\n      mstore\n        /* \"#utility.yul\":11090:11092   */\n      0x2c\n        /* \"#utility.yul\":11070:11088   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11063:11093   */\n      mstore\n        /* \"#utility.yul\":11129:11163   */\n      0x4578636c75646564206164647265737365732063616e6e6f742063616c6c2074\n        /* \"#utility.yul\":11109:11127   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11102:11164   */\n      mstore\n      shl(0xa1, 0x3434b990333ab731ba34b7b7)\n        /* \"#utility.yul\":11180:11198   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11173:11215   */\n      mstore\n        /* \"#utility.yul\":11232:11251   */\n      0x84\n      add\n        /* \"contracts/Take3Token.sol\":5080:5194  require(... */\n      tag_246\n        /* \"#utility.yul\":10849:11257   */\n      jump\n        /* \"contracts/Take3Token.sol\":5080:5194  require(... */\n    tag_289:\n        /* \"contracts/Take3Token.sol\":5206:5221  uint256 rAmount */\n      0x00\n        /* \"contracts/Take3Token.sol\":5233:5252  _getValues(tAmount) */\n      tag_292\n        /* \"contracts/Take3Token.sol\":5244:5251  tAmount */\n      dup4\n        /* \"contracts/Take3Token.sol\":5233:5243  _getValues */\n      tag_293\n        /* \"contracts/Take3Token.sol\":5233:5252  _getValues(tAmount) */\n      jump\t// in\n    tag_292:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":5281:5296  _rOwned[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":5281:5288  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":5281:5296  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":5205:5252  (uint256 rAmount, , , , ) = _getValues(tAmount) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Take3Token.sol\":5281:5309  _rOwned[sender].sub(rAmount) */\n      tag_294\n      swap1\n        /* \"contracts/Take3Token.sol\":5205:5252  (uint256 rAmount, , , , ) = _getValues(tAmount) */\n      dup3\n        /* \"contracts/Take3Token.sol\":5281:5300  _rOwned[sender].sub */\n      tag_295\n        /* \"contracts/Take3Token.sol\":5281:5309  _rOwned[sender].sub(rAmount) */\n      jump\t// in\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":5263:5278  _rOwned[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":5263:5270  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":5263:5278  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Take3Token.sol\":5263:5309  _rOwned[sender] = _rOwned[sender].sub(rAmount) */\n      sstore\n        /* \"contracts/Take3Token.sol\":5330:5337  _rTotal */\n      sload(0x6c)\n        /* \"contracts/Take3Token.sol\":5330:5350  _rTotal.sub(rAmount) */\n      tag_296\n      swap1\n        /* \"contracts/Take3Token.sol\":5342:5349  rAmount */\n      dup3\n        /* \"contracts/Take3Token.sol\":5330:5341  _rTotal.sub */\n      tag_295\n        /* \"contracts/Take3Token.sol\":5330:5350  _rTotal.sub(rAmount) */\n      jump\t// in\n    tag_296:\n        /* \"contracts/Take3Token.sol\":5320:5327  _rTotal */\n      0x6c\n        /* \"contracts/Take3Token.sol\":5320:5350  _rTotal = _rTotal.sub(rAmount) */\n      sstore\n        /* \"contracts/Take3Token.sol\":5374:5384  _tFeeTotal */\n      sload(0x6d)\n        /* \"contracts/Take3Token.sol\":5374:5397  _tFeeTotal.add(tAmount) */\n      tag_297\n      swap1\n        /* \"contracts/Take3Token.sol\":5389:5396  tAmount */\n      dup5\n        /* \"contracts/Take3Token.sol\":5374:5388  _tFeeTotal.add */\n      tag_286\n        /* \"contracts/Take3Token.sol\":5374:5397  _tFeeTotal.add(tAmount) */\n      jump\t// in\n    tag_297:\n        /* \"contracts/Take3Token.sol\":5361:5371  _tFeeTotal */\n      0x6d\n        /* \"contracts/Take3Token.sol\":5361:5397  _tFeeTotal = _tFeeTotal.add(tAmount) */\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/Take3Token.sol\":4988:5405  function deliver(uint256 tAmount) public {... */\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":7165:7276  function excludeFromFee(address account) public onlyOwner {... */\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_299\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_299:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":7234:7261  _isExcludedFromFee[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":7234:7252  _isExcludedFromFee */\n      0x68\n        /* \"contracts/Take3Token.sol\":7234:7261  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Take3Token.sol\":7234:7268  _isExcludedFromFee[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Take3Token.sol\":7264:7268  true */\n      0x01\n        /* \"contracts/Take3Token.sol\":7234:7268  _isExcludedFromFee[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":7165:7276  function excludeFromFee(address account) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":5413:5888  function reflectionFromToken(uint256 tAmount, bool deductTransferFee)... */\n    tag_120:\n        /* \"contracts/Take3Token.sol\":5531:5538  uint256 */\n      0x00\n        /* \"contracts/Take3Token.sol\":5575:5582  _tTotal */\n      sload(0x6b)\n        /* \"contracts/Take3Token.sol\":5564:5571  tAmount */\n      dup4\n        /* \"contracts/Take3Token.sol\":5564:5582  tAmount <= _tTotal */\n      gt\n      iszero\n        /* \"contracts/Take3Token.sol\":5556:5618  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      tag_302\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11464:11466   */\n      0x20\n        /* \"contracts/Take3Token.sol\":5556:5618  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11446:11467   */\n      mstore\n        /* \"#utility.yul\":11503:11505   */\n      0x1f\n        /* \"#utility.yul\":11483:11501   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11476:11506   */\n      mstore\n        /* \"#utility.yul\":11542:11575   */\n      0x416d6f756e74206d757374206265206c657373207468616e20737570706c7900\n        /* \"#utility.yul\":11522:11540   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11515:11576   */\n      mstore\n        /* \"#utility.yul\":11593:11611   */\n      0x64\n      add\n        /* \"contracts/Take3Token.sol\":5556:5618  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      tag_246\n        /* \"#utility.yul\":11262:11617   */\n      jump\n        /* \"contracts/Take3Token.sol\":5556:5618  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n    tag_302:\n        /* \"contracts/Take3Token.sol\":5634:5651  deductTransferFee */\n      dup2\n        /* \"contracts/Take3Token.sol\":5629:5881  if (!deductTransferFee) {... */\n      tag_305\n      jumpi\n        /* \"contracts/Take3Token.sol\":5669:5684  uint256 rAmount */\n      0x00\n        /* \"contracts/Take3Token.sol\":5696:5715  _getValues(tAmount) */\n      tag_306\n        /* \"contracts/Take3Token.sol\":5707:5714  tAmount */\n      dup5\n        /* \"contracts/Take3Token.sol\":5696:5706  _getValues */\n      tag_293\n        /* \"contracts/Take3Token.sol\":5696:5715  _getValues(tAmount) */\n      jump\t// in\n    tag_306:\n      pop\n        /* \"contracts/Take3Token.sol\":5668:5715  (uint256 rAmount, , , , ) = _getValues(tAmount) */\n      swap3\n      swap5\n      pop\n        /* \"contracts/Take3Token.sol\":5730:5744  return rAmount */\n      tag_229\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/Take3Token.sol\":5629:5881  if (!deductTransferFee) {... */\n    tag_305:\n        /* \"contracts/Take3Token.sol\":5780:5803  uint256 rTransferAmount */\n      0x00\n        /* \"contracts/Take3Token.sol\":5813:5832  _getValues(tAmount) */\n      tag_308\n        /* \"contracts/Take3Token.sol\":5824:5831  tAmount */\n      dup5\n        /* \"contracts/Take3Token.sol\":5813:5823  _getValues */\n      tag_293\n        /* \"contracts/Take3Token.sol\":5813:5832  _getValues(tAmount) */\n      jump\t// in\n    tag_308:\n      pop\n        /* \"contracts/Take3Token.sol\":5777:5832  (, uint256 rTransferAmount, , , ) = _getValues(tAmount) */\n      swap2\n      swap5\n      pop\n        /* \"contracts/Take3Token.sol\":5847:5869  return rTransferAmount */\n      tag_229\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/Take3Token.sol\":19665:19759  function signers() external view returns (address[] memory) {... */\n    tag_124:\n        /* \"contracts/Take3Token.sol\":19707:19723  address[] memory */\n      0x60\n        /* \"contracts/Take3Token.sol\":19743:19751  _signers */\n      0x74\n        /* \"contracts/Take3Token.sol\":19736:19751  return _signers */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_225\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_311:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_311\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Take3Token.sol\":19665:19759  function signers() external view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":10745:10852  function claimTokens() public onlyOwner {... */\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_313\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      sload(0x33)\n        /* \"contracts/Take3Token.sol\":10796:10844  payable(owner()).transfer(address(this).balance) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Take3Token.sol\":10822:10843  address(this).balance */\n      selfbalance\n        /* \"contracts/Take3Token.sol\":10796:10844  payable(owner()).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/Take3Token.sol\":10822:10843  address(this).balance */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      dup9\n        /* \"contracts/Take3Token.sol\":10796:10844  payable(owner()).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_317\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_317:\n      pop\n        /* \"contracts/Take3Token.sol\":10745:10852  function claimTokens() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":20380:21467  function _permitTransfer(... */\n    tag_134:\n        /* \"contracts/Take3Token.sol\":20650:20665  block.timestamp */\n      timestamp\n        /* \"contracts/Take3Token.sol\":20638:20646  deadline */\n      dup5\n        /* \"contracts/Take3Token.sol\":20638:20665  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/Take3Token.sol\":20630:20686  require(deadline >= block.timestamp, \"Expired deadline\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11824:11826   */\n      0x20\n        /* \"contracts/Take3Token.sol\":20630:20686  require(deadline >= block.timestamp, \"Expired deadline\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11806:11827   */\n      mstore\n        /* \"#utility.yul\":11863:11865   */\n      0x10\n        /* \"#utility.yul\":11843:11861   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11836:11866   */\n      mstore\n      shl(0x80, 0x4578706972656420646561646c696e65)\n        /* \"#utility.yul\":11882:11900   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11875:11921   */\n      mstore\n        /* \"#utility.yul\":11938:11956   */\n      0x64\n      add\n        /* \"contracts/Take3Token.sol\":20630:20686  require(deadline >= block.timestamp, \"Expired deadline\") */\n      tag_246\n        /* \"#utility.yul\":11622:11962   */\n      jump\n        /* \"contracts/Take3Token.sol\":20630:20686  require(deadline >= block.timestamp, \"Expired deadline\") */\n    tag_319:\n        /* \"contracts/Take3Token.sol\":20706:20730  uniqueIdExists[uniqueId] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":20706:20720  uniqueIdExists */\n      0x76\n        /* \"contracts/Take3Token.sol\":20706:20730  uniqueIdExists[uniqueId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":20705:20730  !uniqueIdExists[uniqueId] */\n      iszero\n        /* \"contracts/Take3Token.sol\":20697:20751  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12169:12171   */\n      0x20\n        /* \"contracts/Take3Token.sol\":20697:20751  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12151:12172   */\n      mstore\n        /* \"#utility.yul\":12208:12210   */\n      0x10\n        /* \"#utility.yul\":12188:12206   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12181:12211   */\n      mstore\n      shl(0x80, 0x556e6971756520696420657869737473)\n        /* \"#utility.yul\":12227:12245   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12220:12266   */\n      mstore\n        /* \"#utility.yul\":12283:12301   */\n      0x64\n      add\n        /* \"contracts/Take3Token.sol\":20697:20751  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n      tag_246\n        /* \"#utility.yul\":11967:12307   */\n      jump\n        /* \"contracts/Take3Token.sol\":20697:20751  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n    tag_322:\n        /* \"contracts/Take3Token.sol\":20781:20791  msg.sender */\n      caller\n        /* \"contracts/Take3Token.sol\":20764:20778  address sender */\n      0x00\n        /* \"contracts/Take3Token.sol\":20818:20831  super.owner() */\n      tag_325\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/Take3Token.sol\":20818:20831  super.owner() */\n    tag_325:\n        /* \"contracts/Take3Token.sol\":20891:20955  abi.encode(owner, sender, recipient, amount, uniqueId, deadline) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12655:12670   */\n      dup1\n      dup5\n      and\n        /* \"contracts/Take3Token.sol\":20891:20955  abi.encode(owner, sender, recipient, amount, uniqueId, deadline) */\n      0x20\n      dup4\n      add\n        /* \"#utility.yul\":12637:12671   */\n      mstore\n        /* \"#utility.yul\":12707:12722   */\n      dup1\n      dup7\n      and\n        /* \"#utility.yul\":12687:12705   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":12680:12723   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":12759:12774   */\n      swap1\n      dup12\n      and\n        /* \"#utility.yul\":12739:12757   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":12732:12775   */\n      mstore\n        /* \"#utility.yul\":12791:12809   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":12784:12818   */\n      dup10\n      swap1\n      mstore\n        /* \"#utility.yul\":12834:12853   */\n      0xa0\n      dup2\n      add\n        /* \"#utility.yul\":12827:12862   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":12878:12897   */\n      0xc0\n      dup2\n      add\n        /* \"#utility.yul\":12871:12906   */\n      dup9\n      swap1\n      mstore\n        /* \"contracts/Take3Token.sol\":20802:20831  address owner = super.owner() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Take3Token.sol\":20844:20864  bytes32 permitTxHash */\n      0x00\n      swap1\n        /* \"#utility.yul\":12571:12590   */\n      0xe0\n      add\n        /* \"contracts/Take3Token.sol\":20891:20955  abi.encode(owner, sender, recipient, amount, uniqueId, deadline) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/Take3Token.sol\":20867:20966  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/Take3Token.sol\":20844:20966  bytes32 permitTxHash = keccak256(... */\n      swap1\n      pop\n        /* \"contracts/Take3Token.sol\":20979:20995  address lastAddr */\n      0x00\n        /* \"contracts/Take3Token.sol\":21019:21040  uint8 verifiedSigners */\n      dup1\n        /* \"contracts/Take3Token.sol\":21060:21068  uint64 i */\n      0x00\n        /* \"contracts/Take3Token.sol\":21055:21317  for (uint64 i = 0; i < v.length; i++) {... */\n    tag_328:\n        /* \"contracts/Take3Token.sol\":21078:21079  v */\n      dup9\n        /* \"contracts/Take3Token.sol\":21078:21086  v.length */\n      mload\n        /* \"contracts/Take3Token.sol\":21074:21075  i */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":21074:21086  i < v.length */\n      and\n      lt\n        /* \"contracts/Take3Token.sol\":21055:21317  for (uint64 i = 0; i < v.length; i++) {... */\n      iszero\n      tag_329\n      jumpi\n        /* \"contracts/Take3Token.sol\":21108:21125  address recovered */\n      0x00\n        /* \"contracts/Take3Token.sol\":21128:21169  ecrecover(permitTxHash, v[i], r[i], s[i]) */\n      0x01\n        /* \"contracts/Take3Token.sol\":21138:21150  permitTxHash */\n      dup6\n        /* \"contracts/Take3Token.sol\":21152:21153  v */\n      dup12\n        /* \"contracts/Take3Token.sol\":21154:21155  i */\n      dup5\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":21152:21156  v[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_332\n      jumpi\n      tag_332\n      tag_264\n      jump\t// in\n    tag_332:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Take3Token.sol\":21158:21159  r */\n      dup12\n        /* \"contracts/Take3Token.sol\":21160:21161  i */\n      dup6\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":21158:21162  r[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_334\n      jumpi\n      tag_334\n      tag_264\n      jump\t// in\n    tag_334:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Take3Token.sol\":21164:21165  s */\n      dup12\n        /* \"contracts/Take3Token.sol\":21166:21167  i */\n      dup7\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":21164:21168  s[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_336\n      jumpi\n      tag_336\n      tag_264\n      jump\t// in\n    tag_336:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Take3Token.sol\":21128:21169  ecrecover(permitTxHash, v[i], r[i], s[i]) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_337\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":13144:13169   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":13217:13221   */\n      0xff\n        /* \"#utility.yul\":13205:13222   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":13200:13202   */\n      0x20\n        /* \"#utility.yul\":13185:13203   */\n      dup5\n      add\n        /* \"#utility.yul\":13178:13223   */\n      mstore\n        /* \"#utility.yul\":13254:13256   */\n      0x40\n        /* \"#utility.yul\":13239:13257   */\n      dup4\n      add\n        /* \"#utility.yul\":13232:13266   */\n      mstore\n        /* \"#utility.yul\":13297:13299   */\n      0x60\n        /* \"#utility.yul\":13282:13300   */\n      dup3\n      add\n        /* \"#utility.yul\":13275:13309   */\n      mstore\n        /* \"#utility.yul\":13131:13134   */\n      0x80\n        /* \"#utility.yul\":13116:13135   */\n      add\n      swap1\n        /* \"#utility.yul\":12917:13315   */\n      jump\n        /* \"contracts/Take3Token.sol\":21128:21169  ecrecover(permitTxHash, v[i], r[i], s[i]) */\n    tag_337:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_340\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_340:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/Take3Token.sol\":21108:21169  address recovered = ecrecover(permitTxHash, v[i], r[i], s[i]) */\n      swap1\n      pop\n        /* \"contracts/Take3Token.sol\":21200:21208  lastAddr */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":21188:21208  recovered > lastAddr */\n      and\n        /* \"contracts/Take3Token.sol\":21188:21197  recovered */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":21188:21208  recovered > lastAddr */\n      and\n      gt\n        /* \"contracts/Take3Token.sol\":21188:21234  recovered > lastAddr && _mapSigners[recovered] */\n      dup1\n      iszero\n      tag_341\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":21212:21234  _mapSigners[recovered] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":21212:21223  _mapSigners */\n      0x75\n        /* \"contracts/Take3Token.sol\":21212:21234  _mapSigners[recovered] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":21188:21234  recovered > lastAddr && _mapSigners[recovered] */\n    tag_341:\n        /* \"contracts/Take3Token.sol\":21184:21270  if (recovered > lastAddr && _mapSigners[recovered])... */\n      iszero\n      tag_342\n      jumpi\n        /* \"contracts/Take3Token.sol\":21253:21270  verifiedSigners++ */\n      dup3\n      tag_343\n      dup2\n      tag_344\n      jump\t// in\n    tag_343:\n      swap4\n      pop\n      pop\n        /* \"contracts/Take3Token.sol\":21184:21270  if (recovered > lastAddr && _mapSigners[recovered])... */\n    tag_342:\n        /* \"contracts/Take3Token.sol\":21296:21305  recovered */\n      swap3\n      pop\n        /* \"contracts/Take3Token.sol\":21088:21091  i++ */\n      dup1\n      tag_345\n      dup2\n      tag_346\n      jump\t// in\n    tag_345:\n      swap2\n      pop\n      pop\n        /* \"contracts/Take3Token.sol\":21055:21317  for (uint64 i = 0; i < v.length; i++) {... */\n      jump(tag_328)\n    tag_329:\n      pop\n        /* \"contracts/Take3Token.sol\":21337:21352  verifiedSigners */\n      dup1\n        /* \"contracts/Take3Token.sol\":21337:21357  verifiedSigners == 3 */\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":21356:21357  3 */\n      0x03\n        /* \"contracts/Take3Token.sol\":21337:21357  verifiedSigners == 3 */\n      eq\n        /* \"contracts/Take3Token.sol\":21329:21377  require(verifiedSigners == 3, \"Invalid signers\") */\n      tag_347\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13916:13918   */\n      0x20\n        /* \"contracts/Take3Token.sol\":21329:21377  require(verifiedSigners == 3, \"Invalid signers\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13898:13919   */\n      mstore\n        /* \"#utility.yul\":13955:13957   */\n      0x0f\n        /* \"#utility.yul\":13935:13953   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13928:13958   */\n      mstore\n      shl(0x88, 0x496e76616c6964207369676e657273)\n        /* \"#utility.yul\":13974:13992   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13967:14012   */\n      mstore\n        /* \"#utility.yul\":14029:14047   */\n      0x64\n      add\n        /* \"contracts/Take3Token.sol\":21329:21377  require(verifiedSigners == 3, \"Invalid signers\") */\n      tag_246\n        /* \"#utility.yul\":13714:14053   */\n      jump\n        /* \"contracts/Take3Token.sol\":21329:21377  require(verifiedSigners == 3, \"Invalid signers\") */\n    tag_347:\n        /* \"contracts/Take3Token.sol\":21390:21414  uniqueIdExists[uniqueId] */\n      0x00\n      dup12\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":21390:21404  uniqueIdExists */\n      0x76\n        /* \"contracts/Take3Token.sol\":21390:21414  uniqueIdExists[uniqueId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Take3Token.sol\":21390:21421  uniqueIdExists[uniqueId] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Take3Token.sol\":21417:21421  true */\n      0x01\n        /* \"contracts/Take3Token.sol\":21390:21421  uniqueIdExists[uniqueId] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":21432:21459  transfer(recipient, amount) */\n      tag_350\n        /* \"contracts/Take3Token.sol\":21441:21450  recipient */\n      dup13\n        /* \"contracts/Take3Token.sol\":21452:21458  amount */\n      dup12\n        /* \"contracts/Take3Token.sol\":21432:21440  transfer */\n      tag_192\n        /* \"contracts/Take3Token.sol\":21432:21459  transfer(recipient, amount) */\n      jump\t// in\n    tag_350:\n      pop\n        /* \"contracts/Take3Token.sol\":20619:21467  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Take3Token.sol\":20380:21467  function _permitTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":6226:6672  function excludeFromReward(address account) public onlyOwner {... */\n    tag_138:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_352:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":6421:6441  _isExcluded[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":6421:6432  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":6421:6441  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":6420:6441  !_isExcluded[account] */\n      iszero\n        /* \"contracts/Take3Token.sol\":6412:6473  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10029:10031   */\n      0x20\n        /* \"contracts/Take3Token.sol\":6412:6473  require(!_isExcluded[account], \"Account is already excluded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10011:10032   */\n      mstore\n        /* \"#utility.yul\":10068:10070   */\n      0x1b\n        /* \"#utility.yul\":10048:10066   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10041:10071   */\n      mstore\n        /* \"#utility.yul\":10107:10136   */\n      0x4163636f756e7420697320616c7265616479206578636c756465640000000000\n        /* \"#utility.yul\":10087:10105   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10080:10137   */\n      mstore\n        /* \"#utility.yul\":10154:10172   */\n      0x64\n      add\n        /* \"contracts/Take3Token.sol\":6412:6473  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_246\n        /* \"#utility.yul\":9827:10178   */\n      jump\n        /* \"contracts/Take3Token.sol\":6412:6473  require(!_isExcluded[account], \"Account is already excluded\") */\n    tag_354:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":6488:6504  _rOwned[account] */\n      dup2\n      and\n        /* \"contracts/Take3Token.sol\":6507:6508  0 */\n      0x00\n        /* \"contracts/Take3Token.sol\":6488:6504  _rOwned[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":6488:6495  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":6488:6504  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":6488:6508  _rOwned[account] > 0 */\n      iszero\n        /* \"contracts/Take3Token.sol\":6484:6593  if (_rOwned[account] > 0) {... */\n      tag_356\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":6564:6580  _rOwned[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":6564:6571  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":6564:6580  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":6544:6581  tokenFromReflection(_rOwned[account]) */\n      tag_357\n      swap1\n        /* \"contracts/Take3Token.sol\":6544:6563  tokenFromReflection */\n      tag_89\n        /* \"contracts/Take3Token.sol\":6544:6581  tokenFromReflection(_rOwned[account]) */\n      jump\t// in\n    tag_357:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":6525:6541  _tOwned[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":6525:6532  _tOwned */\n      0x66\n        /* \"contracts/Take3Token.sol\":6525:6541  _tOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Take3Token.sol\":6525:6581  _tOwned[account] = tokenFromReflection(_rOwned[account]) */\n      sstore\n        /* \"contracts/Take3Token.sol\":6484:6593  if (_rOwned[account] > 0) {... */\n    tag_356:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":6603:6623  _isExcluded[account] */\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":6603:6614  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":6603:6623  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Take3Token.sol\":6603:6630  _isExcluded[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Take3Token.sol\":6626:6630  true */\n      0x01\n        /* \"contracts/Take3Token.sol\":6603:6630  _isExcluded[account] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Take3Token.sol\":6641:6650  _excluded */\n      0x6a\n        /* \"contracts/Take3Token.sol\":6641:6664  _excluded.push(account) */\n      dup1\n      sload\n      swap2\n      dup3\n      add\n      dup2\n      sstore\n      swap1\n      swap2\n      mstore\n      0x116fea137db6e131133e7f2bab296045d8f41cc5607279db17b218cab0929a51\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":6226:6672  function excludeFromReward(address account) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":2789:2987  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":2879:2899  _isExcluded[account] */\n      dup2\n      and\n        /* \"contracts/Take3Token.sol\":2855:2862  uint256 */\n      0x00\n        /* \"contracts/Take3Token.sol\":2879:2899  _isExcluded[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":2879:2890  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":2879:2899  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":2875:2924  if (_isExcluded[account]) return _tOwned[account] */\n      iszero\n      tag_362\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":2908:2924  _tOwned[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":2908:2915  _tOwned */\n      0x66\n        /* \"contracts/Take3Token.sol\":2908:2924  _tOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Take3Token.sol\":2789:2987  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":2875:2924  if (_isExcluded[account]) return _tOwned[account] */\n    tag_362:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":2962:2978  _rOwned[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":2962:2969  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":2962:2978  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":2942:2979  tokenFromReflection(_rOwned[account]) */\n      tag_229\n      swap1\n        /* \"contracts/Take3Token.sol\":2942:2961  tokenFromReflection */\n      tag_89\n        /* \"contracts/Take3Token.sol\":2942:2979  tokenFromReflection(_rOwned[account]) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_365\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      tag_367\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2162:2163  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2153  _transferOwnership */\n      tag_368\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":2398:2485  function symbol() public view returns (string memory) {... */\n    tag_172:\n        /* \"contracts/Take3Token.sol\":2437:2450  string memory */\n      0x60\n        /* \"contracts/Take3Token.sol\":2470:2477  _symbol */\n      0x6f\n        /* \"contracts/Take3Token.sol\":2463:2477  return _symbol */\n      dup1\n      sload\n      tag_222\n      swap1\n      tag_223\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":19767:20006  function setSigners(address[] memory signers_) external virtual onlyOwner {... */\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_378:\n        /* \"contracts/Take3Token.sol\":19852:19892  _updateMap(_signers, false, _mapSigners) */\n      tag_380\n        /* \"contracts/Take3Token.sol\":19863:19871  _signers */\n      0x74\n        /* \"contracts/Take3Token.sol\":19852:19892  _updateMap(_signers, false, _mapSigners) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_381\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_382:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_382\n      jumpi\n    tag_381:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Take3Token.sol\":19873:19878  false */\n      0x00\n        /* \"contracts/Take3Token.sol\":19880:19891  _mapSigners */\n      0x75\n        /* \"contracts/Take3Token.sol\":19852:19862  _updateMap */\n      tag_383\n        /* \"contracts/Take3Token.sol\":19852:19892  _updateMap(_signers, false, _mapSigners) */\n      jump\t// in\n    tag_380:\n        /* \"contracts/Take3Token.sol\":19903:19918  delete _signers */\n      tag_384\n        /* \"contracts/Take3Token.sol\":19910:19918  _signers */\n      0x74\n      0x00\n        /* \"contracts/Take3Token.sol\":19903:19918  delete _signers */\n      tag_385\n      jump\t// in\n    tag_384:\n        /* \"contracts/Take3Token.sol\":19929:19948  _signers = signers_ */\n      dup1\n      mload\n      tag_386\n      swap1\n        /* \"contracts/Take3Token.sol\":19929:19937  _signers */\n      0x74\n      swap1\n        /* \"contracts/Take3Token.sol\":19929:19948  _signers = signers_ */\n      0x20\n      dup5\n      add\n      swap1\n      tag_387\n      jump\t// in\n    tag_386:\n      pop\n        /* \"contracts/Take3Token.sol\":19959:19998  _updateMap(signers_, true, _mapSigners) */\n      tag_317\n        /* \"contracts/Take3Token.sol\":19970:19978  signers_ */\n      dup2\n        /* \"contracts/Take3Token.sol\":19980:19984  true */\n      0x01\n        /* \"contracts/Take3Token.sol\":19986:19997  _mapSigners */\n      0x75\n        /* \"contracts/Take3Token.sol\":19959:19969  _updateMap */\n      tag_383\n        /* \"contracts/Take3Token.sol\":19959:19998  _updateMap(signers_, true, _mapSigners) */\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":4357:4757  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_182:\n        /* \"contracts/Take3Token.sol\":4477:4481  bool */\n      0x00\n        /* \"contracts/Take3Token.sol\":4499:4727  _approve(... */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"contracts/Take3Token.sol\":4549:4556  spender */\n      dup5\n        /* \"contracts/Take3Token.sol\":4571:4716  _allowances[_msgSender()][spender].sub(... */\n      tag_241\n        /* \"contracts/Take3Token.sol\":4628:4643  subtractedValue */\n      dup6\n        /* \"contracts/Take3Token.sol\":4571:4716  _allowances[_msgSender()][spender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"contracts/Take3Token.sol\":4571:4596  _allowances[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":4571:4582  _allowances */\n      0x67\n        /* \"contracts/Take3Token.sol\":4571:4596  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":4571:4605  _allowances[_msgSender()][spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/Take3Token.sol\":4571:4609  _allowances[_msgSender()][spender].sub */\n      tag_243\n        /* \"contracts/Take3Token.sol\":4571:4716  _allowances[_msgSender()][spender].sub(... */\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":1328:2299  function initialize(... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3130  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3134:3147  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3147  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_395\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3212:3213  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3213  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n    tag_395:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3178:3286  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_399\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3258:3262  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_399\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3280  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3285  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_399:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      tag_400\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14260:14262   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14242:14263   */\n      mstore\n        /* \"#utility.yul\":14299:14301   */\n      0x2e\n        /* \"#utility.yul\":14279:14297   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14272:14302   */\n      mstore\n        /* \"#utility.yul\":14338:14372   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":14318:14336   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14311:14373   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":14389:14407   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14382:14426   */\n      mstore\n        /* \"#utility.yul\":14443:14462   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      tag_246\n        /* \"#utility.yul\":14058:14468   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n    tag_400:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3380  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3383:3384  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_403\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3441  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3448  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n    tag_403:\n        /* \"contracts/Take3Token.sol\":1618:1634  __Ownable_init() */\n      tag_405\n        /* \"contracts/Take3Token.sol\":1618:1632  __Ownable_init */\n      tag_406\n        /* \"contracts/Take3Token.sol\":1618:1634  __Ownable_init() */\n      jump\t// in\n    tag_405:\n        /* \"contracts/Take3Token.sol\":1647:1660  _name = _NAME */\n      dup8\n      mload\n      tag_407\n      swap1\n        /* \"contracts/Take3Token.sol\":1647:1652  _name */\n      0x6e\n      swap1\n        /* \"contracts/Take3Token.sol\":1647:1660  _name = _NAME */\n      0x20\n      dup12\n      add\n      swap1\n      tag_408\n      jump\t// in\n    tag_407:\n      pop\n        /* \"contracts/Take3Token.sol\":1671:1688  _symbol = _SYMBOL */\n      dup7\n      mload\n      tag_409\n      swap1\n        /* \"contracts/Take3Token.sol\":1671:1678  _symbol */\n      0x6f\n      swap1\n        /* \"contracts/Take3Token.sol\":1671:1688  _symbol = _SYMBOL */\n      0x20\n      dup11\n      add\n      swap1\n      tag_408\n      jump\t// in\n    tag_409:\n      pop\n        /* \"contracts/Take3Token.sol\":1699:1708  _decimals */\n      0x70\n        /* \"contracts/Take3Token.sol\":1699:1720  _decimals = _DECIMALS */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":1751:1764  10**_decimals */\n      tag_410\n        /* \"contracts/Take3Token.sol\":1711:1720  _DECIMALS */\n      dup7\n        /* \"contracts/Take3Token.sol\":1751:1753  10 */\n      0x0a\n        /* \"contracts/Take3Token.sol\":1751:1764  10**_decimals */\n      tag_411\n      jump\t// in\n    tag_410:\n        /* \"contracts/Take3Token.sol\":1741:1764  _supply * 10**_decimals */\n      tag_412\n      swap1\n        /* \"contracts/Take3Token.sol\":1741:1748  _supply */\n      dup7\n        /* \"contracts/Take3Token.sol\":1741:1764  _supply * 10**_decimals */\n      tag_413\n      jump\t// in\n    tag_412:\n        /* \"contracts/Take3Token.sol\":1731:1738  _tTotal */\n      0x6b\n        /* \"contracts/Take3Token.sol\":1731:1764  _tTotal = _supply * 10**_decimals */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":1793:1806  MAX % _tTotal */\n      tag_414\n      swap1\n      not(0x00)\n      tag_415\n      jump\t// in\n    tag_414:\n        /* \"contracts/Take3Token.sol\":1786:1807  MAX - (MAX % _tTotal) */\n      tag_416\n      swap1\n      not(0x00)\n      tag_268\n      jump\t// in\n    tag_416:\n        /* \"contracts/Take3Token.sol\":1775:1782  _rTotal */\n      0x6c\n        /* \"contracts/Take3Token.sol\":1775:1808  _rTotal = (MAX - (MAX % _tTotal)) */\n      sstore\n        /* \"contracts/Take3Token.sol\":1819:1826  _taxFee */\n      0x71\n        /* \"contracts/Take3Token.sol\":1819:1835  _taxFee = _txFee */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":1846:1861  _previousTaxFee */\n      0x72\n        /* \"contracts/Take3Token.sol\":1846:1870  _previousTaxFee = _txFee */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":1913:1922  _decimals */\n      sload(0x70)\n        /* \"contracts/Take3Token.sol\":1909:1922  10**_decimals */\n      tag_417\n      swap1\n        /* \"contracts/Take3Token.sol\":1909:1911  10 */\n      0x0a\n        /* \"contracts/Take3Token.sol\":1909:1922  10**_decimals */\n      tag_411\n      jump\t// in\n    tag_417:\n        /* \"contracts/Take3Token.sol\":1896:1922  _MAXAMOUNT * 10**_decimals */\n      tag_418\n      swap1\n        /* \"contracts/Take3Token.sol\":1896:1906  _MAXAMOUNT */\n      dup5\n        /* \"contracts/Take3Token.sol\":1896:1922  _MAXAMOUNT * 10**_decimals */\n      tag_413\n      jump\t// in\n    tag_418:\n        /* \"contracts/Take3Token.sol\":1881:1893  _maxTxAmount */\n      0x73\n        /* \"contracts/Take3Token.sol\":1881:1922  _maxTxAmount = _MAXAMOUNT * 10**_decimals */\n      sstore\n        /* \"contracts/Take3Token.sol\":1957:1964  _rTotal */\n      sload(0x6c)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":1935:1954  _rOwned[tokenOwner] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":1935:1942  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":1935:1954  _rOwned[tokenOwner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Take3Token.sol\":1935:1964  _rOwned[tokenOwner] = _rTotal */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Take3Token.sol\":2029:2047  _isExcludedFromFee */\n      0x68\n        /* \"contracts/Take3Token.sol\":2029:2059  _isExcludedFromFee[tokenOwner] */\n      swap1\n      mstore\n      dup2\n      dup2\n      keccak256\n        /* \"contracts/Take3Token.sol\":2029:2066  _isExcludedFromFee[tokenOwner] = true */\n      dup1\n      sload\n        /* \"contracts/Take3Token.sol\":2062:2066  true */\n      0x01\n      not(0xff)\n        /* \"contracts/Take3Token.sol\":2029:2066  _isExcludedFromFee[tokenOwner] = true */\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Take3Token.sol\":2104:2108  this */\n      address\n        /* \"contracts/Take3Token.sol\":2077:2110  _isExcludedFromFee[address(this)] */\n      dup4\n      mstore\n      swap3\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Take3Token.sol\":2077:2117  _isExcludedFromFee[address(this)] = true */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":2128:2157  excludeFromReward(tokenOwner) */\n      tag_419\n        /* \"contracts/Take3Token.sol\":1935:1954  _rOwned[tokenOwner] */\n      dup3\n        /* \"contracts/Take3Token.sol\":2128:2145  excludeFromReward */\n      tag_138\n        /* \"contracts/Take3Token.sol\":2128:2157  excludeFromReward(tokenOwner) */\n      jump\t// in\n    tag_419:\n        /* \"contracts/Take3Token.sol\":2168:2200  excludeFromReward(address(this)) */\n      tag_420\n        /* \"contracts/Take3Token.sol\":2194:2198  this */\n      address\n        /* \"contracts/Take3Token.sol\":2168:2185  excludeFromReward */\n      tag_138\n        /* \"contracts/Take3Token.sol\":2168:2200  excludeFromReward(address(this)) */\n      jump\t// in\n    tag_420:\n        /* \"contracts/Take3Token.sol\":2271:2281  tokenOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":2250:2291  Transfer(address(0), tokenOwner, _tTotal) */\n      and\n        /* \"contracts/Take3Token.sol\":2267:2268  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":2250:2291  Transfer(address(0), tokenOwner, _tTotal) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/Take3Token.sol\":2283:2290  _tTotal */\n      sload(0x6b)\n        /* \"contracts/Take3Token.sol\":2250:2291  Transfer(address(0), tokenOwner, _tTotal) */\n      mload(0x40)\n      tag_421\n      swap2\n        /* \"#utility.yul\":1767:1792   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1755:1757   */\n      0x20\n        /* \"#utility.yul\":1740:1758   */\n      add\n      swap1\n        /* \"#utility.yul\":1621:1798   */\n      jump\n        /* \"contracts/Take3Token.sol\":2250:2291  Transfer(address(0), tokenOwner, _tTotal) */\n    tag_421:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3483:3497  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n      iszero\n      tag_422\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3529:3534  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3513:3534  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":16421:16457   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":16409:16411   */\n      0x20\n        /* \"#utility.yul\":16394:16412   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n    tag_422:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3101:3584  {... */\n      pop\n        /* \"contracts/Take3Token.sol\":1328:2299  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":2995:3194  function transfer(address recipient, uint256 amount)... */\n    tag_192:\n        /* \"contracts/Take3Token.sol\":3100:3104  bool */\n      0x00\n        /* \"contracts/Take3Token.sol\":3122:3164  _transfer(_msgSender(), recipient, amount) */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"contracts/Take3Token.sol\":3146:3155  recipient */\n      dup5\n        /* \"contracts/Take3Token.sol\":3157:3163  amount */\n      dup5\n        /* \"contracts/Take3Token.sol\":3122:3131  _transfer */\n      tag_238\n        /* \"contracts/Take3Token.sol\":3122:3164  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":7506:7632  function setMaxTxPercent(uint256 maxTxPercent) public onlyOwner {... */\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_429\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_429:\n        /* \"contracts/Take3Token.sol\":7615:7624  _decimals */\n      sload(0x70)\n        /* \"contracts/Take3Token.sol\":7611:7624  10**_decimals */\n      tag_431\n      swap1\n        /* \"contracts/Take3Token.sol\":7611:7613  10 */\n      0x0a\n        /* \"contracts/Take3Token.sol\":7611:7624  10**_decimals */\n      tag_411\n      jump\t// in\n    tag_431:\n        /* \"contracts/Take3Token.sol\":7596:7624  maxTxPercent * 10**_decimals */\n      tag_432\n      swap1\n        /* \"contracts/Take3Token.sol\":7596:7608  maxTxPercent */\n      dup3\n        /* \"contracts/Take3Token.sol\":7596:7624  maxTxPercent * 10**_decimals */\n      tag_413\n      jump\t// in\n    tag_432:\n        /* \"contracts/Take3Token.sol\":7581:7593  _maxTxAmount */\n      0x73\n        /* \"contracts/Take3Token.sol\":7581:7624  _maxTxAmount = maxTxPercent * 10**_decimals */\n      sstore\n      pop\n        /* \"contracts/Take3Token.sol\":7506:7632  function setMaxTxPercent(uint256 maxTxPercent) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":7284:7394  function includeInFee(address account) public onlyOwner {... */\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_435\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_435:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":7351:7378  _isExcludedFromFee[account] */\n      and\n        /* \"contracts/Take3Token.sol\":7381:7386  false */\n      0x00\n        /* \"contracts/Take3Token.sol\":7351:7378  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":7351:7369  _isExcludedFromFee */\n      0x68\n        /* \"contracts/Take3Token.sol\":7351:7378  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Take3Token.sol\":7351:7386  _isExcludedFromFee[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":7284:7394  function includeInFee(address account) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_438\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_438:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_440\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16670:16672   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16652:16673   */\n      mstore\n        /* \"#utility.yul\":16709:16711   */\n      0x26\n        /* \"#utility.yul\":16689:16707   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16682:16712   */\n      mstore\n        /* \"#utility.yul\":16748:16782   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":16728:16746   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16721:16783   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":16799:16817   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16792:16828   */\n      mstore\n        /* \"#utility.yul\":16845:16864   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_246\n        /* \"#utility.yul\":16468:16870   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_440:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      tag_317\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2503:2511  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2502  _transferOwnership */\n      tag_368\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_367\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17077:17079   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17059:17080   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":17096:17114   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17089:17119   */\n      mstore\n        /* \"#utility.yul\":17155:17189   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":17135:17153   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17128:17190   */\n      mstore\n        /* \"#utility.yul\":17207:17225   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_246\n        /* \"#utility.yul\":16875:17231   */\n      jump\n        /* \"contracts/Take3Token.sol\":11490:11861  function _approve(... */\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":11617:11636  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/Take3Token.sol\":11609:11677  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_452\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17438:17440   */\n      0x20\n        /* \"contracts/Take3Token.sol\":11609:11677  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17420:17441   */\n      mstore\n        /* \"#utility.yul\":17477:17479   */\n      0x24\n        /* \"#utility.yul\":17457:17475   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":17450:17480   */\n      mstore\n        /* \"#utility.yul\":17516:17550   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":17496:17514   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17489:17551   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":17567:17585   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17560:17594   */\n      mstore\n        /* \"#utility.yul\":17611:17630   */\n      0x84\n      add\n        /* \"contracts/Take3Token.sol\":11609:11677  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_246\n        /* \"#utility.yul\":17236:17636   */\n      jump\n        /* \"contracts/Take3Token.sol\":11609:11677  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_452:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":11696:11717  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/Take3Token.sol\":11688:11756  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_455\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17843:17845   */\n      0x20\n        /* \"contracts/Take3Token.sol\":11688:11756  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17825:17846   */\n      mstore\n        /* \"#utility.yul\":17882:17884   */\n      0x22\n        /* \"#utility.yul\":17862:17880   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17855:17885   */\n      mstore\n        /* \"#utility.yul\":17921:17955   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":17901:17919   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17894:17956   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":17972:17990   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17965:17997   */\n      mstore\n        /* \"#utility.yul\":18014:18033   */\n      0x84\n      add\n        /* \"contracts/Take3Token.sol\":11688:11756  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_246\n        /* \"#utility.yul\":17641:18039   */\n      jump\n        /* \"contracts/Take3Token.sol\":11688:11756  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_455:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":11769:11787  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":11769:11780  _allowances */\n      0x67\n        /* \"contracts/Take3Token.sol\":11769:11787  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Take3Token.sol\":11769:11796  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Take3Token.sol\":11769:11805  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":11821:11853  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1767:1792   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":11821:11853  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1740:1758   */\n      add\n        /* \"contracts/Take3Token.sol\":11821:11853  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Take3Token.sol\":11490:11861  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":11869:13738  function _transfer(... */\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":11991:12009  from != address(0) */\n      dup4\n      and\n        /* \"contracts/Take3Token.sol\":11983:12051  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_460\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18246:18248   */\n      0x20\n        /* \"contracts/Take3Token.sol\":11983:12051  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18228:18249   */\n      mstore\n        /* \"#utility.yul\":18285:18287   */\n      0x25\n        /* \"#utility.yul\":18265:18283   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18258:18288   */\n      mstore\n        /* \"#utility.yul\":18324:18358   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":18304:18322   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18297:18359   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":18375:18393   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":18368:18403   */\n      mstore\n        /* \"#utility.yul\":18420:18439   */\n      0x84\n      add\n        /* \"contracts/Take3Token.sol\":11983:12051  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_246\n        /* \"#utility.yul\":18044:18445   */\n      jump\n        /* \"contracts/Take3Token.sol\":11983:12051  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_460:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":12070:12086  to != address(0) */\n      dup3\n      and\n        /* \"contracts/Take3Token.sol\":12062:12126  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_463\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18652:18654   */\n      0x20\n        /* \"contracts/Take3Token.sol\":12062:12126  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18634:18655   */\n      mstore\n        /* \"#utility.yul\":18691:18693   */\n      0x23\n        /* \"#utility.yul\":18671:18689   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18664:18694   */\n      mstore\n        /* \"#utility.yul\":18730:18764   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":18710:18728   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18703:18765   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":18781:18799   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":18774:18807   */\n      mstore\n        /* \"#utility.yul\":18824:18843   */\n      0x84\n      add\n        /* \"contracts/Take3Token.sol\":12062:12126  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_246\n        /* \"#utility.yul\":18450:18849   */\n      jump\n        /* \"contracts/Take3Token.sol\":12062:12126  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_463:\n        /* \"contracts/Take3Token.sol\":12154:12155  0 */\n      0x00\n        /* \"contracts/Take3Token.sol\":12145:12151  amount */\n      dup2\n        /* \"contracts/Take3Token.sol\":12145:12155  amount > 0 */\n      gt\n        /* \"contracts/Take3Token.sol\":12137:12201  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_466\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19056:19058   */\n      0x20\n        /* \"contracts/Take3Token.sol\":12137:12201  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19038:19059   */\n      mstore\n        /* \"#utility.yul\":19095:19097   */\n      0x29\n        /* \"#utility.yul\":19075:19093   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19068:19098   */\n      mstore\n        /* \"#utility.yul\":19134:19168   */\n      0x5472616e7366657220616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":19114:19132   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19107:19169   */\n      mstore\n      shl(0xb8, 0x7468616e207a65726f)\n        /* \"#utility.yul\":19185:19203   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":19178:19217   */\n      mstore\n        /* \"#utility.yul\":19234:19253   */\n      0x84\n      add\n        /* \"contracts/Take3Token.sol\":12137:12201  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_246\n        /* \"#utility.yul\":18854:19259   */\n      jump\n        /* \"contracts/Take3Token.sol\":12137:12201  require(amount > 0, \"Transfer amount must be greater than zero\") */\n    tag_466:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      sload(0x33)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":12216:12231  from != owner() */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      swap2\n      and\n        /* \"contracts/Take3Token.sol\":12216:12231  from != owner() */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Take3Token.sol\":12216:12248  from != owner() && to != owner() */\n      tag_470\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      sload(0x33)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":12235:12248  to != owner() */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      swap2\n      and\n        /* \"contracts/Take3Token.sol\":12235:12248  to != owner() */\n      eq\n      iszero\n        /* \"contracts/Take3Token.sol\":12216:12248  from != owner() && to != owner() */\n    tag_470:\n        /* \"contracts/Take3Token.sol\":12212:12387  if (from != owner() && to != owner())... */\n      iszero\n      tag_473\n      jumpi\n        /* \"contracts/Take3Token.sol\":12299:12311  _maxTxAmount */\n      sload(0x73)\n        /* \"contracts/Take3Token.sol\":12289:12295  amount */\n      dup2\n        /* \"contracts/Take3Token.sol\":12289:12311  amount <= _maxTxAmount */\n      gt\n      iszero\n        /* \"contracts/Take3Token.sol\":12263:12387  require(... */\n      tag_473\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19466:19468   */\n      0x20\n        /* \"contracts/Take3Token.sol\":12263:12387  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19448:19469   */\n      mstore\n        /* \"#utility.yul\":19505:19507   */\n      0x28\n        /* \"#utility.yul\":19485:19503   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19478:19508   */\n      mstore\n        /* \"#utility.yul\":19544:19578   */\n      0x5472616e7366657220616d6f756e74206578636565647320746865206d617854\n        /* \"#utility.yul\":19524:19542   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19517:19579   */\n      mstore\n      shl(0xc1, 0x3c20b6b7bab73a17)\n        /* \"#utility.yul\":19595:19613   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":19588:19626   */\n      mstore\n        /* \"#utility.yul\":19643:19662   */\n      0x84\n      add\n        /* \"contracts/Take3Token.sol\":12263:12387  require(... */\n      tag_246\n        /* \"#utility.yul\":19264:19668   */\n      jump\n        /* \"contracts/Take3Token.sol\":12263:12387  require(... */\n    tag_473:\n        /* \"contracts/Take3Token.sol\":12682:12710  uint256 contractTokenBalance */\n      0x00\n        /* \"contracts/Take3Token.sol\":12713:12737  balanceOf(address(this)) */\n      tag_476\n        /* \"contracts/Take3Token.sol\":12731:12735  this */\n      address\n        /* \"contracts/Take3Token.sol\":12713:12722  balanceOf */\n      tag_151\n        /* \"contracts/Take3Token.sol\":12713:12737  balanceOf(address(this)) */\n      jump\t// in\n    tag_476:\n        /* \"contracts/Take3Token.sol\":12682:12737  uint256 contractTokenBalance = balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Take3Token.sol\":12778:12790  _maxTxAmount */\n      sload(0x73)\n        /* \"contracts/Take3Token.sol\":12754:12774  contractTokenBalance */\n      dup2\n        /* \"contracts/Take3Token.sol\":12754:12790  contractTokenBalance >= _maxTxAmount */\n      lt\n        /* \"contracts/Take3Token.sol\":12750:12854  if (contractTokenBalance >= _maxTxAmount) {... */\n      tag_477\n      jumpi\n      pop\n        /* \"contracts/Take3Token.sol\":12830:12842  _maxTxAmount */\n      sload(0x73)\n        /* \"contracts/Take3Token.sol\":12750:12854  if (contractTokenBalance >= _maxTxAmount) {... */\n    tag_477:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":13517:13541  _isExcludedFromFee[from] */\n      dup5\n      and\n        /* \"contracts/Take3Token.sol\":13397:13409  bool takeFee */\n      0x00\n        /* \"contracts/Take3Token.sol\":13517:13541  _isExcludedFromFee[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":13517:13535  _isExcludedFromFee */\n      0x68\n        /* \"contracts/Take3Token.sol\":13517:13541  _isExcludedFromFee[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":13412:13416  true */\n      0x01\n      swap1\n        /* \"contracts/Take3Token.sol\":13517:13541  _isExcludedFromFee[from] */\n      0xff\n      and\n      dup1\n        /* \"contracts/Take3Token.sol\":13517:13567  _isExcludedFromFee[from] || _isExcludedFromFee[to] */\n      tag_478\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":13545:13567  _isExcludedFromFee[to] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":13545:13563  _isExcludedFromFee */\n      0x68\n        /* \"contracts/Take3Token.sol\":13545:13567  _isExcludedFromFee[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":13517:13567  _isExcludedFromFee[from] || _isExcludedFromFee[to] */\n    tag_478:\n        /* \"contracts/Take3Token.sol\":13513:13611  if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {... */\n      iszero\n      tag_479\n      jumpi\n      pop\n        /* \"contracts/Take3Token.sol\":13594:13599  false */\n      0x00\n        /* \"contracts/Take3Token.sol\":13513:13611  if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {... */\n    tag_479:\n        /* \"contracts/Take3Token.sol\":13689:13730  _tokenTransfer(from, to, amount, takeFee) */\n      tag_480\n        /* \"contracts/Take3Token.sol\":13704:13708  from */\n      dup6\n        /* \"contracts/Take3Token.sol\":13710:13712  to */\n      dup6\n        /* \"contracts/Take3Token.sol\":13714:13720  amount */\n      dup6\n        /* \"contracts/Take3Token.sol\":13722:13729  takeFee */\n      dup5\n        /* \"contracts/Take3Token.sol\":13689:13703  _tokenTransfer */\n      tag_481\n        /* \"contracts/Take3Token.sol\":13689:13730  _tokenTransfer(from, to, amount, takeFee) */\n      jump\t// in\n    tag_480:\n        /* \"contracts/Take3Token.sol\":11972:13738  {... */\n      pop\n      pop\n        /* \"contracts/Take3Token.sol\":11869:13738  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":4970:5201  function sub(... */\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":5086:5093  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":5145:5157  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":5137:5143  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":5129:5158  require(b <= a, errorMessage) */\n      tag_483\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_483:\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":5179:5184  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":4970:5201  function sub(... */\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":9576:9740  function _getRate() private view returns (uint256) {... */\n    tag_249:\n        /* \"contracts/Take3Token.sol\":9618:9625  uint256 */\n      0x00\n        /* \"contracts/Take3Token.sol\":9639:9654  uint256 rSupply */\n      dup1\n        /* \"contracts/Take3Token.sol\":9656:9671  uint256 tSupply */\n      0x00\n        /* \"contracts/Take3Token.sol\":9675:9694  _getCurrentSupply() */\n      tag_486\n        /* \"contracts/Take3Token.sol\":9675:9692  _getCurrentSupply */\n      tag_487\n        /* \"contracts/Take3Token.sol\":9675:9694  _getCurrentSupply() */\n      jump\t// in\n    tag_486:\n        /* \"contracts/Take3Token.sol\":9638:9694  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/Take3Token.sol\":9712:9732  rSupply.div(tSupply) */\n      tag_488\n        /* \"contracts/Take3Token.sol\":9638:9694  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      dup3\n      dup3\n        /* \"contracts/Take3Token.sol\":9712:9723  rSupply.div */\n      tag_251\n        /* \"contracts/Take3Token.sol\":9712:9732  rSupply.div(tSupply) */\n      jump\t// in\n    tag_488:\n        /* \"contracts/Take3Token.sol\":9705:9732  return rSupply.div(tSupply) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Take3Token.sol\":9576:9740  function _getRate() private view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3861:3957  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3919:3926  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3945:3950  a / b */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3949:3950  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3945:3946  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3945:3950  a / b */\n      tag_491\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":2766:2862  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":2824:2831  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":2850:2855  a + b */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":2854:2855  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":2850:2851  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":2850:2855  a + b */\n      tag_494\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":7888:8611  function _getValues(uint256 tAmount)... */\n    tag_293:\n        /* \"contracts/Take3Token.sol\":7988:7995  uint256 */\n      0x00\n        /* \"contracts/Take3Token.sol\":8010:8017  uint256 */\n      dup1\n        /* \"contracts/Take3Token.sol\":8032:8039  uint256 */\n      0x00\n        /* \"contracts/Take3Token.sol\":8054:8061  uint256 */\n      dup1\n        /* \"contracts/Take3Token.sol\":8076:8083  uint256 */\n      0x00\n        /* \"contracts/Take3Token.sol\":8137:8160  uint256 tTransferAmount */\n      dup1\n        /* \"contracts/Take3Token.sol\":8175:8187  uint256 tFee */\n      0x00\n        /* \"contracts/Take3Token.sol\":8223:8243  _getTValues(tAmount) */\n      tag_496\n        /* \"contracts/Take3Token.sol\":8235:8242  tAmount */\n      dup9\n        /* \"contracts/Take3Token.sol\":8223:8234  _getTValues */\n      tag_497\n        /* \"contracts/Take3Token.sol\":8223:8243  _getTValues(tAmount) */\n      jump\t// in\n    tag_496:\n        /* \"contracts/Take3Token.sol\":8122:8243  (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Take3Token.sol\":8255:8270  uint256 rAmount */\n      0x00\n        /* \"contracts/Take3Token.sol\":8272:8295  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/Take3Token.sol\":8297:8309  uint256 rFee */\n      0x00\n        /* \"contracts/Take3Token.sol\":8313:8428  _getRValues(... */\n      tag_498\n        /* \"contracts/Take3Token.sol\":8339:8346  tAmount */\n      dup12\n        /* \"contracts/Take3Token.sol\":8361:8365  tFee */\n      dup6\n        /* \"contracts/Take3Token.sol\":8407:8417  _getRate() */\n      tag_499\n        /* \"contracts/Take3Token.sol\":8407:8415  _getRate */\n      tag_249\n        /* \"contracts/Take3Token.sol\":8407:8417  _getRate() */\n      jump\t// in\n    tag_499:\n        /* \"contracts/Take3Token.sol\":8313:8324  _getRValues */\n      tag_500\n        /* \"contracts/Take3Token.sol\":8313:8428  _getRValues(... */\n      jump\t// in\n    tag_498:\n        /* \"contracts/Take3Token.sol\":8254:8428  (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(... */\n      swap2\n      swap14\n      swap1\n      swap13\n      pop\n      swap1\n      swap11\n      pop\n        /* \"contracts/Take3Token.sol\":8532:8547  tTransferAmount */\n      swap5\n      swap9\n      pop\n        /* \"contracts/Take3Token.sol\":8562:8566  tFee */\n      swap3\n      swap7\n      pop\n        /* \"contracts/Take3Token.sol\":7888:8611  function _getValues(uint256 tAmount)... */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3133:3229  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3191:3198  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3217:3222  a - b */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3221:3222  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3217:3218  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3217:3222  a - b */\n      tag_268\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_368:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2762  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2736:2860  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":20131:20372  function _updateMap(... */\n    tag_383:\n        /* \"contracts/Take3Token.sol\":20283:20291  uint64 i */\n      0x00\n        /* \"contracts/Take3Token.sol\":20278:20365  for (uint64 i = 0; i < arr.length; i++) {... */\n    tag_505:\n        /* \"contracts/Take3Token.sol\":20301:20304  arr */\n      dup4\n        /* \"contracts/Take3Token.sol\":20301:20311  arr.length */\n      mload\n        /* \"contracts/Take3Token.sol\":20297:20298  i */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":20297:20311  i < arr.length */\n      and\n      lt\n        /* \"contracts/Take3Token.sol\":20278:20365  for (uint64 i = 0; i < arr.length; i++) {... */\n      iszero\n      tag_506\n      jumpi\n        /* \"contracts/Take3Token.sol\":20347:20353  status */\n      dup3\n        /* \"contracts/Take3Token.sol\":20333:20336  map */\n      dup3\n        /* \"contracts/Take3Token.sol\":20333:20344  map[arr[i]] */\n      0x00\n        /* \"contracts/Take3Token.sol\":20337:20340  arr */\n      dup7\n        /* \"contracts/Take3Token.sol\":20341:20342  i */\n      dup5\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":20337:20343  arr[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_509\n      jumpi\n      tag_509\n      tag_264\n      jump\t// in\n    tag_509:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":20333:20344  map[arr[i]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Take3Token.sol\":20333:20353  map[arr[i]] = status */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":20313:20316  i++ */\n      dup1\n      tag_510\n      dup2\n      tag_346\n      jump\t// in\n    tag_510:\n      swap2\n      pop\n      pop\n        /* \"contracts/Take3Token.sol\":20278:20365  for (uint64 i = 0; i < arr.length; i++) {... */\n      jump(tag_505)\n    tag_506:\n      pop\n        /* \"contracts/Take3Token.sol\":20131:20372  function _updateMap(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_406:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_513\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_515\n      jump\t// in\n    tag_513:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_367\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_518\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":16057:16895  function _tokenTransfer(... */\n    tag_481:\n        /* \"contracts/Take3Token.sol\":16213:16220  takeFee */\n      dup1\n        /* \"contracts/Take3Token.sol\":16208:16236  if (!takeFee) removeAllFee() */\n      tag_521\n      jumpi\n        /* \"contracts/Take3Token.sol\":16222:16236  removeAllFee() */\n      tag_521\n        /* \"contracts/Take3Token.sol\":16222:16234  removeAllFee */\n      tag_522\n        /* \"contracts/Take3Token.sol\":16222:16236  removeAllFee() */\n      jump\t// in\n    tag_521:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":16253:16272  _isExcluded[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":16253:16264  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":16253:16272  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":16253:16299  _isExcluded[sender] && !_isExcluded[recipient] */\n      dup1\n      iszero\n      tag_523\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":16277:16299  _isExcluded[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":16277:16288  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":16277:16299  _isExcluded[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":16276:16299  !_isExcluded[recipient] */\n      iszero\n        /* \"contracts/Take3Token.sol\":16253:16299  _isExcluded[sender] && !_isExcluded[recipient] */\n    tag_523:\n        /* \"contracts/Take3Token.sol\":16249:16846  if (_isExcluded[sender] && !_isExcluded[recipient]) {... */\n      iszero\n      tag_524\n      jumpi\n        /* \"contracts/Take3Token.sol\":16316:16364  _transferFromExcluded(sender, recipient, amount) */\n      tag_525\n        /* \"contracts/Take3Token.sol\":16338:16344  sender */\n      dup5\n        /* \"contracts/Take3Token.sol\":16346:16355  recipient */\n      dup5\n        /* \"contracts/Take3Token.sol\":16357:16363  amount */\n      dup5\n        /* \"contracts/Take3Token.sol\":16316:16337  _transferFromExcluded */\n      tag_526\n        /* \"contracts/Take3Token.sol\":16316:16364  _transferFromExcluded(sender, recipient, amount) */\n      jump\t// in\n    tag_525:\n        /* \"contracts/Take3Token.sol\":16249:16846  if (_isExcluded[sender] && !_isExcluded[recipient]) {... */\n      jump(tag_543)\n    tag_524:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":16387:16406  _isExcluded[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":16387:16398  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":16387:16406  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":16386:16406  !_isExcluded[sender] */\n      iszero\n        /* \"contracts/Take3Token.sol\":16386:16432  !_isExcluded[sender] && _isExcluded[recipient] */\n      dup1\n      iszero\n      tag_528\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":16410:16432  _isExcluded[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":16410:16421  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":16410:16432  _isExcluded[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":16386:16432  !_isExcluded[sender] && _isExcluded[recipient] */\n    tag_528:\n        /* \"contracts/Take3Token.sol\":16382:16846  if (!_isExcluded[sender] && _isExcluded[recipient]) {... */\n      iszero\n      tag_529\n      jumpi\n        /* \"contracts/Take3Token.sol\":16449:16495  _transferToExcluded(sender, recipient, amount) */\n      tag_525\n        /* \"contracts/Take3Token.sol\":16469:16475  sender */\n      dup5\n        /* \"contracts/Take3Token.sol\":16477:16486  recipient */\n      dup5\n        /* \"contracts/Take3Token.sol\":16488:16494  amount */\n      dup5\n        /* \"contracts/Take3Token.sol\":16449:16468  _transferToExcluded */\n      tag_531\n        /* \"contracts/Take3Token.sol\":16449:16495  _transferToExcluded(sender, recipient, amount) */\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":16382:16846  if (!_isExcluded[sender] && _isExcluded[recipient]) {... */\n    tag_529:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":16518:16537  _isExcluded[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":16518:16529  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":16518:16537  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":16517:16537  !_isExcluded[sender] */\n      iszero\n        /* \"contracts/Take3Token.sol\":16517:16564  !_isExcluded[sender] && !_isExcluded[recipient] */\n      dup1\n      iszero\n      tag_533\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":16542:16564  _isExcluded[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":16542:16553  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":16542:16564  _isExcluded[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":16541:16564  !_isExcluded[recipient] */\n      iszero\n        /* \"contracts/Take3Token.sol\":16517:16564  !_isExcluded[sender] && !_isExcluded[recipient] */\n    tag_533:\n        /* \"contracts/Take3Token.sol\":16513:16846  if (!_isExcluded[sender] && !_isExcluded[recipient]) {... */\n      iszero\n      tag_534\n      jumpi\n        /* \"contracts/Take3Token.sol\":16581:16625  _transferStandard(sender, recipient, amount) */\n      tag_525\n        /* \"contracts/Take3Token.sol\":16599:16605  sender */\n      dup5\n        /* \"contracts/Take3Token.sol\":16607:16616  recipient */\n      dup5\n        /* \"contracts/Take3Token.sol\":16618:16624  amount */\n      dup5\n        /* \"contracts/Take3Token.sol\":16581:16598  _transferStandard */\n      tag_536\n        /* \"contracts/Take3Token.sol\":16581:16625  _transferStandard(sender, recipient, amount) */\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":16513:16846  if (!_isExcluded[sender] && !_isExcluded[recipient]) {... */\n    tag_534:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":16647:16666  _isExcluded[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":16647:16658  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":16647:16666  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":16647:16692  _isExcluded[sender] && _isExcluded[recipient] */\n      dup1\n      iszero\n      tag_538\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":16670:16692  _isExcluded[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":16670:16681  _isExcluded */\n      0x69\n        /* \"contracts/Take3Token.sol\":16670:16692  _isExcluded[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Take3Token.sol\":16647:16692  _isExcluded[sender] && _isExcluded[recipient] */\n    tag_538:\n        /* \"contracts/Take3Token.sol\":16643:16846  if (_isExcluded[sender] && _isExcluded[recipient]) {... */\n      iszero\n      tag_539\n      jumpi\n        /* \"contracts/Take3Token.sol\":16709:16757  _transferBothExcluded(sender, recipient, amount) */\n      tag_525\n        /* \"contracts/Take3Token.sol\":16731:16737  sender */\n      dup5\n        /* \"contracts/Take3Token.sol\":16739:16748  recipient */\n      dup5\n        /* \"contracts/Take3Token.sol\":16750:16756  amount */\n      dup5\n        /* \"contracts/Take3Token.sol\":16709:16730  _transferBothExcluded */\n      tag_541\n        /* \"contracts/Take3Token.sol\":16709:16757  _transferBothExcluded(sender, recipient, amount) */\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":16643:16846  if (_isExcluded[sender] && _isExcluded[recipient]) {... */\n    tag_539:\n        /* \"contracts/Take3Token.sol\":16790:16834  _transferStandard(sender, recipient, amount) */\n      tag_543\n        /* \"contracts/Take3Token.sol\":16808:16814  sender */\n      dup5\n        /* \"contracts/Take3Token.sol\":16816:16825  recipient */\n      dup5\n        /* \"contracts/Take3Token.sol\":16827:16833  amount */\n      dup5\n        /* \"contracts/Take3Token.sol\":16790:16807  _transferStandard */\n      tag_536\n        /* \"contracts/Take3Token.sol\":16790:16834  _transferStandard(sender, recipient, amount) */\n      jump\t// in\n    tag_543:\n        /* \"contracts/Take3Token.sol\":16863:16870  takeFee */\n      dup1\n        /* \"contracts/Take3Token.sol\":16858:16887  if (!takeFee) restoreAllFee() */\n      tag_506\n      jumpi\n        /* \"contracts/Take3Token.sol\":16872:16887  restoreAllFee() */\n      tag_506\n        /* \"contracts/Take3Token.sol\":11277:11292  _previousTaxFee */\n      sload(0x72)\n        /* \"contracts/Take3Token.sol\":11267:11274  _taxFee */\n      0x71\n        /* \"contracts/Take3Token.sol\":11267:11292  _taxFee = _previousTaxFee */\n      sstore\n        /* \"contracts/Take3Token.sol\":11223:11350  function restoreAllFee() private {... */\n      jump\n        /* \"contracts/Take3Token.sol\":9748:10353  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n    tag_487:\n        /* \"contracts/Take3Token.sol\":9846:9853  _rTotal */\n      sload(0x6c)\n        /* \"contracts/Take3Token.sol\":9882:9889  _tTotal */\n      sload(0x6b)\n        /* \"contracts/Take3Token.sol\":9799:9806  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n      dup3\n        /* \"contracts/Take3Token.sol\":9900:10238  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_548:\n        /* \"contracts/Take3Token.sol\":9924:9933  _excluded */\n      0x6a\n        /* \"contracts/Take3Token.sol\":9924:9940  _excluded.length */\n      sload\n        /* \"contracts/Take3Token.sol\":9920:9940  i < _excluded.length */\n      dup2\n      lt\n        /* \"contracts/Take3Token.sol\":9900:10238  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_549\n      jumpi\n        /* \"contracts/Take3Token.sol\":10008:10015  rSupply */\n      dup3\n        /* \"contracts/Take3Token.sol\":9984:9991  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":9984:10005  _rOwned[_excluded[i]] */\n      0x00\n        /* \"contracts/Take3Token.sol\":9992:10001  _excluded */\n      0x6a\n        /* \"contracts/Take3Token.sol\":10002:10003  i */\n      dup5\n        /* \"contracts/Take3Token.sol\":9992:10004  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_552\n      jumpi\n      tag_552\n      tag_264\n      jump\t// in\n    tag_552:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Take3Token.sol\":9984:10005  _rOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":9984:10015  _rOwned[_excluded[i]] > rSupply */\n      gt\n      dup1\n        /* \"contracts/Take3Token.sol\":9984:10067  _rOwned[_excluded[i]] > rSupply ||... */\n      tag_554\n      jumpi\n      pop\n        /* \"contracts/Take3Token.sol\":10060:10067  tSupply */\n      dup2\n        /* \"contracts/Take3Token.sol\":10036:10043  _tOwned */\n      0x66\n        /* \"contracts/Take3Token.sol\":10036:10057  _tOwned[_excluded[i]] */\n      0x00\n        /* \"contracts/Take3Token.sol\":10044:10053  _excluded */\n      0x6a\n        /* \"contracts/Take3Token.sol\":10054:10055  i */\n      dup5\n        /* \"contracts/Take3Token.sol\":10044:10056  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_556\n      jumpi\n      tag_556\n      tag_264\n      jump\t// in\n    tag_556:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Take3Token.sol\":10036:10057  _tOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":10036:10067  _tOwned[_excluded[i]] > tSupply */\n      gt\n        /* \"contracts/Take3Token.sol\":9984:10067  _rOwned[_excluded[i]] > rSupply ||... */\n    tag_554:\n        /* \"contracts/Take3Token.sol\":9962:10108  if (... */\n      iszero\n      tag_558\n      jumpi\n        /* \"contracts/Take3Token.sol\":10091:10098  _rTotal */\n      sload(0x6c)\n        /* \"contracts/Take3Token.sol\":10100:10107  _tTotal */\n      sload(0x6b)\n        /* \"contracts/Take3Token.sol\":10083:10108  return (_rTotal, _tTotal) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Take3Token.sol\":9748:10353  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":9962:10108  if (... */\n    tag_558:\n        /* \"contracts/Take3Token.sol\":10133:10167  rSupply.sub(_rOwned[_excluded[i]]) */\n      tag_559\n        /* \"contracts/Take3Token.sol\":10145:10152  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":10145:10166  _rOwned[_excluded[i]] */\n      0x00\n        /* \"contracts/Take3Token.sol\":10153:10162  _excluded */\n      0x6a\n        /* \"contracts/Take3Token.sol\":10163:10164  i */\n      dup5\n        /* \"contracts/Take3Token.sol\":10153:10165  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_561\n      jumpi\n      tag_561\n      tag_264\n      jump\t// in\n    tag_561:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Take3Token.sol\":10145:10166  _rOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":10133:10140  rSupply */\n      dup5\n      swap1\n        /* \"contracts/Take3Token.sol\":10133:10144  rSupply.sub */\n      tag_295\n        /* \"contracts/Take3Token.sol\":10133:10167  rSupply.sub(_rOwned[_excluded[i]]) */\n      jump\t// in\n    tag_559:\n        /* \"contracts/Take3Token.sol\":10123:10167  rSupply = rSupply.sub(_rOwned[_excluded[i]]) */\n      swap3\n      pop\n        /* \"contracts/Take3Token.sol\":10192:10226  tSupply.sub(_tOwned[_excluded[i]]) */\n      tag_563\n        /* \"contracts/Take3Token.sol\":10204:10211  _tOwned */\n      0x66\n        /* \"contracts/Take3Token.sol\":10204:10225  _tOwned[_excluded[i]] */\n      0x00\n        /* \"contracts/Take3Token.sol\":10212:10221  _excluded */\n      0x6a\n        /* \"contracts/Take3Token.sol\":10222:10223  i */\n      dup5\n        /* \"contracts/Take3Token.sol\":10212:10224  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_565\n      jumpi\n      tag_565\n      tag_264\n      jump\t// in\n    tag_565:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Take3Token.sol\":10204:10225  _tOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":10192:10199  tSupply */\n      dup4\n      swap1\n        /* \"contracts/Take3Token.sol\":10192:10203  tSupply.sub */\n      tag_295\n        /* \"contracts/Take3Token.sol\":10192:10226  tSupply.sub(_tOwned[_excluded[i]]) */\n      jump\t// in\n    tag_563:\n        /* \"contracts/Take3Token.sol\":10182:10226  tSupply = tSupply.sub(_tOwned[_excluded[i]]) */\n      swap2\n      pop\n        /* \"contracts/Take3Token.sol\":9942:9945  i++ */\n      dup1\n      tag_567\n      dup2\n      tag_280\n      jump\t// in\n    tag_567:\n      swap2\n      pop\n      pop\n        /* \"contracts/Take3Token.sol\":9900:10238  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_548)\n    tag_549:\n      pop\n        /* \"contracts/Take3Token.sol\":10274:10281  _tTotal */\n      sload(0x6b)\n        /* \"contracts/Take3Token.sol\":10262:10269  _rTotal */\n      sload(0x6c)\n        /* \"contracts/Take3Token.sol\":10262:10282  _rTotal.div(_tTotal) */\n      tag_568\n      swap2\n        /* \"contracts/Take3Token.sol\":10262:10273  _rTotal.div */\n      tag_251\n        /* \"contracts/Take3Token.sol\":10262:10282  _rTotal.div(_tTotal) */\n      jump\t// in\n    tag_568:\n        /* \"contracts/Take3Token.sol\":10252:10259  rSupply */\n      dup3\n        /* \"contracts/Take3Token.sol\":10252:10282  rSupply < _rTotal.div(_tTotal) */\n      lt\n        /* \"contracts/Take3Token.sol\":10248:10309  if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal) */\n      iszero\n      tag_569\n      jumpi\n        /* \"contracts/Take3Token.sol\":10292:10299  _rTotal */\n      sload(0x6c)\n        /* \"contracts/Take3Token.sol\":10301:10308  _tTotal */\n      sload(0x6b)\n        /* \"contracts/Take3Token.sol\":10284:10309  return (_rTotal, _tTotal) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/Take3Token.sol\":9748:10353  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":10248:10309  if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal) */\n    tag_569:\n        /* \"contracts/Take3Token.sol\":10328:10335  rSupply */\n      swap1\n      swap4\n        /* \"contracts/Take3Token.sol\":10337:10344  tSupply */\n      swap1\n      swap3\n      pop\n        /* \"contracts/Take3Token.sol\":9748:10353  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":8619:8998  function _getTValues(uint256 tAmount)... */\n    tag_497:\n        /* \"contracts/Take3Token.sol\":8706:8713  uint256 */\n      0x00\n        /* \"contracts/Take3Token.sol\":8715:8722  uint256 */\n      dup1\n        /* \"contracts/Take3Token.sol\":8755:8767  uint256 tFee */\n      0x00\n        /* \"contracts/Take3Token.sol\":8770:8794  calculateTaxFee(tAmount) */\n      tag_571\n        /* \"contracts/Take3Token.sol\":8786:8793  tAmount */\n      dup5\n        /* \"contracts/Take3Token.sol\":8770:8785  calculateTaxFee */\n      tag_572\n        /* \"contracts/Take3Token.sol\":8770:8794  calculateTaxFee(tAmount) */\n      jump\t// in\n    tag_571:\n        /* \"contracts/Take3Token.sol\":8755:8794  uint256 tFee = calculateTaxFee(tAmount) */\n      swap1\n      pop\n        /* \"contracts/Take3Token.sol\":8869:8892  uint256 tTransferAmount */\n      0x00\n        /* \"contracts/Take3Token.sol\":8895:8912  tAmount.sub(tFee) */\n      tag_573\n        /* \"contracts/Take3Token.sol\":8895:8902  tAmount */\n      dup6\n        /* \"contracts/Take3Token.sol\":8755:8794  uint256 tFee = calculateTaxFee(tAmount) */\n      dup4\n        /* \"contracts/Take3Token.sol\":8895:8906  tAmount.sub */\n      tag_295\n        /* \"contracts/Take3Token.sol\":8895:8912  tAmount.sub(tFee) */\n      jump\t// in\n    tag_573:\n        /* \"contracts/Take3Token.sol\":8869:8912  uint256 tTransferAmount = tAmount.sub(tFee) */\n      swap6\n        /* \"contracts/Take3Token.sol\":8968:8972  tFee */\n      swap2\n      swap5\n      pop\n        /* \"contracts/Take3Token.sol\":8619:8998  function _getTValues(uint256 tAmount)... */\n      swap1\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":9006:9568  function _getRValues(... */\n    tag_500:\n        /* \"contracts/Take3Token.sol\":9207:9214  uint256 */\n      0x00\n      dup1\n      dup1\n      dup1\n        /* \"contracts/Take3Token.sol\":9304:9328  tAmount.mul(currentRate) */\n      tag_575\n        /* \"contracts/Take3Token.sol\":9304:9311  tAmount */\n      dup8\n        /* \"contracts/Take3Token.sol\":9316:9327  currentRate */\n      dup7\n        /* \"contracts/Take3Token.sol\":9304:9315  tAmount.mul */\n      tag_576\n        /* \"contracts/Take3Token.sol\":9304:9328  tAmount.mul(currentRate) */\n      jump\t// in\n    tag_575:\n        /* \"contracts/Take3Token.sol\":9286:9328  uint256 rAmount = tAmount.mul(currentRate) */\n      swap1\n      pop\n        /* \"contracts/Take3Token.sol\":9339:9351  uint256 rFee */\n      0x00\n        /* \"contracts/Take3Token.sol\":9354:9375  tFee.mul(currentRate) */\n      tag_577\n        /* \"contracts/Take3Token.sol\":9354:9358  tFee */\n      dup8\n        /* \"contracts/Take3Token.sol\":9363:9374  currentRate */\n      dup8\n        /* \"contracts/Take3Token.sol\":9354:9362  tFee.mul */\n      tag_576\n        /* \"contracts/Take3Token.sol\":9354:9375  tFee.mul(currentRate) */\n      jump\t// in\n    tag_577:\n        /* \"contracts/Take3Token.sol\":9339:9375  uint256 rFee = tFee.mul(currentRate) */\n      swap1\n      pop\n        /* \"contracts/Take3Token.sol\":9447:9470  uint256 rTransferAmount */\n      0x00\n        /* \"contracts/Take3Token.sol\":9473:9490  rAmount.sub(rFee) */\n      tag_578\n        /* \"contracts/Take3Token.sol\":9473:9480  rAmount */\n      dup4\n        /* \"contracts/Take3Token.sol\":9339:9375  uint256 rFee = tFee.mul(currentRate) */\n      dup4\n        /* \"contracts/Take3Token.sol\":9473:9484  rAmount.sub */\n      tag_295\n        /* \"contracts/Take3Token.sol\":9473:9490  rAmount.sub(rFee) */\n      jump\t// in\n    tag_578:\n        /* \"contracts/Take3Token.sol\":9529:9536  rAmount */\n      swap3\n      swap10\n      swap3\n      swap9\n      pop\n        /* \"contracts/Take3Token.sol\":9555:9559  rFee */\n      swap1\n      swap7\n      pop\n        /* \"contracts/Take3Token.sol\":9006:9568  function _getRValues(... */\n      swap1\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_518:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_580\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_515\n      jump\t// in\n    tag_580:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_367\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_368\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":10998:11215  function removeAllFee() private {... */\n    tag_522:\n        /* \"contracts/Take3Token.sol\":11045:11052  _taxFee */\n      sload(0x71)\n        /* \"contracts/Take3Token.sol\":11041:11066  if (_taxFee == 0) return; */\n      tag_586\n      jumpi\n        /* \"contracts/Take3Token.sol\":10998:11215  function removeAllFee() private {... */\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":11041:11066  if (_taxFee == 0) return; */\n    tag_586:\n        /* \"contracts/Take3Token.sol\":11096:11103  _taxFee */\n      0x71\n      dup1\n      sload\n        /* \"contracts/Take3Token.sol\":11078:11093  _previousTaxFee */\n      0x72\n        /* \"contracts/Take3Token.sol\":11078:11103  _previousTaxFee = _taxFee */\n      sstore\n      0x00\n        /* \"contracts/Take3Token.sol\":11166:11177  _taxFee = 0 */\n      swap1\n      sstore\n        /* \"contracts/Take3Token.sol\":10998:11215  function removeAllFee() private {... */\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":18224:18901  function _transferFromExcluded(... */\n    tag_526:\n        /* \"contracts/Take3Token.sol\":18375:18390  uint256 rAmount */\n      0x00\n        /* \"contracts/Take3Token.sol\":18405:18428  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/Take3Token.sol\":18443:18455  uint256 rFee */\n      0x00\n        /* \"contracts/Take3Token.sol\":18470:18493  uint256 tTransferAmount */\n      dup1\n        /* \"contracts/Take3Token.sol\":18508:18520  uint256 tFee */\n      0x00\n        /* \"contracts/Take3Token.sol\":18556:18575  _getValues(tAmount) */\n      tag_588\n        /* \"contracts/Take3Token.sol\":18567:18574  tAmount */\n      dup7\n        /* \"contracts/Take3Token.sol\":18556:18566  _getValues */\n      tag_293\n        /* \"contracts/Take3Token.sol\":18556:18575  _getValues(tAmount) */\n      jump\t// in\n    tag_588:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":18604:18619  _tOwned[sender] */\n      dup14\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":18604:18611  _tOwned */\n      0x66\n        /* \"contracts/Take3Token.sol\":18604:18619  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":18360:18575  (... */\n      swap5\n      swap10\n      pop\n      swap3\n      swap8\n      pop\n      swap1\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"contracts/Take3Token.sol\":18604:18632  _tOwned[sender].sub(tAmount) */\n      tag_589\n      swap1\n        /* \"contracts/Take3Token.sol\":18624:18631  tAmount */\n      dup8\n        /* \"contracts/Take3Token.sol\":18604:18623  _tOwned[sender].sub */\n      tag_295\n        /* \"contracts/Take3Token.sol\":18604:18632  _tOwned[sender].sub(tAmount) */\n      jump\t// in\n    tag_589:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":18586:18601  _tOwned[sender] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":18586:18593  _tOwned */\n      0x66\n        /* \"contracts/Take3Token.sol\":18586:18601  _tOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Take3Token.sol\":18586:18632  _tOwned[sender] = _tOwned[sender].sub(tAmount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Take3Token.sol\":18661:18668  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":18661:18676  _rOwned[sender] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":18661:18689  _rOwned[sender].sub(rAmount) */\n      tag_590\n      swap1\n        /* \"contracts/Take3Token.sol\":18681:18688  rAmount */\n      dup7\n        /* \"contracts/Take3Token.sol\":18661:18680  _rOwned[sender].sub */\n      tag_295\n        /* \"contracts/Take3Token.sol\":18661:18689  _rOwned[sender].sub(rAmount) */\n      jump\t// in\n    tag_590:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":18643:18658  _rOwned[sender] */\n      dup1\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":18643:18650  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":18643:18658  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Take3Token.sol\":18643:18689  _rOwned[sender] = _rOwned[sender].sub(rAmount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Take3Token.sol\":18721:18739  _rOwned[recipient] */\n      swap1\n      dup10\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":18721:18760  _rOwned[recipient].add(rTransferAmount) */\n      tag_591\n      swap1\n        /* \"contracts/Take3Token.sol\":18744:18759  rTransferAmount */\n      dup6\n        /* \"contracts/Take3Token.sol\":18721:18743  _rOwned[recipient].add */\n      tag_286\n        /* \"contracts/Take3Token.sol\":18721:18760  _rOwned[recipient].add(rTransferAmount) */\n      jump\t// in\n    tag_591:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":18700:18718  _rOwned[recipient] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":18700:18707  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":18700:18718  _rOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Take3Token.sol\":18700:18760  _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) */\n      sstore\n        /* \"contracts/Take3Token.sol\":18810:18833  _reflectFee(rFee, tFee) */\n      tag_592\n        /* \"contracts/Take3Token.sol\":18822:18826  rFee */\n      dup4\n        /* \"contracts/Take3Token.sol\":18828:18832  tFee */\n      dup3\n        /* \"contracts/Take3Token.sol\":18810:18821  _reflectFee */\n      tag_593\n        /* \"contracts/Take3Token.sol\":18810:18833  _reflectFee(rFee, tFee) */\n      jump\t// in\n    tag_592:\n        /* \"contracts/Take3Token.sol\":18866:18875  recipient */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":18849:18893  Transfer(sender, recipient, tTransferAmount) */\n      and\n        /* \"contracts/Take3Token.sol\":18858:18864  sender */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":18849:18893  Transfer(sender, recipient, tTransferAmount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/Take3Token.sol\":18877:18892  tTransferAmount */\n      dup5\n        /* \"contracts/Take3Token.sol\":18849:18893  Transfer(sender, recipient, tTransferAmount) */\n      mload(0x40)\n      tag_594\n      swap2\n        /* \"#utility.yul\":1767:1792   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1755:1757   */\n      0x20\n        /* \"#utility.yul\":1740:1758   */\n      add\n      swap1\n        /* \"#utility.yul\":1621:1798   */\n      jump\n        /* \"contracts/Take3Token.sol\":18849:18893  Transfer(sender, recipient, tTransferAmount) */\n    tag_594:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Take3Token.sol\":18349:18901  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Take3Token.sol\":18224:18901  function _transferFromExcluded(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Take3Token.sol\":17527:18216  function _transferToExcluded(... */\n    tag_531:\n        /* \"contracts/Take3Token.sol\":17676:17691  uint256 rAmount */\n      0x00\n        /* \"contracts/Take3Token.sol\":17706:17729  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/Take3Token.sol\":17744:17756  uint256 rFee */\n      0x00\n        /* \"contracts/Take3Token.sol\":17771:17794  uint256 tTransferAmount */\n      dup1\n        /* \"contracts/Take3Token.sol\":17809:17821  uint256 tFee */\n      0x00\n        /* \"contracts/Take3Token.sol\":17857:17876  _getValues(tAmount) */\n      tag_596\n        /* \"contracts/Take3Token.sol\":17868:17875  tAmount */\n      dup7\n        /* \"contracts/Take3Token.sol\":17857:17867  _getValues */\n      tag_293\n        /* \"contracts/Take3Token.sol\":17857:17876  _getValues(tAmount) */\n      jump\t// in\n    tag_596:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":17905:17920  _rOwned[sender] */\n      dup14\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":17905:17912  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":17905:17920  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":17661:17876  (... */\n      swap5\n      swap10\n      pop\n      swap3\n      swap8\n      pop\n      swap1\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"contracts/Take3Token.sol\":17905:17933  _rOwned[sender].sub(rAmount) */\n      tag_597\n      swap1\n        /* \"contracts/Take3Token.sol\":17661:17876  (... */\n      dup7\n        /* \"contracts/Take3Token.sol\":17905:17924  _rOwned[sender].sub */\n      tag_295\n        /* \"contracts/Take3Token.sol\":17905:17933  _rOwned[sender].sub(rAmount) */\n      jump\t// in\n    tag_597:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":17887:17902  _rOwned[sender] */\n      dup1\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":17887:17894  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":17887:17902  _rOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Take3Token.sol\":17887:17933  _rOwned[sender] = _rOwned[sender].sub(rAmount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Take3Token.sol\":17965:17983  _tOwned[recipient] */\n      swap2\n      dup11\n      and\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":17965:17972  _tOwned */\n      0x66\n        /* \"contracts/Take3Token.sol\":17965:17983  _tOwned[recipient] */\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":17965:18004  _tOwned[recipient].add(tTransferAmount) */\n      tag_598\n      swap1\n        /* \"contracts/Take3Token.sol\":17988:18003  tTransferAmount */\n      dup4\n        /* \"contracts/Take3Token.sol\":17965:17987  _tOwned[recipient].add */\n      tag_286\n        /* \"contracts/Take3Token.sol\":17965:18004  _tOwned[recipient].add(tTransferAmount) */\n      jump\t// in\n    tag_598:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":17944:17962  _tOwned[recipient] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":17944:17951  _tOwned */\n      0x66\n        /* \"contracts/Take3Token.sol\":17944:17962  _tOwned[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Take3Token.sol\":17944:18004  _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Take3Token.sol\":18036:18043  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":18036:18054  _rOwned[recipient] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":18036:18075  _rOwned[recipient].add(rTransferAmount) */\n      tag_591\n      swap1\n        /* \"contracts/Take3Token.sol\":18059:18074  rTransferAmount */\n      dup6\n        /* \"contracts/Take3Token.sol\":18036:18058  _rOwned[recipient].add */\n      tag_286\n        /* \"contracts/Take3Token.sol\":18036:18075  _rOwned[recipient].add(rTransferAmount) */\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":16903:17519  function _transferStandard(... */\n    tag_536:\n        /* \"contracts/Take3Token.sol\":17050:17065  uint256 rAmount */\n      0x00\n        /* \"contracts/Take3Token.sol\":17080:17103  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/Take3Token.sol\":17118:17130  uint256 rFee */\n      0x00\n        /* \"contracts/Take3Token.sol\":17145:17168  uint256 tTransferAmount */\n      dup1\n        /* \"contracts/Take3Token.sol\":17183:17195  uint256 tFee */\n      0x00\n        /* \"contracts/Take3Token.sol\":17231:17250  _getValues(tAmount) */\n      tag_603\n        /* \"contracts/Take3Token.sol\":17242:17249  tAmount */\n      dup7\n        /* \"contracts/Take3Token.sol\":17231:17241  _getValues */\n      tag_293\n        /* \"contracts/Take3Token.sol\":17231:17250  _getValues(tAmount) */\n      jump\t// in\n    tag_603:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":17279:17294  _rOwned[sender] */\n      dup14\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":17279:17286  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":17279:17294  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":17035:17250  (... */\n      swap5\n      swap10\n      pop\n      swap3\n      swap8\n      pop\n      swap1\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"contracts/Take3Token.sol\":17279:17307  _rOwned[sender].sub(rAmount) */\n      tag_590\n      swap1\n        /* \"contracts/Take3Token.sol\":17035:17250  (... */\n      dup7\n        /* \"contracts/Take3Token.sol\":17279:17298  _rOwned[sender].sub */\n      tag_295\n        /* \"contracts/Take3Token.sol\":17279:17307  _rOwned[sender].sub(rAmount) */\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":18909:19657  function _transferBothExcluded(... */\n    tag_541:\n        /* \"contracts/Take3Token.sol\":19060:19075  uint256 rAmount */\n      0x00\n        /* \"contracts/Take3Token.sol\":19090:19113  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/Take3Token.sol\":19128:19140  uint256 rFee */\n      0x00\n        /* \"contracts/Take3Token.sol\":19155:19178  uint256 tTransferAmount */\n      dup1\n        /* \"contracts/Take3Token.sol\":19193:19205  uint256 tFee */\n      0x00\n        /* \"contracts/Take3Token.sol\":19241:19260  _getValues(tAmount) */\n      tag_609\n        /* \"contracts/Take3Token.sol\":19252:19259  tAmount */\n      dup7\n        /* \"contracts/Take3Token.sol\":19241:19251  _getValues */\n      tag_293\n        /* \"contracts/Take3Token.sol\":19241:19260  _getValues(tAmount) */\n      jump\t// in\n    tag_609:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":19289:19304  _tOwned[sender] */\n      dup14\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":19289:19296  _tOwned */\n      0x66\n        /* \"contracts/Take3Token.sol\":19289:19304  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":19045:19260  (... */\n      swap5\n      swap10\n      pop\n      swap3\n      swap8\n      pop\n      swap1\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"contracts/Take3Token.sol\":19289:19317  _tOwned[sender].sub(tAmount) */\n      tag_610\n      swap1\n        /* \"contracts/Take3Token.sol\":19309:19316  tAmount */\n      dup8\n        /* \"contracts/Take3Token.sol\":19289:19308  _tOwned[sender].sub */\n      tag_295\n        /* \"contracts/Take3Token.sol\":19289:19317  _tOwned[sender].sub(tAmount) */\n      jump\t// in\n    tag_610:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Take3Token.sol\":19271:19286  _tOwned[sender] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Take3Token.sol\":19271:19278  _tOwned */\n      0x66\n        /* \"contracts/Take3Token.sol\":19271:19286  _tOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Take3Token.sol\":19271:19317  _tOwned[sender] = _tOwned[sender].sub(tAmount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Take3Token.sol\":19346:19353  _rOwned */\n      0x65\n        /* \"contracts/Take3Token.sol\":19346:19361  _rOwned[sender] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/Take3Token.sol\":19346:19374  _rOwned[sender].sub(rAmount) */\n      tag_597\n      swap1\n        /* \"contracts/Take3Token.sol\":19366:19373  rAmount */\n      dup7\n        /* \"contracts/Take3Token.sol\":19346:19365  _rOwned[sender].sub */\n      tag_295\n        /* \"contracts/Take3Token.sol\":19346:19374  _rOwned[sender].sub(rAmount) */\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":10860:10990  function calculateTaxFee(uint256 _amount) private view returns (uint256) {... */\n    tag_572:\n        /* \"contracts/Take3Token.sol\":10924:10931  uint256 */\n      0x00\n        /* \"contracts/Take3Token.sol\":10951:10982  _amount.mul(_taxFee).div(10**2) */\n      tag_229\n        /* \"contracts/Take3Token.sol\":10976:10981  10**2 */\n      0x64\n        /* \"contracts/Take3Token.sol\":10951:10971  _amount.mul(_taxFee) */\n      tag_619\n        /* \"contracts/Take3Token.sol\":10963:10970  _taxFee */\n      sload(0x71)\n        /* \"contracts/Take3Token.sol\":10951:10958  _amount */\n      dup6\n        /* \"contracts/Take3Token.sol\":10951:10962  _amount.mul */\n      tag_576\n      swap1\n        /* \"contracts/Take3Token.sol\":10951:10971  _amount.mul(_taxFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_619:\n        /* \"contracts/Take3Token.sol\":10951:10975  _amount.mul(_taxFee).div */\n      swap1\n      tag_251\n        /* \"contracts/Take3Token.sol\":10951:10982  _amount.mul(_taxFee).div(10**2) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3476:3572  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_576:\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3534:3541  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3560:3565  a * b */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3564:3565  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3560:3561  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":3560:3565  a * b */\n      tag_413\n      jump\t// in\n        /* \"contracts/Take3Token.sol\":7733:7880  function _reflectFee(uint256 rFee, uint256 tFee) private {... */\n    tag_593:\n        /* \"contracts/Take3Token.sol\":7811:7818  _rTotal */\n      sload(0x6c)\n        /* \"contracts/Take3Token.sol\":7811:7828  _rTotal.sub(rFee) */\n      tag_623\n      swap1\n        /* \"contracts/Take3Token.sol\":7823:7827  rFee */\n      dup4\n        /* \"contracts/Take3Token.sol\":7811:7822  _rTotal.sub */\n      tag_295\n        /* \"contracts/Take3Token.sol\":7811:7828  _rTotal.sub(rFee) */\n      jump\t// in\n    tag_623:\n        /* \"contracts/Take3Token.sol\":7801:7808  _rTotal */\n      0x6c\n        /* \"contracts/Take3Token.sol\":7801:7828  _rTotal = _rTotal.sub(rFee) */\n      sstore\n        /* \"contracts/Take3Token.sol\":7852:7862  _tFeeTotal */\n      sload(0x6d)\n        /* \"contracts/Take3Token.sol\":7852:7872  _tFeeTotal.add(tFee) */\n      tag_624\n      swap1\n        /* \"contracts/Take3Token.sol\":7867:7871  tFee */\n      dup3\n        /* \"contracts/Take3Token.sol\":7852:7866  _tFeeTotal.add */\n      tag_286\n        /* \"contracts/Take3Token.sol\":7852:7872  _tFeeTotal.add(tFee) */\n      jump\t// in\n    tag_624:\n        /* \"contracts/Take3Token.sol\":7839:7849  _tFeeTotal */\n      0x6d\n        /* \"contracts/Take3Token.sol\":7839:7872  _tFeeTotal = _tFeeTotal.add(tFee) */\n      sstore\n      pop\n      pop\n        /* \"contracts/Take3Token.sol\":7733:7880  function _reflectFee(uint256 rFee, uint256 tFee) private {... */\n      jump\t// out\n    tag_385:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_317\n      swap2\n      swap1\n      tag_627\n      jump\t// in\n    tag_387:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_630\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_629:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_630\n      jumpi\n      dup3\n      mload\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_629)\n    tag_630:\n      pop\n      tag_631\n      swap3\n      swap2\n      pop\n      tag_627\n      jump\t// in\n    tag_631:\n      pop\n      swap1\n      jump\t// out\n    tag_408:\n      dup3\n      dup1\n      sload\n      tag_632\n      swap1\n      tag_223\n      jump\t// in\n    tag_632:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_634\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_630)\n    tag_634:\n      dup3\n      0x1f\n      lt\n      tag_635\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_630)\n    tag_635:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_630\n      jumpi\n      swap2\n      dup3\n      add\n    tag_636:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_630\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_636)\n    tag_627:\n    tag_639:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_631\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_639)\n        /* \"#utility.yul\":14:194   */\n    tag_51:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_653:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:796   */\n    tag_57:\n        /* \"#utility.yul\":311:315   */\n      0x00\n        /* \"#utility.yul\":340:342   */\n      0x20\n        /* \"#utility.yul\":369:371   */\n      dup1\n        /* \"#utility.yul\":358:367   */\n      dup4\n        /* \"#utility.yul\":351:372   */\n      mstore\n        /* \"#utility.yul\":401:407   */\n      dup4\n        /* \"#utility.yul\":395:408   */\n      mload\n        /* \"#utility.yul\":444:450   */\n      dup1\n        /* \"#utility.yul\":439:441   */\n      dup3\n        /* \"#utility.yul\":428:437   */\n      dup6\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"#utility.yul\":417:451   */\n      mstore\n        /* \"#utility.yul\":469:470   */\n      0x00\n        /* \"#utility.yul\":479:619   */\n    tag_655:\n        /* \"#utility.yul\":493:499   */\n      dup2\n        /* \"#utility.yul\":490:491   */\n      dup2\n        /* \"#utility.yul\":487:500   */\n      lt\n        /* \"#utility.yul\":479:619   */\n      iszero\n      tag_657\n      jumpi\n        /* \"#utility.yul\":588:602   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":584:607   */\n      dup4\n      add\n        /* \"#utility.yul\":578:608   */\n      mload\n        /* \"#utility.yul\":554:571   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":573:575   */\n      0x40\n        /* \"#utility.yul\":550:576   */\n      add\n        /* \"#utility.yul\":543:609   */\n      mstore\n        /* \"#utility.yul\":508:518   */\n      dup3\n      add\n        /* \"#utility.yul\":479:619   */\n      jump(tag_655)\n    tag_657:\n        /* \"#utility.yul\":637:643   */\n      dup2\n        /* \"#utility.yul\":634:635   */\n      dup2\n        /* \"#utility.yul\":631:644   */\n      gt\n        /* \"#utility.yul\":628:719   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":707:708   */\n      0x00\n        /* \"#utility.yul\":702:704   */\n      0x40\n        /* \"#utility.yul\":693:699   */\n      dup4\n        /* \"#utility.yul\":682:691   */\n      dup8\n        /* \"#utility.yul\":678:700   */\n      add\n        /* \"#utility.yul\":674:705   */\n      add\n        /* \"#utility.yul\":667:709   */\n      mstore\n        /* \"#utility.yul\":628:719   */\n    tag_658:\n      pop\n        /* \"#utility.yul\":780:782   */\n      0x1f\n        /* \"#utility.yul\":759:774   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":755:784   */\n      and\n        /* \"#utility.yul\":740:785   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":787:789   */\n      0x40\n        /* \"#utility.yul\":736:790   */\n      add\n      swap4\n        /* \"#utility.yul\":199:796   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":801:974   */\n    tag_641:\n        /* \"#utility.yul\":869:889   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":918:949   */\n      dup2\n      and\n        /* \"#utility.yul\":908:950   */\n      dup2\n      eq\n        /* \"#utility.yul\":898:968   */\n      tag_660\n      jumpi\n        /* \"#utility.yul\":964:965   */\n      0x00\n        /* \"#utility.yul\":961:962   */\n      dup1\n        /* \"#utility.yul\":954:966   */\n      revert\n        /* \"#utility.yul\":898:968   */\n    tag_660:\n        /* \"#utility.yul\":801:974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":979:1165   */\n    tag_61:\n        /* \"#utility.yul\":1038:1044   */\n      0x00\n        /* \"#utility.yul\":1091:1093   */\n      0x20\n        /* \"#utility.yul\":1079:1088   */\n      dup3\n        /* \"#utility.yul\":1070:1077   */\n      dup5\n        /* \"#utility.yul\":1066:1089   */\n      sub\n        /* \"#utility.yul\":1062:1094   */\n      slt\n        /* \"#utility.yul\":1059:1111   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":1107:1108   */\n      0x00\n        /* \"#utility.yul\":1104:1105   */\n      dup1\n        /* \"#utility.yul\":1097:1109   */\n      revert\n        /* \"#utility.yul\":1059:1111   */\n    tag_662:\n        /* \"#utility.yul\":1130:1159   */\n      tag_250\n        /* \"#utility.yul\":1149:1158   */\n      dup3\n        /* \"#utility.yul\":1130:1159   */\n      tag_641\n      jump\t// in\n        /* \"#utility.yul\":1362:1616   */\n    tag_68:\n        /* \"#utility.yul\":1430:1436   */\n      0x00\n        /* \"#utility.yul\":1438:1444   */\n      dup1\n        /* \"#utility.yul\":1491:1493   */\n      0x40\n        /* \"#utility.yul\":1479:1488   */\n      dup4\n        /* \"#utility.yul\":1470:1477   */\n      dup6\n        /* \"#utility.yul\":1466:1489   */\n      sub\n        /* \"#utility.yul\":1462:1494   */\n      slt\n        /* \"#utility.yul\":1459:1511   */\n      iszero\n      tag_666\n      jumpi\n        /* \"#utility.yul\":1507:1508   */\n      0x00\n        /* \"#utility.yul\":1504:1505   */\n      dup1\n        /* \"#utility.yul\":1497:1509   */\n      revert\n        /* \"#utility.yul\":1459:1511   */\n    tag_666:\n        /* \"#utility.yul\":1530:1559   */\n      tag_667\n        /* \"#utility.yul\":1549:1558   */\n      dup4\n        /* \"#utility.yul\":1530:1559   */\n      tag_641\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":1520:1559   */\n      swap5\n        /* \"#utility.yul\":1606:1608   */\n      0x20\n        /* \"#utility.yul\":1591:1609   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1578:1610   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1362:1616   */\n      jump\t// out\n        /* \"#utility.yul\":1803:2131   */\n    tag_83:\n        /* \"#utility.yul\":1880:1886   */\n      0x00\n        /* \"#utility.yul\":1888:1894   */\n      dup1\n        /* \"#utility.yul\":1896:1902   */\n      0x00\n        /* \"#utility.yul\":1949:1951   */\n      0x60\n        /* \"#utility.yul\":1937:1946   */\n      dup5\n        /* \"#utility.yul\":1928:1935   */\n      dup7\n        /* \"#utility.yul\":1924:1947   */\n      sub\n        /* \"#utility.yul\":1920:1952   */\n      slt\n        /* \"#utility.yul\":1917:1969   */\n      iszero\n      tag_670\n      jumpi\n        /* \"#utility.yul\":1965:1966   */\n      0x00\n        /* \"#utility.yul\":1962:1963   */\n      dup1\n        /* \"#utility.yul\":1955:1967   */\n      revert\n        /* \"#utility.yul\":1917:1969   */\n    tag_670:\n        /* \"#utility.yul\":1988:2017   */\n      tag_671\n        /* \"#utility.yul\":2007:2016   */\n      dup5\n        /* \"#utility.yul\":1988:2017   */\n      tag_641\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":1978:2017   */\n      swap3\n      pop\n        /* \"#utility.yul\":2036:2074   */\n      tag_672\n        /* \"#utility.yul\":2070:2072   */\n      0x20\n        /* \"#utility.yul\":2059:2068   */\n      dup6\n        /* \"#utility.yul\":2055:2073   */\n      add\n        /* \"#utility.yul\":2036:2074   */\n      tag_641\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":2026:2074   */\n      swap2\n      pop\n        /* \"#utility.yul\":2121:2123   */\n      0x40\n        /* \"#utility.yul\":2110:2119   */\n      dup5\n        /* \"#utility.yul\":2106:2124   */\n      add\n        /* \"#utility.yul\":2093:2125   */\n      calldataload\n        /* \"#utility.yul\":2083:2125   */\n      swap1\n      pop\n        /* \"#utility.yul\":1803:2131   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2136:2477   */\n    tag_119:\n        /* \"#utility.yul\":2201:2207   */\n      0x00\n        /* \"#utility.yul\":2209:2215   */\n      dup1\n        /* \"#utility.yul\":2262:2264   */\n      0x40\n        /* \"#utility.yul\":2250:2259   */\n      dup4\n        /* \"#utility.yul\":2241:2248   */\n      dup6\n        /* \"#utility.yul\":2237:2260   */\n      sub\n        /* \"#utility.yul\":2233:2265   */\n      slt\n        /* \"#utility.yul\":2230:2282   */\n      iszero\n      tag_674\n      jumpi\n        /* \"#utility.yul\":2278:2279   */\n      0x00\n        /* \"#utility.yul\":2275:2276   */\n      dup1\n        /* \"#utility.yul\":2268:2280   */\n      revert\n        /* \"#utility.yul\":2230:2282   */\n    tag_674:\n        /* \"#utility.yul\":2314:2323   */\n      dup3\n        /* \"#utility.yul\":2301:2324   */\n      calldataload\n        /* \"#utility.yul\":2291:2324   */\n      swap2\n      pop\n        /* \"#utility.yul\":2374:2376   */\n      0x20\n        /* \"#utility.yul\":2363:2372   */\n      dup4\n        /* \"#utility.yul\":2359:2377   */\n      add\n        /* \"#utility.yul\":2346:2378   */\n      calldataload\n        /* \"#utility.yul\":2421:2426   */\n      dup1\n        /* \"#utility.yul\":2414:2427   */\n      iszero\n        /* \"#utility.yul\":2407:2428   */\n      iszero\n        /* \"#utility.yul\":2400:2405   */\n      dup2\n        /* \"#utility.yul\":2397:2429   */\n      eq\n        /* \"#utility.yul\":2387:2447   */\n      tag_675\n      jumpi\n        /* \"#utility.yul\":2443:2444   */\n      0x00\n        /* \"#utility.yul\":2440:2441   */\n      dup1\n        /* \"#utility.yul\":2433:2445   */\n      revert\n        /* \"#utility.yul\":2387:2447   */\n    tag_675:\n        /* \"#utility.yul\":2466:2471   */\n      dup1\n        /* \"#utility.yul\":2456:2471   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2136:2477   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2482:3140   */\n    tag_126:\n        /* \"#utility.yul\":2653:2655   */\n      0x20\n        /* \"#utility.yul\":2705:2726   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2775:2788   */\n      dup3\n      mload\n        /* \"#utility.yul\":2678:2696   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2797:2819   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2624:2628   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2653:2655   */\n      swap1\n        /* \"#utility.yul\":2876:2891   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2850:2852   */\n      0x40\n        /* \"#utility.yul\":2835:2853   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2624:2628   */\n      dup5\n        /* \"#utility.yul\":2919:3114   */\n    tag_677:\n        /* \"#utility.yul\":2933:2939   */\n      dup2\n        /* \"#utility.yul\":2930:2931   */\n      dup2\n        /* \"#utility.yul\":2927:2940   */\n      lt\n        /* \"#utility.yul\":2919:3114   */\n      iszero\n      tag_679\n      jumpi\n        /* \"#utility.yul\":2998:3011   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2994:3033   */\n      and\n        /* \"#utility.yul\":2982:3034   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3089:3104   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3054:3066   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":3030:3031   */\n      0x01\n        /* \"#utility.yul\":2948:2957   */\n      add\n        /* \"#utility.yul\":2919:3114   */\n      jump(tag_677)\n    tag_679:\n      pop\n        /* \"#utility.yul\":3131:3134   */\n      swap1\n      swap7\n        /* \"#utility.yul\":2482:3140   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3145:3272   */\n    tag_642:\n        /* \"#utility.yul\":3206:3216   */\n      0x4e487b71\n        /* \"#utility.yul\":3201:3204   */\n      0xe0\n        /* \"#utility.yul\":3197:3217   */\n      shl\n        /* \"#utility.yul\":3194:3195   */\n      0x00\n        /* \"#utility.yul\":3187:3218   */\n      mstore\n        /* \"#utility.yul\":3237:3241   */\n      0x41\n        /* \"#utility.yul\":3234:3235   */\n      0x04\n        /* \"#utility.yul\":3227:3242   */\n      mstore\n        /* \"#utility.yul\":3261:3265   */\n      0x24\n        /* \"#utility.yul\":3258:3259   */\n      0x00\n        /* \"#utility.yul\":3251:3266   */\n      revert\n        /* \"#utility.yul\":3277:3552   */\n    tag_643:\n        /* \"#utility.yul\":3348:3350   */\n      0x40\n        /* \"#utility.yul\":3342:3351   */\n      mload\n        /* \"#utility.yul\":3413:3415   */\n      0x1f\n        /* \"#utility.yul\":3394:3407   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3390:3417   */\n      and\n        /* \"#utility.yul\":3378:3418   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3433:3467   */\n      dup2\n      gt\n        /* \"#utility.yul\":3469:3491   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":3430:3492   */\n      or\n        /* \"#utility.yul\":3427:3515   */\n      iszero\n      tag_683\n      jumpi\n        /* \"#utility.yul\":3495:3513   */\n      tag_683\n      tag_642\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":3531:3533   */\n      0x40\n        /* \"#utility.yul\":3524:3546   */\n      mstore\n        /* \"#utility.yul\":3277:3552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3557:3738   */\n    tag_644:\n        /* \"#utility.yul\":3615:3619   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3640:3646   */\n      dup3\n        /* \"#utility.yul\":3637:3667   */\n      gt\n        /* \"#utility.yul\":3634:3690   */\n      iszero\n      tag_686\n      jumpi\n        /* \"#utility.yul\":3670:3688   */\n      tag_686\n      tag_642\n      jump\t// in\n    tag_686:\n      pop\n        /* \"#utility.yul\":3715:3716   */\n      0x05\n        /* \"#utility.yul\":3711:3725   */\n      shl\n        /* \"#utility.yul\":3727:3731   */\n      0x20\n        /* \"#utility.yul\":3707:3732   */\n      add\n      swap1\n        /* \"#utility.yul\":3557:3738   */\n      jump\t// out\n        /* \"#utility.yul\":3743:4403   */\n    tag_645:\n        /* \"#utility.yul\":3797:3802   */\n      0x00\n        /* \"#utility.yul\":3850:3853   */\n      dup3\n        /* \"#utility.yul\":3843:3847   */\n      0x1f\n        /* \"#utility.yul\":3835:3841   */\n      dup4\n        /* \"#utility.yul\":3831:3848   */\n      add\n        /* \"#utility.yul\":3827:3854   */\n      slt\n        /* \"#utility.yul\":3817:3872   */\n      tag_688\n      jumpi\n        /* \"#utility.yul\":3868:3869   */\n      0x00\n        /* \"#utility.yul\":3865:3866   */\n      dup1\n        /* \"#utility.yul\":3858:3870   */\n      revert\n        /* \"#utility.yul\":3817:3872   */\n    tag_688:\n        /* \"#utility.yul\":3904:3910   */\n      dup2\n        /* \"#utility.yul\":3891:3911   */\n      calldataload\n        /* \"#utility.yul\":3930:3934   */\n      0x20\n        /* \"#utility.yul\":3954:4012   */\n      tag_689\n        /* \"#utility.yul\":3970:4011   */\n      tag_690\n        /* \"#utility.yul\":4008:4010   */\n      dup4\n        /* \"#utility.yul\":3970:4011   */\n      tag_644\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":3954:4012   */\n      tag_643\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":4046:4061   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":4132:4133   */\n      0x05\n        /* \"#utility.yul\":4128:4138   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":4116:4139   */\n      dup5\n      add\n        /* \"#utility.yul\":4112:4144   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":4077:4089   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4156:4171   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":4153:4188   */\n      iszero\n      tag_691\n      jumpi\n        /* \"#utility.yul\":4184:4185   */\n      0x00\n        /* \"#utility.yul\":4181:4182   */\n      dup1\n        /* \"#utility.yul\":4174:4186   */\n      revert\n        /* \"#utility.yul\":4153:4188   */\n    tag_691:\n        /* \"#utility.yul\":4220:4222   */\n      dup3\n        /* \"#utility.yul\":4212:4218   */\n      dup7\n        /* \"#utility.yul\":4208:4223   */\n      add\n        /* \"#utility.yul\":4232:4374   */\n    tag_692:\n        /* \"#utility.yul\":4248:4254   */\n      dup5\n        /* \"#utility.yul\":4243:4246   */\n      dup2\n        /* \"#utility.yul\":4240:4255   */\n      lt\n        /* \"#utility.yul\":4232:4374   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":4314:4331   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":4302:4332   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4352:4364   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":4265:4277   */\n      dup4\n      add\n        /* \"#utility.yul\":4232:4374   */\n      jump(tag_692)\n    tag_694:\n      pop\n        /* \"#utility.yul\":4392:4397   */\n      swap7\n        /* \"#utility.yul\":3743:4403   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:6219   */\n    tag_133:\n        /* \"#utility.yul\":4594:4600   */\n      0x00\n        /* \"#utility.yul\":4602:4608   */\n      dup1\n        /* \"#utility.yul\":4610:4616   */\n      0x00\n        /* \"#utility.yul\":4618:4624   */\n      dup1\n        /* \"#utility.yul\":4626:4632   */\n      0x00\n        /* \"#utility.yul\":4634:4640   */\n      dup1\n        /* \"#utility.yul\":4642:4648   */\n      0x00\n        /* \"#utility.yul\":4695:4698   */\n      0xe0\n        /* \"#utility.yul\":4683:4692   */\n      dup9\n        /* \"#utility.yul\":4674:4681   */\n      dup11\n        /* \"#utility.yul\":4670:4693   */\n      sub\n        /* \"#utility.yul\":4666:4699   */\n      slt\n        /* \"#utility.yul\":4663:4716   */\n      iszero\n      tag_696\n      jumpi\n        /* \"#utility.yul\":4712:4713   */\n      0x00\n        /* \"#utility.yul\":4709:4710   */\n      dup1\n        /* \"#utility.yul\":4702:4714   */\n      revert\n        /* \"#utility.yul\":4663:4716   */\n    tag_696:\n        /* \"#utility.yul\":4735:4764   */\n      tag_697\n        /* \"#utility.yul\":4754:4763   */\n      dup9\n        /* \"#utility.yul\":4735:4764   */\n      tag_641\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":4725:4764   */\n      swap7\n      pop\n        /* \"#utility.yul\":4783:4785   */\n      0x20\n        /* \"#utility.yul\":4832:4834   */\n      dup1\n        /* \"#utility.yul\":4821:4830   */\n      dup10\n        /* \"#utility.yul\":4817:4835   */\n      add\n        /* \"#utility.yul\":4804:4836   */\n      calldataload\n        /* \"#utility.yul\":4794:4836   */\n      swap7\n      pop\n        /* \"#utility.yul\":4883:4885   */\n      0x40\n        /* \"#utility.yul\":4872:4881   */\n      dup10\n        /* \"#utility.yul\":4868:4886   */\n      add\n        /* \"#utility.yul\":4855:4887   */\n      calldataload\n        /* \"#utility.yul\":4845:4887   */\n      swap6\n      pop\n        /* \"#utility.yul\":4934:4936   */\n      0x60\n        /* \"#utility.yul\":4923:4932   */\n      dup10\n        /* \"#utility.yul\":4919:4937   */\n      add\n        /* \"#utility.yul\":4906:4938   */\n      calldataload\n        /* \"#utility.yul\":4896:4938   */\n      swap5\n      pop\n        /* \"#utility.yul\":4989:4992   */\n      0x80\n        /* \"#utility.yul\":4978:4987   */\n      dup10\n        /* \"#utility.yul\":4974:4993   */\n      add\n        /* \"#utility.yul\":4961:4994   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5054:5056   */\n      dup1\n        /* \"#utility.yul\":5046:5052   */\n      dup3\n        /* \"#utility.yul\":5043:5057   */\n      gt\n        /* \"#utility.yul\":5040:5074   */\n      iszero\n      tag_698\n      jumpi\n        /* \"#utility.yul\":5070:5071   */\n      0x00\n        /* \"#utility.yul\":5067:5068   */\n      dup1\n        /* \"#utility.yul\":5060:5072   */\n      revert\n        /* \"#utility.yul\":5040:5074   */\n    tag_698:\n        /* \"#utility.yul\":5108:5114   */\n      dup2\n        /* \"#utility.yul\":5097:5106   */\n      dup12\n        /* \"#utility.yul\":5093:5115   */\n      add\n        /* \"#utility.yul\":5083:5115   */\n      swap2\n      pop\n        /* \"#utility.yul\":5153:5160   */\n      dup12\n        /* \"#utility.yul\":5146:5150   */\n      0x1f\n        /* \"#utility.yul\":5142:5144   */\n      dup4\n        /* \"#utility.yul\":5138:5151   */\n      add\n        /* \"#utility.yul\":5134:5161   */\n      slt\n        /* \"#utility.yul\":5124:5179   */\n      tag_699\n      jumpi\n        /* \"#utility.yul\":5175:5176   */\n      0x00\n        /* \"#utility.yul\":5172:5173   */\n      dup1\n        /* \"#utility.yul\":5165:5177   */\n      revert\n        /* \"#utility.yul\":5124:5179   */\n    tag_699:\n        /* \"#utility.yul\":5211:5213   */\n      dup2\n        /* \"#utility.yul\":5198:5214   */\n      calldataload\n        /* \"#utility.yul\":5234:5292   */\n      tag_700\n        /* \"#utility.yul\":5250:5291   */\n      tag_690\n        /* \"#utility.yul\":5288:5290   */\n      dup3\n        /* \"#utility.yul\":5250:5291   */\n      tag_644\n      jump\t// in\n        /* \"#utility.yul\":5234:5292   */\n    tag_700:\n        /* \"#utility.yul\":5326:5341   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":5408:5409   */\n      0x05\n        /* \"#utility.yul\":5404:5414   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":5396:5415   */\n      dup4\n      add\n        /* \"#utility.yul\":5392:5420   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":5357:5369   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":5432:5451   */\n      dup15\n      dup4\n      gt\n        /* \"#utility.yul\":5429:5468   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":5464:5465   */\n      0x00\n        /* \"#utility.yul\":5461:5462   */\n      dup1\n        /* \"#utility.yul\":5454:5466   */\n      revert\n        /* \"#utility.yul\":5429:5468   */\n    tag_702:\n        /* \"#utility.yul\":5488:5499   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":5508:5819   */\n    tag_703:\n        /* \"#utility.yul\":5524:5530   */\n      dup3\n        /* \"#utility.yul\":5519:5522   */\n      dup6\n        /* \"#utility.yul\":5516:5531   */\n      lt\n        /* \"#utility.yul\":5508:5819   */\n      iszero\n      tag_705\n      jumpi\n        /* \"#utility.yul\":5604:5607   */\n      dup5\n        /* \"#utility.yul\":5591:5608   */\n      calldataload\n        /* \"#utility.yul\":5652:5656   */\n      0xff\n        /* \"#utility.yul\":5645:5650   */\n      dup2\n        /* \"#utility.yul\":5641:5657   */\n      and\n        /* \"#utility.yul\":5634:5639   */\n      dup2\n        /* \"#utility.yul\":5631:5658   */\n      eq\n        /* \"#utility.yul\":5621:5746   */\n      tag_706\n      jumpi\n        /* \"#utility.yul\":5700:5701   */\n      0x00\n        /* \"#utility.yul\":5729:5731   */\n      dup1\n        /* \"#utility.yul\":5725:5727   */\n      dup2\n        /* \"#utility.yul\":5718:5732   */\n      revert\n        /* \"#utility.yul\":5621:5746   */\n    tag_706:\n        /* \"#utility.yul\":5759:5777   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5541:5553   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":5797:5809   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":5508:5819   */\n      jump(tag_703)\n    tag_705:\n        /* \"#utility.yul\":5838:5843   */\n      swap8\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5896:5899   */\n      0xa0\n        /* \"#utility.yul\":5881:5900   */\n      dup12\n      add\n        /* \"#utility.yul\":5868:5901   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":5913:5929   */\n      dup1\n      dup4\n      gt\n        /* \"#utility.yul\":5910:5946   */\n      iszero\n      tag_707\n      jumpi\n        /* \"#utility.yul\":5942:5943   */\n      0x00\n        /* \"#utility.yul\":5939:5940   */\n      dup1\n        /* \"#utility.yul\":5932:5944   */\n      revert\n        /* \"#utility.yul\":5910:5946   */\n    tag_707:\n        /* \"#utility.yul\":5965:6028   */\n      tag_708\n        /* \"#utility.yul\":6020:6027   */\n      dup13\n        /* \"#utility.yul\":6009:6017   */\n      dup5\n        /* \"#utility.yul\":5998:6007   */\n      dup14\n        /* \"#utility.yul\":5994:6018   */\n      add\n        /* \"#utility.yul\":5965:6028   */\n      tag_645\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":5955:6028   */\n      swap5\n      pop\n        /* \"#utility.yul\":6081:6084   */\n      0xc0\n        /* \"#utility.yul\":6070:6079   */\n      dup12\n        /* \"#utility.yul\":6066:6085   */\n      add\n        /* \"#utility.yul\":6053:6086   */\n      calldataload\n        /* \"#utility.yul\":6037:6086   */\n      swap3\n      pop\n        /* \"#utility.yul\":6111:6113   */\n      dup1\n        /* \"#utility.yul\":6101:6109   */\n      dup4\n        /* \"#utility.yul\":6098:6114   */\n      gt\n        /* \"#utility.yul\":6095:6131   */\n      iszero\n      tag_709\n      jumpi\n        /* \"#utility.yul\":6127:6128   */\n      0x00\n        /* \"#utility.yul\":6124:6125   */\n      dup1\n        /* \"#utility.yul\":6117:6129   */\n      revert\n        /* \"#utility.yul\":6095:6131   */\n    tag_709:\n      pop\n      pop\n        /* \"#utility.yul\":6150:6213   */\n      tag_710\n        /* \"#utility.yul\":6205:6212   */\n      dup11\n        /* \"#utility.yul\":6194:6202   */\n      dup3\n        /* \"#utility.yul\":6183:6192   */\n      dup12\n        /* \"#utility.yul\":6179:6203   */\n      add\n        /* \"#utility.yul\":6150:6213   */\n      tag_645\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":6140:6213   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4408:6219   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6432:7327   */\n    tag_177:\n        /* \"#utility.yul\":6516:6522   */\n      0x00\n        /* \"#utility.yul\":6547:6549   */\n      0x20\n        /* \"#utility.yul\":6590:6592   */\n      dup1\n        /* \"#utility.yul\":6578:6587   */\n      dup4\n        /* \"#utility.yul\":6569:6576   */\n      dup6\n        /* \"#utility.yul\":6565:6588   */\n      sub\n        /* \"#utility.yul\":6561:6593   */\n      slt\n        /* \"#utility.yul\":6558:6610   */\n      iszero\n      tag_713\n      jumpi\n        /* \"#utility.yul\":6606:6607   */\n      0x00\n        /* \"#utility.yul\":6603:6604   */\n      dup1\n        /* \"#utility.yul\":6596:6608   */\n      revert\n        /* \"#utility.yul\":6558:6610   */\n    tag_713:\n        /* \"#utility.yul\":6646:6655   */\n      dup3\n        /* \"#utility.yul\":6633:6656   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6671:6677   */\n      dup2\n        /* \"#utility.yul\":6668:6698   */\n      gt\n        /* \"#utility.yul\":6665:6715   */\n      iszero\n      tag_714\n      jumpi\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6708:6709   */\n      dup1\n        /* \"#utility.yul\":6701:6713   */\n      revert\n        /* \"#utility.yul\":6665:6715   */\n    tag_714:\n        /* \"#utility.yul\":6734:6756   */\n      dup4\n      add\n        /* \"#utility.yul\":6787:6791   */\n      0x1f\n        /* \"#utility.yul\":6779:6792   */\n      dup2\n      add\n        /* \"#utility.yul\":6775:6802   */\n      dup6\n      sgt\n        /* \"#utility.yul\":6765:6820   */\n      tag_715\n      jumpi\n        /* \"#utility.yul\":6816:6817   */\n      0x00\n        /* \"#utility.yul\":6813:6814   */\n      dup1\n        /* \"#utility.yul\":6806:6818   */\n      revert\n        /* \"#utility.yul\":6765:6820   */\n    tag_715:\n        /* \"#utility.yul\":6852:6854   */\n      dup1\n        /* \"#utility.yul\":6839:6855   */\n      calldataload\n        /* \"#utility.yul\":6875:6933   */\n      tag_716\n        /* \"#utility.yul\":6891:6932   */\n      tag_690\n        /* \"#utility.yul\":6929:6931   */\n      dup3\n        /* \"#utility.yul\":6891:6932   */\n      tag_644\n      jump\t// in\n        /* \"#utility.yul\":6875:6933   */\n    tag_716:\n        /* \"#utility.yul\":6967:6982   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":7049:7050   */\n      0x05\n        /* \"#utility.yul\":7045:7055   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":7037:7056   */\n      dup3\n      add\n        /* \"#utility.yul\":7033:7061   */\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":6998:7010   */\n      dup4\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":7073:7092   */\n      dup8\n      dup4\n      gt\n        /* \"#utility.yul\":7070:7109   */\n      iszero\n      tag_718\n      jumpi\n        /* \"#utility.yul\":7105:7106   */\n      0x00\n        /* \"#utility.yul\":7102:7103   */\n      dup1\n        /* \"#utility.yul\":7095:7107   */\n      revert\n        /* \"#utility.yul\":7070:7109   */\n    tag_718:\n        /* \"#utility.yul\":7129:7140   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":7149:7297   */\n    tag_719:\n        /* \"#utility.yul\":7165:7171   */\n      dup3\n        /* \"#utility.yul\":7160:7163   */\n      dup5\n        /* \"#utility.yul\":7157:7172   */\n      lt\n        /* \"#utility.yul\":7149:7297   */\n      iszero\n      tag_721\n      jumpi\n        /* \"#utility.yul\":7231:7254   */\n      tag_722\n        /* \"#utility.yul\":7250:7253   */\n      dup5\n        /* \"#utility.yul\":7231:7254   */\n      tag_641\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":7219:7255   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7182:7194   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":7275:7287   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":7149:7297   */\n      jump(tag_719)\n    tag_721:\n        /* \"#utility.yul\":7316:7321   */\n      swap8\n        /* \"#utility.yul\":6432:7327   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7332:7863   */\n    tag_646:\n        /* \"#utility.yul\":7375:7380   */\n      0x00\n        /* \"#utility.yul\":7428:7431   */\n      dup3\n        /* \"#utility.yul\":7421:7425   */\n      0x1f\n        /* \"#utility.yul\":7413:7419   */\n      dup4\n        /* \"#utility.yul\":7409:7426   */\n      add\n        /* \"#utility.yul\":7405:7432   */\n      slt\n        /* \"#utility.yul\":7395:7450   */\n      tag_724\n      jumpi\n        /* \"#utility.yul\":7446:7447   */\n      0x00\n        /* \"#utility.yul\":7443:7444   */\n      dup1\n        /* \"#utility.yul\":7436:7448   */\n      revert\n        /* \"#utility.yul\":7395:7450   */\n    tag_724:\n        /* \"#utility.yul\":7482:7488   */\n      dup2\n        /* \"#utility.yul\":7469:7489   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":7504:7506   */\n      dup2\n        /* \"#utility.yul\":7501:7527   */\n      gt\n        /* \"#utility.yul\":7498:7550   */\n      iszero\n      tag_726\n      jumpi\n        /* \"#utility.yul\":7530:7548   */\n      tag_726\n      tag_642\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":7574:7629   */\n      tag_727\n        /* \"#utility.yul\":7617:7619   */\n      0x1f\n        /* \"#utility.yul\":7598:7611   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":7594:7621   */\n      and\n        /* \"#utility.yul\":7623:7627   */\n      0x20\n        /* \"#utility.yul\":7590:7628   */\n      add\n        /* \"#utility.yul\":7574:7629   */\n      tag_643\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":7654:7656   */\n      dup2\n        /* \"#utility.yul\":7645:7652   */\n      dup2\n        /* \"#utility.yul\":7638:7657   */\n      mstore\n        /* \"#utility.yul\":7700:7703   */\n      dup5\n        /* \"#utility.yul\":7693:7697   */\n      0x20\n        /* \"#utility.yul\":7688:7690   */\n      dup4\n        /* \"#utility.yul\":7680:7686   */\n      dup7\n        /* \"#utility.yul\":7676:7691   */\n      add\n        /* \"#utility.yul\":7672:7698   */\n      add\n        /* \"#utility.yul\":7669:7704   */\n      gt\n        /* \"#utility.yul\":7666:7721   */\n      iszero\n      tag_728\n      jumpi\n        /* \"#utility.yul\":7717:7718   */\n      0x00\n        /* \"#utility.yul\":7714:7715   */\n      dup1\n        /* \"#utility.yul\":7707:7719   */\n      revert\n        /* \"#utility.yul\":7666:7721   */\n    tag_728:\n        /* \"#utility.yul\":7782:7784   */\n      dup2\n        /* \"#utility.yul\":7775:7779   */\n      0x20\n        /* \"#utility.yul\":7767:7773   */\n      dup6\n        /* \"#utility.yul\":7763:7780   */\n      add\n        /* \"#utility.yul\":7756:7760   */\n      0x20\n        /* \"#utility.yul\":7747:7754   */\n      dup4\n        /* \"#utility.yul\":7743:7761   */\n      add\n        /* \"#utility.yul\":7730:7785   */\n      calldatacopy\n        /* \"#utility.yul\":7830:7831   */\n      0x00\n        /* \"#utility.yul\":7805:7821   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":7823:7827   */\n      0x20\n        /* \"#utility.yul\":7801:7828   */\n      add\n        /* \"#utility.yul\":7794:7832   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7809:7816   */\n      swap4\n        /* \"#utility.yul\":7332:7863   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7868:8761   */\n    tag_187:\n        /* \"#utility.yul\":8001:8007   */\n      0x00\n        /* \"#utility.yul\":8009:8015   */\n      dup1\n        /* \"#utility.yul\":8017:8023   */\n      0x00\n        /* \"#utility.yul\":8025:8031   */\n      dup1\n        /* \"#utility.yul\":8033:8039   */\n      0x00\n        /* \"#utility.yul\":8041:8047   */\n      dup1\n        /* \"#utility.yul\":8049:8055   */\n      0x00\n        /* \"#utility.yul\":8102:8105   */\n      0xe0\n        /* \"#utility.yul\":8090:8099   */\n      dup9\n        /* \"#utility.yul\":8081:8088   */\n      dup11\n        /* \"#utility.yul\":8077:8100   */\n      sub\n        /* \"#utility.yul\":8073:8106   */\n      slt\n        /* \"#utility.yul\":8070:8123   */\n      iszero\n      tag_730\n      jumpi\n        /* \"#utility.yul\":8119:8120   */\n      0x00\n        /* \"#utility.yul\":8116:8117   */\n      dup1\n        /* \"#utility.yul\":8109:8121   */\n      revert\n        /* \"#utility.yul\":8070:8123   */\n    tag_730:\n        /* \"#utility.yul\":8159:8168   */\n      dup8\n        /* \"#utility.yul\":8146:8169   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":8229:8231   */\n      dup1\n        /* \"#utility.yul\":8221:8227   */\n      dup3\n        /* \"#utility.yul\":8218:8232   */\n      gt\n        /* \"#utility.yul\":8215:8249   */\n      iszero\n      tag_731\n      jumpi\n        /* \"#utility.yul\":8245:8246   */\n      0x00\n        /* \"#utility.yul\":8242:8243   */\n      dup1\n        /* \"#utility.yul\":8235:8247   */\n      revert\n        /* \"#utility.yul\":8215:8249   */\n    tag_731:\n        /* \"#utility.yul\":8268:8318   */\n      tag_732\n        /* \"#utility.yul\":8310:8317   */\n      dup12\n        /* \"#utility.yul\":8301:8307   */\n      dup4\n        /* \"#utility.yul\":8290:8299   */\n      dup13\n        /* \"#utility.yul\":8286:8308   */\n      add\n        /* \"#utility.yul\":8268:8318   */\n      tag_646\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":8258:8318   */\n      swap9\n      pop\n        /* \"#utility.yul\":8371:8373   */\n      0x20\n        /* \"#utility.yul\":8360:8369   */\n      dup11\n        /* \"#utility.yul\":8356:8374   */\n      add\n        /* \"#utility.yul\":8343:8375   */\n      calldataload\n        /* \"#utility.yul\":8327:8375   */\n      swap2\n      pop\n        /* \"#utility.yul\":8400:8402   */\n      dup1\n        /* \"#utility.yul\":8390:8398   */\n      dup3\n        /* \"#utility.yul\":8387:8403   */\n      gt\n        /* \"#utility.yul\":8384:8420   */\n      iszero\n      tag_733\n      jumpi\n        /* \"#utility.yul\":8416:8417   */\n      0x00\n        /* \"#utility.yul\":8413:8414   */\n      dup1\n        /* \"#utility.yul\":8406:8418   */\n      revert\n        /* \"#utility.yul\":8384:8420   */\n    tag_733:\n      pop\n        /* \"#utility.yul\":8439:8491   */\n      tag_734\n        /* \"#utility.yul\":8483:8490   */\n      dup11\n        /* \"#utility.yul\":8472:8480   */\n      dup3\n        /* \"#utility.yul\":8461:8470   */\n      dup12\n        /* \"#utility.yul\":8457:8481   */\n      add\n        /* \"#utility.yul\":8439:8491   */\n      tag_646\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":8429:8491   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":8538:8540   */\n      0x40\n        /* \"#utility.yul\":8527:8536   */\n      dup9\n        /* \"#utility.yul\":8523:8541   */\n      add\n        /* \"#utility.yul\":8510:8542   */\n      calldataload\n        /* \"#utility.yul\":8500:8542   */\n      swap5\n      pop\n        /* \"#utility.yul\":8589:8591   */\n      0x60\n        /* \"#utility.yul\":8578:8587   */\n      dup9\n        /* \"#utility.yul\":8574:8592   */\n      add\n        /* \"#utility.yul\":8561:8593   */\n      calldataload\n        /* \"#utility.yul\":8551:8593   */\n      swap4\n      pop\n        /* \"#utility.yul\":8640:8643   */\n      0x80\n        /* \"#utility.yul\":8629:8638   */\n      dup9\n        /* \"#utility.yul\":8625:8644   */\n      add\n        /* \"#utility.yul\":8612:8645   */\n      calldataload\n        /* \"#utility.yul\":8602:8645   */\n      swap3\n      pop\n        /* \"#utility.yul\":8692:8695   */\n      0xa0\n        /* \"#utility.yul\":8681:8690   */\n      dup9\n        /* \"#utility.yul\":8677:8696   */\n      add\n        /* \"#utility.yul\":8664:8697   */\n      calldataload\n        /* \"#utility.yul\":8654:8697   */\n      swap2\n      pop\n        /* \"#utility.yul\":8716:8755   */\n      tag_735\n        /* \"#utility.yul\":8750:8753   */\n      0xc0\n        /* \"#utility.yul\":8739:8748   */\n      dup10\n        /* \"#utility.yul\":8735:8754   */\n      add\n        /* \"#utility.yul\":8716:8755   */\n      tag_641\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":8706:8755   */\n      swap1\n      pop\n        /* \"#utility.yul\":7868:8761   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8766:9026   */\n    tag_201:\n        /* \"#utility.yul\":8834:8840   */\n      0x00\n        /* \"#utility.yul\":8842:8848   */\n      dup1\n        /* \"#utility.yul\":8895:8897   */\n      0x40\n        /* \"#utility.yul\":8883:8892   */\n      dup4\n        /* \"#utility.yul\":8874:8881   */\n      dup6\n        /* \"#utility.yul\":8870:8893   */\n      sub\n        /* \"#utility.yul\":8866:8898   */\n      slt\n        /* \"#utility.yul\":8863:8915   */\n      iszero\n      tag_737\n      jumpi\n        /* \"#utility.yul\":8911:8912   */\n      0x00\n        /* \"#utility.yul\":8908:8909   */\n      dup1\n        /* \"#utility.yul\":8901:8913   */\n      revert\n        /* \"#utility.yul\":8863:8915   */\n    tag_737:\n        /* \"#utility.yul\":8934:8963   */\n      tag_738\n        /* \"#utility.yul\":8953:8962   */\n      dup4\n        /* \"#utility.yul\":8934:8963   */\n      tag_641\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":8924:8963   */\n      swap2\n      pop\n        /* \"#utility.yul\":8982:9020   */\n      tag_739\n        /* \"#utility.yul\":9016:9018   */\n      0x20\n        /* \"#utility.yul\":9005:9014   */\n      dup5\n        /* \"#utility.yul\":9001:9019   */\n      add\n        /* \"#utility.yul\":8982:9020   */\n      tag_641\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":8972:9020   */\n      swap1\n      pop\n        /* \"#utility.yul\":8766:9026   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9031:9411   */\n    tag_223:\n        /* \"#utility.yul\":9110:9111   */\n      0x01\n        /* \"#utility.yul\":9106:9118   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9153:9165   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9174:9235   */\n      tag_741\n      jumpi\n        /* \"#utility.yul\":9228:9232   */\n      0x7f\n        /* \"#utility.yul\":9220:9226   */\n      dup3\n        /* \"#utility.yul\":9216:9233   */\n      and\n        /* \"#utility.yul\":9206:9233   */\n      swap2\n      pop\n        /* \"#utility.yul\":9174:9235   */\n    tag_741:\n        /* \"#utility.yul\":9281:9283   */\n      0x20\n        /* \"#utility.yul\":9273:9279   */\n      dup3\n        /* \"#utility.yul\":9270:9284   */\n      lt\n        /* \"#utility.yul\":9250:9268   */\n      dup2\n        /* \"#utility.yul\":9247:9285   */\n      eq\n        /* \"#utility.yul\":9244:9405   */\n      iszero\n      tag_742\n      jumpi\n        /* \"#utility.yul\":9327:9337   */\n      0x4e487b71\n        /* \"#utility.yul\":9322:9325   */\n      0xe0\n        /* \"#utility.yul\":9318:9338   */\n      shl\n        /* \"#utility.yul\":9315:9316   */\n      0x00\n        /* \"#utility.yul\":9308:9339   */\n      mstore\n        /* \"#utility.yul\":9362:9366   */\n      0x22\n        /* \"#utility.yul\":9359:9360   */\n      0x04\n        /* \"#utility.yul\":9352:9367   */\n      mstore\n        /* \"#utility.yul\":9390:9394   */\n      0x24\n        /* \"#utility.yul\":9387:9388   */\n      0x00\n        /* \"#utility.yul\":9380:9395   */\n      revert\n        /* \"#utility.yul\":9244:9405   */\n    tag_742:\n      pop\n        /* \"#utility.yul\":9031:9411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10183:10310   */\n    tag_264:\n        /* \"#utility.yul\":10244:10254   */\n      0x4e487b71\n        /* \"#utility.yul\":10239:10242   */\n      0xe0\n        /* \"#utility.yul\":10235:10255   */\n      shl\n        /* \"#utility.yul\":10232:10233   */\n      0x00\n        /* \"#utility.yul\":10225:10256   */\n      mstore\n        /* \"#utility.yul\":10275:10279   */\n      0x32\n        /* \"#utility.yul\":10272:10273   */\n      0x04\n        /* \"#utility.yul\":10265:10280   */\n      mstore\n        /* \"#utility.yul\":10299:10303   */\n      0x24\n        /* \"#utility.yul\":10296:10297   */\n      0x00\n        /* \"#utility.yul\":10289:10304   */\n      revert\n        /* \"#utility.yul\":10315:10442   */\n    tag_647:\n        /* \"#utility.yul\":10376:10386   */\n      0x4e487b71\n        /* \"#utility.yul\":10371:10374   */\n      0xe0\n        /* \"#utility.yul\":10367:10387   */\n      shl\n        /* \"#utility.yul\":10364:10365   */\n      0x00\n        /* \"#utility.yul\":10357:10388   */\n      mstore\n        /* \"#utility.yul\":10407:10411   */\n      0x11\n        /* \"#utility.yul\":10404:10405   */\n      0x04\n        /* \"#utility.yul\":10397:10412   */\n      mstore\n        /* \"#utility.yul\":10431:10435   */\n      0x24\n        /* \"#utility.yul\":10428:10429   */\n      0x00\n        /* \"#utility.yul\":10421:10436   */\n      revert\n        /* \"#utility.yul\":10447:10572   */\n    tag_268:\n        /* \"#utility.yul\":10487:10491   */\n      0x00\n        /* \"#utility.yul\":10515:10516   */\n      dup3\n        /* \"#utility.yul\":10512:10513   */\n      dup3\n        /* \"#utility.yul\":10509:10517   */\n      lt\n        /* \"#utility.yul\":10506:10540   */\n      iszero\n      tag_749\n      jumpi\n        /* \"#utility.yul\":10520:10538   */\n      tag_749\n      tag_647\n      jump\t// in\n    tag_749:\n      pop\n        /* \"#utility.yul\":10557:10566   */\n      sub\n      swap1\n        /* \"#utility.yul\":10447:10572   */\n      jump\t// out\n        /* \"#utility.yul\":10577:10704   */\n    tag_277:\n        /* \"#utility.yul\":10638:10648   */\n      0x4e487b71\n        /* \"#utility.yul\":10633:10636   */\n      0xe0\n        /* \"#utility.yul\":10629:10649   */\n      shl\n        /* \"#utility.yul\":10626:10627   */\n      0x00\n        /* \"#utility.yul\":10619:10650   */\n      mstore\n        /* \"#utility.yul\":10669:10673   */\n      0x31\n        /* \"#utility.yul\":10666:10667   */\n      0x04\n        /* \"#utility.yul\":10659:10674   */\n      mstore\n        /* \"#utility.yul\":10693:10697   */\n      0x24\n        /* \"#utility.yul\":10690:10691   */\n      0x00\n        /* \"#utility.yul\":10683:10698   */\n      revert\n        /* \"#utility.yul\":10709:10844   */\n    tag_280:\n        /* \"#utility.yul\":10748:10751   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":10769:10786   */\n      dup3\n      eq\n        /* \"#utility.yul\":10766:10809   */\n      iszero\n      tag_753\n      jumpi\n        /* \"#utility.yul\":10789:10807   */\n      tag_753\n      tag_647\n      jump\t// in\n    tag_753:\n      pop\n        /* \"#utility.yul\":10836:10837   */\n      0x01\n        /* \"#utility.yul\":10825:10838   */\n      add\n      swap1\n        /* \"#utility.yul\":10709:10844   */\n      jump\t// out\n        /* \"#utility.yul\":13320:13495   */\n    tag_344:\n        /* \"#utility.yul\":13357:13360   */\n      0x00\n        /* \"#utility.yul\":13401:13405   */\n      0xff\n        /* \"#utility.yul\":13394:13399   */\n      dup3\n        /* \"#utility.yul\":13390:13406   */\n      and\n        /* \"#utility.yul\":13430:13434   */\n      0xff\n        /* \"#utility.yul\":13421:13428   */\n      dup2\n        /* \"#utility.yul\":13418:13435   */\n      eq\n        /* \"#utility.yul\":13415:13458   */\n      iszero\n      tag_762\n      jumpi\n        /* \"#utility.yul\":13438:13456   */\n      tag_762\n      tag_647\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":13487:13488   */\n      0x01\n        /* \"#utility.yul\":13474:13489   */\n      add\n      swap3\n        /* \"#utility.yul\":13320:13495   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13500:13709   */\n    tag_346:\n        /* \"#utility.yul\":13538:13541   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":13619:13621   */\n      dup1\n        /* \"#utility.yul\":13612:13617   */\n      dup4\n        /* \"#utility.yul\":13608:13622   */\n      and\n        /* \"#utility.yul\":13646:13648   */\n      dup2\n        /* \"#utility.yul\":13637:13644   */\n      dup2\n        /* \"#utility.yul\":13634:13649   */\n      eq\n        /* \"#utility.yul\":13631:13672   */\n      iszero\n      tag_765\n      jumpi\n        /* \"#utility.yul\":13652:13670   */\n      tag_765\n      tag_647\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":13701:13702   */\n      0x01\n        /* \"#utility.yul\":13688:13703   */\n      add\n      swap4\n        /* \"#utility.yul\":13500:13709   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14473:14895   */\n    tag_648:\n        /* \"#utility.yul\":14562:14563   */\n      0x01\n        /* \"#utility.yul\":14605:14610   */\n      dup2\n        /* \"#utility.yul\":14562:14563   */\n      dup2\n        /* \"#utility.yul\":14619:14889   */\n    tag_769:\n        /* \"#utility.yul\":14640:14647   */\n      dup1\n        /* \"#utility.yul\":14630:14638   */\n      dup6\n        /* \"#utility.yul\":14627:14648   */\n      gt\n        /* \"#utility.yul\":14619:14889   */\n      iszero\n      tag_771\n      jumpi\n        /* \"#utility.yul\":14699:14703   */\n      dup2\n        /* \"#utility.yul\":14695:14696   */\n      0x00\n        /* \"#utility.yul\":14691:14697   */\n      not\n        /* \"#utility.yul\":14687:14704   */\n      div\n        /* \"#utility.yul\":14681:14685   */\n      dup3\n        /* \"#utility.yul\":14678:14705   */\n      gt\n        /* \"#utility.yul\":14675:14728   */\n      iszero\n      tag_773\n      jumpi\n        /* \"#utility.yul\":14708:14726   */\n      tag_773\n      tag_647\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":14758:14765   */\n      dup1\n        /* \"#utility.yul\":14748:14756   */\n      dup6\n        /* \"#utility.yul\":14744:14766   */\n      and\n        /* \"#utility.yul\":14741:14796   */\n      iszero\n      tag_774\n      jumpi\n        /* \"#utility.yul\":14778:14794   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":14741:14796   */\n    tag_774:\n        /* \"#utility.yul\":14857:14879   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":14817:14832   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":14619:14889   */\n      jump(tag_769)\n    tag_771:\n        /* \"#utility.yul\":14623:14626   */\n      pop\n        /* \"#utility.yul\":14473:14895   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14900:15706   */\n    tag_649:\n        /* \"#utility.yul\":14949:14954   */\n      0x00\n        /* \"#utility.yul\":14979:14987   */\n      dup3\n        /* \"#utility.yul\":14969:15049   */\n      tag_776\n      jumpi\n      pop\n        /* \"#utility.yul\":15020:15021   */\n      0x01\n        /* \"#utility.yul\":15034:15039   */\n      jump(tag_229)\n        /* \"#utility.yul\":14969:15049   */\n    tag_776:\n        /* \"#utility.yul\":15068:15072   */\n      dup2\n        /* \"#utility.yul\":15058:15134   */\n      tag_777\n      jumpi\n      pop\n        /* \"#utility.yul\":15105:15106   */\n      0x00\n        /* \"#utility.yul\":15119:15124   */\n      jump(tag_229)\n        /* \"#utility.yul\":15058:15134   */\n    tag_777:\n        /* \"#utility.yul\":15150:15154   */\n      dup2\n        /* \"#utility.yul\":15168:15169   */\n      0x01\n        /* \"#utility.yul\":15163:15222   */\n      dup2\n      eq\n      tag_779\n      jumpi\n        /* \"#utility.yul\":15236:15237   */\n      0x02\n        /* \"#utility.yul\":15231:15361   */\n      dup2\n      eq\n      tag_780\n      jumpi\n        /* \"#utility.yul\":15143:15361   */\n      jump(tag_778)\n        /* \"#utility.yul\":15163:15222   */\n    tag_779:\n        /* \"#utility.yul\":15193:15194   */\n      0x01\n        /* \"#utility.yul\":15184:15194   */\n      swap2\n      pop\n        /* \"#utility.yul\":15207:15212   */\n      pop\n      jump(tag_229)\n        /* \"#utility.yul\":15231:15361   */\n    tag_780:\n        /* \"#utility.yul\":15268:15271   */\n      0xff\n        /* \"#utility.yul\":15258:15266   */\n      dup5\n        /* \"#utility.yul\":15255:15272   */\n      gt\n        /* \"#utility.yul\":15252:15295   */\n      iszero\n      tag_782\n      jumpi\n        /* \"#utility.yul\":15275:15293   */\n      tag_782\n      tag_647\n      jump\t// in\n    tag_782:\n      pop\n      pop\n        /* \"#utility.yul\":15331:15332   */\n      0x01\n        /* \"#utility.yul\":15317:15333   */\n      dup3\n      shl\n        /* \"#utility.yul\":15346:15351   */\n      jump(tag_229)\n        /* \"#utility.yul\":15143:15361   */\n    tag_778:\n      pop\n        /* \"#utility.yul\":15445:15447   */\n      0x20\n        /* \"#utility.yul\":15435:15443   */\n      dup4\n        /* \"#utility.yul\":15432:15448   */\n      lt\n        /* \"#utility.yul\":15426:15429   */\n      0x0133\n        /* \"#utility.yul\":15420:15424   */\n      dup4\n        /* \"#utility.yul\":15417:15430   */\n      lt\n        /* \"#utility.yul\":15413:15449   */\n      and\n        /* \"#utility.yul\":15407:15409   */\n      0x4e\n        /* \"#utility.yul\":15397:15405   */\n      dup5\n        /* \"#utility.yul\":15394:15410   */\n      lt\n        /* \"#utility.yul\":15389:15391   */\n      0x0b\n        /* \"#utility.yul\":15383:15387   */\n      dup5\n        /* \"#utility.yul\":15380:15392   */\n      lt\n        /* \"#utility.yul\":15376:15411   */\n      and\n        /* \"#utility.yul\":15373:15450   */\n      or\n        /* \"#utility.yul\":15370:15529   */\n      iszero\n      tag_783\n      jumpi\n      pop\n        /* \"#utility.yul\":15482:15501   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":15514:15519   */\n      jump(tag_229)\n        /* \"#utility.yul\":15370:15529   */\n    tag_783:\n        /* \"#utility.yul\":15561:15595   */\n      tag_784\n        /* \"#utility.yul\":15586:15594   */\n      dup4\n        /* \"#utility.yul\":15580:15584   */\n      dup4\n        /* \"#utility.yul\":15561:15595   */\n      tag_648\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":15631:15637   */\n      dup1\n        /* \"#utility.yul\":15627:15628   */\n      0x00\n        /* \"#utility.yul\":15623:15629   */\n      not\n        /* \"#utility.yul\":15619:15638   */\n      div\n        /* \"#utility.yul\":15610:15617   */\n      dup3\n        /* \"#utility.yul\":15607:15639   */\n      gt\n        /* \"#utility.yul\":15604:15662   */\n      iszero\n      tag_786\n      jumpi\n        /* \"#utility.yul\":15642:15660   */\n      tag_786\n      tag_647\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":15680:15700   */\n      mul\n      swap4\n        /* \"#utility.yul\":14900:15706   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15711:15842   */\n    tag_411:\n        /* \"#utility.yul\":15771:15776   */\n      0x00\n        /* \"#utility.yul\":15800:15836   */\n      tag_250\n        /* \"#utility.yul\":15827:15835   */\n      dup4\n        /* \"#utility.yul\":15821:15825   */\n      dup4\n        /* \"#utility.yul\":15800:15836   */\n      tag_649\n      jump\t// in\n        /* \"#utility.yul\":15847:16015   */\n    tag_413:\n        /* \"#utility.yul\":15887:15894   */\n      0x00\n        /* \"#utility.yul\":15953:15954   */\n      dup2\n        /* \"#utility.yul\":15949:15950   */\n      0x00\n        /* \"#utility.yul\":15945:15951   */\n      not\n        /* \"#utility.yul\":15941:15955   */\n      div\n        /* \"#utility.yul\":15938:15939   */\n      dup4\n        /* \"#utility.yul\":15935:15956   */\n      gt\n        /* \"#utility.yul\":15930:15931   */\n      dup3\n        /* \"#utility.yul\":15923:15932   */\n      iszero\n        /* \"#utility.yul\":15916:15933   */\n      iszero\n        /* \"#utility.yul\":15912:15957   */\n      and\n        /* \"#utility.yul\":15909:15980   */\n      iszero\n      tag_791\n      jumpi\n        /* \"#utility.yul\":15960:15978   */\n      tag_791\n      tag_647\n      jump\t// in\n    tag_791:\n      pop\n        /* \"#utility.yul\":16000:16009   */\n      mul\n      swap1\n        /* \"#utility.yul\":15847:16015   */\n      jump\t// out\n        /* \"#utility.yul\":16020:16147   */\n    tag_650:\n        /* \"#utility.yul\":16081:16091   */\n      0x4e487b71\n        /* \"#utility.yul\":16076:16079   */\n      0xe0\n        /* \"#utility.yul\":16072:16092   */\n      shl\n        /* \"#utility.yul\":16069:16070   */\n      0x00\n        /* \"#utility.yul\":16062:16093   */\n      mstore\n        /* \"#utility.yul\":16112:16116   */\n      0x12\n        /* \"#utility.yul\":16109:16110   */\n      0x04\n        /* \"#utility.yul\":16102:16117   */\n      mstore\n        /* \"#utility.yul\":16136:16140   */\n      0x24\n        /* \"#utility.yul\":16133:16134   */\n      0x00\n        /* \"#utility.yul\":16126:16141   */\n      revert\n        /* \"#utility.yul\":16152:16264   */\n    tag_415:\n        /* \"#utility.yul\":16184:16185   */\n      0x00\n        /* \"#utility.yul\":16210:16211   */\n      dup3\n        /* \"#utility.yul\":16200:16235   */\n      tag_795\n      jumpi\n        /* \"#utility.yul\":16215:16233   */\n      tag_795\n      tag_650\n      jump\t// in\n    tag_795:\n      pop\n        /* \"#utility.yul\":16249:16258   */\n      mod\n      swap1\n        /* \"#utility.yul\":16152:16264   */\n      jump\t// out\n        /* \"#utility.yul\":19673:19793   */\n    tag_491:\n        /* \"#utility.yul\":19713:19714   */\n      0x00\n        /* \"#utility.yul\":19739:19740   */\n      dup3\n        /* \"#utility.yul\":19729:19764   */\n      tag_807\n      jumpi\n        /* \"#utility.yul\":19744:19762   */\n      tag_807\n      tag_650\n      jump\t// in\n    tag_807:\n      pop\n        /* \"#utility.yul\":19778:19787   */\n      div\n      swap1\n        /* \"#utility.yul\":19673:19793   */\n      jump\t// out\n        /* \"#utility.yul\":19798:19926   */\n    tag_494:\n        /* \"#utility.yul\":19838:19841   */\n      0x00\n        /* \"#utility.yul\":19869:19870   */\n      dup3\n        /* \"#utility.yul\":19865:19871   */\n      not\n        /* \"#utility.yul\":19862:19863   */\n      dup3\n        /* \"#utility.yul\":19859:19872   */\n      gt\n        /* \"#utility.yul\":19856:19895   */\n      iszero\n      tag_810\n      jumpi\n        /* \"#utility.yul\":19875:19893   */\n      tag_810\n      tag_647\n      jump\t// in\n    tag_810:\n      pop\n        /* \"#utility.yul\":19911:19920   */\n      add\n      swap1\n        /* \"#utility.yul\":19798:19926   */\n      jump\t// out\n        /* \"#utility.yul\":19931:20338   */\n    tag_515:\n        /* \"#utility.yul\":20133:20135   */\n      0x20\n        /* \"#utility.yul\":20115:20136   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":20172:20174   */\n      0x2b\n        /* \"#utility.yul\":20152:20170   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":20145:20175   */\n      mstore\n        /* \"#utility.yul\":20211:20245   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":20206:20208   */\n      0x40\n        /* \"#utility.yul\":20191:20209   */\n      dup3\n      add\n        /* \"#utility.yul\":20184:20246   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":20277:20279   */\n      0x60\n        /* \"#utility.yul\":20262:20280   */\n      dup3\n      add\n        /* \"#utility.yul\":20255:20296   */\n      mstore\n        /* \"#utility.yul\":20328:20331   */\n      0x80\n        /* \"#utility.yul\":20313:20332   */\n      add\n      swap1\n        /* \"#utility.yul\":19931:20338   */\n      jump\t// out\n    stop\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212201090d19d66b6cc32f73be65a26ed639f66c6b3b350799a09786e789a3b1447ae64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50612a8a806100206000396000f3fe6080604052600436106102135760003560e01c806352390c0211610118578063a3772662116100a0578063d543dbeb1161006f578063d543dbeb1461062f578063dd62ed3e1461064f578063ea2f0b3714610695578063f2fde38b146106b5578063f9342285146106d557600080fd5b8063a3772662146105af578063a457c2d7146105cf578063a6e57d99146105ef578063a9059cbb1461060f57600080fd5b8063715018a6116100e7578063715018a61461050e5780637d1db4a51461052357806388f82020146105395780638da5cb5b1461057257806395d89b411461059a57600080fd5b806352390c021461046b5780635342acb41461048b57806354fd4d50146104c457806370a08231146104ee57600080fd5b80633685d4191161019b578063437823ec1161016a578063437823ec146103d45780634549b039146103f457806346f0975a1461041457806348c54b9d146104365780634990560f1461044b57600080fd5b80633685d4191461035e578063395093511461037e5780633b124fe71461039e5780633bd5d173146103b457600080fd5b806313114a9d116101e257806313114a9d146102d557806318160ddd146102f457806323b872dd146103095780632d83811914610329578063313ce5671461034957600080fd5b8063061c82d01461021f57806306fdde031461024157806307c351dd1461026c578063095ea7b3146102b557600080fd5b3661021a57005b600080fd5b34801561022b57600080fd5b5061023f61023a366004612211565b610705565b005b34801561024d57600080fd5b50610256610712565b604051610263919061222a565b60405180910390f35b34801561027857600080fd5b506102a561028736600461229b565b6001600160a01b031660009081526075602052604090205460ff1690565b6040519015158152602001610263565b3480156102c157600080fd5b506102a56102d03660046122b6565b6107a4565b3480156102e157600080fd5b50606d545b604051908152602001610263565b34801561030057600080fd5b50606b546102e6565b34801561031557600080fd5b506102a56103243660046122e0565b6107bb565b34801561033557600080fd5b506102e6610344366004612211565b610824565b34801561035557600080fd5b506070546102e6565b34801561036a57600080fd5b5061023f61037936600461229b565b6108ad565b34801561038a57600080fd5b506102a56103993660046122b6565b610a42565b3480156103aa57600080fd5b506102e660715481565b3480156103c057600080fd5b5061023f6103cf366004612211565b610a78565b3480156103e057600080fd5b5061023f6103ef36600461229b565b610b60565b34801561040057600080fd5b506102e661040f36600461231c565b610b8c565b34801561042057600080fd5b50610429610c17565b6040516102639190612351565b34801561044257600080fd5b5061023f610c78565b34801561045757600080fd5b5061023f610466366004612472565b610cbc565b34801561047757600080fd5b5061023f61048636600461229b565b610f84565b34801561049757600080fd5b506102a56104a636600461229b565b6001600160a01b031660009081526068602052604090205460ff1690565b3480156104d057600080fd5b506040805180820190915260018152603160f81b6020820152610256565b3480156104fa57600080fd5b506102e661050936600461229b565b6110b5565b34801561051a57600080fd5b5061023f611114565b34801561052f57600080fd5b506102e660735481565b34801561054557600080fd5b506102a561055436600461229b565b6001600160a01b031660009081526069602052604090205460ff1690565b34801561057e57600080fd5b506033546040516001600160a01b039091168152602001610263565b3480156105a657600080fd5b50610256611128565b3480156105bb57600080fd5b5061023f6105ca36600461258e565b611137565b3480156105db57600080fd5b506102a56105ea3660046122b6565b6111d3565b3480156105fb57600080fd5b5061023f61060a366004612694565b611222565b34801561061b57600080fd5b506102a561062a3660046122b6565b61146a565b34801561063b57600080fd5b5061023f61064a366004612211565b611477565b34801561065b57600080fd5b506102e661066a36600461272e565b6001600160a01b03918216600090815260676020908152604080832093909416825291909152205490565b3480156106a157600080fd5b5061023f6106b036600461229b565b61149d565b3480156106c157600080fd5b5061023f6106d036600461229b565b6114c6565b3480156106e157600080fd5b506102a56106f0366004612211565b60766020526000908152604090205460ff1681565b61070d61153c565b607155565b6060606e805461072190612761565b80601f016020809104026020016040519081016040528092919081815260200182805461074d90612761565b801561079a5780601f1061076f5761010080835404028352916020019161079a565b820191906000526020600020905b81548152906001019060200180831161077d57829003601f168201915b5050505050905090565b60006107b1338484611596565b5060015b92915050565b60006107c88484846116ba565b61081a843361081585604051806060016040528060288152602001612a08602891396001600160a01b038a16600090815260676020908152604080832033845290915290205491906118ef565b611596565b5060019392505050565b6000606c548211156108905760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b60648201526084015b60405180910390fd5b600061089a61191b565b90506108a6838261193e565b9392505050565b6108b561153c565b6001600160a01b03811660009081526069602052604090205460ff1661091d5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c7564656400000000006044820152606401610887565b60005b606a54811015610a3e57816001600160a01b0316606a82815481106109475761094761279c565b6000918252602090912001546001600160a01b03161415610a2c57606a8054610972906001906127c8565b815481106109825761098261279c565b600091825260209091200154606a80546001600160a01b0390921691839081106109ae576109ae61279c565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559184168152606682526040808220829055606990925220805460ff19169055606a805480610a0657610a066127df565b600082815260209020810160001990810180546001600160a01b03191690550190555050565b80610a36816127f5565b915050610920565b5050565b3360008181526067602090815260408083206001600160a01b038716845290915281205490916107b1918590610815908661194a565b3360008181526069602052604090205460ff1615610aed5760405162461bcd60e51b815260206004820152602c60248201527f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460448201526b3434b990333ab731ba34b7b760a11b6064820152608401610887565b6000610af883611956565b505050506001600160a01b038316600090815260656020526040902054909150610b22908261199c565b6001600160a01b038316600090815260656020526040902055606c54610b48908261199c565b606c55606d54610b58908461194a565b606d55505050565b610b6861153c565b6001600160a01b03166000908152606860205260409020805460ff19166001179055565b6000606b54831115610be05760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c79006044820152606401610887565b81610bfe576000610bf084611956565b509294506107b59350505050565b6000610c0984611956565b509194506107b59350505050565b6060607480548060200260200160405190810160405280929190818152602001828054801561079a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c51575050505050905090565b610c8061153c565b6033546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610cb9573d6000803e3d6000fd5b50565b42841015610cff5760405162461bcd60e51b815260206004820152601060248201526f4578706972656420646561646c696e6560801b6044820152606401610887565b60008681526076602052604090205460ff1615610d515760405162461bcd60e51b815260206004820152601060248201526f556e697175652069642065786973747360801b6044820152606401610887565b336000610d666033546001600160a01b031690565b604080516001600160a01b03808416602083015280861692820192909252908b1660608201526080810189905260a081018a905260c0810188905290915060009060e00160405160208183030381529060405280519060200120905060008060005b8851816001600160401b03161015610f0c5760006001858b846001600160401b031681518110610dfa57610dfa61279c565b60200260200101518b856001600160401b031681518110610e1d57610e1d61279c565b60200260200101518b866001600160401b031681518110610e4057610e4061279c565b602002602001015160405160008152602001604052604051610e7e949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610ea0573d6000803e3d6000fd5b505050602060405103519050836001600160a01b0316816001600160a01b0316118015610ee557506001600160a01b03811660009081526075602052604090205460ff165b15610ef85782610ef481612810565b9350505b925080610f0481612830565b915050610dc8565b508060ff16600314610f525760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207369676e65727360881b6044820152606401610887565b60008b8152607660205260409020805460ff19166001179055610f758c8b61146a565b50505050505050505050505050565b610f8c61153c565b6001600160a01b03811660009081526069602052604090205460ff1615610ff55760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c7564656400000000006044820152606401610887565b6001600160a01b0381166000908152606560205260409020541561104f576001600160a01b03811660009081526065602052604090205461103590610824565b6001600160a01b0382166000908152606660205260409020555b6001600160a01b03166000818152606960205260408120805460ff19166001908117909155606a805491820181559091527f116fea137db6e131133e7f2bab296045d8f41cc5607279db17b218cab0929a510180546001600160a01b0319169091179055565b6001600160a01b03811660009081526069602052604081205460ff16156110f257506001600160a01b031660009081526066602052604090205490565b6001600160a01b0382166000908152606560205260409020546107b590610824565b61111c61153c565b61112660006119a8565b565b6060606f805461072190612761565b61113f61153c565b6111a6607480548060200260200160405190810160405280929190818152602001828054801561119857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161117a575b5050505050600060756119fa565b6111b260746000612105565b80516111c5906074906020840190612123565b50610cb981600160756119fa565b60006107b1338461081585604051806060016040528060258152602001612a30602591393360009081526067602090815260408083206001600160a01b038d16845290915290205491906118ef565b600054610100900460ff16158080156112425750600054600160ff909116105b8061125c5750303b15801561125c575060005460ff166001145b6112bf5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610887565b6000805460ff1916600117905580156112e2576000805461ff0019166101001790555b6112ea611a78565b87516112fd90606e9060208b0190612188565b50865161131190606f9060208a0190612188565b50607086905561132286600a61293b565b61132c9086612947565b606b81905561133d9060001961297c565b611349906000196127c8565b606c556071849055607284905560705461136490600a61293b565b61136e9084612947565b607355606c546001600160a01b038316600090815260656020908152604080832093909355606890528181208054600160ff1991821681179092553083529290912080549092161790556113c182610f84565b6113ca30610f84565b816001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef606b5460405161141291815260200190565b60405180910390a38015611460576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b60006107b13384846116ba565b61147f61153c565b60705461148d90600a61293b565b6114979082612947565b60735550565b6114a561153c565b6001600160a01b03166000908152606860205260409020805460ff19169055565b6114ce61153c565b6001600160a01b0381166115335760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610887565b610cb9816119a8565b6033546001600160a01b031633146111265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610887565b6001600160a01b0383166115f85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610887565b6001600160a01b0382166116595760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610887565b6001600160a01b0383811660008181526067602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661171e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610887565b6001600160a01b0382166117805760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610887565b600081116117e25760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610887565b6033546001600160a01b0384811691161480159061180e57506033546001600160a01b03838116911614155b15611876576073548111156118765760405162461bcd60e51b815260206004820152602860248201527f5472616e7366657220616d6f756e74206578636565647320746865206d6178546044820152673c20b6b7bab73a1760c11b6064820152608401610887565b6000611881306110b5565b9050607354811061189157506073545b6001600160a01b03841660009081526068602052604090205460019060ff16806118d357506001600160a01b03841660009081526068602052604090205460ff165b156118dc575060005b6118e885858584611aa7565b5050505050565b600081848411156119135760405162461bcd60e51b8152600401610887919061222a565b505050900390565b6000806000611928611c18565b9092509050611937828261193e565b9250505090565b60006108a68284612990565b60006108a682846129a4565b600080600080600080600061196a88611d9a565b9150915060008060006119858b8561198061191b565b611dc1565b919d909c50909a5094985092965092945050505050565b60006108a682846127c8565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005b8351816001600160401b03161015611a72578282600086846001600160401b031681518110611a2e57611a2e61279c565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580611a6a81612830565b9150506119fd565b50505050565b600054610100900460ff16611a9f5760405162461bcd60e51b8152600401610887906129bc565b611126611dfd565b80611ab457611ab4611e2d565b6001600160a01b03841660009081526069602052604090205460ff168015611af557506001600160a01b03831660009081526069602052604090205460ff16155b15611b0a57611b05848484611e43565b611c08565b6001600160a01b03841660009081526069602052604090205460ff16158015611b4b57506001600160a01b03831660009081526069602052604090205460ff165b15611b5b57611b05848484611f5c565b6001600160a01b03841660009081526069602052604090205460ff16158015611b9d57506001600160a01b03831660009081526069602052604090205460ff16155b15611bad57611b05848484612002565b6001600160a01b03841660009081526069602052604090205460ff168015611bed57506001600160a01b03831660009081526069602052604090205460ff165b15611bfd57611b05848484612043565b611c08848484612002565b80611a7257611a72607254607155565b606c54606b546000918291825b606a54811015611d6a578260656000606a8481548110611c4757611c4761279c565b60009182526020808320909101546001600160a01b031683528201929092526040019020541180611cb257508160666000606a8481548110611c8b57611c8b61279c565b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b15611cc857606c54606b54945094505050509091565b611d0e60656000606a8481548110611ce257611ce261279c565b60009182526020808320909101546001600160a01b03168352820192909252604001902054849061199c565b9250611d5660666000606a8481548110611d2a57611d2a61279c565b60009182526020808320909101546001600160a01b03168352820192909252604001902054839061199c565b915080611d62816127f5565b915050611c25565b50606b54606c54611d7a9161193e565b821015611d9157606c54606b549350935050509091565b90939092509050565b6000806000611da8846120b3565b90506000611db6858361199c565b959194509092505050565b6000808080611dd087866120d5565b90506000611dde87876120d5565b90506000611dec838361199c565b929992985090965090945050505050565b600054610100900460ff16611e245760405162461bcd60e51b8152600401610887906129bc565b611126336119a8565b607154611e3657565b6071805460725560009055565b6000806000806000611e5486611956565b6001600160a01b038d1660009081526066602052604090205494995092975090955093509150611e84908761199c565b6001600160a01b038916600090815260666020908152604080832093909355606590522054611eb3908661199c565b6001600160a01b03808a166000908152606560205260408082209390935590891681522054611ee2908561194a565b6001600160a01b038816600090815260656020526040902055611f0583826120e1565b866001600160a01b0316886001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611f4a91815260200190565b60405180910390a35050505050505050565b6000806000806000611f6d86611956565b6001600160a01b038d1660009081526065602052604090205494995092975090955093509150611f9d908661199c565b6001600160a01b03808a16600090815260656020908152604080832094909455918a16815260669091522054611fd3908361194a565b6001600160a01b038816600090815260666020908152604080832093909355606590522054611ee2908561194a565b600080600080600061201386611956565b6001600160a01b038d1660009081526065602052604090205494995092975090955093509150611eb3908661199c565b600080600080600061205486611956565b6001600160a01b038d1660009081526066602052604090205494995092975090955093509150612084908761199c565b6001600160a01b038916600090815260666020908152604080832093909355606590522054611f9d908661199c565b60006107b560646120cf607154856120d590919063ffffffff16565b9061193e565b60006108a68284612947565b606c546120ee908361199c565b606c55606d546120fe908261194a565b606d555050565b5080546000825590600052602060002090810190610cb991906121fc565b828054828255906000526020600020908101928215612178579160200282015b8281111561217857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612143565b506121849291506121fc565b5090565b82805461219490612761565b90600052602060002090601f0160209004810192826121b65760008555612178565b82601f106121cf57805160ff1916838001178555612178565b82800160010185558215612178579182015b828111156121785782518255916020019190600101906121e1565b5b8082111561218457600081556001016121fd565b60006020828403121561222357600080fd5b5035919050565b600060208083528351808285015260005b818110156122575785810183015185820160400152820161223b565b81811115612269576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461229657600080fd5b919050565b6000602082840312156122ad57600080fd5b6108a68261227f565b600080604083850312156122c957600080fd5b6122d28361227f565b946020939093013593505050565b6000806000606084860312156122f557600080fd5b6122fe8461227f565b925061230c6020850161227f565b9150604084013590509250925092565b6000806040838503121561232f57600080fd5b823591506020830135801515811461234657600080fd5b809150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156123925783516001600160a01b03168352928401929184019160010161236d565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156123dc576123dc61239e565b604052919050565b60006001600160401b038211156123fd576123fd61239e565b5060051b60200190565b600082601f83011261241857600080fd5b8135602061242d612428836123e4565b6123b4565b82815260059290921b8401810191818101908684111561244c57600080fd5b8286015b848110156124675780358352918301918301612450565b509695505050505050565b600080600080600080600060e0888a03121561248d57600080fd5b6124968861227f565b96506020808901359650604089013595506060890135945060808901356001600160401b03808211156124c857600080fd5b818b0191508b601f8301126124dc57600080fd5b81356124ea612428826123e4565b81815260059190911b8301840190848101908e83111561250957600080fd5b938501935b8285101561253757843560ff811681146125285760008081fd5b8252938501939085019061250e565b9750505060a08b013592508083111561254f57600080fd5b61255b8c848d01612407565b945060c08b013592508083111561257157600080fd5b505061257f8a828b01612407565b91505092959891949750929550565b600060208083850312156125a157600080fd5b82356001600160401b038111156125b757600080fd5b8301601f810185136125c857600080fd5b80356125d6612428826123e4565b81815260059190911b820183019083810190878311156125f557600080fd5b928401925b8284101561261a5761260b8461227f565b825292840192908401906125fa565b979650505050505050565b600082601f83011261263657600080fd5b81356001600160401b0381111561264f5761264f61239e565b612662601f8201601f19166020016123b4565b81815284602083860101111561267757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600080600060e0888a0312156126af57600080fd5b87356001600160401b03808211156126c657600080fd5b6126d28b838c01612625565b985060208a01359150808211156126e857600080fd5b506126f58a828b01612625565b96505060408801359450606088013593506080880135925060a0880135915061272060c0890161227f565b905092959891949750929550565b6000806040838503121561274157600080fd5b61274a8361227f565b91506127586020840161227f565b90509250929050565b600181811c9082168061277557607f821691505b6020821081141561279657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156127da576127da6127b2565b500390565b634e487b7160e01b600052603160045260246000fd5b6000600019821415612809576128096127b2565b5060010190565b600060ff821660ff811415612827576128276127b2565b60010192915050565b60006001600160401b038083168181141561284d5761284d6127b2565b6001019392505050565b600181815b80851115612892578160001904821115612878576128786127b2565b8085161561288557918102915b93841c939080029061285c565b509250929050565b6000826128a9575060016107b5565b816128b6575060006107b5565b81600181146128cc57600281146128d6576128f2565b60019150506107b5565b60ff8411156128e7576128e76127b2565b50506001821b6107b5565b5060208310610133831016604e8410600b8410161715612915575081810a6107b5565b61291f8383612857565b8060001904821115612933576129336127b2565b029392505050565b60006108a6838361289a565b6000816000190483118215151615612961576129616127b2565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261298b5761298b612966565b500690565b60008261299f5761299f612966565b500490565b600082198211156129b7576129b76127b2565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212201090d19d66b6cc32f73be65a26ed639f66c6b3b350799a09786e789a3b1447ae64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x213 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52390C02 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xA3772662 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD543DBEB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD543DBEB EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0xF9342285 EQ PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3772662 EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xA6E57D99 EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0x7D1DB4A5 EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0x88F82020 EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52390C02 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3685D419 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x437823EC GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x4549B039 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x46F0975A EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x4990560F EQ PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3685D419 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x3B124FE7 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x3BD5D173 EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13114A9D GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x13114A9D EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x2D838119 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61C82D0 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x7C351DD EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x21A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x2211 JUMP JUMPDEST PUSH2 0x705 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH2 0x712 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x222A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x263 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6D SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x263 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6B SLOAD PUSH2 0x2E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x324 CALLDATASIZE PUSH1 0x4 PUSH2 0x22E0 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x2211 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x70 SLOAD PUSH2 0x2E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x8AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2211 JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH2 0x40F CALLDATASIZE PUSH1 0x4 PUSH2 0x231C JUMP JUMPDEST PUSH2 0xB8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x2351 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0xC78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x466 CALLDATASIZE PUSH1 0x4 PUSH2 0x2472 JUMP JUMPDEST PUSH2 0xCBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x486 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0xF84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x4A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH2 0x509 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x10B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x1114 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x554 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x263 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH2 0x1128 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x5CA CALLDATASIZE PUSH1 0x4 PUSH2 0x258E JUMP JUMPDEST PUSH2 0x1137 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x5EA CALLDATASIZE PUSH1 0x4 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x11D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x60A CALLDATASIZE PUSH1 0x4 PUSH2 0x2694 JUMP JUMPDEST PUSH2 0x1222 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x62A CALLDATASIZE PUSH1 0x4 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x146A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x64A CALLDATASIZE PUSH1 0x4 PUSH2 0x2211 JUMP JUMPDEST PUSH2 0x1477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH2 0x66A CALLDATASIZE PUSH1 0x4 PUSH2 0x272E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x6B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x149D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x6D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x14C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x6F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2211 JUMP JUMPDEST PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x70D PUSH2 0x153C JUMP JUMPDEST PUSH1 0x71 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6E DUP1 SLOAD PUSH2 0x721 SWAP1 PUSH2 0x2761 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x74D SWAP1 PUSH2 0x2761 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x76F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x77D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 CALLER DUP5 DUP5 PUSH2 0x1596 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C8 DUP5 DUP5 DUP5 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x81A DUP5 CALLER PUSH2 0x815 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A08 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1596 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6C SLOAD DUP3 GT ISZERO PUSH2 0x890 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x89A PUSH2 0x191B JUMP JUMPDEST SWAP1 POP PUSH2 0x8A6 DUP4 DUP3 PUSH2 0x193E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x8B5 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6A SLOAD DUP2 LT ISZERO PUSH2 0xA3E JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6A DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x947 JUMPI PUSH2 0x947 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA2C JUMPI PUSH1 0x6A DUP1 SLOAD PUSH2 0x972 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x982 JUMPI PUSH2 0x982 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x6A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x9AE JUMPI PUSH2 0x9AE PUSH2 0x279C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP5 AND DUP2 MSTORE PUSH1 0x66 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x69 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x6A DUP1 SLOAD DUP1 PUSH2 0xA06 JUMPI PUSH2 0xA06 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH2 0xA36 DUP2 PUSH2 0x27F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x920 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x7B1 SWAP2 DUP6 SWAP1 PUSH2 0x815 SWAP1 DUP7 PUSH2 0x194A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636C75646564206164647265737365732063616E6E6F742063616C6C2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF8 DUP4 PUSH2 0x1956 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xB22 SWAP1 DUP3 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x6C SLOAD PUSH2 0xB48 SWAP1 DUP3 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x6C SSTORE PUSH1 0x6D SLOAD PUSH2 0xB58 SWAP1 DUP5 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x6D SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xB68 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6B SLOAD DUP4 GT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x887 JUMP JUMPDEST DUP2 PUSH2 0xBFE JUMPI PUSH1 0x0 PUSH2 0xBF0 DUP5 PUSH2 0x1956 JUMP JUMPDEST POP SWAP3 SWAP5 POP PUSH2 0x7B5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC09 DUP5 PUSH2 0x1956 JUMP JUMPDEST POP SWAP2 SWAP5 POP PUSH2 0x7B5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x74 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x79A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC51 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC80 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4578706972656420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x556E6971756520696420657869737473 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x887 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xD66 PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 DUP7 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP12 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP9 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0xF0C JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 DUP12 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xDFA JUMPI PUSH2 0xDFA PUSH2 0x279C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xE1D JUMPI PUSH2 0xE1D PUSH2 0x279C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xE40 JUMPI PUSH2 0xE40 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xE7E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT DUP1 ISZERO PUSH2 0xEE5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xEF8 JUMPI DUP3 PUSH2 0xEF4 DUP2 PUSH2 0x2810 JUMP JUMPDEST SWAP4 POP POP JUMPDEST SWAP3 POP DUP1 PUSH2 0xF04 DUP2 PUSH2 0x2830 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDC8 JUMP JUMPDEST POP DUP1 PUSH1 0xFF AND PUSH1 0x3 EQ PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C6964207369676E657273 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xF75 DUP13 DUP12 PUSH2 0x146A JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF8C PUSH2 0x153C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x104F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1035 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6A DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0x116FEA137DB6E131133E7F2BAB296045D8F41CC5607279DB17B218CAB0929A51 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10F2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7B5 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH2 0x111C PUSH2 0x153C JUMP JUMPDEST PUSH2 0x1126 PUSH1 0x0 PUSH2 0x19A8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6F DUP1 SLOAD PUSH2 0x721 SWAP1 PUSH2 0x2761 JUMP JUMPDEST PUSH2 0x113F PUSH2 0x153C JUMP JUMPDEST PUSH2 0x11A6 PUSH1 0x74 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1198 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x117A JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH1 0x75 PUSH2 0x19FA JUMP JUMPDEST PUSH2 0x11B2 PUSH1 0x74 PUSH1 0x0 PUSH2 0x2105 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x11C5 SWAP1 PUSH1 0x74 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2123 JUMP JUMPDEST POP PUSH2 0xCB9 DUP2 PUSH1 0x1 PUSH1 0x75 PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 CALLER DUP5 PUSH2 0x815 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A30 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x1242 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x125C JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x125C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x12BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x12E2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x12EA PUSH2 0x1A78 JUMP JUMPDEST DUP8 MLOAD PUSH2 0x12FD SWAP1 PUSH1 0x6E SWAP1 PUSH1 0x20 DUP12 ADD SWAP1 PUSH2 0x2188 JUMP JUMPDEST POP DUP7 MLOAD PUSH2 0x1311 SWAP1 PUSH1 0x6F SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x2188 JUMP JUMPDEST POP PUSH1 0x70 DUP7 SWAP1 SSTORE PUSH2 0x1322 DUP7 PUSH1 0xA PUSH2 0x293B JUMP JUMPDEST PUSH2 0x132C SWAP1 DUP7 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x6B DUP2 SWAP1 SSTORE PUSH2 0x133D SWAP1 PUSH1 0x0 NOT PUSH2 0x297C JUMP JUMPDEST PUSH2 0x1349 SWAP1 PUSH1 0x0 NOT PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x6C SSTORE PUSH1 0x71 DUP5 SWAP1 SSTORE PUSH1 0x72 DUP5 SWAP1 SSTORE PUSH1 0x70 SLOAD PUSH2 0x1364 SWAP1 PUSH1 0xA PUSH2 0x293B JUMP JUMPDEST PUSH2 0x136E SWAP1 DUP5 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x73 SSTORE PUSH1 0x6C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x68 SWAP1 MSTORE DUP2 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE ADDRESS DUP4 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x13C1 DUP3 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x13CA ADDRESS PUSH2 0xF84 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x6B SLOAD PUSH1 0x40 MLOAD PUSH2 0x1412 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 ISZERO PUSH2 0x1460 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 CALLER DUP5 DUP5 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x147F PUSH2 0x153C JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH2 0x148D SWAP1 PUSH1 0xA PUSH2 0x293B JUMP JUMPDEST PUSH2 0x1497 SWAP1 DUP3 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x73 SSTORE POP JUMP JUMPDEST PUSH2 0x14A5 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x14CE PUSH2 0x153C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1533 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH2 0xCB9 DUP2 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1126 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x171E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1780 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x17E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x180E JUMPI POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1876 JUMPI PUSH1 0x73 SLOAD DUP2 GT ISZERO PUSH2 0x1876 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206578636565647320746865206D617854 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3C20B6B7BAB73A17 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1881 ADDRESS PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x73 SLOAD DUP2 LT PUSH2 0x1891 JUMPI POP PUSH1 0x73 SLOAD JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x18D3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x18DC JUMPI POP PUSH1 0x0 JUMPDEST PUSH2 0x18E8 DUP6 DUP6 DUP6 DUP5 PUSH2 0x1AA7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1913 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x222A JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1928 PUSH2 0x1C18 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1937 DUP3 DUP3 PUSH2 0x193E JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 DUP3 DUP5 PUSH2 0x2990 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 DUP3 DUP5 PUSH2 0x29A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x196A DUP9 PUSH2 0x1D9A JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1985 DUP12 DUP6 PUSH2 0x1980 PUSH2 0x191B JUMP JUMPDEST PUSH2 0x1DC1 JUMP JUMPDEST SWAP2 SWAP14 SWAP1 SWAP13 POP SWAP1 SWAP11 POP SWAP5 SWAP9 POP SWAP3 SWAP7 POP SWAP3 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 DUP3 DUP5 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0x1A72 JUMPI DUP3 DUP3 PUSH1 0x0 DUP7 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0x1A2E JUMPI PUSH2 0x1A2E PUSH2 0x279C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x1A6A DUP2 PUSH2 0x2830 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19FD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x887 SWAP1 PUSH2 0x29BC JUMP JUMPDEST PUSH2 0x1126 PUSH2 0x1DFD JUMP JUMPDEST DUP1 PUSH2 0x1AB4 JUMPI PUSH2 0x1AB4 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1AF5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1B0A JUMPI PUSH2 0x1B05 DUP5 DUP5 DUP5 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x1C08 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1B4B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1B5B JUMPI PUSH2 0x1B05 DUP5 DUP5 DUP5 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1B9D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1BAD JUMPI PUSH2 0x1B05 DUP5 DUP5 DUP5 PUSH2 0x2002 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1BED JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1BFD JUMPI PUSH2 0x1B05 DUP5 DUP5 DUP5 PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x1C08 DUP5 DUP5 DUP5 PUSH2 0x2002 JUMP JUMPDEST DUP1 PUSH2 0x1A72 JUMPI PUSH2 0x1A72 PUSH1 0x72 SLOAD PUSH1 0x71 SSTORE JUMP JUMPDEST PUSH1 0x6C SLOAD PUSH1 0x6B SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0x6A SLOAD DUP2 LT ISZERO PUSH2 0x1D6A JUMPI DUP3 PUSH1 0x65 PUSH1 0x0 PUSH1 0x6A DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C47 JUMPI PUSH2 0x1C47 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT DUP1 PUSH2 0x1CB2 JUMPI POP DUP2 PUSH1 0x66 PUSH1 0x0 PUSH1 0x6A DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C8B JUMPI PUSH2 0x1C8B PUSH2 0x279C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x1CC8 JUMPI PUSH1 0x6C SLOAD PUSH1 0x6B SLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1D0E PUSH1 0x65 PUSH1 0x0 PUSH1 0x6A DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1CE2 JUMPI PUSH2 0x1CE2 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH2 0x199C JUMP JUMPDEST SWAP3 POP PUSH2 0x1D56 PUSH1 0x66 PUSH1 0x0 PUSH1 0x6A DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D2A JUMPI PUSH2 0x1D2A PUSH2 0x279C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x199C JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1D62 DUP2 PUSH2 0x27F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C25 JUMP JUMPDEST POP PUSH1 0x6B SLOAD PUSH1 0x6C SLOAD PUSH2 0x1D7A SWAP2 PUSH2 0x193E JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1D91 JUMPI PUSH1 0x6C SLOAD PUSH1 0x6B SLOAD SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1DA8 DUP5 PUSH2 0x20B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DB6 DUP6 DUP4 PUSH2 0x199C JUMP JUMPDEST SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x1DD0 DUP8 DUP7 PUSH2 0x20D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DDE DUP8 DUP8 PUSH2 0x20D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DEC DUP4 DUP4 PUSH2 0x199C JUMP JUMPDEST SWAP3 SWAP10 SWAP3 SWAP9 POP SWAP1 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x887 SWAP1 PUSH2 0x29BC JUMP JUMPDEST PUSH2 0x1126 CALLER PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH2 0x1E36 JUMPI JUMP JUMPDEST PUSH1 0x71 DUP1 SLOAD PUSH1 0x72 SSTORE PUSH1 0x0 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1E54 DUP7 PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP5 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1E84 SWAP1 DUP8 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x65 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1EB3 SWAP1 DUP7 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP10 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1EE2 SWAP1 DUP6 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1F05 DUP4 DUP3 PUSH2 0x20E1 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F4A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1F6D DUP7 PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP5 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1F9D SWAP1 DUP7 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP11 AND DUP2 MSTORE PUSH1 0x66 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x1FD3 SWAP1 DUP4 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x65 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1EE2 SWAP1 DUP6 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2013 DUP7 PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP5 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1EB3 SWAP1 DUP7 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2054 DUP7 PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP5 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x2084 SWAP1 DUP8 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x65 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1F9D SWAP1 DUP7 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B5 PUSH1 0x64 PUSH2 0x20CF PUSH1 0x71 SLOAD DUP6 PUSH2 0x20D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 DUP3 DUP5 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x6C SLOAD PUSH2 0x20EE SWAP1 DUP4 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x6C SSTORE PUSH1 0x6D SLOAD PUSH2 0x20FE SWAP1 DUP3 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x6D SSTORE POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xCB9 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2178 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2178 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2143 JUMP JUMPDEST POP PUSH2 0x2184 SWAP3 SWAP2 POP PUSH2 0x21FC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2194 SWAP1 PUSH2 0x2761 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x21B6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2178 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x21CF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2178 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2178 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2178 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x21E1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2184 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2257 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x223B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2269 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A6 DUP3 PUSH2 0x227F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22D2 DUP4 PUSH2 0x227F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22FE DUP5 PUSH2 0x227F JUMP JUMPDEST SWAP3 POP PUSH2 0x230C PUSH1 0x20 DUP6 ADD PUSH2 0x227F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x232F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2392 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x236D JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x23DC JUMPI PUSH2 0x23DC PUSH2 0x239E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x23FD JUMPI PUSH2 0x23FD PUSH2 0x239E JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x242D PUSH2 0x2428 DUP4 PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0x23B4 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x244C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2467 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2450 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x248D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2496 DUP9 PUSH2 0x227F JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP1 DUP10 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x24C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24EA PUSH2 0x2428 DUP3 PUSH2 0x23E4 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP15 DUP4 GT ISZERO PUSH2 0x2509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x2537 JUMPI DUP5 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2528 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x250E JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x254F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255B DUP13 DUP5 DUP14 ADD PUSH2 0x2407 JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x2571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x257F DUP11 DUP3 DUP12 ADD PUSH2 0x2407 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x25B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x25C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x25D6 PUSH2 0x2428 DUP3 PUSH2 0x23E4 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x25F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x261A JUMPI PUSH2 0x260B DUP5 PUSH2 0x227F JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x25FA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x264F JUMPI PUSH2 0x264F PUSH2 0x239E JUMP JUMPDEST PUSH2 0x2662 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x23B4 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x26AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x26C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26D2 DUP12 DUP4 DUP13 ADD PUSH2 0x2625 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x26E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26F5 DUP11 DUP3 DUP12 ADD PUSH2 0x2625 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2720 PUSH1 0xC0 DUP10 ADD PUSH2 0x227F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x274A DUP4 PUSH2 0x227F JUMP JUMPDEST SWAP2 POP PUSH2 0x2758 PUSH1 0x20 DUP5 ADD PUSH2 0x227F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2775 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2796 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x27DA JUMPI PUSH2 0x27DA PUSH2 0x27B2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2809 JUMPI PUSH2 0x2809 PUSH2 0x27B2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x2827 JUMPI PUSH2 0x2827 PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x284D JUMPI PUSH2 0x284D PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2892 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2878 JUMPI PUSH2 0x2878 PUSH2 0x27B2 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2885 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x285C JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x28A9 JUMPI POP PUSH1 0x1 PUSH2 0x7B5 JUMP JUMPDEST DUP2 PUSH2 0x28B6 JUMPI POP PUSH1 0x0 PUSH2 0x7B5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x28CC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x28D6 JUMPI PUSH2 0x28F2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x28E7 JUMPI PUSH2 0x28E7 PUSH2 0x27B2 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x7B5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2915 JUMPI POP DUP2 DUP2 EXP PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x291F DUP4 DUP4 PUSH2 0x2857 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2933 JUMPI PUSH2 0x2933 PUSH2 0x27B2 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 DUP4 DUP4 PUSH2 0x289A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2961 JUMPI PUSH2 0x2961 PUSH2 0x27B2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x298B JUMPI PUSH2 0x298B PUSH2 0x2966 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x299F JUMPI PUSH2 0x299F PUSH2 0x2966 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x29B7 JUMPI PUSH2 0x29B7 PUSH2 0x27B2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20646563 PUSH19 0x656173656420616C6C6F77616E63652062656C PUSH16 0x77207A65726FA2646970667358221220 LT SWAP1 0xD1 SWAP14 PUSH7 0xB6CC32F73BE65A 0x26 0xED PUSH4 0x9F66C6B3 0xB3 POP PUSH26 0x9A09786E789A3B1447AE64736F6C634300080B00330000000000 ",
							"sourceMap": "385:21085:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1658": {
									"entryPoint": null,
									"id": 1658,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_26": {
									"entryPoint": 6776,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_37": {
									"entryPoint": 7677,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_2015": {
									"entryPoint": 5526,
									"id": 2015,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_68": {
									"entryPoint": 5436,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getCurrentSupply_1897": {
									"entryPoint": 7192,
									"id": 1897,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@_getRValues_1793": {
									"entryPoint": 7617,
									"id": 1793,
									"parameterSlots": 3,
									"returnSlots": 3
								},
								"@_getRate_1811": {
									"entryPoint": 6427,
									"id": 1811,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getTValues_1751": {
									"entryPoint": 7578,
									"id": 1751,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_getValues_1724": {
									"entryPoint": 6486,
									"id": 1724,
									"parameterSlots": 1,
									"returnSlots": 5
								},
								"@_maxTxAmount_1022": {
									"entryPoint": null,
									"id": 1022,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_630": {
									"entryPoint": null,
									"id": 630,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_permitTransfer_2695": {
									"entryPoint": 3260,
									"id": 2695,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_reflectFee_1680": {
									"entryPoint": 8417,
									"id": 1680,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_taxFee_1018": {
									"entryPoint": null,
									"id": 1018,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_tokenTransfer_2206": {
									"entryPoint": 6823,
									"id": 2206,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferBothExcluded_2478": {
									"entryPoint": 8259,
									"id": 2478,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferFromExcluded_2399": {
									"entryPoint": 7747,
									"id": 2399,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_125": {
									"entryPoint": 6568,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferStandard_2263": {
									"entryPoint": 8194,
									"id": 2263,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferToExcluded_2331": {
									"entryPoint": 8028,
									"id": 2331,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_2111": {
									"entryPoint": 5818,
									"id": 2111,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateMap_2561": {
									"entryPoint": 6650,
									"id": 2561,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_821": {
									"entryPoint": 6474,
									"id": 821,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_1244": {
									"entryPoint": null,
									"id": 1244,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1264": {
									"entryPoint": 1956,
									"id": 1264,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1207": {
									"entryPoint": 4277,
									"id": 1207,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateTaxFee_1934": {
									"entryPoint": 8371,
									"id": 1934,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimTokens_1916": {
									"entryPoint": 3192,
									"id": 1916,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_1167": {
									"entryPoint": null,
									"id": 1167,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1356": {
									"entryPoint": 4563,
									"id": 1356,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deliver_1426": {
									"entryPoint": 2680,
									"id": 1426,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_866": {
									"entryPoint": 6462,
									"id": 866,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@excludeFromFee_1612": {
									"entryPoint": 2912,
									"id": 1612,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@excludeFromReward_1534": {
									"entryPoint": 3972,
									"id": 1534,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@includeInFee_1626": {
									"entryPoint": 5277,
									"id": 1626,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@includeInReward_1598": {
									"entryPoint": 2221,
									"id": 1598,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increaseAllowance_1328": {
									"entryPoint": 2626,
									"id": 1328,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_1143": {
									"entryPoint": 4642,
									"id": 1143,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@isContract_378": {
									"entryPoint": null,
									"id": 378,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isExcludedFromFee_1971": {
									"entryPoint": null,
									"id": 1971,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isExcludedFromReward_1368": {
									"entryPoint": null,
									"id": 1368,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mapSigner_2527": {
									"entryPoint": null,
									"id": 2527,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_851": {
									"entryPoint": 8405,
									"id": 851,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1151": {
									"entryPoint": 1810,
									"id": 1151,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reflectionFromToken_1464": {
									"entryPoint": 2956,
									"id": 1464,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@removeAllFee_1951": {
									"entryPoint": 7725,
									"id": 1951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_82": {
									"entryPoint": 4372,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@restoreAllFee_1959": {
									"entryPoint": null,
									"id": 1959,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMaxTxPercent_1654": {
									"entryPoint": 5239,
									"id": 1654,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSigners_2515": {
									"entryPoint": 4407,
									"id": 2515,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTaxFeePercent_1638": {
									"entryPoint": 1797,
									"id": 1638,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@signers_2487": {
									"entryPoint": 3095,
									"id": 2487,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sub_836": {
									"entryPoint": 6556,
									"id": 836,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_906": {
									"entryPoint": 6383,
									"id": 906,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_1159": {
									"entryPoint": 4392,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenFromReflection_1489": {
									"entryPoint": 2084,
									"id": 1489,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalFees_1376": {
									"entryPoint": null,
									"id": 1376,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_1184": {
									"entryPoint": null,
									"id": 1184,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1301": {
									"entryPoint": 1979,
									"id": 1301,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_105": {
									"entryPoint": 5318,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1227": {
									"entryPoint": 5226,
									"id": 1227,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniqueIdExists_1033": {
									"entryPoint": null,
									"id": 1033,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@version_1175": {
									"entryPoint": null,
									"id": 1175,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 8831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_bytes32_dyn": {
									"entryPoint": 9223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 9765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_array$_t_uint8_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr": {
									"entryPoint": 9330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_address": {
									"entryPoint": 9876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 8988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint8_dyn": {
									"entryPoint": 9188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 10327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 10555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 10394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 10081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint64": {
									"entryPoint": 10288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 10256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 10620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10162,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 10207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10140,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20340:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:7"
															},
															"nodeType": "YulIf",
															"src": "94:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:7",
														"type": ""
													}
												],
												"src": "14:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "320:476:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "330:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "340:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "334:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "358:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "369:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "351:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "351:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "381:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "401:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "395:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "385:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "428:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "439:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "424:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "424:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "444:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "417:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "460:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "469:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "464:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "529:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "558:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "569:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "554:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "554:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "573:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "550:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "550:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "592:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "600:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "588:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "588:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "604:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "584:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "584:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "578:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "543:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "543:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "543:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "490:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "493:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "487:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "487:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "501:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "503:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "512:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "515:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "508:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "508:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "503:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "483:3:7",
																"statements": []
															},
															"src": "479:140:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:66:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "682:9:7"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "693:6:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "678:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "678:22:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "702:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "674:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "674:31:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "707:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "667:42:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "667:42:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "634:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "637:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "631:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "631:13:7"
															},
															"nodeType": "YulIf",
															"src": "628:91:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "728:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "744:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "763:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "771:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "759:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "759:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "780:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "776:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "776:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "755:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "755:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "740:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "787:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "736:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "728:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "289:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "300:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "311:4:7",
														"type": ""
													}
												],
												"src": "199:597:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "850:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "860:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "869:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "860:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "952:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "961:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "964:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "954:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "954:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "954:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "911:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "922:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "937:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "942:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "933:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "933:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "946:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "929:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "929:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "918:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "918:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "908:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "901:50:7"
															},
															"nodeType": "YulIf",
															"src": "898:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "829:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "840:5:7",
														"type": ""
													}
												],
												"src": "801:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1049:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1095:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1104:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1107:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1097:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1097:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1097:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1070:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1079:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1091:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:32:7"
															},
															"nodeType": "YulIf",
															"src": "1059:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1120:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1149:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1130:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1120:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1015:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1026:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1038:6:7",
														"type": ""
													}
												],
												"src": "979:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1265:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1275:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1287:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1298:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1283:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1283:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1317:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1342:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1335:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1335:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1328:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1328:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1310:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1234:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1245:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1256:4:7",
														"type": ""
													}
												],
												"src": "1170:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1449:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1495:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1504:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1507:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1497:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1497:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1497:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1470:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1479:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1466:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1466:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1491:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1462:32:7"
															},
															"nodeType": "YulIf",
															"src": "1459:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1520:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1549:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1530:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1520:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1568:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1595:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1606:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1591:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1591:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1578:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1568:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1407:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1418:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1430:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1438:6:7",
														"type": ""
													}
												],
												"src": "1362:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1722:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1732:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1744:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1755:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1740:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1740:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1732:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1774:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1785:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1767:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1767:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1691:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1702:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1713:4:7",
														"type": ""
													}
												],
												"src": "1621:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1907:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1953:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1965:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1955:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1955:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1955:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1924:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1949:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1920:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1920:32:7"
															},
															"nodeType": "YulIf",
															"src": "1917:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1978:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2007:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1988:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1978:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2026:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2059:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2070:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2055:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2055:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2036:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2036:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2026:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2083:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2110:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2121:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2106:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2106:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2093:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2083:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1857:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1868:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1880:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1888:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1896:6:7",
														"type": ""
													}
												],
												"src": "1803:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2220:257:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2266:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2275:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2278:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2268:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2268:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2268:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2241:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2250:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2237:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2237:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2233:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2233:32:7"
															},
															"nodeType": "YulIf",
															"src": "2230:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2291:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2314:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2301:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2301:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2291:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2333:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2374:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2359:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2359:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2346:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2346:32:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2337:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2431:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2440:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2443:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2433:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2433:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2433:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2400:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2421:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2414:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2414:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2407:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2397:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2397:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:40:7"
															},
															"nodeType": "YulIf",
															"src": "2387:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2456:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2466:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2456:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2178:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2189:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2201:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2209:6:7",
														"type": ""
													}
												],
												"src": "2136:341:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2633:507:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2643:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2653:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2647:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2664:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2682:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2693:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2678:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2678:18:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "2668:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2712:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2723:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2735:17:7",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "2746:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "2739:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2761:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2781:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2775:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2775:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2765:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "2804:6:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2812:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2797:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2797:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2797:22:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2828:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2839:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2850:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2835:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2835:18:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2828:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2862:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2880:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2888:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:15:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2866:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2900:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2909:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2904:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2968:146:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2989:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3004:6:7"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2998:5:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2998:13:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3021:3:7",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3026:1:7",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3017:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3017:11:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3030:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "3013:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3013:19:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2994:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2994:39:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2982:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2982:52:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2982:52:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3047:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3058:3:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3063:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3054:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3054:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3047:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3079:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3093:6:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3101:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3089:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3089:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3079:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2930:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2933:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2927:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2927:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2941:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2943:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2952:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2955:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2948:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2948:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2943:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2923:3:7",
																"statements": []
															},
															"src": "2919:195:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3123:11:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3131:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3123:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2602:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2613:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2624:4:7",
														"type": ""
													}
												],
												"src": "2482:658:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3177:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3201:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3206:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3197:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3197:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3187:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3187:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3234:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3237:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3227:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3227:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3258:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3251:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3251:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3145:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:230:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3348:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3342:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3332:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3360:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3382:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "3398:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3404:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3394:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3394:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3413:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3409:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3409:7:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3390:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3390:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3378:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3378:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3364:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3493:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3495:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3495:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3495:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3436:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3448:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3433:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3433:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3472:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3484:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3469:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3430:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3430:62:7"
															},
															"nodeType": "YulIf",
															"src": "3427:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3531:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3535:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3524:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3524:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3524:22:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3302:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3311:6:7",
														"type": ""
													}
												],
												"src": "3277:275:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3624:114:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3668:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3670:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3670:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3670:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3640:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3648:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3637:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:30:7"
															},
															"nodeType": "YulIf",
															"src": "3634:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3699:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3715:1:7",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3718:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3711:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3711:14:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3727:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3707:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3707:25:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3699:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint8_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3615:4:7",
														"type": ""
													}
												],
												"src": "3557:181:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3807:596:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3856:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3865:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3868:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3858:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3858:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3858:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3835:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3843:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3831:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3831:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3850:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:35:7"
															},
															"nodeType": "YulIf",
															"src": "3817:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3881:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3904:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3891:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3891:20:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3885:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3920:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3930:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3924:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3943:69:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4008:2:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint8_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "3970:37:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3970:41:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3954:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3954:58:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3947:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4021:16:7",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "4034:3:7"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "4025:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4053:3:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4058:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4046:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4046:15:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4070:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4081:3:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4086:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4077:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:12:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4070:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4098:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4120:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4132:1:7",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4135:2:7"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4128:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4128:10:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4116:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4116:23:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4141:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4112:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4112:32:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4102:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4172:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4181:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4184:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4174:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4174:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4159:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4167:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4156:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:15:7"
															},
															"nodeType": "YulIf",
															"src": "4153:35:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4197:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4212:6:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4220:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4208:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4208:15:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4201:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4288:86:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4309:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4327:3:7"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "4314:12:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4314:17:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4302:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4302:30:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4302:30:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4345:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4356:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4361:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4352:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4352:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4345:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4243:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4248:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4240:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:15:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4256:23:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4258:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4269:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4274:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4265:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4265:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4258:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4236:3:7",
																"statements": []
															},
															"src": "4232:142:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4383:14:7",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "4392:5:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4383:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_bytes32_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3781:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3789:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3797:5:7",
														"type": ""
													}
												],
												"src": "3743:660:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4653:1566:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4700:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4709:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4712:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4702:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4702:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4702:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4674:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4683:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4670:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4695:3:7",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4666:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4666:33:7"
															},
															"nodeType": "YulIf",
															"src": "4663:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4725:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4754:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4735:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4725:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4773:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4783:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4777:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4794:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4821:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4832:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4817:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4817:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4804:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4804:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4845:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4872:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4883:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4868:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4868:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4855:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4855:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4896:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4923:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4934:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4919:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4919:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4906:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4906:32:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4896:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4947:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4978:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4989:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4974:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4974:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4961:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4961:33:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4951:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5003:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5013:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5007:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5058:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5067:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5070:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5060:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5060:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5060:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5046:6:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5054:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5043:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5043:14:7"
															},
															"nodeType": "YulIf",
															"src": "5040:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5083:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5097:9:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5108:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5093:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5093:22:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5087:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5163:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5172:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5175:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5165:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5165:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5165:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5142:2:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5146:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5138:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5138:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5153:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5134:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5134:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5127:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5127:35:7"
															},
															"nodeType": "YulIf",
															"src": "5124:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5188:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5211:2:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5198:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:16:7"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5192:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5223:69:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5288:2:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint8_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "5250:37:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5250:41:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5234:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5234:58:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5227:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5301:16:7",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "5314:3:7"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "5305:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5333:3:7"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5338:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5326:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5326:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5326:15:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5350:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5361:3:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5366:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5357:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5357:12:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5350:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5378:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "5400:2:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5408:1:7",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "5411:2:7"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5404:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5404:10:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5396:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5396:19:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5417:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5392:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5392:28:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5382:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5452:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5461:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5464:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5454:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5454:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5454:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5435:6:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5443:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5432:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5432:19:7"
															},
															"nodeType": "YulIf",
															"src": "5429:39:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5477:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5492:2:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5496:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5488:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5488:11:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5481:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5564:255:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5578:30:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5604:3:7"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "5591:12:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5591:17:7"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "5582:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5672:74:7",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "5690:11:7",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5700:1:7",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_5",
																							"nodeType": "YulTypedName",
																							"src": "5694:2:7",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "5725:2:7"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "5729:2:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "5718:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5718:14:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5718:14:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "5634:5:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5645:5:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5652:4:7",
																									"type": "",
																									"value": "0xff"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "5641:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5641:16:7"
																						}
																					],
																					"functionName": {
																						"name": "eq",
																						"nodeType": "YulIdentifier",
																						"src": "5631:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5631:27:7"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "5624:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5624:35:7"
																		},
																		"nodeType": "YulIf",
																		"src": "5621:125:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5766:3:7"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "5771:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5759:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5759:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5759:18:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5790:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5801:3:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5806:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5797:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5797:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5790:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5519:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5524:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5516:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5516:15:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5532:23:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5534:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5545:3:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5550:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5541:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5541:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5534:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5512:3:7",
																"statements": []
															},
															"src": "5508:311:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5828:15:7",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "5838:5:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5828:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5852:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5885:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5896:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5881:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5881:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5868:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5868:33:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5856:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5930:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5939:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5932:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5932:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5932:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5916:8:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5926:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5913:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5913:16:7"
															},
															"nodeType": "YulIf",
															"src": "5910:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5955:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5998:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6009:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5994:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5994:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6020:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_bytes32_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5965:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5965:63:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6037:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6070:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6081:3:7",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6066:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6066:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6053:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6053:33:7"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "6041:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6115:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6124:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6127:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6117:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6117:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6117:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "6101:8:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6111:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6098:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6098:16:7"
															},
															"nodeType": "YulIf",
															"src": "6095:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6140:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6183:9:7"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "6194:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6179:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6179:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6205:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_bytes32_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6150:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6150:63:7"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "6140:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_array$_t_uint8_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4571:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4582:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4594:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4602:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4610:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4618:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4626:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4634:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "4642:6:7",
														"type": ""
													}
												],
												"src": "4408:1811:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6325:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6335:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6347:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6358:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6343:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6343:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6335:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6377:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6392:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6408:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6413:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6404:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6404:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6417:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6400:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6400:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6388:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6388:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6370:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6370:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6370:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6294:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6305:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6316:4:7",
														"type": ""
													}
												],
												"src": "6224:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6527:800:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6537:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6547:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6541:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6594:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6603:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6606:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6596:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6596:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6596:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6569:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6578:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6565:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6565:23:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6590:2:7"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6561:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6561:32:7"
															},
															"nodeType": "YulIf",
															"src": "6558:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6619:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6646:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6633:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6633:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6623:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6699:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6708:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6711:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6701:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6701:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6701:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6671:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6679:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6668:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6668:30:7"
															},
															"nodeType": "YulIf",
															"src": "6665:50:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6724:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6738:9:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6749:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6734:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6734:22:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6728:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6804:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6813:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6816:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6806:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6806:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6806:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6783:2:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6787:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6779:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6779:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6794:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6775:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6775:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6768:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6768:35:7"
															},
															"nodeType": "YulIf",
															"src": "6765:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6829:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6852:2:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6839:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6839:16:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "6833:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6864:69:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "6929:2:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint8_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "6891:37:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6891:41:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6875:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6875:58:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6868:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6942:16:7",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "6955:3:7"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "6946:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6974:3:7"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6979:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6967:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6967:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6967:15:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6991:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7002:3:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7007:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6998:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6998:12:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6991:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7019:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "7041:2:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7049:1:7",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "7052:2:7"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7045:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7045:10:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7037:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7037:19:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7058:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7033:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7033:28:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "7023:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7093:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7102:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7105:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7095:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7095:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7095:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7076:6:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7084:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7073:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7073:19:7"
															},
															"nodeType": "YulIf",
															"src": "7070:39:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7118:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "7133:2:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7137:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7129:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7129:11:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "7122:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7205:92:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7226:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "7250:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "7231:18:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7231:23:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7219:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7219:36:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7219:36:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7268:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7279:3:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7284:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7275:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7275:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7268:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7160:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7165:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7157:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7157:15:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7173:23:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7175:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "7186:3:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7191:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7182:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7182:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7175:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7153:3:7",
																"statements": []
															},
															"src": "7149:148:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7306:15:7",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "7316:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7306:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6493:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6504:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6516:6:7",
														"type": ""
													}
												],
												"src": "6432:895:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7385:478:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7434:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7443:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7446:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7436:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7436:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7436:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7413:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7421:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7409:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7409:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7428:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7405:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7405:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7398:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7398:35:7"
															},
															"nodeType": "YulIf",
															"src": "7395:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7459:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7482:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7469:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7469:20:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7463:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7528:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7530:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7530:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7530:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7504:2:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7508:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7501:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7501:26:7"
															},
															"nodeType": "YulIf",
															"src": "7498:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7559:70:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "7602:2:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7606:4:7",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7598:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7598:13:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7617:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7613:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7613:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7594:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7594:27:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7623:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7590:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7590:38:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7574:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7574:55:7"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "7563:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "7645:7:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7654:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7638:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7638:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7638:19:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7705:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7714:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7717:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7707:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7707:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7707:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7680:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "7688:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7676:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7676:15:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7693:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7672:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7672:26:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7700:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7669:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7669:35:7"
															},
															"nodeType": "YulIf",
															"src": "7666:55:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "7747:7:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7756:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7767:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7775:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7763:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7763:17:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7782:2:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7730:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7730:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7730:55:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "7809:7:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "7818:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7805:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7805:16:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7823:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7801:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7801:27:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7830:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7794:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:38:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7794:38:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7841:16:7",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "7850:7:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7841:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7359:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7367:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7375:5:7",
														"type": ""
													}
												],
												"src": "7332:531:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8060:701:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8107:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8116:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8119:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8109:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8109:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8109:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8081:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8090:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8077:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8077:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8102:3:7",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8073:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8073:33:7"
															},
															"nodeType": "YulIf",
															"src": "8070:53:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8132:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8159:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8146:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8146:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8136:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8178:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8188:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8182:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8233:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8242:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8245:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8235:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8235:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8235:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8221:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8229:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8218:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8218:14:7"
															},
															"nodeType": "YulIf",
															"src": "8215:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8258:60:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8290:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8301:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8286:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8286:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8310:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "8268:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8268:50:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8258:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8327:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8360:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8371:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8356:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8356:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8343:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8343:32:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "8331:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8404:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8413:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8416:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8406:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8406:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8406:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "8390:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8400:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8387:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8387:16:7"
															},
															"nodeType": "YulIf",
															"src": "8384:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8429:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8461:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "8472:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8457:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8457:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8483:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "8439:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8439:52:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8429:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8500:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8527:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8538:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8523:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8523:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8510:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8510:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8500:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8551:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8578:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8589:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8574:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8574:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8561:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8561:32:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8551:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8602:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8629:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8640:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8625:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8625:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8612:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8612:33:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "8602:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8654:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8681:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8692:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8677:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8677:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8664:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8664:33:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "8654:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8706:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8739:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8750:3:7",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8735:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8735:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8716:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8716:39:7"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "8706:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7978:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7989:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8001:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8009:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8017:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8025:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8033:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "8041:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "8049:6:7",
														"type": ""
													}
												],
												"src": "7868:893:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8853:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8899:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8908:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8911:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8901:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8901:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8901:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8874:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8883:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8870:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8870:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8895:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8866:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8866:32:7"
															},
															"nodeType": "YulIf",
															"src": "8863:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8924:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8953:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8934:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8934:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8924:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8972:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9005:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9016:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9001:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9001:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8982:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8982:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8972:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8811:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8822:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8834:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8842:6:7",
														"type": ""
													}
												],
												"src": "8766:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9086:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9096:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9110:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9113:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "9106:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9096:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9127:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9157:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9163:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9153:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9131:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9204:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9206:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9220:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9228:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9216:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9216:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9206:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9184:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9177:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9177:26:7"
															},
															"nodeType": "YulIf",
															"src": "9174:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9294:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9315:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9322:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9327:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9318:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9318:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9308:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9308:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9308:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9359:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9362:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9352:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9352:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9352:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9387:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9390:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9380:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9380:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9380:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9250:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9273:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9281:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9270:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9270:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9247:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9247:38:7"
															},
															"nodeType": "YulIf",
															"src": "9244:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9066:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9075:6:7",
														"type": ""
													}
												],
												"src": "9031:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9590:232:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9607:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9618:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9600:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9600:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9600:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9641:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9652:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9637:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9637:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9657:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9630:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9630:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9630:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9680:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9691:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9676:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9676:18:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c2072",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9696:34:7",
																		"type": "",
																		"value": "Amount must be less than total r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9669:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9669:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9669:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9751:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9762:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9747:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9747:18:7"
																	},
																	{
																		"hexValue": "65666c656374696f6e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9767:12:7",
																		"type": "",
																		"value": "eflections"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9740:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9740:40:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9740:40:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9789:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9801:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9812:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9797:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9797:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9789:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9567:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9581:4:7",
														"type": ""
													}
												],
												"src": "9416:406:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10001:177:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10018:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10029:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10011:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10011:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10011:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10052:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10063:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10048:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10048:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10068:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10041:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10041:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10041:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10091:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10102:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10087:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10087:18:7"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10107:29:7",
																		"type": "",
																		"value": "Account is already excluded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10080:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10080:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10080:57:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10146:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10158:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10169:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10154:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10154:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10146:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9978:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9992:4:7",
														"type": ""
													}
												],
												"src": "9827:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10215:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10232:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10239:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10244:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10235:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10235:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10225:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10225:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10225:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10272:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10275:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10265:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10265:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10265:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10296:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10299:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10289:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10289:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10289:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10183:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10347:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10364:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10371:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10376:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10367:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10367:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10357:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10357:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10357:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10404:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10407:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10397:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10397:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10397:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10428:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10431:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10421:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10421:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10421:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10315:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10496:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10518:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10520:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10520:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10520:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10512:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10515:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10509:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:8:7"
															},
															"nodeType": "YulIf",
															"src": "10506:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10549:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10561:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10564:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10557:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10557:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10549:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10478:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10481:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10487:4:7",
														"type": ""
													}
												],
												"src": "10447:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10609:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10626:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10633:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10638:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10629:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10629:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10619:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10619:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10619:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10666:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10669:4:7",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10659:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10659:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10659:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10690:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10693:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10683:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10683:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10683:15:7"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "10577:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10756:88:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10787:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10789:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10789:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10789:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10772:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10783:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10779:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10779:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10769:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10769:17:7"
															},
															"nodeType": "YulIf",
															"src": "10766:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10818:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10829:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10836:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10825:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10825:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10818:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10738:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10748:3:7",
														"type": ""
													}
												],
												"src": "10709:135:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11023:234:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11040:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11051:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11033:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11033:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11033:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11074:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11085:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11070:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11070:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11090:2:7",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11063:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11063:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11063:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11113:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11124:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11109:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11109:18:7"
																	},
																	{
																		"hexValue": "4578636c75646564206164647265737365732063616e6e6f742063616c6c2074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11129:34:7",
																		"type": "",
																		"value": "Excluded addresses cannot call t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11102:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11102:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11102:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11184:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11195:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11180:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11180:18:7"
																	},
																	{
																		"hexValue": "6869732066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11200:14:7",
																		"type": "",
																		"value": "his function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11173:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11173:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11173:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11224:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11236:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11247:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11232:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11232:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11224:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11000:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11014:4:7",
														"type": ""
													}
												],
												"src": "10849:408:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11436:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11453:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11464:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11446:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11446:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11446:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11487:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11498:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11483:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11483:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11503:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11476:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11476:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11476:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11526:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11537:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11522:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11522:18:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11542:33:7",
																		"type": "",
																		"value": "Amount must be less than supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11515:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11515:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11515:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11585:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11597:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11608:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11593:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11593:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11585:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11413:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11427:4:7",
														"type": ""
													}
												],
												"src": "11262:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11796:166:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11813:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11824:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11806:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11806:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11806:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11847:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11858:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11843:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11843:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11863:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11836:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11836:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11836:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11886:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11897:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11882:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11882:18:7"
																	},
																	{
																		"hexValue": "4578706972656420646561646c696e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11902:18:7",
																		"type": "",
																		"value": "Expired deadline"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11875:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11875:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11875:46:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11930:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11942:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11953:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11938:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11938:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11930:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11773:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11787:4:7",
														"type": ""
													}
												],
												"src": "11622:340:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12141:166:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12158:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12169:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12151:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12151:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12151:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12192:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12203:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12188:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12188:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12208:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12181:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12181:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12181:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12231:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12242:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12227:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12227:18:7"
																	},
																	{
																		"hexValue": "556e6971756520696420657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12247:18:7",
																		"type": "",
																		"value": "Unique id exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12220:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12220:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12220:46:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12275:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12287:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12298:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12283:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12283:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12275:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12118:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12132:4:7",
														"type": ""
													}
												],
												"src": "11967:340:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12553:359:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12563:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12575:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12586:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12571:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12571:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12563:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12599:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12617:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12622:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12613:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12613:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12626:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12609:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12609:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12603:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12644:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12659:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12667:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12655:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12655:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12637:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12637:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12637:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12691:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12702:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12687:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12687:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12711:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12719:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12707:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12707:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12680:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12680:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12680:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12743:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12754:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12739:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12739:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "12763:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12771:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12759:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12759:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12732:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12732:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12732:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12795:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12806:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12791:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12791:18:7"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12811:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12784:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12784:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12784:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12838:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12849:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12834:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12834:19:7"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "12855:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12827:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12827:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12827:35:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12882:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12893:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12878:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12878:19:7"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "12899:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12871:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12871:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12871:35:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12482:9:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "12493:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12501:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12509:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12517:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12525:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12533:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12544:4:7",
														"type": ""
													}
												],
												"src": "12312:600:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13098:217:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13108:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13120:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13131:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13116:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13116:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13108:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13151:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13162:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13144:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13144:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13189:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13200:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13185:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13185:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13209:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13217:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13205:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13205:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13178:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13178:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13178:45:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13243:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13254:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13239:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13232:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13232:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13286:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13297:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13282:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13282:18:7"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13302:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13275:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13275:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13275:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13043:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13054:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13062:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13070:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13078:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13089:4:7",
														"type": ""
													}
												],
												"src": "12917:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13365:130:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13375:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13394:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13401:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13390:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13390:16:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "13379:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13436:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13438:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13438:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13438:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "13421:7:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13430:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13418:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13418:17:7"
															},
															"nodeType": "YulIf",
															"src": "13415:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13467:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "13478:7:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13487:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13474:15:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13467:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13347:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13357:3:7",
														"type": ""
													}
												],
												"src": "13320:175:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13546:163:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13556:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13566:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13560:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13593:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13612:5:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13619:2:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13608:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13608:14:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "13597:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13650:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13652:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13652:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13652:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "13637:7:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13646:2:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13634:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13634:15:7"
															},
															"nodeType": "YulIf",
															"src": "13631:41:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13681:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "13692:7:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13701:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13688:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13688:15:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13681:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13528:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13538:3:7",
														"type": ""
													}
												],
												"src": "13500:209:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13888:165:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13905:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13916:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13898:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13898:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13898:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13939:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13950:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13935:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13935:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13955:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13928:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13928:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13928:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13978:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13989:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13974:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13974:18:7"
																	},
																	{
																		"hexValue": "496e76616c6964207369676e657273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13994:17:7",
																		"type": "",
																		"value": "Invalid signers"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13967:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13967:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13967:45:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14021:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14033:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14044:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14029:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14029:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14021:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13865:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13879:4:7",
														"type": ""
													}
												],
												"src": "13714:339:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14232:236:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14249:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14260:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14242:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14242:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14242:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14283:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14294:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14279:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14279:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14299:2:7",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14272:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14272:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14272:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14322:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14333:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14318:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14318:18:7"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14338:34:7",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14311:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14311:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14311:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14393:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14404:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14389:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14389:18:7"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14409:16:7",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14382:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14382:44:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14382:44:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14435:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14447:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14458:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14443:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14443:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14435:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14209:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14223:4:7",
														"type": ""
													}
												],
												"src": "14058:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14537:358:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14547:16:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14562:1:7",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "14551:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14572:16:7",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "14581:7:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "14572:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14597:13:7",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "14605:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "14597:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14661:228:7",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "14706:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "14708:16:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14708:18:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "14708:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "14681:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "14695:1:7",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "14691:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14691:6:7"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "14699:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "14687:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14687:17:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "14678:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14678:27:7"
																		},
																		"nodeType": "YulIf",
																		"src": "14675:53:7"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "14767:29:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "14769:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "14782:5:7"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "14789:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "14778:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14778:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "14769:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "14748:8:7"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "14758:7:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "14744:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14744:22:7"
																		},
																		"nodeType": "YulIf",
																		"src": "14741:55:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14809:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "14821:4:7"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "14827:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "14817:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14817:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "14809:4:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14845:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "14861:7:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "14870:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "14857:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14857:22:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "14845:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "14630:8:7"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "14640:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14627:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14627:21:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14649:3:7",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14623:3:7",
																"statements": []
															},
															"src": "14619:270:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "14501:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "14508:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "14521:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "14528:4:7",
														"type": ""
													}
												],
												"src": "14473:422:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14959:747:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14997:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15011:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "15020:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "15011:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "15034:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "14979:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14972:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14972:16:7"
															},
															"nodeType": "YulIf",
															"src": "14969:80:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15082:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15096:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "15105:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "15096:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "15119:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "15068:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15061:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15061:12:7"
															},
															"nodeType": "YulIf",
															"src": "15058:76:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "15170:52:7",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "15184:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15193:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "15184:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "15207:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "15163:59:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15168:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "15238:123:7",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "15273:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "15275:16:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15275:18:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "15275:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "15258:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15268:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "15255:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15255:17:7"
																				},
																				"nodeType": "YulIf",
																				"src": "15252:43:7"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "15308:25:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "15321:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15331:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "15317:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15317:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "15308:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "15346:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "15231:130:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15236:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "15150:4:7"
															},
															"nodeType": "YulSwitch",
															"src": "15143:218:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15459:70:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15473:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "15486:4:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "15492:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "15482:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15482:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "15473:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "15514:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "15383:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15389:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "15380:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15380:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "15397:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15407:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "15394:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15394:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15376:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15376:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "15420:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15426:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "15417:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15417:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "15435:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15445:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "15432:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15432:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15413:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15413:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15373:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15373:77:7"
															},
															"nodeType": "YulIf",
															"src": "15370:159:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15538:57:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "15580:4:7"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "15586:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "15561:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15561:34:7"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "15542:7:7",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "15551:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15640:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15642:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15642:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15642:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "15610:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15627:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "15623:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15623:6:7"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "15631:6:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "15619:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15619:19:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15607:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15607:32:7"
															},
															"nodeType": "YulIf",
															"src": "15604:58:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15671:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "15684:7:7"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "15693:6:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15680:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15680:20:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "15671:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "14930:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "14936:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "14949:5:7",
														"type": ""
													}
												],
												"src": "14900:806:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15781:61:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15791:45:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "15821:4:7"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "15827:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "15800:20:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15800:36:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "15791:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "15752:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "15758:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "15771:5:7",
														"type": ""
													}
												],
												"src": "15711:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15899:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15958:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15960:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15960:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15960:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15930:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15923:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15923:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "15916:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15916:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15938:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15949:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "15945:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15945:6:7"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15953:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "15941:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15941:14:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15935:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15935:21:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15912:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15912:45:7"
															},
															"nodeType": "YulIf",
															"src": "15909:71:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15989:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16004:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16007:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "16000:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16000:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "15989:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15878:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15881:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "15887:7:7",
														"type": ""
													}
												],
												"src": "15847:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16052:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16069:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16076:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16081:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16072:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16072:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16062:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16062:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16062:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16109:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16112:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16102:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16102:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16102:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16133:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16136:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16126:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16126:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16126:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "16020:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16190:74:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16213:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "16215:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16215:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16215:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16210:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16203:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16203:9:7"
															},
															"nodeType": "YulIf",
															"src": "16200:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16244:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16253:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16256:1:7"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "16249:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16249:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "16244:1:7"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16175:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16178:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "16184:1:7",
														"type": ""
													}
												],
												"src": "16152:112:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16376:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16386:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16398:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16409:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16394:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16394:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16386:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16428:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16443:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16451:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16439:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16439:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16421:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16421:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16421:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16345:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16356:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16367:4:7",
														"type": ""
													}
												],
												"src": "16269:194:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16642:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16659:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16670:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16652:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16652:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16652:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16693:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16704:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16689:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16689:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16709:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16682:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16682:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16732:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16743:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16728:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16728:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16748:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16721:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16721:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16721:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16803:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16814:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16799:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16799:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16819:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16792:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16792:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16792:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16837:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16849:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16860:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16845:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16845:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16837:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16619:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16633:4:7",
														"type": ""
													}
												],
												"src": "16468:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17049:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17066:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17077:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17059:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17059:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17059:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17100:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17111:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17096:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17096:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17116:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17089:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17089:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17089:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17139:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17150:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17135:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17135:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17155:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17128:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17128:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17128:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17199:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17211:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17222:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17207:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17207:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17199:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17026:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17040:4:7",
														"type": ""
													}
												],
												"src": "16875:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17410:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17427:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17438:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17420:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17420:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17420:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17461:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17472:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17457:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17457:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17477:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17450:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17450:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17450:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17500:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17511:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17496:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17496:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17516:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17489:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17489:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17489:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17571:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17582:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17567:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17567:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17587:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17560:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17560:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17560:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17603:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17615:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17626:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17611:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17611:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17603:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17387:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17401:4:7",
														"type": ""
													}
												],
												"src": "17236:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17815:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17832:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17843:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17825:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17825:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17825:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17866:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17877:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17862:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17862:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17882:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17855:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17855:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17855:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17905:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17916:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17901:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17901:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17921:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17894:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17894:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17894:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17976:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17987:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17972:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17972:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17992:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17965:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17965:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17965:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18006:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18018:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18029:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18014:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18014:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18006:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17792:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17806:4:7",
														"type": ""
													}
												],
												"src": "17641:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18218:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18235:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18246:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18228:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18228:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18228:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18269:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18280:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18265:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18265:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18285:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18258:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18258:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18258:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18308:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18319:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18304:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18304:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18324:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18297:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18297:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18297:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18379:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18390:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18375:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18375:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18395:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18368:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18368:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18368:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18412:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18424:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18435:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18420:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18420:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18412:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18195:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18209:4:7",
														"type": ""
													}
												],
												"src": "18044:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18624:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18641:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18652:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18634:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18634:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18634:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18675:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18686:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18671:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18671:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18691:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18664:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18664:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18664:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18714:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18725:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18710:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18710:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18730:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18703:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18703:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18703:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18785:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18796:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18781:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18781:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18801:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18774:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18774:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18774:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18816:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18828:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18839:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18824:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18824:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18816:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18601:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18615:4:7",
														"type": ""
													}
												],
												"src": "18450:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19028:231:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19045:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19056:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19038:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19038:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19038:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19079:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19090:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19075:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19075:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19095:2:7",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19068:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19068:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19068:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19118:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19129:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19114:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19114:18:7"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19134:34:7",
																		"type": "",
																		"value": "Transfer amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19107:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19107:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19107:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19189:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19200:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19185:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19185:18:7"
																	},
																	{
																		"hexValue": "7468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19205:11:7",
																		"type": "",
																		"value": "than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19178:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19178:39:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19178:39:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19226:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19238:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19249:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19234:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19234:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19226:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19005:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19019:4:7",
														"type": ""
													}
												],
												"src": "18854:405:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19438:230:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19455:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19466:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19448:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19448:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19448:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19489:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19500:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19485:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19485:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19505:2:7",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19478:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19478:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19478:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19528:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19539:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19524:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19524:18:7"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206578636565647320746865206d617854",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19544:34:7",
																		"type": "",
																		"value": "Transfer amount exceeds the maxT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19517:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19517:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19517:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19599:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19610:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19595:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19595:18:7"
																	},
																	{
																		"hexValue": "78416d6f756e742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19615:10:7",
																		"type": "",
																		"value": "xAmount."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19588:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19588:38:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19588:38:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19635:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19647:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19658:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19643:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19643:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19635:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19415:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19429:4:7",
														"type": ""
													}
												],
												"src": "19264:404:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19719:74:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19742:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19744:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19744:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19744:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19739:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19732:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19732:9:7"
															},
															"nodeType": "YulIf",
															"src": "19729:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19773:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19782:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19785:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19778:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19778:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19773:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19704:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19707:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19713:1:7",
														"type": ""
													}
												],
												"src": "19673:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19846:80:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19873:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19875:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19875:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19875:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19862:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19869:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "19865:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19865:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19859:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19859:13:7"
															},
															"nodeType": "YulIf",
															"src": "19856:39:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19904:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19915:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19918:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19911:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19911:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "19904:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19829:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19832:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19838:3:7",
														"type": ""
													}
												],
												"src": "19798:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20105:233:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20122:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20133:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20115:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20115:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20115:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20156:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20167:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20152:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20152:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20172:2:7",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20145:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20145:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20145:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20195:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20206:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20191:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20191:18:7"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20211:34:7",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20184:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20184:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20184:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20266:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20277:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20262:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20262:18:7"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20282:13:7",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20255:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20255:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20255:41:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20305:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20317:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20328:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20313:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20313:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20305:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20082:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20096:4:7",
														"type": ""
													}
												],
												"src": "19931:407:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint8_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_bytes32_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint8_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_array$_t_uint8_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let _1 := 32\n        value1 := calldataload(add(headStart, _1))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_uint8_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, shl(5, _4)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value := calldataload(src)\n            if iszero(eq(value, and(value, 0xff)))\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value4 := dst_1\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _2) { revert(0, 0) }\n        value5 := abi_decode_array_bytes32_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 192))\n        if gt(offset_2, _2) { revert(0, 0) }\n        value6 := abi_decode_array_bytes32_dyn(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let dst := allocate_memory(array_allocation_size_array_uint8_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := abi_decode_address(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Amount must be less than total r\")\n        mstore(add(headStart, 96), \"eflections\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Account is already excluded\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Excluded addresses cannot call t\")\n        mstore(add(headStart, 96), \"his function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Amount must be less than supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Expired deadline\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Unique id exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function increment_t_uint64(value) -> ret\n    {\n        let _1 := 0xffffffffffffffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid signers\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer amount must be greater \")\n        mstore(add(headStart, 96), \"than zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Transfer amount exceeds the maxT\")\n        mstore(add(headStart, 96), \"xAmount.\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x213 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52390C02 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xA3772662 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD543DBEB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD543DBEB EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0xF9342285 EQ PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3772662 EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xA6E57D99 EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0x7D1DB4A5 EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0x88F82020 EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52390C02 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3685D419 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x437823EC GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x4549B039 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x46F0975A EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x4990560F EQ PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3685D419 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x3B124FE7 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x3BD5D173 EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13114A9D GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x13114A9D EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x2D838119 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61C82D0 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x7C351DD EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x21A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x2211 JUMP JUMPDEST PUSH2 0x705 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH2 0x712 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x222A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x263 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6D SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x263 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6B SLOAD PUSH2 0x2E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x324 CALLDATASIZE PUSH1 0x4 PUSH2 0x22E0 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x2211 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x70 SLOAD PUSH2 0x2E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x8AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2211 JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH2 0x40F CALLDATASIZE PUSH1 0x4 PUSH2 0x231C JUMP JUMPDEST PUSH2 0xB8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x2351 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0xC78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x466 CALLDATASIZE PUSH1 0x4 PUSH2 0x2472 JUMP JUMPDEST PUSH2 0xCBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x486 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0xF84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x4A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH2 0x509 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x10B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x1114 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x554 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x263 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH2 0x1128 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x5CA CALLDATASIZE PUSH1 0x4 PUSH2 0x258E JUMP JUMPDEST PUSH2 0x1137 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x5EA CALLDATASIZE PUSH1 0x4 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x11D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x60A CALLDATASIZE PUSH1 0x4 PUSH2 0x2694 JUMP JUMPDEST PUSH2 0x1222 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x62A CALLDATASIZE PUSH1 0x4 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x146A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x64A CALLDATASIZE PUSH1 0x4 PUSH2 0x2211 JUMP JUMPDEST PUSH2 0x1477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH2 0x66A CALLDATASIZE PUSH1 0x4 PUSH2 0x272E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x6B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x149D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x6D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x14C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x6F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2211 JUMP JUMPDEST PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x70D PUSH2 0x153C JUMP JUMPDEST PUSH1 0x71 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6E DUP1 SLOAD PUSH2 0x721 SWAP1 PUSH2 0x2761 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x74D SWAP1 PUSH2 0x2761 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x76F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x77D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 CALLER DUP5 DUP5 PUSH2 0x1596 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C8 DUP5 DUP5 DUP5 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x81A DUP5 CALLER PUSH2 0x815 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A08 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1596 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6C SLOAD DUP3 GT ISZERO PUSH2 0x890 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x89A PUSH2 0x191B JUMP JUMPDEST SWAP1 POP PUSH2 0x8A6 DUP4 DUP3 PUSH2 0x193E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x8B5 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6A SLOAD DUP2 LT ISZERO PUSH2 0xA3E JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6A DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x947 JUMPI PUSH2 0x947 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA2C JUMPI PUSH1 0x6A DUP1 SLOAD PUSH2 0x972 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x982 JUMPI PUSH2 0x982 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x6A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x9AE JUMPI PUSH2 0x9AE PUSH2 0x279C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP5 AND DUP2 MSTORE PUSH1 0x66 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x69 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x6A DUP1 SLOAD DUP1 PUSH2 0xA06 JUMPI PUSH2 0xA06 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH2 0xA36 DUP2 PUSH2 0x27F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x920 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x7B1 SWAP2 DUP6 SWAP1 PUSH2 0x815 SWAP1 DUP7 PUSH2 0x194A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636C75646564206164647265737365732063616E6E6F742063616C6C2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF8 DUP4 PUSH2 0x1956 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xB22 SWAP1 DUP3 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x6C SLOAD PUSH2 0xB48 SWAP1 DUP3 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x6C SSTORE PUSH1 0x6D SLOAD PUSH2 0xB58 SWAP1 DUP5 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x6D SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xB68 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6B SLOAD DUP4 GT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x887 JUMP JUMPDEST DUP2 PUSH2 0xBFE JUMPI PUSH1 0x0 PUSH2 0xBF0 DUP5 PUSH2 0x1956 JUMP JUMPDEST POP SWAP3 SWAP5 POP PUSH2 0x7B5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC09 DUP5 PUSH2 0x1956 JUMP JUMPDEST POP SWAP2 SWAP5 POP PUSH2 0x7B5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x74 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x79A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC51 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC80 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4578706972656420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x556E6971756520696420657869737473 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x887 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xD66 PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 DUP7 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP12 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP9 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0xF0C JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 DUP12 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xDFA JUMPI PUSH2 0xDFA PUSH2 0x279C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xE1D JUMPI PUSH2 0xE1D PUSH2 0x279C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xE40 JUMPI PUSH2 0xE40 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xE7E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT DUP1 ISZERO PUSH2 0xEE5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xEF8 JUMPI DUP3 PUSH2 0xEF4 DUP2 PUSH2 0x2810 JUMP JUMPDEST SWAP4 POP POP JUMPDEST SWAP3 POP DUP1 PUSH2 0xF04 DUP2 PUSH2 0x2830 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDC8 JUMP JUMPDEST POP DUP1 PUSH1 0xFF AND PUSH1 0x3 EQ PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C6964207369676E657273 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xF75 DUP13 DUP12 PUSH2 0x146A JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF8C PUSH2 0x153C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x104F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1035 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6A DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0x116FEA137DB6E131133E7F2BAB296045D8F41CC5607279DB17B218CAB0929A51 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10F2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7B5 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH2 0x111C PUSH2 0x153C JUMP JUMPDEST PUSH2 0x1126 PUSH1 0x0 PUSH2 0x19A8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6F DUP1 SLOAD PUSH2 0x721 SWAP1 PUSH2 0x2761 JUMP JUMPDEST PUSH2 0x113F PUSH2 0x153C JUMP JUMPDEST PUSH2 0x11A6 PUSH1 0x74 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1198 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x117A JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH1 0x75 PUSH2 0x19FA JUMP JUMPDEST PUSH2 0x11B2 PUSH1 0x74 PUSH1 0x0 PUSH2 0x2105 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x11C5 SWAP1 PUSH1 0x74 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2123 JUMP JUMPDEST POP PUSH2 0xCB9 DUP2 PUSH1 0x1 PUSH1 0x75 PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 CALLER DUP5 PUSH2 0x815 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A30 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x1242 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x125C JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x125C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x12BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x12E2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x12EA PUSH2 0x1A78 JUMP JUMPDEST DUP8 MLOAD PUSH2 0x12FD SWAP1 PUSH1 0x6E SWAP1 PUSH1 0x20 DUP12 ADD SWAP1 PUSH2 0x2188 JUMP JUMPDEST POP DUP7 MLOAD PUSH2 0x1311 SWAP1 PUSH1 0x6F SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x2188 JUMP JUMPDEST POP PUSH1 0x70 DUP7 SWAP1 SSTORE PUSH2 0x1322 DUP7 PUSH1 0xA PUSH2 0x293B JUMP JUMPDEST PUSH2 0x132C SWAP1 DUP7 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x6B DUP2 SWAP1 SSTORE PUSH2 0x133D SWAP1 PUSH1 0x0 NOT PUSH2 0x297C JUMP JUMPDEST PUSH2 0x1349 SWAP1 PUSH1 0x0 NOT PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x6C SSTORE PUSH1 0x71 DUP5 SWAP1 SSTORE PUSH1 0x72 DUP5 SWAP1 SSTORE PUSH1 0x70 SLOAD PUSH2 0x1364 SWAP1 PUSH1 0xA PUSH2 0x293B JUMP JUMPDEST PUSH2 0x136E SWAP1 DUP5 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x73 SSTORE PUSH1 0x6C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x68 SWAP1 MSTORE DUP2 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE ADDRESS DUP4 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x13C1 DUP3 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x13CA ADDRESS PUSH2 0xF84 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x6B SLOAD PUSH1 0x40 MLOAD PUSH2 0x1412 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 ISZERO PUSH2 0x1460 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 CALLER DUP5 DUP5 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x147F PUSH2 0x153C JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH2 0x148D SWAP1 PUSH1 0xA PUSH2 0x293B JUMP JUMPDEST PUSH2 0x1497 SWAP1 DUP3 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x73 SSTORE POP JUMP JUMPDEST PUSH2 0x14A5 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x14CE PUSH2 0x153C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1533 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH2 0xCB9 DUP2 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1126 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x171E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1780 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x17E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x180E JUMPI POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1876 JUMPI PUSH1 0x73 SLOAD DUP2 GT ISZERO PUSH2 0x1876 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206578636565647320746865206D617854 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3C20B6B7BAB73A17 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1881 ADDRESS PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x73 SLOAD DUP2 LT PUSH2 0x1891 JUMPI POP PUSH1 0x73 SLOAD JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x18D3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x18DC JUMPI POP PUSH1 0x0 JUMPDEST PUSH2 0x18E8 DUP6 DUP6 DUP6 DUP5 PUSH2 0x1AA7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1913 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x222A JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1928 PUSH2 0x1C18 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1937 DUP3 DUP3 PUSH2 0x193E JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 DUP3 DUP5 PUSH2 0x2990 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 DUP3 DUP5 PUSH2 0x29A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x196A DUP9 PUSH2 0x1D9A JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1985 DUP12 DUP6 PUSH2 0x1980 PUSH2 0x191B JUMP JUMPDEST PUSH2 0x1DC1 JUMP JUMPDEST SWAP2 SWAP14 SWAP1 SWAP13 POP SWAP1 SWAP11 POP SWAP5 SWAP9 POP SWAP3 SWAP7 POP SWAP3 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 DUP3 DUP5 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0x1A72 JUMPI DUP3 DUP3 PUSH1 0x0 DUP7 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0x1A2E JUMPI PUSH2 0x1A2E PUSH2 0x279C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x1A6A DUP2 PUSH2 0x2830 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19FD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x887 SWAP1 PUSH2 0x29BC JUMP JUMPDEST PUSH2 0x1126 PUSH2 0x1DFD JUMP JUMPDEST DUP1 PUSH2 0x1AB4 JUMPI PUSH2 0x1AB4 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1AF5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1B0A JUMPI PUSH2 0x1B05 DUP5 DUP5 DUP5 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x1C08 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1B4B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1B5B JUMPI PUSH2 0x1B05 DUP5 DUP5 DUP5 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1B9D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1BAD JUMPI PUSH2 0x1B05 DUP5 DUP5 DUP5 PUSH2 0x2002 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1BED JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1BFD JUMPI PUSH2 0x1B05 DUP5 DUP5 DUP5 PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x1C08 DUP5 DUP5 DUP5 PUSH2 0x2002 JUMP JUMPDEST DUP1 PUSH2 0x1A72 JUMPI PUSH2 0x1A72 PUSH1 0x72 SLOAD PUSH1 0x71 SSTORE JUMP JUMPDEST PUSH1 0x6C SLOAD PUSH1 0x6B SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0x6A SLOAD DUP2 LT ISZERO PUSH2 0x1D6A JUMPI DUP3 PUSH1 0x65 PUSH1 0x0 PUSH1 0x6A DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C47 JUMPI PUSH2 0x1C47 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT DUP1 PUSH2 0x1CB2 JUMPI POP DUP2 PUSH1 0x66 PUSH1 0x0 PUSH1 0x6A DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C8B JUMPI PUSH2 0x1C8B PUSH2 0x279C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x1CC8 JUMPI PUSH1 0x6C SLOAD PUSH1 0x6B SLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1D0E PUSH1 0x65 PUSH1 0x0 PUSH1 0x6A DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1CE2 JUMPI PUSH2 0x1CE2 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH2 0x199C JUMP JUMPDEST SWAP3 POP PUSH2 0x1D56 PUSH1 0x66 PUSH1 0x0 PUSH1 0x6A DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D2A JUMPI PUSH2 0x1D2A PUSH2 0x279C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x199C JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1D62 DUP2 PUSH2 0x27F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C25 JUMP JUMPDEST POP PUSH1 0x6B SLOAD PUSH1 0x6C SLOAD PUSH2 0x1D7A SWAP2 PUSH2 0x193E JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1D91 JUMPI PUSH1 0x6C SLOAD PUSH1 0x6B SLOAD SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1DA8 DUP5 PUSH2 0x20B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DB6 DUP6 DUP4 PUSH2 0x199C JUMP JUMPDEST SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x1DD0 DUP8 DUP7 PUSH2 0x20D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DDE DUP8 DUP8 PUSH2 0x20D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DEC DUP4 DUP4 PUSH2 0x199C JUMP JUMPDEST SWAP3 SWAP10 SWAP3 SWAP9 POP SWAP1 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x887 SWAP1 PUSH2 0x29BC JUMP JUMPDEST PUSH2 0x1126 CALLER PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH2 0x1E36 JUMPI JUMP JUMPDEST PUSH1 0x71 DUP1 SLOAD PUSH1 0x72 SSTORE PUSH1 0x0 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1E54 DUP7 PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP5 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1E84 SWAP1 DUP8 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x65 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1EB3 SWAP1 DUP7 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP10 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1EE2 SWAP1 DUP6 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1F05 DUP4 DUP3 PUSH2 0x20E1 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F4A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1F6D DUP7 PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP5 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1F9D SWAP1 DUP7 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP11 AND DUP2 MSTORE PUSH1 0x66 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x1FD3 SWAP1 DUP4 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x65 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1EE2 SWAP1 DUP6 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2013 DUP7 PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP5 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1EB3 SWAP1 DUP7 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2054 DUP7 PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP5 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x2084 SWAP1 DUP8 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x65 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1F9D SWAP1 DUP7 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B5 PUSH1 0x64 PUSH2 0x20CF PUSH1 0x71 SLOAD DUP6 PUSH2 0x20D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 DUP3 DUP5 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x6C SLOAD PUSH2 0x20EE SWAP1 DUP4 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x6C SSTORE PUSH1 0x6D SLOAD PUSH2 0x20FE SWAP1 DUP3 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x6D SSTORE POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xCB9 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2178 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2178 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2143 JUMP JUMPDEST POP PUSH2 0x2184 SWAP3 SWAP2 POP PUSH2 0x21FC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2194 SWAP1 PUSH2 0x2761 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x21B6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2178 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x21CF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2178 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2178 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2178 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x21E1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2184 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2257 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x223B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2269 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A6 DUP3 PUSH2 0x227F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22D2 DUP4 PUSH2 0x227F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22FE DUP5 PUSH2 0x227F JUMP JUMPDEST SWAP3 POP PUSH2 0x230C PUSH1 0x20 DUP6 ADD PUSH2 0x227F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x232F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2392 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x236D JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x23DC JUMPI PUSH2 0x23DC PUSH2 0x239E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x23FD JUMPI PUSH2 0x23FD PUSH2 0x239E JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x242D PUSH2 0x2428 DUP4 PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0x23B4 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x244C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2467 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2450 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x248D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2496 DUP9 PUSH2 0x227F JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP1 DUP10 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x24C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24EA PUSH2 0x2428 DUP3 PUSH2 0x23E4 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP15 DUP4 GT ISZERO PUSH2 0x2509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x2537 JUMPI DUP5 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2528 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x250E JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x254F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255B DUP13 DUP5 DUP14 ADD PUSH2 0x2407 JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x2571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x257F DUP11 DUP3 DUP12 ADD PUSH2 0x2407 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x25B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x25C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x25D6 PUSH2 0x2428 DUP3 PUSH2 0x23E4 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x25F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x261A JUMPI PUSH2 0x260B DUP5 PUSH2 0x227F JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x25FA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x264F JUMPI PUSH2 0x264F PUSH2 0x239E JUMP JUMPDEST PUSH2 0x2662 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x23B4 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x26AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x26C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26D2 DUP12 DUP4 DUP13 ADD PUSH2 0x2625 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x26E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26F5 DUP11 DUP3 DUP12 ADD PUSH2 0x2625 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2720 PUSH1 0xC0 DUP10 ADD PUSH2 0x227F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x274A DUP4 PUSH2 0x227F JUMP JUMPDEST SWAP2 POP PUSH2 0x2758 PUSH1 0x20 DUP5 ADD PUSH2 0x227F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2775 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2796 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x27DA JUMPI PUSH2 0x27DA PUSH2 0x27B2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2809 JUMPI PUSH2 0x2809 PUSH2 0x27B2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x2827 JUMPI PUSH2 0x2827 PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x284D JUMPI PUSH2 0x284D PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2892 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2878 JUMPI PUSH2 0x2878 PUSH2 0x27B2 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2885 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x285C JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x28A9 JUMPI POP PUSH1 0x1 PUSH2 0x7B5 JUMP JUMPDEST DUP2 PUSH2 0x28B6 JUMPI POP PUSH1 0x0 PUSH2 0x7B5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x28CC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x28D6 JUMPI PUSH2 0x28F2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x28E7 JUMPI PUSH2 0x28E7 PUSH2 0x27B2 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x7B5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2915 JUMPI POP DUP2 DUP2 EXP PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x291F DUP4 DUP4 PUSH2 0x2857 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2933 JUMPI PUSH2 0x2933 PUSH2 0x27B2 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 DUP4 DUP4 PUSH2 0x289A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2961 JUMPI PUSH2 0x2961 PUSH2 0x27B2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x298B JUMPI PUSH2 0x298B PUSH2 0x2966 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x299F JUMPI PUSH2 0x299F PUSH2 0x2966 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x29B7 JUMPI PUSH2 0x29B7 PUSH2 0x27B2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20646563 PUSH19 0x656173656420616C6C6F77616E63652062656C PUSH16 0x77207A65726FA2646970667358221220 LT SWAP1 0xD1 SWAP14 PUSH7 0xB6CC32F73BE65A 0x26 0xED PUSH4 0x9F66C6B3 0xB3 POP PUSH26 0x9A09786E789A3B1447AE64736F6C634300080B00330000000000 ",
							"sourceMap": "385:21085:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7402:96;;;;;;;;;;-1:-1:-1;7402:96:6;;;;;:::i;:::-;;:::i;:::-;;2307:83;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20014:109;;;;;;;;;;-1:-1:-1;20014:109:6;;;;;:::i;:::-;-1:-1:-1;;;;;20096:19:6;20072:4;20096:19;;;:11;:19;;;;;;;;;20014:109;;;;1335:14:7;;1328:22;1310:41;;1298:2;1283:18;20014:109:6;1170:187:7;3394:193:6;;;;;;;;;;-1:-1:-1;3394:193:6;;;;;:::i;:::-;;:::i;4893:87::-;;;;;;;;;;-1:-1:-1;4962:10:6;;4893:87;;;1767:25:7;;;1755:2;1740:18;4893:87:6;1621:177:7;2686:95:6;;;;;;;;;;-1:-1:-1;2766:7:6;;2686:95;;3595:446;;;;;;;;;;-1:-1:-1;3595:446:6;;;;;:::i;:::-;;:::i;5896:322::-;;;;;;;;;;-1:-1:-1;5896:322:6;;;;;:::i;:::-;;:::i;2493:85::-;;;;;;;;;;-1:-1:-1;2561:9:6;;2493:85;;6680:477;;;;;;;;;;-1:-1:-1;6680:477:6;;;;;:::i;:::-;;:::i;4049:300::-;;;;;;;;;;-1:-1:-1;4049:300:6;;;;;:::i;:::-;;:::i;1086:22::-;;;;;;;;;;;;;;;;4988:417;;;;;;;;;;-1:-1:-1;4988:417:6;;;;;:::i;:::-;;:::i;7165:111::-;;;;;;;;;;-1:-1:-1;7165:111:6;;;;;:::i;:::-;;:::i;5413:475::-;;;;;;;;;;-1:-1:-1;5413:475:6;;;;;:::i;:::-;;:::i;19665:94::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;10745:107::-;;;;;;;;;;;;;:::i;20380:1087::-;;;;;;;;;;-1:-1:-1;20380:1087:6;;;;;:::i;:::-;;:::i;6226:446::-;;;;;;;;;;-1:-1:-1;6226:446:6;;;;;:::i;:::-;;:::i;11358:124::-;;;;;;;;;;-1:-1:-1;11358:124:6;;;;;:::i;:::-;-1:-1:-1;;;;;11447:27:6;11423:4;11447:27;;;:18;:27;;;;;;;;;11358:124;2586:92;;;;;;;;;;-1:-1:-1;2660:10:6;;;;;;;;;;;;-1:-1:-1;;;2660:10:6;;;;2586:92;;2789:198;;;;;;;;;;-1:-1:-1;2789:198:6;;;;;:::i;:::-;;:::i;2071:101:0:-;;;;;;;;;;;;;:::i;1153:27:6:-;;;;;;;;;;;;;;;;4765:120;;;;;;;;;;-1:-1:-1;4765:120:6;;;;;:::i;:::-;-1:-1:-1;;;;;4857:20:6;4833:4;4857:20;;;:11;:20;;;;;;;;;4765:120;1441:85:0;;;;;;;;;;-1:-1:-1;1513:6:0;;1441:85;;-1:-1:-1;;;;;1513:6:0;;;6370:51:7;;6358:2;6343:18;1441:85:0;6224:203:7;2398:87:6;;;;;;;;;;;;;:::i;19767:239::-;;;;;;;;;;-1:-1:-1;19767:239:6;;;;;:::i;:::-;;:::i;4357:400::-;;;;;;;;;;-1:-1:-1;4357:400:6;;;;;:::i;:::-;;:::i;1328:971::-;;;;;;;;;;-1:-1:-1;1328:971:6;;;;;:::i;:::-;;:::i;2995:199::-;;;;;;;;;;-1:-1:-1;2995:199:6;;;;;:::i;:::-;;:::i;7506:126::-;;;;;;;;;;-1:-1:-1;7506:126:6;;;;;:::i;:::-;;:::i;3202:184::-;;;;;;;;;;-1:-1:-1;3202:184:6;;;;;:::i;:::-;-1:-1:-1;;;;;3351:18:6;;;3319:7;3351:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3202:184;7284:110;;;;;;;;;;-1:-1:-1;7284:110:6;;;;;:::i;:::-;;:::i;2321:198:0:-;;;;;;;;;;-1:-1:-1;2321:198:0;;;;;:::i;:::-;;:::i;1273:46:6:-;;;;;;;;;;-1:-1:-1;1273:46:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;7402:96;1334:13:0;:11;:13::i;:::-;7474:7:6::1;:16:::0;7402:96::o;2307:83::-;2344:13;2377:5;2370:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2307:83;:::o;3394:193::-;3496:4;3518:39;929:10:4;3541:7:6;3550:6;3518:8;:39::i;:::-;-1:-1:-1;3575:4:6;3394:193;;;;;:::o;3595:446::-;3727:4;3744:36;3754:6;3762:9;3773:6;3744:9;:36::i;:::-;3791:220;3814:6;929:10:4;3862:138:6;3918:6;3862:138;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3862:19:6;;;;;;:11;:19;;;;;;;;929:10:4;3862:33:6;;;;;;;;;;:37;:138::i;:::-;3791:8;:220::i;:::-;-1:-1:-1;4029:4:6;3595:446;;;;;:::o;5896:322::-;5990:7;6048;;6037;:18;;6015:110;;;;-1:-1:-1;;;6015:110:6;;9618:2:7;6015:110:6;;;9600:21:7;9657:2;9637:18;;;9630:30;9696:34;9676:18;;;9669:62;-1:-1:-1;;;9747:18:7;;;9740:40;9797:19;;6015:110:6;;;;;;;;;6136:19;6158:10;:8;:10::i;:::-;6136:32;-1:-1:-1;6186:24:6;:7;6136:32;6186:11;:24::i;:::-;6179:31;5896:322;-1:-1:-1;;;5896:322:6:o;6680:477::-;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6760:20:6;::::1;;::::0;;;:11:::1;:20;::::0;;;;;::::1;;6752:60;;;::::0;-1:-1:-1;;;6752:60:6;;10029:2:7;6752:60:6::1;::::0;::::1;10011:21:7::0;10068:2;10048:18;;;10041:30;10107:29;10087:18;;;10080:57;10154:18;;6752:60:6::1;9827:351:7::0;6752:60:6::1;6828:9;6823:327;6847:9;:16:::0;6843:20;::::1;6823:327;;;6905:7;-1:-1:-1::0;;;;;6889:23:6::1;:9;6899:1;6889:12;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;6889:12:6::1;:23;6885:254;;;6948:9;6958:16:::0;;:20:::1;::::0;6977:1:::1;::::0;6958:20:::1;:::i;:::-;6948:31;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;6933:9:::1;:12:::0;;-1:-1:-1;;;;;6948:31:6;;::::1;::::0;6943:1;;6933:12;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:46:::0;;-1:-1:-1;;;;;;6933:46:6::1;-1:-1:-1::0;;;;;6933:46:6;;::::1;;::::0;;6998:16;;::::1;::::0;;:7:::1;:16:::0;;;;;;:20;;;7037:11:::1;:20:::0;;;;:28;;-1:-1:-1;;7037:28:6::1;::::0;;7084:9:::1;:15:::0;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;7084:15:6;;;;;-1:-1:-1;;;;;;7084:15:6::1;::::0;;;;;6823:327:::1;6680:477:::0;:::o;6885:254::-:1;6865:3:::0;::::1;::::0;::::1;:::i;:::-;;;;6823:327;;;;6680:477:::0;:::o;4049:300::-;929:10:4;4164:4:6;4258:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;4258:34:6;;;;;;;;;;4164:4;;4186:133;;4236:7;;4258:50;;4297:10;4258:38;:50::i;4988:417::-;929:10:4;5040:14:6;5103:19;;;:11;:19;;;;;;;;5102:20;5080:114;;;;-1:-1:-1;;;5080:114:6;;11051:2:7;5080:114:6;;;11033:21:7;11090:2;11070:18;;;11063:30;11129:34;11109:18;;;11102:62;-1:-1:-1;;;11180:18:7;;;11173:42;11232:19;;5080:114:6;10849:408:7;5080:114:6;5206:15;5233:19;5244:7;5233:10;:19::i;:::-;-1:-1:-1;;;;;;;;;5281:15:6;;;;;;:7;:15;;;;;;5205:47;;-1:-1:-1;5281:28:6;;5205:47;5281:19;:28::i;:::-;-1:-1:-1;;;;;5263:15:6;;;;;;:7;:15;;;;;:46;5330:7;;:20;;5342:7;5330:11;:20::i;:::-;5320:7;:30;5374:10;;:23;;5389:7;5374:14;:23::i;:::-;5361:10;:36;-1:-1:-1;;;4988:417:6:o;7165:111::-;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;7234:27:6::1;;::::0;;;:18:::1;:27;::::0;;;;:34;;-1:-1:-1;;7234:34:6::1;7264:4;7234:34;::::0;;7165:111::o;5413:475::-;5531:7;5575;;5564;:18;;5556:62;;;;-1:-1:-1;;;5556:62:6;;11464:2:7;5556:62:6;;;11446:21:7;11503:2;11483:18;;;11476:30;11542:33;11522:18;;;11515:61;11593:18;;5556:62:6;11262:355:7;5556:62:6;5634:17;5629:252;;5669:15;5696:19;5707:7;5696:10;:19::i;:::-;-1:-1:-1;5668:47:6;;-1:-1:-1;5730:14:6;;-1:-1:-1;;;;5730:14:6;5629:252;5780:23;5813:19;5824:7;5813:10;:19::i;:::-;-1:-1:-1;5777:55:6;;-1:-1:-1;5847:22:6;;-1:-1:-1;;;;5847:22:6;19665:94;19707:16;19743:8;19736:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19736:15:6;;;;;;;;;;;;;;;;;;;;;;19665:94;:::o;10745:107::-;1334:13:0;:11;:13::i;:::-;1513:6;;10796:48:6::1;::::0;-1:-1:-1;;;;;1513:6:0;;;;10822:21:6::1;10796:48:::0;::::1;;;::::0;::::1;::::0;;;10822:21;1513:6:0;10796:48:6;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;10745:107::o:0;20380:1087::-;20650:15;20638:8;:27;;20630:56;;;;-1:-1:-1;;;20630:56:6;;11824:2:7;20630:56:6;;;11806:21:7;11863:2;11843:18;;;11836:30;-1:-1:-1;;;11882:18:7;;;11875:46;11938:18;;20630:56:6;11622:340:7;20630:56:6;20706:24;;;;:14;:24;;;;;;;;20705:25;20697:54;;;;-1:-1:-1;;;20697:54:6;;12169:2:7;20697:54:6;;;12151:21:7;12208:2;12188:18;;;12181:30;-1:-1:-1;;;12227:18:7;;;12220:46;12283:18;;20697:54:6;11967:340:7;20697:54:6;20781:10;20764:14;20818:13;1513:6:0;;-1:-1:-1;;;;;1513:6:0;;1441:85;20818:13:6;20891:64;;;-1:-1:-1;;;;;12655:15:7;;;20891:64:6;;;12637:34:7;12707:15;;;12687:18;;;12680:43;;;;12759:15;;;12739:18;;;12732:43;12791:18;;;12784:34;;;12834:19;;;12827:35;;;12878:19;;;12871:35;;;20802:29:6;;-1:-1:-1;20844:20:6;;12571:19:7;;20891:64:6;;;;;;;;;;;;20867:99;;;;;;20844:122;;20979:16;21019:21;21060:8;21055:262;21078:1;:8;21074:1;-1:-1:-1;;;;;21074:12:6;;21055:262;;;21108:17;21128:41;21138:12;21152:1;21154;-1:-1:-1;;;;;21152:4:6;;;;;;;;;:::i;:::-;;;;;;;21158:1;21160;-1:-1:-1;;;;;21158:4:6;;;;;;;;;:::i;:::-;;;;;;;21164:1;21166;-1:-1:-1;;;;;21164:4:6;;;;;;;;;:::i;:::-;;;;;;;21128:41;;;;;;;;;;;;;;;;;13144:25:7;;;13217:4;13205:17;;;;13200:2;13185:18;;13178:45;13254:2;13239:18;;13232:34;13297:2;13282:18;;13275:34;13131:3;13116:19;;12917:398;21128:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21108:61;;21200:8;-1:-1:-1;;;;;21188:20:6;:9;-1:-1:-1;;;;;21188:20:6;;:46;;;;-1:-1:-1;;;;;;21212:22:6;;;;;;:11;:22;;;;;;;;21188:46;21184:86;;;21253:17;;;;:::i;:::-;;;;21184:86;21296:9;-1:-1:-1;21088:3:6;;;;:::i;:::-;;;;21055:262;;;;21337:15;:20;;21356:1;21337:20;21329:48;;;;-1:-1:-1;;;21329:48:6;;13916:2:7;21329:48:6;;;13898:21:7;13955:2;13935:18;;;13928:30;-1:-1:-1;;;13974:18:7;;;13967:45;14029:18;;21329:48:6;13714:339:7;21329:48:6;21390:24;;;;:14;:24;;;;;:31;;-1:-1:-1;;21390:31:6;21417:4;21390:31;;;21432:27;21441:9;21452:6;21432:8;:27::i;:::-;;20619:848;;;;;20380:1087;;;;;;;:::o;6226:446::-;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6421:20:6;::::1;;::::0;;;:11:::1;:20;::::0;;;;;::::1;;6420:21;6412:61;;;::::0;-1:-1:-1;;;6412:61:6;;10029:2:7;6412:61:6::1;::::0;::::1;10011:21:7::0;10068:2;10048:18;;;10041:30;10107:29;10087:18;;;10080:57;10154:18;;6412:61:6::1;9827:351:7::0;6412:61:6::1;-1:-1:-1::0;;;;;6488:16:6;::::1;6507:1;6488:16:::0;;;:7:::1;:16;::::0;;;;;:20;6484:109:::1;;-1:-1:-1::0;;;;;6564:16:6;::::1;;::::0;;;:7:::1;:16;::::0;;;;;6544:37:::1;::::0;:19:::1;:37::i;:::-;-1:-1:-1::0;;;;;6525:16:6;::::1;;::::0;;;:7:::1;:16;::::0;;;;:56;6484:109:::1;-1:-1:-1::0;;;;;6603:20:6::1;;::::0;;;:11:::1;:20;::::0;;;;:27;;-1:-1:-1;;6603:27:6::1;6626:4;6603:27:::0;;::::1;::::0;;;6641:9:::1;:23:::0;;;;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;6641:23:6::1;::::0;;::::1;::::0;;6226:446::o;2789:198::-;-1:-1:-1;;;;;2879:20:6;;2855:7;2879:20;;;:11;:20;;;;;;;;2875:49;;;-1:-1:-1;;;;;;2908:16:6;;;;;:7;:16;;;;;;;2789:198::o;2875:49::-;-1:-1:-1;;;;;2962:16:6;;;;;;:7;:16;;;;;;2942:37;;:19;:37::i;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;2398:87:6:-;2437:13;2470:7;2463:14;;;;;:::i;19767:239::-;1334:13:0;:11;:13::i;:::-;19852:40:6::1;19863:8;19852:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;19852:40:6::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;19873:5;19880:11;19852:10;:40::i;:::-;19903:15;19910:8;;19903:15;:::i;:::-;19929:19:::0;;::::1;::::0;:8:::1;::::0;:19:::1;::::0;::::1;::::0;::::1;:::i;:::-;;19959:39;19970:8;19980:4;19986:11;19959:10;:39::i;4357:400::-:0;4477:4;4499:228;929:10:4;4549:7:6;4571:145;4628:15;4571:145;;;;;;;;;;;;;;;;;929:10:4;4571:25:6;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;4571:34:6;;;;;;;;;;;;:38;:145::i;1328:971::-;3111:19:1;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:1;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:1;1476:19:3;:23;;;3219:66:1;;-1:-1:-1;3268:12:1;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:1;;14260:2:7;3157:201:1;;;14242:21:7;14299:2;14279:18;;;14272:30;14338:34;14318:18;;;14311:62;-1:-1:-1;;;14389:18:7;;;14382:44;14443:19;;3157:201:1;14058:410:7;3157:201:1;3368:12;:16;;-1:-1:-1;;3368:16:1;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:1;;;;;3394:65;1618:16:6::1;:14;:16::i;:::-;1647:13:::0;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1671:17:6;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1699:9:6::1;:21:::0;;;1751:13:::1;1711:9:::0;1751:2:::1;:13;:::i;:::-;1741:23;::::0;:7;:23:::1;:::i;:::-;1731:7;:33:::0;;;1793:13:::1;::::0;-1:-1:-1;;1793:13:6::1;:::i;:::-;1786:21;::::0;-1:-1:-1;;1786:21:6::1;:::i;:::-;1775:7;:33:::0;1819:7:::1;:16:::0;;;1846:15:::1;:24:::0;;;1913:9:::1;::::0;1909:13:::1;::::0;:2:::1;:13;:::i;:::-;1896:26;::::0;:10;:26:::1;:::i;:::-;1881:12;:41:::0;1957:7:::1;::::0;-1:-1:-1;;;;;1935:19:6;::::1;;::::0;;;:7:::1;:19;::::0;;;;;;;:29;;;;2029:18:::1;:30:::0;;;;;:37;;2062:4:::1;-1:-1:-1::0;;2029:37:6;;::::1;::::0;::::1;::::0;;;2104:4:::1;2077:33:::0;;;;;;:40;;;;::::1;;::::0;;2128:29:::1;1935:19:::0;2128:17:::1;:29::i;:::-;2168:32;2194:4;2168:17;:32::i;:::-;2271:10;-1:-1:-1::0;;;;;2250:41:6::1;2267:1;-1:-1:-1::0;;;;;2250:41:6::1;;2283:7;;2250:41;;;;1767:25:7::0;;1755:2;1740:18;;1621:177;2250:41:6::1;;;;;;;;3483:14:1::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:1;;;3553:14;;-1:-1:-1;16421:36:7;;3553:14:1;;16409:2:7;16394:18;3553:14:1;;;;;;;3479:99;3101:483;1328:971:6;;;;;;;:::o;2995:199::-;3100:4;3122:42;929:10:4;3146:9:6;3157:6;3122:9;:42::i;7506:126::-;1334:13:0;:11;:13::i;:::-;7615:9:6::1;::::0;7611:13:::1;::::0;:2:::1;:13;:::i;:::-;7596:28;::::0;:12;:28:::1;:::i;:::-;7581:12;:43:::0;-1:-1:-1;7506:126:6:o;7284:110::-;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;7351:27:6::1;7381:5;7351:27:::0;;;:18:::1;:27;::::0;;;;:35;;-1:-1:-1;;7351:35:6::1;::::0;;7284:110::o;2321:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;16670:2:7;2401:73:0::1;::::0;::::1;16652:21:7::0;16709:2;16689:18;;;16682:30;16748:34;16728:18;;;16721:62;-1:-1:-1;;;16799:18:7;;;16792:36;16845:19;;2401:73:0::1;16468:402:7::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;1599:130::-:0;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:4;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;17077:2:7;1654:68:0;;;17059:21:7;;;17096:18;;;17089:30;17155:34;17135:18;;;17128:62;17207:18;;1654:68:0;16875:356:7;11490:371:6;-1:-1:-1;;;;;11617:19:6;;11609:68;;;;-1:-1:-1;;;11609:68:6;;17438:2:7;11609:68:6;;;17420:21:7;17477:2;17457:18;;;17450:30;17516:34;17496:18;;;17489:62;-1:-1:-1;;;17567:18:7;;;17560:34;17611:19;;11609:68:6;17236:400:7;11609:68:6;-1:-1:-1;;;;;11696:21:6;;11688:68;;;;-1:-1:-1;;;11688:68:6;;17843:2:7;11688:68:6;;;17825:21:7;17882:2;17862:18;;;17855:30;17921:34;17901:18;;;17894:62;-1:-1:-1;;;17972:18:7;;;17965:32;18014:19;;11688:68:6;17641:398:7;11688:68:6;-1:-1:-1;;;;;11769:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11821:32;;1767:25:7;;;11821:32:6;;1740:18:7;11821:32:6;;;;;;;11490:371;;;:::o;11869:1869::-;-1:-1:-1;;;;;11991:18:6;;11983:68;;;;-1:-1:-1;;;11983:68:6;;18246:2:7;11983:68:6;;;18228:21:7;18285:2;18265:18;;;18258:30;18324:34;18304:18;;;18297:62;-1:-1:-1;;;18375:18:7;;;18368:35;18420:19;;11983:68:6;18044:401:7;11983:68:6;-1:-1:-1;;;;;12070:16:6;;12062:64;;;;-1:-1:-1;;;12062:64:6;;18652:2:7;12062:64:6;;;18634:21:7;18691:2;18671:18;;;18664:30;18730:34;18710:18;;;18703:62;-1:-1:-1;;;18781:18:7;;;18774:33;18824:19;;12062:64:6;18450:399:7;12062:64:6;12154:1;12145:6;:10;12137:64;;;;-1:-1:-1;;;12137:64:6;;19056:2:7;12137:64:6;;;19038:21:7;19095:2;19075:18;;;19068:30;19134:34;19114:18;;;19107:62;-1:-1:-1;;;19185:18:7;;;19178:39;19234:19;;12137:64:6;18854:405:7;12137:64:6;1513:6:0;;-1:-1:-1;;;;;12216:15:6;;;1513:6:0;;12216:15:6;;;;:32;;-1:-1:-1;1513:6:0;;-1:-1:-1;;;;;12235:13:6;;;1513:6:0;;12235:13:6;;12216:32;12212:175;;;12299:12;;12289:6;:22;;12263:124;;;;-1:-1:-1;;;12263:124:6;;19466:2:7;12263:124:6;;;19448:21:7;19505:2;19485:18;;;19478:30;19544:34;19524:18;;;19517:62;-1:-1:-1;;;19595:18:7;;;19588:38;19643:19;;12263:124:6;19264:404:7;12263:124:6;12682:28;12713:24;12731:4;12713:9;:24::i;:::-;12682:55;;12778:12;;12754:20;:36;12750:104;;-1:-1:-1;12830:12:6;;12750:104;-1:-1:-1;;;;;13517:24:6;;13397:12;13517:24;;;:18;:24;;;;;;13412:4;;13517:24;;;:50;;-1:-1:-1;;;;;;13545:22:6;;;;;;:18;:22;;;;;;;;13517:50;13513:98;;;-1:-1:-1;13594:5:6;13513:98;13689:41;13704:4;13710:2;13714:6;13722:7;13689:14;:41::i;:::-;11972:1766;;11869:1869;;;:::o;4970:231:5:-;5086:7;5145:12;5137:6;;;;5129:29;;;;-1:-1:-1;;;5129:29:5;;;;;;;;:::i;:::-;-1:-1:-1;;;5179:5:5;;;4970:231::o;9576:164:6:-;9618:7;9639:15;9656;9675:19;:17;:19::i;:::-;9638:56;;-1:-1:-1;9638:56:6;-1:-1:-1;9712:20:6;9638:56;;9712:11;:20::i;:::-;9705:27;;;;9576:164;:::o;3861:96:5:-;3919:7;3945:5;3949:1;3945;:5;:::i;2766:96::-;2824:7;2850:5;2854:1;2850;:5;:::i;7888:723:6:-;7988:7;8010;8032;8054;8076;8137:23;8175:12;8223:20;8235:7;8223:11;:20::i;:::-;8122:121;;;;8255:15;8272:23;8297:12;8313:115;8339:7;8361:4;8407:10;:8;:10::i;:::-;8313:11;:115::i;:::-;8254:174;;;;-1:-1:-1;8254:174:6;;-1:-1:-1;8532:15:6;;-1:-1:-1;8562:4:6;;-1:-1:-1;7888:723:6;;-1:-1:-1;;;;;7888:723:6:o;3133:96:5:-;3191:7;3217:5;3221:1;3217;:5;:::i;2673:187:0:-;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;20131:241:6:-;20283:8;20278:87;20301:3;:10;20297:1;-1:-1:-1;;;;;20297:14:6;;20278:87;;;20347:6;20333:3;:11;20337:3;20341:1;-1:-1:-1;;;;;20337:6:6;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;20333:11:6;;;;;;;;;;;-1:-1:-1;20333:11:6;:20;;-1:-1:-1;;20333:20:6;;;;;;;;;;20313:3;;;;:::i;:::-;;;;20278:87;;;;20131:241;;;:::o;1003:95:0:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1065:26:0::1;:24;:26::i;16057:838:6:-:0;16213:7;16208:28;;16222:14;:12;:14::i;:::-;-1:-1:-1;;;;;16253:19:6;;;;;;:11;:19;;;;;;;;:46;;;;-1:-1:-1;;;;;;16277:22:6;;;;;;:11;:22;;;;;;;;16276:23;16253:46;16249:597;;;16316:48;16338:6;16346:9;16357:6;16316:21;:48::i;:::-;16249:597;;;-1:-1:-1;;;;;16387:19:6;;;;;;:11;:19;;;;;;;;16386:20;:46;;;;-1:-1:-1;;;;;;16410:22:6;;;;;;:11;:22;;;;;;;;16386:46;16382:464;;;16449:46;16469:6;16477:9;16488:6;16449:19;:46::i;16382:464::-;-1:-1:-1;;;;;16518:19:6;;;;;;:11;:19;;;;;;;;16517:20;:47;;;;-1:-1:-1;;;;;;16542:22:6;;;;;;:11;:22;;;;;;;;16541:23;16517:47;16513:333;;;16581:44;16599:6;16607:9;16618:6;16581:17;:44::i;16513:333::-;-1:-1:-1;;;;;16647:19:6;;;;;;:11;:19;;;;;;;;:45;;;;-1:-1:-1;;;;;;16670:22:6;;;;;;:11;:22;;;;;;;;16647:45;16643:203;;;16709:48;16731:6;16739:9;16750:6;16709:21;:48::i;16643:203::-;16790:44;16808:6;16816:9;16827:6;16790:17;:44::i;:::-;16863:7;16858:29;;16872:15;11277;;11267:7;:25;11223:127;9748:605;9846:7;;9882;;9799;;;;;9900:338;9924:9;:16;9920:20;;9900:338;;;10008:7;9984;:21;9992:9;10002:1;9992:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;9992:12:6;9984:21;;;;;;;;;;;;;:31;;:83;;;10060:7;10036;:21;10044:9;10054:1;10044:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;10044:12:6;10036:21;;;;;;;;;;;;;:31;9984:83;9962:146;;;10091:7;;10100;;10083:25;;;;;;;9748:605;;:::o;9962:146::-;10133:34;10145:7;:21;10153:9;10163:1;10153:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;10153:12:6;10145:21;;;;;;;;;;;;;10133:7;;:11;:34::i;:::-;10123:44;;10192:34;10204:7;:21;10212:9;10222:1;10212:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;10212:12:6;10204:21;;;;;;;;;;;;;10192:7;;:11;:34::i;:::-;10182:44;-1:-1:-1;9942:3:6;;;;:::i;:::-;;;;9900:338;;;-1:-1:-1;10274:7:6;;10262;;:20;;:11;:20::i;:::-;10252:7;:30;10248:61;;;10292:7;;10301;;10284:25;;;;;;9748:605;;:::o;10248:61::-;10328:7;;10337;;-1:-1:-1;9748:605:6;-1:-1:-1;9748:605:6:o;8619:379::-;8706:7;8715;8755:12;8770:24;8786:7;8770:15;:24::i;:::-;8755:39;-1:-1:-1;8869:23:6;8895:17;:7;8755:39;8895:11;:17::i;:::-;8869:43;8968:4;;-1:-1:-1;8619:379:6;;-1:-1:-1;;;8619:379:6:o;9006:562::-;9207:7;;;;9304:24;:7;9316:11;9304;:24::i;:::-;9286:42;-1:-1:-1;9339:12:6;9354:21;:4;9363:11;9354:8;:21::i;:::-;9339:36;-1:-1:-1;9447:23:6;9473:17;:7;9339:36;9473:11;:17::i;:::-;9529:7;;;;-1:-1:-1;9555:4:6;;-1:-1:-1;9006:562:6;;-1:-1:-1;;;;;9006:562:6:o;1104:111:0:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1176:32:0::1;929:10:4::0;1176:18:0::1;:32::i;10998:217:6:-:0;11045:7;;11041:25;;10998:217::o;11041:25::-;11096:7;;;11078:15;:25;-1:-1:-1;11166:11:6;;10998:217::o;18224:677::-;18375:15;18405:23;18443:12;18470:23;18508:12;18556:19;18567:7;18556:10;:19::i;:::-;-1:-1:-1;;;;;18604:15:6;;;;;;:7;:15;;;;;;18360:215;;-1:-1:-1;18360:215:6;;-1:-1:-1;18360:215:6;;-1:-1:-1;18360:215:6;-1:-1:-1;18360:215:6;-1:-1:-1;18604:28:6;;18624:7;18604:19;:28::i;:::-;-1:-1:-1;;;;;18586:15:6;;;;;;:7;:15;;;;;;;;:46;;;;18661:7;:15;;;;:28;;18681:7;18661:19;:28::i;:::-;-1:-1:-1;;;;;18643:15:6;;;;;;;:7;:15;;;;;;:46;;;;18721:18;;;;;;;:39;;18744:15;18721:22;:39::i;:::-;-1:-1:-1;;;;;18700:18:6;;;;;;:7;:18;;;;;:60;18810:23;18822:4;18828;18810:11;:23::i;:::-;18866:9;-1:-1:-1;;;;;18849:44:6;18858:6;-1:-1:-1;;;;;18849:44:6;;18877:15;18849:44;;;;1767:25:7;;1755:2;1740:18;;1621:177;18849:44:6;;;;;;;;18349:552;;;;;18224:677;;;:::o;17527:689::-;17676:15;17706:23;17744:12;17771:23;17809:12;17857:19;17868:7;17857:10;:19::i;:::-;-1:-1:-1;;;;;17905:15:6;;;;;;:7;:15;;;;;;17661:215;;-1:-1:-1;17661:215:6;;-1:-1:-1;17661:215:6;;-1:-1:-1;17661:215:6;-1:-1:-1;17661:215:6;-1:-1:-1;17905:28:6;;17661:215;17905:19;:28::i;:::-;-1:-1:-1;;;;;17887:15:6;;;;;;;:7;:15;;;;;;;;:46;;;;17965:18;;;;;:7;:18;;;;;:39;;17988:15;17965:22;:39::i;:::-;-1:-1:-1;;;;;17944:18:6;;;;;;:7;:18;;;;;;;;:60;;;;18036:7;:18;;;;:39;;18059:15;18036:22;:39::i;16903:616::-;17050:15;17080:23;17118:12;17145:23;17183:12;17231:19;17242:7;17231:10;:19::i;:::-;-1:-1:-1;;;;;17279:15:6;;;;;;:7;:15;;;;;;17035:215;;-1:-1:-1;17035:215:6;;-1:-1:-1;17035:215:6;;-1:-1:-1;17035:215:6;-1:-1:-1;17035:215:6;-1:-1:-1;17279:28:6;;17035:215;17279:19;:28::i;18909:748::-;19060:15;19090:23;19128:12;19155:23;19193:12;19241:19;19252:7;19241:10;:19::i;:::-;-1:-1:-1;;;;;19289:15:6;;;;;;:7;:15;;;;;;19045:215;;-1:-1:-1;19045:215:6;;-1:-1:-1;19045:215:6;;-1:-1:-1;19045:215:6;-1:-1:-1;19045:215:6;-1:-1:-1;19289:28:6;;19309:7;19289:19;:28::i;:::-;-1:-1:-1;;;;;19271:15:6;;;;;;:7;:15;;;;;;;;:46;;;;19346:7;:15;;;;:28;;19366:7;19346:19;:28::i;10860:130::-;10924:7;10951:31;10976:5;10951:20;10963:7;;10951;:11;;:20;;;;:::i;:::-;:24;;:31::i;3476:96:5:-;3534:7;3560:5;3564:1;3560;:5;:::i;7733:147:6:-;7811:7;;:17;;7823:4;7811:11;:17::i;:::-;7801:7;:27;7852:10;;:20;;7867:4;7852:14;:20::i;:::-;7839:10;:33;-1:-1:-1;;7733:147:6:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:7;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:7;;14:180;-1:-1:-1;14:180:7:o;199:597::-;311:4;340:2;369;358:9;351:21;401:6;395:13;444:6;439:2;428:9;424:18;417:34;469:1;479:140;493:6;490:1;487:13;479:140;;;588:14;;;584:23;;578:30;554:17;;;573:2;550:26;543:66;508:10;;479:140;;;637:6;634:1;631:13;628:91;;;707:1;702:2;693:6;682:9;678:22;674:31;667:42;628:91;-1:-1:-1;780:2:7;759:15;-1:-1:-1;;755:29:7;740:45;;;;787:2;736:54;;199:597;-1:-1:-1;;;199:597:7:o;801:173::-;869:20;;-1:-1:-1;;;;;918:31:7;;908:42;;898:70;;964:1;961;954:12;898:70;801:173;;;:::o;979:186::-;1038:6;1091:2;1079:9;1070:7;1066:23;1062:32;1059:52;;;1107:1;1104;1097:12;1059:52;1130:29;1149:9;1130:29;:::i;1362:254::-;1430:6;1438;1491:2;1479:9;1470:7;1466:23;1462:32;1459:52;;;1507:1;1504;1497:12;1459:52;1530:29;1549:9;1530:29;:::i;:::-;1520:39;1606:2;1591:18;;;;1578:32;;-1:-1:-1;;;1362:254:7:o;1803:328::-;1880:6;1888;1896;1949:2;1937:9;1928:7;1924:23;1920:32;1917:52;;;1965:1;1962;1955:12;1917:52;1988:29;2007:9;1988:29;:::i;:::-;1978:39;;2036:38;2070:2;2059:9;2055:18;2036:38;:::i;:::-;2026:48;;2121:2;2110:9;2106:18;2093:32;2083:42;;1803:328;;;;;:::o;2136:341::-;2201:6;2209;2262:2;2250:9;2241:7;2237:23;2233:32;2230:52;;;2278:1;2275;2268:12;2230:52;2314:9;2301:23;2291:33;;2374:2;2363:9;2359:18;2346:32;2421:5;2414:13;2407:21;2400:5;2397:32;2387:60;;2443:1;2440;2433:12;2387:60;2466:5;2456:15;;;2136:341;;;;;:::o;2482:658::-;2653:2;2705:21;;;2775:13;;2678:18;;;2797:22;;;2624:4;;2653:2;2876:15;;;;2850:2;2835:18;;;2624:4;2919:195;2933:6;2930:1;2927:13;2919:195;;;2998:13;;-1:-1:-1;;;;;2994:39:7;2982:52;;3089:15;;;;3054:12;;;;3030:1;2948:9;2919:195;;;-1:-1:-1;3131:3:7;;2482:658;-1:-1:-1;;;;;;2482:658:7:o;3145:127::-;3206:10;3201:3;3197:20;3194:1;3187:31;3237:4;3234:1;3227:15;3261:4;3258:1;3251:15;3277:275;3348:2;3342:9;3413:2;3394:13;;-1:-1:-1;;3390:27:7;3378:40;;-1:-1:-1;;;;;3433:34:7;;3469:22;;;3430:62;3427:88;;;3495:18;;:::i;:::-;3531:2;3524:22;3277:275;;-1:-1:-1;3277:275:7:o;3557:181::-;3615:4;-1:-1:-1;;;;;3640:6:7;3637:30;3634:56;;;3670:18;;:::i;:::-;-1:-1:-1;3715:1:7;3711:14;3727:4;3707:25;;3557:181::o;3743:660::-;3797:5;3850:3;3843:4;3835:6;3831:17;3827:27;3817:55;;3868:1;3865;3858:12;3817:55;3904:6;3891:20;3930:4;3954:58;3970:41;4008:2;3970:41;:::i;:::-;3954:58;:::i;:::-;4046:15;;;4132:1;4128:10;;;;4116:23;;4112:32;;;4077:12;;;;4156:15;;;4153:35;;;4184:1;4181;4174:12;4153:35;4220:2;4212:6;4208:15;4232:142;4248:6;4243:3;4240:15;4232:142;;;4314:17;;4302:30;;4352:12;;;;4265;;4232:142;;;-1:-1:-1;4392:5:7;3743:660;-1:-1:-1;;;;;;3743:660:7:o;4408:1811::-;4594:6;4602;4610;4618;4626;4634;4642;4695:3;4683:9;4674:7;4670:23;4666:33;4663:53;;;4712:1;4709;4702:12;4663:53;4735:29;4754:9;4735:29;:::i;:::-;4725:39;;4783:2;4832;4821:9;4817:18;4804:32;4794:42;;4883:2;4872:9;4868:18;4855:32;4845:42;;4934:2;4923:9;4919:18;4906:32;4896:42;;4989:3;4978:9;4974:19;4961:33;-1:-1:-1;;;;;5054:2:7;5046:6;5043:14;5040:34;;;5070:1;5067;5060:12;5040:34;5108:6;5097:9;5093:22;5083:32;;5153:7;5146:4;5142:2;5138:13;5134:27;5124:55;;5175:1;5172;5165:12;5124:55;5211:2;5198:16;5234:58;5250:41;5288:2;5250:41;:::i;5234:58::-;5326:15;;;5408:1;5404:10;;;;5396:19;;5392:28;;;5357:12;;;;5432:19;;;5429:39;;;5464:1;5461;5454:12;5429:39;5488:11;;;;5508:311;5524:6;5519:3;5516:15;5508:311;;;5604:3;5591:17;5652:4;5645:5;5641:16;5634:5;5631:27;5621:125;;5700:1;5729:2;5725;5718:14;5621:125;5759:18;;5541:12;;;;5797;;;;5508:311;;;5838:5;-1:-1:-1;;;5896:3:7;5881:19;;5868:33;;-1:-1:-1;5913:16:7;;;5910:36;;;5942:1;5939;5932:12;5910:36;5965:63;6020:7;6009:8;5998:9;5994:24;5965:63;:::i;:::-;5955:73;;6081:3;6070:9;6066:19;6053:33;6037:49;;6111:2;6101:8;6098:16;6095:36;;;6127:1;6124;6117:12;6095:36;;;6150:63;6205:7;6194:8;6183:9;6179:24;6150:63;:::i;:::-;6140:73;;;4408:1811;;;;;;;;;;:::o;6432:895::-;6516:6;6547:2;6590;6578:9;6569:7;6565:23;6561:32;6558:52;;;6606:1;6603;6596:12;6558:52;6646:9;6633:23;-1:-1:-1;;;;;6671:6:7;6668:30;6665:50;;;6711:1;6708;6701:12;6665:50;6734:22;;6787:4;6779:13;;6775:27;-1:-1:-1;6765:55:7;;6816:1;6813;6806:12;6765:55;6852:2;6839:16;6875:58;6891:41;6929:2;6891:41;:::i;6875:58::-;6967:15;;;7049:1;7045:10;;;;7037:19;;7033:28;;;6998:12;;;;7073:19;;;7070:39;;;7105:1;7102;7095:12;7070:39;7129:11;;;;7149:148;7165:6;7160:3;7157:15;7149:148;;;7231:23;7250:3;7231:23;:::i;:::-;7219:36;;7182:12;;;;7275;;;;7149:148;;;7316:5;6432:895;-1:-1:-1;;;;;;;6432:895:7:o;7332:531::-;7375:5;7428:3;7421:4;7413:6;7409:17;7405:27;7395:55;;7446:1;7443;7436:12;7395:55;7482:6;7469:20;-1:-1:-1;;;;;7504:2:7;7501:26;7498:52;;;7530:18;;:::i;:::-;7574:55;7617:2;7598:13;;-1:-1:-1;;7594:27:7;7623:4;7590:38;7574:55;:::i;:::-;7654:2;7645:7;7638:19;7700:3;7693:4;7688:2;7680:6;7676:15;7672:26;7669:35;7666:55;;;7717:1;7714;7707:12;7666:55;7782:2;7775:4;7767:6;7763:17;7756:4;7747:7;7743:18;7730:55;7830:1;7805:16;;;7823:4;7801:27;7794:38;;;;7809:7;7332:531;-1:-1:-1;;;7332:531:7:o;7868:893::-;8001:6;8009;8017;8025;8033;8041;8049;8102:3;8090:9;8081:7;8077:23;8073:33;8070:53;;;8119:1;8116;8109:12;8070:53;8159:9;8146:23;-1:-1:-1;;;;;8229:2:7;8221:6;8218:14;8215:34;;;8245:1;8242;8235:12;8215:34;8268:50;8310:7;8301:6;8290:9;8286:22;8268:50;:::i;:::-;8258:60;;8371:2;8360:9;8356:18;8343:32;8327:48;;8400:2;8390:8;8387:16;8384:36;;;8416:1;8413;8406:12;8384:36;;8439:52;8483:7;8472:8;8461:9;8457:24;8439:52;:::i;:::-;8429:62;;;8538:2;8527:9;8523:18;8510:32;8500:42;;8589:2;8578:9;8574:18;8561:32;8551:42;;8640:3;8629:9;8625:19;8612:33;8602:43;;8692:3;8681:9;8677:19;8664:33;8654:43;;8716:39;8750:3;8739:9;8735:19;8716:39;:::i;:::-;8706:49;;7868:893;;;;;;;;;;:::o;8766:260::-;8834:6;8842;8895:2;8883:9;8874:7;8870:23;8866:32;8863:52;;;8911:1;8908;8901:12;8863:52;8934:29;8953:9;8934:29;:::i;:::-;8924:39;;8982:38;9016:2;9005:9;9001:18;8982:38;:::i;:::-;8972:48;;8766:260;;;;;:::o;9031:380::-;9110:1;9106:12;;;;9153;;;9174:61;;9228:4;9220:6;9216:17;9206:27;;9174:61;9281:2;9273:6;9270:14;9250:18;9247:38;9244:161;;;9327:10;9322:3;9318:20;9315:1;9308:31;9362:4;9359:1;9352:15;9390:4;9387:1;9380:15;9244:161;;9031:380;;;:::o;10183:127::-;10244:10;10239:3;10235:20;10232:1;10225:31;10275:4;10272:1;10265:15;10299:4;10296:1;10289:15;10315:127;10376:10;10371:3;10367:20;10364:1;10357:31;10407:4;10404:1;10397:15;10431:4;10428:1;10421:15;10447:125;10487:4;10515:1;10512;10509:8;10506:34;;;10520:18;;:::i;:::-;-1:-1:-1;10557:9:7;;10447:125::o;10577:127::-;10638:10;10633:3;10629:20;10626:1;10619:31;10669:4;10666:1;10659:15;10693:4;10690:1;10683:15;10709:135;10748:3;-1:-1:-1;;10769:17:7;;10766:43;;;10789:18;;:::i;:::-;-1:-1:-1;10836:1:7;10825:13;;10709:135::o;13320:175::-;13357:3;13401:4;13394:5;13390:16;13430:4;13421:7;13418:17;13415:43;;;13438:18;;:::i;:::-;13487:1;13474:15;;13320:175;-1:-1:-1;;13320:175:7:o;13500:209::-;13538:3;-1:-1:-1;;;;;13619:2:7;13612:5;13608:14;13646:2;13637:7;13634:15;13631:41;;;13652:18;;:::i;:::-;13701:1;13688:15;;13500:209;-1:-1:-1;;;13500:209:7:o;14473:422::-;14562:1;14605:5;14562:1;14619:270;14640:7;14630:8;14627:21;14619:270;;;14699:4;14695:1;14691:6;14687:17;14681:4;14678:27;14675:53;;;14708:18;;:::i;:::-;14758:7;14748:8;14744:22;14741:55;;;14778:16;;;;14741:55;14857:22;;;;14817:15;;;;14619:270;;;14623:3;14473:422;;;;;:::o;14900:806::-;14949:5;14979:8;14969:80;;-1:-1:-1;15020:1:7;15034:5;;14969:80;15068:4;15058:76;;-1:-1:-1;15105:1:7;15119:5;;15058:76;15150:4;15168:1;15163:59;;;;15236:1;15231:130;;;;15143:218;;15163:59;15193:1;15184:10;;15207:5;;;15231:130;15268:3;15258:8;15255:17;15252:43;;;15275:18;;:::i;:::-;-1:-1:-1;;15331:1:7;15317:16;;15346:5;;15143:218;;15445:2;15435:8;15432:16;15426:3;15420:4;15417:13;15413:36;15407:2;15397:8;15394:16;15389:2;15383:4;15380:12;15376:35;15373:77;15370:159;;;-1:-1:-1;15482:19:7;;;15514:5;;15370:159;15561:34;15586:8;15580:4;15561:34;:::i;:::-;15631:6;15627:1;15623:6;15619:19;15610:7;15607:32;15604:58;;;15642:18;;:::i;:::-;15680:20;;14900:806;-1:-1:-1;;;14900:806:7:o;15711:131::-;15771:5;15800:36;15827:8;15821:4;15800:36;:::i;15847:168::-;15887:7;15953:1;15949;15945:6;15941:14;15938:1;15935:21;15930:1;15923:9;15916:17;15912:45;15909:71;;;15960:18;;:::i;:::-;-1:-1:-1;16000:9:7;;15847:168::o;16020:127::-;16081:10;16076:3;16072:20;16069:1;16062:31;16112:4;16109:1;16102:15;16136:4;16133:1;16126:15;16152:112;16184:1;16210;16200:35;;16215:18;;:::i;:::-;-1:-1:-1;16249:9:7;;16152:112::o;19673:120::-;19713:1;19739;19729:35;;19744:18;;:::i;:::-;-1:-1:-1;19778:9:7;;19673:120::o;19798:128::-;19838:3;19869:1;19865:6;19862:1;19859:13;19856:39;;;19875:18;;:::i;:::-;-1:-1:-1;19911:9:7;;19798:128::o;19931:407::-;20133:2;20115:21;;;20172:2;20152:18;;;20145:30;20211:34;20206:2;20191:18;;20184:62;-1:-1:-1;;;20277:2:7;20262:18;;20255:41;20328:3;20313:19;;19931:407::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2178000",
								"executionCost": "2324",
								"totalCost": "2180324"
							},
							"external": {
								"_maxTxAmount()": "2362",
								"_permitTransfer(address,uint256,uint256,uint256,uint8[],bytes32[],bytes32[])": "infinite",
								"_taxFee()": "2385",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24710",
								"balanceOf(address)": "infinite",
								"claimTokens()": "infinite",
								"decimals()": "2426",
								"decreaseAllowance(address,uint256)": "infinite",
								"deliver(uint256)": "infinite",
								"excludeFromFee(address)": "26819",
								"excludeFromReward(address)": "infinite",
								"includeInFee(address)": "26856",
								"includeInReward(address)": "infinite",
								"increaseAllowance(address,uint256)": "27045",
								"initialize(string,string,uint256,uint256,uint256,uint256,address)": "infinite",
								"isExcludedFromFee(address)": "2617",
								"isExcludedFromReward(address)": "2638",
								"mapSigner(address)": "2640",
								"name()": "infinite",
								"owner()": "2412",
								"reflectionFromToken(uint256,bool)": "infinite",
								"renounceOwnership()": "infinite",
								"setMaxTxPercent(uint256)": "infinite",
								"setSigners(address[])": "infinite",
								"setTaxFeePercent(uint256)": "24535",
								"signers()": "infinite",
								"symbol()": "infinite",
								"tokenFromReflection(uint256)": "infinite",
								"totalFees()": "2327",
								"totalSupply()": "2360",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28446",
								"uniqueIdExists(uint256)": "2582",
								"version()": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_getCurrentSupply()": "infinite",
								"_getRValues(uint256,uint256,uint256)": "infinite",
								"_getRate()": "infinite",
								"_getTValues(uint256)": "infinite",
								"_getValues(uint256)": "infinite",
								"_reflectFee(uint256,uint256)": "infinite",
								"_tokenTransfer(address,address,uint256,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferBothExcluded(address,address,uint256)": "infinite",
								"_transferFromExcluded(address,address,uint256)": "infinite",
								"_transferStandard(address,address,uint256)": "infinite",
								"_transferToExcluded(address,address,uint256)": "infinite",
								"_updateMap(address[] memory,bool,mapping(address => bool))": "infinite",
								"calculateTaxFee(uint256)": "infinite",
								"removeAllFee()": "31341",
								"restoreAllFee()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 385,
									"end": 21470,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 385,
									"end": 21470,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201090d19d66b6cc32f73be65a26ed639f66c6b3b350799a09786e789a3b1447ae64736f6c634300080b0033",
									".code": [
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "52390C02"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "A3772662"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "D543DBEB"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "D543DBEB"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "EA2F0B37"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "F9342285"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "A3772662"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "A457C2D7"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "A6E57D99"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "7D1DB4A5"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "88F82020"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "52390C02"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "5342ACB4"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "54FD4D50"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "3685D419"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "437823EC"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "437823EC"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "4549B039"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "46F0975A"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "48C54B9D"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "4990560F"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "3685D419"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "39509351"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "3B124FE7"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "3BD5D173"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "13114A9D"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "13114A9D"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "2D838119"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "61C82D0"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "7C351DD"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 385,
											"end": 21470,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20096,
											"end": 20115,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 20072,
											"end": 20076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20096,
											"end": 20115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20096,
											"end": 20115,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20096,
											"end": 20115,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20096,
											"end": 20107,
											"name": "PUSH",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 20096,
											"end": 20115,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20096,
											"end": 20115,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20096,
											"end": 20115,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20096,
											"end": 20115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20096,
											"end": 20115,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 20096,
											"end": 20115,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 20096,
											"end": 20115,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 20096,
											"end": 20115,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 20096,
											"end": 20115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1335,
											"end": 1349,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1350,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1310,
											"end": 1351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1310,
											"end": 1351,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1298,
											"end": 1300,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20014,
											"end": 20123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1170,
											"end": 1357,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4962,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "6D"
										},
										{
											"begin": 4962,
											"end": 4972,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1792,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1757,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4893,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1621,
											"end": 1798,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2781,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2686,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2781,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2781,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2686,
											"end": 2781,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2781,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2781,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2781,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2686,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2766,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "6B"
										},
										{
											"begin": 2766,
											"end": 2773,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2686,
											"end": 2781,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2578,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2493,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2578,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2578,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2493,
											"end": 2578,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2578,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2578,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2493,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2570,
											"name": "PUSH",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2561,
											"end": 2570,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2493,
											"end": 2578,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "PUSH",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11447,
											"end": 11474,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11423,
											"end": 11427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11447,
											"end": 11474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "PUSH",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 11447,
											"end": 11474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11447,
											"end": 11474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11474,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11447,
											"end": 11474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11474,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11474,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11474,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11447,
											"end": 11474,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11482,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2678,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2586,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2678,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2678,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2586,
											"end": 2678,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2678,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2678,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2586,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2586,
											"end": 2678,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "PUSH",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1180,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4857,
											"end": 4868,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4857,
											"end": 4877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4885,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6358,
											"end": 6360,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6343,
											"end": 6361,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6224,
											"end": 6427,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3362,
											"name": "PUSH",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3386,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "PUSH",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1319,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7474,
											"end": 7481,
											"name": "PUSH",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 7474,
											"end": 7490,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7498,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2377,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "6E"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2390,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3548,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3518,
											"end": 3557,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3518,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3518,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3575,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3587,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3754,
											"end": 3760,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3771,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3779,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3744,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3744,
											"end": 3780,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3744,
											"end": 3780,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3744,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3918,
											"end": 3924,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "PUSH data",
											"source": 6,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3873,
											"name": "PUSH",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3895,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3895,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3895,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3862,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3791,
											"end": 4011,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3791,
											"end": 4011,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3791,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4029,
											"end": 4033,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 4041,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5990,
											"end": 5997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6055,
											"name": "PUSH",
											"source": 6,
											"value": "6C"
										},
										{
											"begin": 6048,
											"end": 6055,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6044,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6055,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6055,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9620,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9657,
											"end": 9659,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 9637,
											"end": 9655,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9637,
											"end": 9655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9637,
											"end": 9655,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9630,
											"end": 9660,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9696,
											"end": 9730,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D757374206265206C657373207468616E20746F74616C2072"
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9731,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65666C656374696F6E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9740,
											"end": 9780,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9797,
											"end": 9816,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9797,
											"end": 9816,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6015,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6158,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6158,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6158,
											"end": 6168,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6158,
											"end": 6168,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6158,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6186,
											"end": 6193,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6186,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6179,
											"end": 6210,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5896,
											"end": 6218,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6771,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 6752,
											"end": 6812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6812,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6752,
											"end": 6812,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6752,
											"end": 6812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6812,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10029,
											"end": 10031,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6752,
											"end": 6812,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6752,
											"end": 6812,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6812,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10011,
											"end": 10032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10068,
											"end": 10070,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10041,
											"end": 10071,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10107,
											"end": 10136,
											"name": "PUSH",
											"source": 7,
											"value": "4163636F756E7420697320616C7265616479206578636C756465640000000000"
										},
										{
											"begin": 10087,
											"end": 10105,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10087,
											"end": 10105,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10087,
											"end": 10105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10137,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 9827,
											"end": 10178,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6812,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 6752,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6828,
											"end": 6837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6823,
											"end": 7150,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 6823,
											"end": 7150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6847,
											"end": 6856,
											"name": "PUSH",
											"source": 6,
											"value": "6A"
										},
										{
											"begin": 6847,
											"end": 6863,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6843,
											"end": 6863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6843,
											"end": 6863,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6823,
											"end": 7150,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6823,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 6823,
											"end": 7150,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6905,
											"end": 6912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6889,
											"end": 6912,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6898,
											"name": "PUSH",
											"source": 6,
											"value": "6A"
										},
										{
											"begin": 6899,
											"end": 6900,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6912,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6885,
											"end": 7139,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6885,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 6885,
											"end": 7139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6957,
											"name": "PUSH",
											"source": 6,
											"value": "6A"
										},
										{
											"begin": 6958,
											"end": 6974,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6958,
											"end": 6974,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6958,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 6958,
											"end": 6978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6977,
											"end": 6978,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6977,
											"end": 6978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6958,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 6958,
											"end": 6978,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6958,
											"end": 6978,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 6958,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6942,
											"name": "PUSH",
											"source": 6,
											"value": "6A"
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6979,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6979,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6933,
											"end": 6979,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6933,
											"end": 6979,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6979,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6979,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6979,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6979,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7014,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7014,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7014,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7014,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7005,
											"name": "PUSH",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 6998,
											"end": 7014,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7014,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7014,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6998,
											"end": 7014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7014,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7014,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7018,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7048,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7065,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7065,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7037,
											"end": 7065,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7065,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7093,
											"name": "PUSH",
											"source": 6,
											"value": "6A"
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6823,
											"end": 7150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6885,
											"end": 7139,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 6885,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6868,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 6865,
											"end": 6868,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6865,
											"end": 6868,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6865,
											"end": 6868,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 6865,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6823,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 6823,
											"end": 7150,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6823,
											"end": 7150,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 6823,
											"end": 7150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6823,
											"end": 7150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 7157,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 4049,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4164,
											"end": 4168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4269,
											"name": "PUSH",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4258,
											"end": 4283,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4283,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4283,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4283,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4283,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4258,
											"end": 4292,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4292,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4292,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4292,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4292,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4292,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4168,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4186,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4186,
											"end": 4319,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4236,
											"end": 4243,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4236,
											"end": 4243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4258,
											"end": 4308,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4307,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 4258,
											"end": 4308,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5040,
											"end": 5054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5122,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5114,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5103,
											"end": 5122,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5103,
											"end": 5122,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5122,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5103,
											"end": 5122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5122,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5122,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5122,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5103,
											"end": 5122,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5080,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 5080,
											"end": 5194,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5080,
											"end": 5194,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5080,
											"end": 5194,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5080,
											"end": 5194,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5080,
											"end": 5194,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11051,
											"end": 11053,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5080,
											"end": 5194,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5080,
											"end": 5194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5080,
											"end": 5194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11033,
											"end": 11054,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11092,
											"name": "PUSH",
											"source": 7,
											"value": "2C"
										},
										{
											"begin": 11070,
											"end": 11088,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11070,
											"end": 11088,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11070,
											"end": 11088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11063,
											"end": 11093,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11129,
											"end": 11163,
											"name": "PUSH",
											"source": 7,
											"value": "4578636C75646564206164647265737365732063616E6E6F742063616C6C2074"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11102,
											"end": 11164,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3434B990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11180,
											"end": 11198,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11180,
											"end": 11198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11180,
											"end": 11198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11173,
											"end": 11215,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11232,
											"end": 11251,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 11232,
											"end": 11251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5080,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 10849,
											"end": 11257,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5080,
											"end": 5194,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 5080,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5206,
											"end": 5221,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 5244,
											"end": 5251,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5281,
											"end": 5296,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5296,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5296,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5281,
											"end": 5296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5296,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5296,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5281,
											"end": 5296,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5281,
											"end": 5296,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5296,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5281,
											"end": 5296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5296,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5296,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5252,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5281,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 5281,
											"end": 5309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5252,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 5281,
											"end": 5309,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5281,
											"end": 5309,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 5281,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5309,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5337,
											"name": "PUSH",
											"source": 6,
											"value": "6C"
										},
										{
											"begin": 5330,
											"end": 5337,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 5330,
											"end": 5350,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5342,
											"end": 5349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 5330,
											"end": 5350,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5330,
											"end": 5350,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 5330,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5320,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "6C"
										},
										{
											"begin": 5320,
											"end": 5350,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "PUSH",
											"source": 6,
											"value": "6D"
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5374,
											"end": 5397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5389,
											"end": 5396,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5374,
											"end": 5397,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5374,
											"end": 5397,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5374,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5361,
											"end": 5371,
											"name": "PUSH",
											"source": 6,
											"value": "6D"
										},
										{
											"begin": 5361,
											"end": 5397,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4988,
											"end": 5405,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7234,
											"end": 7261,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "PUSH",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 7234,
											"end": 7261,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7234,
											"end": 7261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7261,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7234,
											"end": 7261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7261,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7268,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7268,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7234,
											"end": 7268,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7268,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7234,
											"end": 7268,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7268,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7276,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5413,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5531,
											"end": 5538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5582,
											"name": "PUSH",
											"source": 6,
											"value": "6B"
										},
										{
											"begin": 5575,
											"end": 5582,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5571,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5582,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5582,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5556,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 5556,
											"end": 5618,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5556,
											"end": 5618,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5556,
											"end": 5618,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5556,
											"end": 5618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5556,
											"end": 5618,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11464,
											"end": 11466,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5556,
											"end": 5618,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5556,
											"end": 5618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5556,
											"end": 5618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11446,
											"end": 11467,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11503,
											"end": 11505,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11483,
											"end": 11501,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11483,
											"end": 11501,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11483,
											"end": 11501,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11476,
											"end": 11506,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11542,
											"end": 11575,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D757374206265206C657373207468616E20737570706C7900"
										},
										{
											"begin": 11522,
											"end": 11540,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11522,
											"end": 11540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11522,
											"end": 11540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11515,
											"end": 11576,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11593,
											"end": 11611,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11593,
											"end": 11611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5556,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 11262,
											"end": 11617,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5556,
											"end": 5618,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 5556,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5651,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5629,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 5629,
											"end": 5881,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5696,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 5707,
											"end": 5714,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 5696,
											"end": 5715,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5696,
											"end": 5715,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 5696,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5668,
											"end": 5715,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5715,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5730,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 5730,
											"end": 5744,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5730,
											"end": 5744,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5629,
											"end": 5881,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 5629,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5780,
											"end": 5803,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 5824,
											"end": 5831,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 5823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 5813,
											"end": 5832,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5813,
											"end": 5832,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 5813,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5777,
											"end": 5832,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5777,
											"end": 5832,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5847,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 5847,
											"end": 5869,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5847,
											"end": 5869,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19707,
											"end": 19723,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 19743,
											"end": 19751,
											"name": "PUSH",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19736,
											"end": 19751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19665,
											"end": 19759,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10822,
											"end": 10843,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "PUSH",
											"source": 6,
											"value": "8FC"
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10822,
											"end": 10843,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10852,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20650,
											"end": 20665,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 20638,
											"end": 20646,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 20638,
											"end": 20665,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 20638,
											"end": 20665,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 20630,
											"end": 20686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 20630,
											"end": 20686,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 20630,
											"end": 20686,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20630,
											"end": 20686,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20630,
											"end": 20686,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20630,
											"end": 20686,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11824,
											"end": 11826,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20630,
											"end": 20686,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 20630,
											"end": 20686,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20630,
											"end": 20686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11806,
											"end": 11827,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11863,
											"end": 11865,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11836,
											"end": 11866,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4578706972656420646561646C696E65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11882,
											"end": 11900,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11882,
											"end": 11900,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11882,
											"end": 11900,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11875,
											"end": 11921,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11938,
											"end": 11956,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11938,
											"end": 11956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20630,
											"end": 20686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 11622,
											"end": 11962,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20630,
											"end": 20686,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 20630,
											"end": 20686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20706,
											"end": 20720,
											"name": "PUSH",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 20705,
											"end": 20730,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 20697,
											"end": 20751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 20697,
											"end": 20751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 20697,
											"end": 20751,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20697,
											"end": 20751,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20697,
											"end": 20751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20697,
											"end": 20751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12169,
											"end": 12171,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20697,
											"end": 20751,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 20697,
											"end": 20751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20697,
											"end": 20751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12151,
											"end": 12172,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12208,
											"end": 12210,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 12188,
											"end": 12206,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12188,
											"end": 12206,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12188,
											"end": 12206,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "556E6971756520696420657869737473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12227,
											"end": 12245,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12227,
											"end": 12245,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12227,
											"end": 12245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12220,
											"end": 12266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12283,
											"end": 12301,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12283,
											"end": 12301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20697,
											"end": 20751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 11967,
											"end": 12307,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20697,
											"end": 20751,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 20697,
											"end": 20751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20781,
											"end": 20791,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 20764,
											"end": 20778,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20818,
											"end": 20831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20818,
											"end": 20831,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 20818,
											"end": 20831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12655,
											"end": 12670,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12655,
											"end": 12670,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12655,
											"end": 12670,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12637,
											"end": 12671,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12707,
											"end": 12722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12707,
											"end": 12722,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12707,
											"end": 12722,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12687,
											"end": 12705,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12687,
											"end": 12705,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12687,
											"end": 12705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12680,
											"end": 12723,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12680,
											"end": 12723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12680,
											"end": 12723,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12680,
											"end": 12723,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12759,
											"end": 12774,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12759,
											"end": 12774,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 12759,
											"end": 12774,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12739,
											"end": 12757,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 12739,
											"end": 12757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12739,
											"end": 12757,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12732,
											"end": 12775,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12791,
											"end": 12809,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 12791,
											"end": 12809,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12791,
											"end": 12809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12784,
											"end": 12818,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 12784,
											"end": 12818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12784,
											"end": 12818,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12834,
											"end": 12853,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 12834,
											"end": 12853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12834,
											"end": 12853,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 12862,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 12862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 12862,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12878,
											"end": 12897,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 12878,
											"end": 12897,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12878,
											"end": 12897,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12871,
											"end": 12906,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 12871,
											"end": 12906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12871,
											"end": 12906,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20802,
											"end": 20831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20802,
											"end": 20831,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20844,
											"end": 20864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20844,
											"end": 20864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12571,
											"end": 12590,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 12571,
											"end": 12590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20891,
											"end": 20955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20867,
											"end": 20966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 20867,
											"end": 20966,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 20867,
											"end": 20966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20867,
											"end": 20966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20867,
											"end": 20966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20867,
											"end": 20966,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 20844,
											"end": 20966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20844,
											"end": 20966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20979,
											"end": 20995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21019,
											"end": 21040,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 21060,
											"end": 21068,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21055,
											"end": 21317,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 21055,
											"end": 21317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21078,
											"end": 21079,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 21078,
											"end": 21086,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 21074,
											"end": 21075,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21074,
											"end": 21086,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 21074,
											"end": 21086,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 21055,
											"end": 21317,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 21055,
											"end": 21317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 21055,
											"end": 21317,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 21108,
											"end": 21125,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 21138,
											"end": 21150,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 21152,
											"end": 21153,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 21154,
											"end": 21155,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21152,
											"end": 21156,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 21158,
											"end": 21159,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 21160,
											"end": 21161,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 21164,
											"end": 21165,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 21166,
											"end": 21167,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21164,
											"end": 21168,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13144,
											"end": 13169,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13144,
											"end": 13169,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13144,
											"end": 13169,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13217,
											"end": 13221,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 13205,
											"end": 13222,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13205,
											"end": 13222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13205,
											"end": 13222,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13205,
											"end": 13222,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13200,
											"end": 13202,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13185,
											"end": 13203,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13185,
											"end": 13203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13178,
											"end": 13223,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13254,
											"end": 13256,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13239,
											"end": 13257,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13239,
											"end": 13257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13232,
											"end": 13266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13297,
											"end": 13299,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 13282,
											"end": 13300,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13282,
											"end": 13300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13309,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13131,
											"end": 13134,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 13116,
											"end": 13135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13116,
											"end": 13135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12917,
											"end": 13315,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 21128,
											"end": 21169,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 21108,
											"end": 21169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21108,
											"end": 21169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21200,
											"end": 21208,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21188,
											"end": 21208,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 21188,
											"end": 21197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21188,
											"end": 21208,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 21188,
											"end": 21208,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 21188,
											"end": 21234,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 21188,
											"end": 21234,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 21188,
											"end": 21234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 21188,
											"end": 21234,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21212,
											"end": 21234,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21212,
											"end": 21234,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 21212,
											"end": 21234,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21212,
											"end": 21234,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21212,
											"end": 21234,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21212,
											"end": 21234,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 21212,
											"end": 21223,
											"name": "PUSH",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 21212,
											"end": 21234,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21212,
											"end": 21234,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 21212,
											"end": 21234,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 21212,
											"end": 21234,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21212,
											"end": 21234,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 21212,
											"end": 21234,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 21212,
											"end": 21234,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 21212,
											"end": 21234,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 21188,
											"end": 21234,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 21188,
											"end": 21234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21184,
											"end": 21270,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 21184,
											"end": 21270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 21184,
											"end": 21270,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 21253,
											"end": 21270,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21253,
											"end": 21270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 21253,
											"end": 21270,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21253,
											"end": 21270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 21253,
											"end": 21270,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 21253,
											"end": 21270,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 21253,
											"end": 21270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21253,
											"end": 21270,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 21253,
											"end": 21270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21253,
											"end": 21270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21184,
											"end": 21270,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 21184,
											"end": 21270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21296,
											"end": 21305,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21088,
											"end": 21091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 21088,
											"end": 21091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 21088,
											"end": 21091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21088,
											"end": 21091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 21088,
											"end": 21091,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 21088,
											"end": 21091,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 21088,
											"end": 21091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21088,
											"end": 21091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21088,
											"end": 21091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21088,
											"end": 21091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21055,
											"end": 21317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 21055,
											"end": 21317,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21055,
											"end": 21317,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 21055,
											"end": 21317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21055,
											"end": 21317,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21337,
											"end": 21352,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 21337,
											"end": 21357,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 21337,
											"end": 21357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 21356,
											"end": 21357,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 21337,
											"end": 21357,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 21329,
											"end": 21377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 21329,
											"end": 21377,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 21329,
											"end": 21377,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 21329,
											"end": 21377,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21329,
											"end": 21377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21329,
											"end": 21377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13916,
											"end": 13918,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21329,
											"end": 21377,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 21329,
											"end": 21377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21329,
											"end": 21377,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13898,
											"end": 13919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13955,
											"end": 13957,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 13935,
											"end": 13953,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13935,
											"end": 13953,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13935,
											"end": 13953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13928,
											"end": 13958,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964207369676E657273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13974,
											"end": 13992,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13974,
											"end": 13992,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13974,
											"end": 13992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13967,
											"end": 14012,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14029,
											"end": 14047,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 14029,
											"end": 14047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21329,
											"end": 21377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 13714,
											"end": 14053,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21329,
											"end": 21377,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 21329,
											"end": 21377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21390,
											"end": 21414,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21390,
											"end": 21414,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 21390,
											"end": 21414,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21390,
											"end": 21414,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 21390,
											"end": 21404,
											"name": "PUSH",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 21390,
											"end": 21414,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21390,
											"end": 21414,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 21390,
											"end": 21414,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 21390,
											"end": 21414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21390,
											"end": 21414,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 21390,
											"end": 21421,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 21390,
											"end": 21421,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21390,
											"end": 21421,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 21417,
											"end": 21421,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 21390,
											"end": 21421,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 21390,
											"end": 21421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21390,
											"end": 21421,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 21432,
											"end": 21459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 21441,
											"end": 21450,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 21452,
											"end": 21458,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 21432,
											"end": 21440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 21432,
											"end": 21459,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 21432,
											"end": 21459,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 21432,
											"end": 21459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21432,
											"end": 21459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20619,
											"end": 21467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20619,
											"end": 21467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20619,
											"end": 21467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20619,
											"end": 21467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20619,
											"end": 21467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 21467,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6421,
											"end": 6441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6441,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6432,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 6421,
											"end": 6441,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6421,
											"end": 6441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6441,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6421,
											"end": 6441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6441,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6441,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6441,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6421,
											"end": 6441,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6441,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 6412,
											"end": 6473,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6412,
											"end": 6473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6412,
											"end": 6473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10029,
											"end": 10031,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6412,
											"end": 6473,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6412,
											"end": 6473,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10011,
											"end": 10032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10068,
											"end": 10070,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10041,
											"end": 10071,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10107,
											"end": 10136,
											"name": "PUSH",
											"source": 7,
											"value": "4163636F756E7420697320616C7265616479206578636C756465640000000000"
										},
										{
											"begin": 10087,
											"end": 10105,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10087,
											"end": 10105,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10087,
											"end": 10105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10137,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 9827,
											"end": 10178,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6473,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 6412,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6508,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6495,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6508,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6484,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 6484,
											"end": 6593,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6564,
											"end": 6580,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6580,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6564,
											"end": 6580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6580,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6580,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 6564,
											"end": 6580,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6564,
											"end": 6580,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6580,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6564,
											"end": 6580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6580,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6580,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6544,
											"end": 6581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 6544,
											"end": 6581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6544,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 6544,
											"end": 6581,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6544,
											"end": 6581,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 6544,
											"end": 6581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6525,
											"end": 6541,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6541,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6525,
											"end": 6541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6541,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6532,
											"name": "PUSH",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 6525,
											"end": 6541,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6525,
											"end": 6541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6541,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6525,
											"end": 6541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6541,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6581,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6484,
											"end": 6593,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 6484,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6603,
											"end": 6623,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6603,
											"end": 6623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6623,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 6603,
											"end": 6623,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6603,
											"end": 6623,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6623,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6603,
											"end": 6623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6623,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6630,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6603,
											"end": 6630,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6626,
											"end": 6630,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6603,
											"end": 6630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6630,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6630,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6630,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6650,
											"name": "PUSH",
											"source": 6,
											"value": "6A"
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "PUSH",
											"source": 6,
											"value": "116FEA137DB6E131133E7F2BAB296045D8F41CC5607279DB17B218CAB0929A51"
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6672,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2890,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2924,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 2875,
											"end": 2924,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2908,
											"end": 2924,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2924,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2924,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2924,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "PUSH",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2908,
											"end": 2924,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2908,
											"end": 2924,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2924,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2924,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2924,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2987,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2875,
											"end": 2924,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 2875,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2969,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2942,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 2942,
											"end": 2979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2942,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2942,
											"end": 2979,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2398,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2437,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2470,
											"end": 2477,
											"name": "PUSH",
											"source": 6,
											"value": "6F"
										},
										{
											"begin": 2463,
											"end": 2477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2477,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2463,
											"end": 2477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2463,
											"end": 2477,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 19767,
											"end": 20006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 19863,
											"end": 19871,
											"name": "PUSH",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19873,
											"end": 19878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19880,
											"end": 19891,
											"name": "PUSH",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 19852,
											"end": 19862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 19852,
											"end": 19892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19903,
											"end": 19918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 19910,
											"end": 19918,
											"name": "PUSH",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 19910,
											"end": 19918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19903,
											"end": 19918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 19903,
											"end": 19918,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 19903,
											"end": 19918,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 19903,
											"end": 19918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19929,
											"end": 19948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19929,
											"end": 19948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 19929,
											"end": 19948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 19929,
											"end": 19948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19929,
											"end": 19937,
											"name": "PUSH",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 19929,
											"end": 19937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19929,
											"end": 19948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19929,
											"end": 19948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 19929,
											"end": 19948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19929,
											"end": 19948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19929,
											"end": 19948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 19929,
											"end": 19948,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 19929,
											"end": 19948,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 19929,
											"end": 19948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19929,
											"end": 19948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19959,
											"end": 19998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 19970,
											"end": 19978,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19980,
											"end": 19984,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 19986,
											"end": 19997,
											"name": "PUSH",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 19959,
											"end": 19969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 19959,
											"end": 19998,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4357,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4556,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4628,
											"end": 4643,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "PUSH data",
											"source": 6,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4571,
											"end": 4596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4596,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4571,
											"end": 4596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4571,
											"end": 4596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4596,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4596,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4596,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4571,
											"end": 4605,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4605,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4605,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4605,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4605,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4571,
											"end": 4716,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3268,
											"end": 3285,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14260,
											"end": 14262,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14242,
											"end": 14263,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14299,
											"end": 14301,
											"name": "PUSH",
											"source": 7,
											"value": "2E"
										},
										{
											"begin": 14279,
											"end": 14297,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14279,
											"end": 14297,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14279,
											"end": 14297,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14272,
											"end": 14302,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14338,
											"end": 14372,
											"name": "PUSH",
											"source": 7,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 14318,
											"end": 14336,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 14318,
											"end": 14336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14318,
											"end": 14336,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14311,
											"end": 14373,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14389,
											"end": 14407,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 14389,
											"end": 14407,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14389,
											"end": 14407,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14382,
											"end": 14426,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14443,
											"end": 14462,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 14443,
											"end": 14462,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 14058,
											"end": 14468,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 1618,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 1618,
											"end": 1634,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1618,
											"end": 1634,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 1618,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "PUSH",
											"source": 6,
											"value": "6E"
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1678,
											"name": "PUSH",
											"source": 6,
											"value": "6F"
										},
										{
											"begin": 1671,
											"end": 1678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1699,
											"end": 1708,
											"name": "PUSH",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1699,
											"end": 1720,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1699,
											"end": 1720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1699,
											"end": 1720,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 1711,
											"end": 1720,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1753,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1751,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 1751,
											"end": 1764,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1751,
											"end": 1764,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 1751,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1741,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 1741,
											"end": 1764,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1741,
											"end": 1748,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1741,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 1741,
											"end": 1764,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1741,
											"end": 1764,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 1741,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "6B"
										},
										{
											"begin": 1731,
											"end": 1764,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1764,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1764,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 1786,
											"end": 1807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1786,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 1786,
											"end": 1807,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1786,
											"end": 1807,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 1786,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1782,
											"name": "PUSH",
											"source": 6,
											"value": "6C"
										},
										{
											"begin": 1775,
											"end": 1808,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "PUSH",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1819,
											"end": 1835,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1819,
											"end": 1835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1819,
											"end": 1835,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1846,
											"end": 1870,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1870,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1922,
											"name": "PUSH",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1913,
											"end": 1922,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1909,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 1909,
											"end": 1922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1909,
											"end": 1911,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1909,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 1909,
											"end": 1922,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1909,
											"end": 1922,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 1909,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1896,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 1896,
											"end": 1922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1896,
											"end": 1906,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1896,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 1896,
											"end": 1922,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1922,
											"name": "tag",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 1896,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 1893,
											"name": "PUSH",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1881,
											"end": 1922,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "6C"
										},
										{
											"begin": 1957,
											"end": 1964,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1964,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1964,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1964,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2047,
											"name": "PUSH",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2029,
											"end": 2059,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2059,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2059,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2059,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2059,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2066,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2066,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2029,
											"end": 2066,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2066,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2066,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2066,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2066,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2066,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2108,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2110,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2110,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2110,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2110,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2117,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2117,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2117,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2117,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2117,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2128,
											"end": 2157,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2128,
											"end": 2157,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 2128,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 2194,
											"end": 2198,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "tag",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2268,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "PUSH",
											"source": 6,
											"value": "6B"
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1792,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1757,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1621,
											"end": 1798,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2291,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 3483,
											"end": 3497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 16421,
											"end": 16457,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16421,
											"end": 16457,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16409,
											"end": 16411,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16394,
											"end": 16412,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 2299,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2995,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3100,
											"end": 3104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3146,
											"end": 3155,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3157,
											"end": 3163,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3122,
											"end": 3164,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 7624,
											"name": "PUSH",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 7615,
											"end": 7624,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7611,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 7611,
											"end": 7624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7611,
											"end": 7613,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 7611,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 7611,
											"end": 7624,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7611,
											"end": 7624,
											"name": "tag",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 7611,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7596,
											"end": 7608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7581,
											"end": 7593,
											"name": "PUSH",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 7581,
											"end": 7624,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7506,
											"end": 7632,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7351,
											"end": 7378,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7351,
											"end": 7378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7351,
											"end": 7378,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7351,
											"end": 7378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7351,
											"end": 7369,
											"name": "PUSH",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 7351,
											"end": 7378,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7351,
											"end": 7378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7351,
											"end": 7378,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7351,
											"end": 7378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7351,
											"end": 7378,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7351,
											"end": 7386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7351,
											"end": 7386,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7351,
											"end": 7386,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7351,
											"end": 7386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7351,
											"end": 7386,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7394,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16670,
											"end": 16672,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16652,
											"end": 16673,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16709,
											"end": 16711,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 16689,
											"end": 16707,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 16689,
											"end": 16707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16689,
											"end": 16707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16682,
											"end": 16712,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16748,
											"end": 16782,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 16728,
											"end": 16746,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 16728,
											"end": 16746,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16728,
											"end": 16746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16721,
											"end": 16783,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16799,
											"end": 16817,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 16799,
											"end": 16817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16799,
											"end": 16817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16792,
											"end": 16828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16845,
											"end": 16864,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 16845,
											"end": 16864,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 16468,
											"end": 16870,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2503,
											"end": 2511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17077,
											"end": 17079,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17059,
											"end": 17080,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17059,
											"end": 17080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17059,
											"end": 17080,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17096,
											"end": 17114,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 17096,
											"end": 17114,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17096,
											"end": 17114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17089,
											"end": 17119,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17155,
											"end": 17189,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 17135,
											"end": 17153,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 17135,
											"end": 17153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17135,
											"end": 17153,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17128,
											"end": 17190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17207,
											"end": 17225,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 17207,
											"end": 17225,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 16875,
											"end": 17231,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11490,
											"end": 11861,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 11490,
											"end": 11861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11617,
											"end": 11636,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11617,
											"end": 11636,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11609,
											"end": 11677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 11609,
											"end": 11677,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11609,
											"end": 11677,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11609,
											"end": 11677,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11609,
											"end": 11677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11609,
											"end": 11677,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17438,
											"end": 17440,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11609,
											"end": 11677,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11609,
											"end": 11677,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11609,
											"end": 11677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17420,
											"end": 17441,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17477,
											"end": 17479,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 17457,
											"end": 17475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17457,
											"end": 17475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17457,
											"end": 17475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17450,
											"end": 17480,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17516,
											"end": 17550,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 17496,
											"end": 17514,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 17496,
											"end": 17514,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17496,
											"end": 17514,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17489,
											"end": 17551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17567,
											"end": 17585,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 17567,
											"end": 17585,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17567,
											"end": 17585,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17560,
											"end": 17594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17611,
											"end": 17630,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 17611,
											"end": 17630,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11609,
											"end": 11677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 17236,
											"end": 17636,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11609,
											"end": 11677,
											"name": "tag",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 11609,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11696,
											"end": 11717,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11696,
											"end": 11717,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11688,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 11688,
											"end": 11756,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11688,
											"end": 11756,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11688,
											"end": 11756,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11688,
											"end": 11756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11688,
											"end": 11756,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17843,
											"end": 17845,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11688,
											"end": 11756,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11688,
											"end": 11756,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11688,
											"end": 11756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17825,
											"end": 17846,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17882,
											"end": 17884,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 17862,
											"end": 17880,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 17862,
											"end": 17880,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17862,
											"end": 17880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17855,
											"end": 17885,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17921,
											"end": 17955,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 17901,
											"end": 17919,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 17901,
											"end": 17919,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17901,
											"end": 17919,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17894,
											"end": 17956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17972,
											"end": 17990,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 17972,
											"end": 17990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17972,
											"end": 17990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17965,
											"end": 17997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18014,
											"end": 18033,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 18014,
											"end": 18033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 17641,
											"end": 18039,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11756,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 11688,
											"end": 11756,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11780,
											"name": "PUSH",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11796,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11796,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11796,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11796,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11796,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11796,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11796,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11796,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11796,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11796,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11805,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11805,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1792,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1792,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "PUSH",
											"source": 6,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 11490,
											"end": 11861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11490,
											"end": 11861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11490,
											"end": 11861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11490,
											"end": 11861,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11869,
											"end": 13738,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 11869,
											"end": 13738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11991,
											"end": 12009,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11991,
											"end": 12009,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11983,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 11983,
											"end": 12051,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11983,
											"end": 12051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11983,
											"end": 12051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11983,
											"end": 12051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11983,
											"end": 12051,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18246,
											"end": 18248,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11983,
											"end": 12051,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11983,
											"end": 12051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11983,
											"end": 12051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18228,
											"end": 18249,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18285,
											"end": 18287,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 18265,
											"end": 18283,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 18265,
											"end": 18283,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18265,
											"end": 18283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18258,
											"end": 18288,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18324,
											"end": 18358,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 18304,
											"end": 18322,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 18304,
											"end": 18322,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18304,
											"end": 18322,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18297,
											"end": 18359,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18375,
											"end": 18393,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 18375,
											"end": 18393,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18375,
											"end": 18393,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18368,
											"end": 18403,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18420,
											"end": 18439,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 18420,
											"end": 18439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11983,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 18044,
											"end": 18445,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11983,
											"end": 12051,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 11983,
											"end": 12051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12070,
											"end": 12086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12070,
											"end": 12086,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18652,
											"end": 18654,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18634,
											"end": 18655,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18691,
											"end": 18693,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 18671,
											"end": 18689,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 18671,
											"end": 18689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18671,
											"end": 18689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18664,
											"end": 18694,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18730,
											"end": 18764,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 18710,
											"end": 18728,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 18710,
											"end": 18728,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18710,
											"end": 18728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18703,
											"end": 18765,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18781,
											"end": 18799,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 18781,
											"end": 18799,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18781,
											"end": 18799,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18774,
											"end": 18807,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18824,
											"end": 18843,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 18824,
											"end": 18843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 18450,
											"end": 18849,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "tag",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12154,
											"end": 12155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12145,
											"end": 12151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12145,
											"end": 12155,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 12137,
											"end": 12201,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12201,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12201,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12137,
											"end": 12201,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12201,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19056,
											"end": 19058,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12137,
											"end": 12201,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12137,
											"end": 12201,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12201,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19038,
											"end": 19059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19095,
											"end": 19097,
											"name": "PUSH",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 19075,
											"end": 19093,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 19075,
											"end": 19093,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19075,
											"end": 19093,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19068,
											"end": 19098,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19134,
											"end": 19168,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E7366657220616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 19114,
											"end": 19132,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 19114,
											"end": 19132,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19114,
											"end": 19132,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19107,
											"end": 19169,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7468616E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19185,
											"end": 19203,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 19185,
											"end": 19203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19185,
											"end": 19203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19178,
											"end": 19217,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19234,
											"end": 19253,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 19234,
											"end": 19253,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12137,
											"end": 12201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 18854,
											"end": 19259,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12137,
											"end": 12201,
											"name": "tag",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 12137,
											"end": 12201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12216,
											"end": 12231,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12216,
											"end": 12231,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12216,
											"end": 12231,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12216,
											"end": 12231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12216,
											"end": 12231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12216,
											"end": 12231,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12216,
											"end": 12231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12216,
											"end": 12248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 12216,
											"end": 12248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12235,
											"end": 12248,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12235,
											"end": 12248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12235,
											"end": 12248,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12248,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12235,
											"end": 12248,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12216,
											"end": 12248,
											"name": "tag",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 12216,
											"end": 12248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12212,
											"end": 12387,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12212,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "473"
										},
										{
											"begin": 12212,
											"end": 12387,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12299,
											"end": 12311,
											"name": "PUSH",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 12299,
											"end": 12311,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12289,
											"end": 12295,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12289,
											"end": 12311,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 12289,
											"end": 12311,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12263,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "473"
										},
										{
											"begin": 12263,
											"end": 12387,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12263,
											"end": 12387,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12263,
											"end": 12387,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12263,
											"end": 12387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12263,
											"end": 12387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19466,
											"end": 19468,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12263,
											"end": 12387,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12263,
											"end": 12387,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12263,
											"end": 12387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19448,
											"end": 19469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19505,
											"end": 19507,
											"name": "PUSH",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19478,
											"end": 19508,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19544,
											"end": 19578,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E7366657220616D6F756E74206578636565647320746865206D617854"
										},
										{
											"begin": 19524,
											"end": 19542,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 19524,
											"end": 19542,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19524,
											"end": 19542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19517,
											"end": 19579,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3C20B6B7BAB73A17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19595,
											"end": 19613,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 19595,
											"end": 19613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19595,
											"end": 19613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19588,
											"end": 19626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19643,
											"end": 19662,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 19643,
											"end": 19662,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12263,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 19264,
											"end": 19668,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12263,
											"end": 12387,
											"name": "tag",
											"source": 6,
											"value": "473"
										},
										{
											"begin": 12263,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12682,
											"end": 12710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12713,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 12731,
											"end": 12735,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 12713,
											"end": 12722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 12713,
											"end": 12737,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12713,
											"end": 12737,
											"name": "tag",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 12713,
											"end": 12737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12682,
											"end": 12737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12682,
											"end": 12737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12778,
											"end": 12790,
											"name": "PUSH",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 12778,
											"end": 12790,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12754,
											"end": 12774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12754,
											"end": 12790,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12750,
											"end": 12854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 12750,
											"end": 12854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12830,
											"end": 12842,
											"name": "PUSH",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 12830,
											"end": 12842,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12750,
											"end": 12854,
											"name": "tag",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 12750,
											"end": 12854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13397,
											"end": 13409,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13517,
											"end": 13535,
											"name": "PUSH",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13412,
											"end": 13416,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13412,
											"end": 13416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13517,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 13517,
											"end": 13567,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13545,
											"end": 13563,
											"name": "PUSH",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 13545,
											"end": 13567,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13517,
											"end": 13567,
											"name": "tag",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 13517,
											"end": 13567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13513,
											"end": 13611,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13513,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 13513,
											"end": 13611,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13594,
											"end": 13599,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13513,
											"end": 13611,
											"name": "tag",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 13513,
											"end": 13611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13689,
											"end": 13730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 13704,
											"end": 13708,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13710,
											"end": 13712,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13714,
											"end": 13720,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13722,
											"end": 13729,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13689,
											"end": 13703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 13689,
											"end": 13730,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13689,
											"end": 13730,
											"name": "tag",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 13689,
											"end": 13730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11972,
											"end": 13738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11972,
											"end": 13738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11869,
											"end": 13738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11869,
											"end": 13738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11869,
											"end": 13738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11869,
											"end": 13738,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4970,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 4970,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5086,
											"end": 5093,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5157,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5143,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5143,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5143,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5143,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "483"
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "tag",
											"source": 5,
											"value": "483"
										},
										{
											"begin": 5129,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5179,
											"end": 5184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5179,
											"end": 5184,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5179,
											"end": 5184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4970,
											"end": 5201,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9576,
											"end": 9740,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 9576,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9625,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9639,
											"end": 9654,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9656,
											"end": 9671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9675,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 9675,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 9675,
											"end": 9694,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9675,
											"end": 9694,
											"name": "tag",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 9675,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9638,
											"end": 9694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9638,
											"end": 9694,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9638,
											"end": 9694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9712,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 9638,
											"end": 9694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9638,
											"end": 9694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 9712,
											"end": 9732,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9712,
											"end": 9732,
											"name": "tag",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 9712,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9705,
											"end": 9732,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9705,
											"end": 9732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9705,
											"end": 9732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9705,
											"end": 9732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9576,
											"end": 9740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9576,
											"end": 9740,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 3957,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 3861,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3945,
											"end": 3946,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "491"
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2766,
											"end": 2862,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 2766,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2851,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "494"
										},
										{
											"begin": 2850,
											"end": 2855,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7888,
											"end": 8611,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 7888,
											"end": 8611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7988,
											"end": 7995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8010,
											"end": 8017,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8032,
											"end": 8039,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8137,
											"end": 8160,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8223,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 8235,
											"end": 8242,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8223,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "497"
										},
										{
											"begin": 8223,
											"end": 8243,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8223,
											"end": 8243,
											"name": "tag",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 8223,
											"end": 8243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8122,
											"end": 8243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8122,
											"end": 8243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8122,
											"end": 8243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8122,
											"end": 8243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8255,
											"end": 8270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8272,
											"end": 8295,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8297,
											"end": 8309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8313,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 8339,
											"end": 8346,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8365,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8407,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 8407,
											"end": 8415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 8407,
											"end": 8417,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8407,
											"end": 8417,
											"name": "tag",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 8407,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8313,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 8313,
											"end": 8428,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8313,
											"end": 8428,
											"name": "tag",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 8313,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8428,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8428,
											"name": "SWAP14",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8428,
											"name": "SWAP13",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8254,
											"end": 8428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8428,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8532,
											"end": 8547,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8547,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8562,
											"end": 8566,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8562,
											"end": 8566,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7888,
											"end": 8611,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7888,
											"end": 8611,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7888,
											"end": 8611,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3133,
											"end": 3229,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 3133,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3218,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20131,
											"end": 20372,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 20131,
											"end": 20372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20283,
											"end": 20291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20278,
											"end": 20365,
											"name": "tag",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 20278,
											"end": 20365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20301,
											"end": 20304,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20301,
											"end": 20311,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 20297,
											"end": 20298,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20297,
											"end": 20311,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 20297,
											"end": 20311,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 20278,
											"end": 20365,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 20278,
											"end": 20365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 20278,
											"end": 20365,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 20347,
											"end": 20353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20336,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20344,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20337,
											"end": 20340,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 20341,
											"end": 20342,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "tag",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20333,
											"end": 20344,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20344,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20344,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20344,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20333,
											"end": 20344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 20333,
											"end": 20344,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20353,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20333,
											"end": 20353,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20353,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20353,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20353,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20333,
											"end": 20353,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 20313,
											"end": 20316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 20313,
											"end": 20316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 20313,
											"end": 20316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20313,
											"end": 20316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 20313,
											"end": 20316,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 20313,
											"end": 20316,
											"name": "tag",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 20313,
											"end": 20316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20313,
											"end": 20316,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20313,
											"end": 20316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20313,
											"end": 20316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20278,
											"end": 20365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 20278,
											"end": 20365,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20278,
											"end": 20365,
											"name": "tag",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 20278,
											"end": 20365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20278,
											"end": 20365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20131,
											"end": 20372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20131,
											"end": 20372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20131,
											"end": 20372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20131,
											"end": 20372,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16057,
											"end": 16895,
											"name": "tag",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 16057,
											"end": 16895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16213,
											"end": 16220,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16208,
											"end": 16236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 16208,
											"end": 16236,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16222,
											"end": 16236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 16222,
											"end": 16234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 16222,
											"end": 16236,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 16222,
											"end": 16236,
											"name": "tag",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 16222,
											"end": 16236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16264,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16299,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16299,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 16253,
											"end": 16299,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16277,
											"end": 16299,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16277,
											"end": 16299,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16277,
											"end": 16299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16277,
											"end": 16299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16277,
											"end": 16299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16277,
											"end": 16299,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16277,
											"end": 16288,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 16277,
											"end": 16299,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16277,
											"end": 16299,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16277,
											"end": 16299,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16277,
											"end": 16299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16277,
											"end": 16299,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 16277,
											"end": 16299,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 16277,
											"end": 16299,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 16277,
											"end": 16299,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16276,
											"end": 16299,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16299,
											"name": "tag",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 16253,
											"end": 16299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16249,
											"end": 16846,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16249,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 16249,
											"end": 16846,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16316,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 16338,
											"end": 16344,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16346,
											"end": 16355,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16357,
											"end": 16363,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16316,
											"end": 16337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 16316,
											"end": 16364,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 16316,
											"end": 16364,
											"name": "tag",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 16316,
											"end": 16364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16249,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "543"
										},
										{
											"begin": 16249,
											"end": 16846,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16249,
											"end": 16846,
											"name": "tag",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 16249,
											"end": 16846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16387,
											"end": 16398,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16386,
											"end": 16406,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16386,
											"end": 16432,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16386,
											"end": 16432,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16386,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 16386,
											"end": 16432,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16410,
											"end": 16432,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16410,
											"end": 16432,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16410,
											"end": 16432,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16410,
											"end": 16432,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16410,
											"end": 16432,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16410,
											"end": 16432,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16410,
											"end": 16421,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 16410,
											"end": 16432,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16410,
											"end": 16432,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16410,
											"end": 16432,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16410,
											"end": 16432,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16410,
											"end": 16432,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 16410,
											"end": 16432,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 16410,
											"end": 16432,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 16410,
											"end": 16432,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16386,
											"end": 16432,
											"name": "tag",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 16386,
											"end": 16432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16382,
											"end": 16846,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16382,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 16382,
											"end": 16846,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16449,
											"end": 16495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 16469,
											"end": 16475,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16488,
											"end": 16494,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16449,
											"end": 16468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 16449,
											"end": 16495,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 16382,
											"end": 16846,
											"name": "tag",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 16382,
											"end": 16846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16518,
											"end": 16537,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16518,
											"end": 16537,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16518,
											"end": 16537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16518,
											"end": 16537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16518,
											"end": 16537,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16518,
											"end": 16537,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16518,
											"end": 16529,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 16518,
											"end": 16537,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16518,
											"end": 16537,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16518,
											"end": 16537,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16518,
											"end": 16537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16518,
											"end": 16537,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 16518,
											"end": 16537,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 16518,
											"end": 16537,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 16518,
											"end": 16537,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16517,
											"end": 16537,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16517,
											"end": 16564,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16517,
											"end": 16564,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16517,
											"end": 16564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 16517,
											"end": 16564,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16542,
											"end": 16564,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16542,
											"end": 16564,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16542,
											"end": 16564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16542,
											"end": 16564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16542,
											"end": 16564,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16542,
											"end": 16564,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16542,
											"end": 16553,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 16542,
											"end": 16564,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16542,
											"end": 16564,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16542,
											"end": 16564,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16542,
											"end": 16564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16542,
											"end": 16564,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 16542,
											"end": 16564,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 16542,
											"end": 16564,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 16542,
											"end": 16564,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16541,
											"end": 16564,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16517,
											"end": 16564,
											"name": "tag",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 16517,
											"end": 16564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16513,
											"end": 16846,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16513,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "534"
										},
										{
											"begin": 16513,
											"end": 16846,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16581,
											"end": 16625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 16599,
											"end": 16605,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16607,
											"end": 16616,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16618,
											"end": 16624,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16581,
											"end": 16598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "536"
										},
										{
											"begin": 16581,
											"end": 16625,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 16513,
											"end": 16846,
											"name": "tag",
											"source": 6,
											"value": "534"
										},
										{
											"begin": 16513,
											"end": 16846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16647,
											"end": 16666,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16647,
											"end": 16666,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16647,
											"end": 16666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16647,
											"end": 16666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16647,
											"end": 16666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16647,
											"end": 16666,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16647,
											"end": 16658,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 16647,
											"end": 16666,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16647,
											"end": 16666,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16647,
											"end": 16666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16647,
											"end": 16666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16647,
											"end": 16666,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 16647,
											"end": 16666,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 16647,
											"end": 16666,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 16647,
											"end": 16666,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16647,
											"end": 16692,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16647,
											"end": 16692,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16647,
											"end": 16692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "538"
										},
										{
											"begin": 16647,
											"end": 16692,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16670,
											"end": 16681,
											"name": "PUSH",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16647,
											"end": 16692,
											"name": "tag",
											"source": 6,
											"value": "538"
										},
										{
											"begin": 16647,
											"end": 16692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16643,
											"end": 16846,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16643,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 16643,
											"end": 16846,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16709,
											"end": 16757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 16731,
											"end": 16737,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16739,
											"end": 16748,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16750,
											"end": 16756,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16709,
											"end": 16730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "541"
										},
										{
											"begin": 16709,
											"end": 16757,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 16643,
											"end": 16846,
											"name": "tag",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 16643,
											"end": 16846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16790,
											"end": 16834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "543"
										},
										{
											"begin": 16808,
											"end": 16814,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16816,
											"end": 16825,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16827,
											"end": 16833,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16790,
											"end": 16807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "536"
										},
										{
											"begin": 16790,
											"end": 16834,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 16790,
											"end": 16834,
											"name": "tag",
											"source": 6,
											"value": "543"
										},
										{
											"begin": 16790,
											"end": 16834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16863,
											"end": 16870,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16858,
											"end": 16887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 16858,
											"end": 16887,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16872,
											"end": 16887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 11277,
											"end": 11292,
											"name": "PUSH",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 11277,
											"end": 11292,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11267,
											"end": 11274,
											"name": "PUSH",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 11267,
											"end": 11292,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 11223,
											"end": 11350,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9748,
											"end": 10353,
											"name": "tag",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 9748,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9846,
											"end": 9853,
											"name": "PUSH",
											"source": 6,
											"value": "6C"
										},
										{
											"begin": 9846,
											"end": 9853,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9882,
											"end": 9889,
											"name": "PUSH",
											"source": 6,
											"value": "6B"
										},
										{
											"begin": 9882,
											"end": 9889,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9799,
											"end": 9806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9799,
											"end": 9806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9799,
											"end": 9806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9799,
											"end": 9806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9799,
											"end": 9806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9900,
											"end": 10238,
											"name": "tag",
											"source": 6,
											"value": "548"
										},
										{
											"begin": 9900,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9924,
											"end": 9933,
											"name": "PUSH",
											"source": 6,
											"value": "6A"
										},
										{
											"begin": 9924,
											"end": 9940,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9900,
											"end": 10238,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9900,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "549"
										},
										{
											"begin": 9900,
											"end": 10238,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 9991,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "PUSH",
											"source": 6,
											"value": "6A"
										},
										{
											"begin": 10002,
											"end": 10003,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "tag",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10015,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10015,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "554"
										},
										{
											"begin": 9984,
											"end": 10067,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10060,
											"end": 10067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10043,
											"name": "PUSH",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 10036,
											"end": 10057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10044,
											"end": 10053,
											"name": "PUSH",
											"source": 6,
											"value": "6A"
										},
										{
											"begin": 10054,
											"end": 10055,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "tag",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10057,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10057,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10057,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10057,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10036,
											"end": 10057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10057,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10057,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10067,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10067,
											"name": "tag",
											"source": 6,
											"value": "554"
										},
										{
											"begin": 9984,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9962,
											"end": 10108,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9962,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "558"
										},
										{
											"begin": 9962,
											"end": 10108,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10098,
											"name": "PUSH",
											"source": 6,
											"value": "6C"
										},
										{
											"begin": 10091,
											"end": 10098,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10100,
											"end": 10107,
											"name": "PUSH",
											"source": 6,
											"value": "6B"
										},
										{
											"begin": 10100,
											"end": 10107,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10108,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10108,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9748,
											"end": 10353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9748,
											"end": 10353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9748,
											"end": 10353,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9962,
											"end": 10108,
											"name": "tag",
											"source": 6,
											"value": "558"
										},
										{
											"begin": 9962,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10133,
											"end": 10167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "559"
										},
										{
											"begin": 10145,
											"end": 10152,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10162,
											"name": "PUSH",
											"source": 6,
											"value": "6A"
										},
										{
											"begin": 10163,
											"end": 10164,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "tag",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10133,
											"end": 10140,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10133,
											"end": 10140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10133,
											"end": 10144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 10133,
											"end": 10167,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10133,
											"end": 10167,
											"name": "tag",
											"source": 6,
											"value": "559"
										},
										{
											"begin": 10133,
											"end": 10167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10123,
											"end": 10167,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10123,
											"end": 10167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "563"
										},
										{
											"begin": 10204,
											"end": 10211,
											"name": "PUSH",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 10204,
											"end": 10225,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10212,
											"end": 10221,
											"name": "PUSH",
											"source": 6,
											"value": "6A"
										},
										{
											"begin": 10222,
											"end": 10223,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "565"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "565"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "tag",
											"source": 6,
											"value": "565"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10225,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10225,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10225,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10225,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10225,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10225,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10204,
											"end": 10225,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10225,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10225,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 10192,
											"end": 10226,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10192,
											"end": 10226,
											"name": "tag",
											"source": 6,
											"value": "563"
										},
										{
											"begin": 10192,
											"end": 10226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10226,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9942,
											"end": 9945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9942,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "567"
										},
										{
											"begin": 9942,
											"end": 9945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9942,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 9942,
											"end": 9945,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9942,
											"end": 9945,
											"name": "tag",
											"source": 6,
											"value": "567"
										},
										{
											"begin": 9942,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9942,
											"end": 9945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9942,
											"end": 9945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9942,
											"end": 9945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9900,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "548"
										},
										{
											"begin": 9900,
											"end": 10238,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9900,
											"end": 10238,
											"name": "tag",
											"source": 6,
											"value": "549"
										},
										{
											"begin": 9900,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10274,
											"end": 10281,
											"name": "PUSH",
											"source": 6,
											"value": "6B"
										},
										{
											"begin": 10274,
											"end": 10281,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10262,
											"end": 10269,
											"name": "PUSH",
											"source": 6,
											"value": "6C"
										},
										{
											"begin": 10262,
											"end": 10269,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10262,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "568"
										},
										{
											"begin": 10262,
											"end": 10282,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10262,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 10262,
											"end": 10282,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10262,
											"end": 10282,
											"name": "tag",
											"source": 6,
											"value": "568"
										},
										{
											"begin": 10262,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10252,
											"end": 10259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10252,
											"end": 10282,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10248,
											"end": 10309,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10248,
											"end": 10309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "569"
										},
										{
											"begin": 10248,
											"end": 10309,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10292,
											"end": 10299,
											"name": "PUSH",
											"source": 6,
											"value": "6C"
										},
										{
											"begin": 10292,
											"end": 10299,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10301,
											"end": 10308,
											"name": "PUSH",
											"source": 6,
											"value": "6B"
										},
										{
											"begin": 10301,
											"end": 10308,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10284,
											"end": 10309,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10284,
											"end": 10309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10284,
											"end": 10309,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10284,
											"end": 10309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10284,
											"end": 10309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10284,
											"end": 10309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9748,
											"end": 10353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9748,
											"end": 10353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9748,
											"end": 10353,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10248,
											"end": 10309,
											"name": "tag",
											"source": 6,
											"value": "569"
										},
										{
											"begin": 10248,
											"end": 10309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10328,
											"end": 10335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10328,
											"end": 10335,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10337,
											"end": 10344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10337,
											"end": 10344,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9748,
											"end": 10353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9748,
											"end": 10353,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8619,
											"end": 8998,
											"name": "tag",
											"source": 6,
											"value": "497"
										},
										{
											"begin": 8619,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8713,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8715,
											"end": 8722,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8755,
											"end": 8767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8770,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "571"
										},
										{
											"begin": 8786,
											"end": 8793,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "572"
										},
										{
											"begin": 8770,
											"end": 8794,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8770,
											"end": 8794,
											"name": "tag",
											"source": 6,
											"value": "571"
										},
										{
											"begin": 8770,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8755,
											"end": 8794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8869,
											"end": 8892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8895,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "573"
										},
										{
											"begin": 8895,
											"end": 8902,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8755,
											"end": 8794,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8895,
											"end": 8912,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8895,
											"end": 8912,
											"name": "tag",
											"source": 6,
											"value": "573"
										},
										{
											"begin": 8895,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8869,
											"end": 8912,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 8968,
											"end": 8972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8968,
											"end": 8972,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8619,
											"end": 8998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8619,
											"end": 8998,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8619,
											"end": 8998,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9006,
											"end": 9568,
											"name": "tag",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 9006,
											"end": 9568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9207,
											"end": 9214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9207,
											"end": 9214,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9207,
											"end": 9214,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9207,
											"end": 9214,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9304,
											"end": 9328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "575"
										},
										{
											"begin": 9304,
											"end": 9311,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9327,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9304,
											"end": 9315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "576"
										},
										{
											"begin": 9304,
											"end": 9328,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9304,
											"end": 9328,
											"name": "tag",
											"source": 6,
											"value": "575"
										},
										{
											"begin": 9304,
											"end": 9328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9286,
											"end": 9328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9339,
											"end": 9351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "577"
										},
										{
											"begin": 9354,
											"end": 9358,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9363,
											"end": 9374,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9354,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "576"
										},
										{
											"begin": 9354,
											"end": 9375,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9354,
											"end": 9375,
											"name": "tag",
											"source": 6,
											"value": "577"
										},
										{
											"begin": 9354,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9447,
											"end": 9470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9473,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "578"
										},
										{
											"begin": 9473,
											"end": 9480,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9375,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9473,
											"end": 9484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 9473,
											"end": 9490,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9473,
											"end": 9490,
											"name": "tag",
											"source": 6,
											"value": "578"
										},
										{
											"begin": 9473,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9529,
											"end": 9536,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9529,
											"end": 9536,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": 9529,
											"end": 9536,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9529,
											"end": 9536,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9555,
											"end": 9559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9555,
											"end": 9559,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9006,
											"end": 9568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9006,
											"end": 9568,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9006,
											"end": 9568,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10998,
											"end": 11215,
											"name": "tag",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 10998,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11045,
											"end": 11052,
											"name": "PUSH",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 11045,
											"end": 11052,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11041,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "586"
										},
										{
											"begin": 11041,
											"end": 11066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11215,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11041,
											"end": 11066,
											"name": "tag",
											"source": 6,
											"value": "586"
										},
										{
											"begin": 11041,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11096,
											"end": 11103,
											"name": "PUSH",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 11096,
											"end": 11103,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11096,
											"end": 11103,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11078,
											"end": 11093,
											"name": "PUSH",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 11078,
											"end": 11103,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11166,
											"end": 11177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11166,
											"end": 11177,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11215,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 18224,
											"end": 18901,
											"name": "tag",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 18224,
											"end": 18901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18375,
											"end": 18390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18405,
											"end": 18428,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 18443,
											"end": 18455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18470,
											"end": 18493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 18508,
											"end": 18520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18556,
											"end": 18575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "588"
										},
										{
											"begin": 18567,
											"end": 18574,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 18556,
											"end": 18566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 18556,
											"end": 18575,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 18556,
											"end": 18575,
											"name": "tag",
											"source": 6,
											"value": "588"
										},
										{
											"begin": 18556,
											"end": 18575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18604,
											"end": 18619,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 18604,
											"end": 18619,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 18604,
											"end": 18619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18604,
											"end": 18619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18604,
											"end": 18619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18604,
											"end": 18619,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18604,
											"end": 18611,
											"name": "PUSH",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 18604,
											"end": 18619,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18604,
											"end": 18619,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18604,
											"end": 18619,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18604,
											"end": 18619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18604,
											"end": 18619,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 18604,
											"end": 18619,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 18360,
											"end": 18575,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 18360,
											"end": 18575,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18360,
											"end": 18575,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 18360,
											"end": 18575,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18360,
											"end": 18575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18360,
											"end": 18575,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18360,
											"end": 18575,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18360,
											"end": 18575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18604,
											"end": 18632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "589"
										},
										{
											"begin": 18604,
											"end": 18632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18624,
											"end": 18631,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 18604,
											"end": 18623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 18604,
											"end": 18632,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 18604,
											"end": 18632,
											"name": "tag",
											"source": 6,
											"value": "589"
										},
										{
											"begin": 18604,
											"end": 18632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18586,
											"end": 18593,
											"name": "PUSH",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 18586,
											"end": 18632,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 18586,
											"end": 18632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18586,
											"end": 18632,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 18586,
											"end": 18632,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 18661,
											"end": 18668,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 18661,
											"end": 18676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18661,
											"end": 18676,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18661,
											"end": 18676,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 18661,
											"end": 18676,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 18661,
											"end": 18689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "590"
										},
										{
											"begin": 18661,
											"end": 18689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18681,
											"end": 18688,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 18661,
											"end": 18680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 18661,
											"end": 18689,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 18661,
											"end": 18689,
											"name": "tag",
											"source": 6,
											"value": "590"
										},
										{
											"begin": 18661,
											"end": 18689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18643,
											"end": 18658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18658,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18658,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18643,
											"end": 18658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18650,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 18643,
											"end": 18658,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18643,
											"end": 18658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18658,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18643,
											"end": 18658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18658,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18658,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18689,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18689,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 18643,
											"end": 18689,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 18739,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 18739,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 18739,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 18739,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 18739,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 18739,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 18739,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 18760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 18721,
											"end": 18760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18744,
											"end": 18759,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 18743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 18721,
											"end": 18760,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 18721,
											"end": 18760,
											"name": "tag",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 18721,
											"end": 18760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18700,
											"end": 18718,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 18700,
											"end": 18718,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 18700,
											"end": 18718,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18700,
											"end": 18718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18700,
											"end": 18718,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18700,
											"end": 18718,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18700,
											"end": 18707,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 18700,
											"end": 18718,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18700,
											"end": 18718,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18700,
											"end": 18718,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18700,
											"end": 18718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18700,
											"end": 18718,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 18700,
											"end": 18760,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 18810,
											"end": 18833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "592"
										},
										{
											"begin": 18822,
											"end": 18826,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18828,
											"end": 18832,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18810,
											"end": 18821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "593"
										},
										{
											"begin": 18810,
											"end": 18833,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 18810,
											"end": 18833,
											"name": "tag",
											"source": 6,
											"value": "592"
										},
										{
											"begin": 18810,
											"end": 18833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18866,
											"end": 18875,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 18858,
											"end": 18864,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18877,
											"end": 18892,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1792,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1757,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1621,
											"end": 1798,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "tag",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18849,
											"end": 18893,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 18349,
											"end": 18901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18349,
											"end": 18901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18349,
											"end": 18901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18349,
											"end": 18901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18349,
											"end": 18901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18224,
											"end": 18901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18224,
											"end": 18901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18224,
											"end": 18901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18224,
											"end": 18901,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 17527,
											"end": 18216,
											"name": "tag",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 17527,
											"end": 18216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17676,
											"end": 17691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17706,
											"end": 17729,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17744,
											"end": 17756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17771,
											"end": 17794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17809,
											"end": 17821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17857,
											"end": 17876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 17868,
											"end": 17875,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 17857,
											"end": 17867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 17857,
											"end": 17876,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 17857,
											"end": 17876,
											"name": "tag",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 17857,
											"end": 17876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17905,
											"end": 17920,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 17905,
											"end": 17920,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17905,
											"end": 17920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17905,
											"end": 17920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17905,
											"end": 17920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17905,
											"end": 17920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17905,
											"end": 17912,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 17905,
											"end": 17920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17905,
											"end": 17920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17905,
											"end": 17920,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17905,
											"end": 17920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17905,
											"end": 17920,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 17905,
											"end": 17920,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 17661,
											"end": 17876,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 17661,
											"end": 17876,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17661,
											"end": 17876,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17661,
											"end": 17876,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17661,
											"end": 17876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17661,
											"end": 17876,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17661,
											"end": 17876,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17661,
											"end": 17876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17905,
											"end": 17933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "597"
										},
										{
											"begin": 17905,
											"end": 17933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17661,
											"end": 17876,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 17905,
											"end": 17924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 17905,
											"end": 17933,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 17905,
											"end": 17933,
											"name": "tag",
											"source": 6,
											"value": "597"
										},
										{
											"begin": 17905,
											"end": 17933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17894,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17902,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17933,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17933,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 17887,
											"end": 17933,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 17965,
											"end": 17983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17965,
											"end": 17983,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 17965,
											"end": 17983,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17965,
											"end": 17983,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17965,
											"end": 17983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17965,
											"end": 17972,
											"name": "PUSH",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 17965,
											"end": 17983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17965,
											"end": 17983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17965,
											"end": 17983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17965,
											"end": 17983,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 17965,
											"end": 17983,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 17965,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "598"
										},
										{
											"begin": 17965,
											"end": 18004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17988,
											"end": 18003,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17965,
											"end": 17987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 17965,
											"end": 18004,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 17965,
											"end": 18004,
											"name": "tag",
											"source": 6,
											"value": "598"
										},
										{
											"begin": 17965,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17944,
											"end": 17951,
											"name": "PUSH",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 17944,
											"end": 18004,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 17944,
											"end": 18004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17944,
											"end": 18004,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 17944,
											"end": 18004,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 18036,
											"end": 18043,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 18036,
											"end": 18054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18036,
											"end": 18054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18036,
											"end": 18054,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 18036,
											"end": 18054,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 18036,
											"end": 18075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 18036,
											"end": 18075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18059,
											"end": 18074,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 18036,
											"end": 18058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 18036,
											"end": 18075,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 16903,
											"end": 17519,
											"name": "tag",
											"source": 6,
											"value": "536"
										},
										{
											"begin": 16903,
											"end": 17519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17050,
											"end": 17065,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17080,
											"end": 17103,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17118,
											"end": 17130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17145,
											"end": 17168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17183,
											"end": 17195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17231,
											"end": 17250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "603"
										},
										{
											"begin": 17242,
											"end": 17249,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 17231,
											"end": 17241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 17231,
											"end": 17250,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 17231,
											"end": 17250,
											"name": "tag",
											"source": 6,
											"value": "603"
										},
										{
											"begin": 17231,
											"end": 17250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17279,
											"end": 17294,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 17279,
											"end": 17294,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17279,
											"end": 17294,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17279,
											"end": 17294,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17279,
											"end": 17294,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17279,
											"end": 17294,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17279,
											"end": 17286,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 17279,
											"end": 17294,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17279,
											"end": 17294,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17279,
											"end": 17294,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17279,
											"end": 17294,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17279,
											"end": 17294,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 17279,
											"end": 17294,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 17035,
											"end": 17250,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 17035,
											"end": 17250,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17035,
											"end": 17250,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17035,
											"end": 17250,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17035,
											"end": 17250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17035,
											"end": 17250,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17035,
											"end": 17250,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17035,
											"end": 17250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17279,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "590"
										},
										{
											"begin": 17279,
											"end": 17307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17035,
											"end": 17250,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 17279,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 17279,
											"end": 17307,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 18909,
											"end": 19657,
											"name": "tag",
											"source": 6,
											"value": "541"
										},
										{
											"begin": 18909,
											"end": 19657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19060,
											"end": 19075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19090,
											"end": 19113,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19128,
											"end": 19140,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19155,
											"end": 19178,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19193,
											"end": 19205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19241,
											"end": 19260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "609"
										},
										{
											"begin": 19252,
											"end": 19259,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 19241,
											"end": 19251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 19241,
											"end": 19260,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 19241,
											"end": 19260,
											"name": "tag",
											"source": 6,
											"value": "609"
										},
										{
											"begin": 19241,
											"end": 19260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19289,
											"end": 19304,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 19289,
											"end": 19304,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19289,
											"end": 19304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19289,
											"end": 19304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19289,
											"end": 19304,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19289,
											"end": 19304,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19289,
											"end": 19296,
											"name": "PUSH",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 19289,
											"end": 19304,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19289,
											"end": 19304,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19289,
											"end": 19304,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19289,
											"end": 19304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19289,
											"end": 19304,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 19289,
											"end": 19304,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 19045,
											"end": 19260,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 19045,
											"end": 19260,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19045,
											"end": 19260,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 19045,
											"end": 19260,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19045,
											"end": 19260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19045,
											"end": 19260,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19045,
											"end": 19260,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19045,
											"end": 19260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19289,
											"end": 19317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "610"
										},
										{
											"begin": 19289,
											"end": 19317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19309,
											"end": 19316,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 19289,
											"end": 19308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 19289,
											"end": 19317,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 19289,
											"end": 19317,
											"name": "tag",
											"source": 6,
											"value": "610"
										},
										{
											"begin": 19289,
											"end": 19317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19271,
											"end": 19286,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19286,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19271,
											"end": 19286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19286,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19278,
											"name": "PUSH",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 19271,
											"end": 19286,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19271,
											"end": 19286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19286,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19286,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19271,
											"end": 19286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19286,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19286,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19317,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19317,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 19271,
											"end": 19317,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 19346,
											"end": 19353,
											"name": "PUSH",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 19346,
											"end": 19361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19346,
											"end": 19361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19346,
											"end": 19361,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 19346,
											"end": 19361,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 19346,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "597"
										},
										{
											"begin": 19346,
											"end": 19374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19366,
											"end": 19373,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 19346,
											"end": 19365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 19346,
											"end": 19374,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10860,
											"end": 10990,
											"name": "tag",
											"source": 6,
											"value": "572"
										},
										{
											"begin": 10860,
											"end": 10990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10924,
											"end": 10931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10951,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 10976,
											"end": 10981,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "619"
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10951,
											"end": 10958,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10951,
											"end": 10962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "576"
										},
										{
											"begin": 10951,
											"end": 10962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "tag",
											"source": 6,
											"value": "619"
										},
										{
											"begin": 10951,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10951,
											"end": 10975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10951,
											"end": 10975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 10951,
											"end": 10982,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3476,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "576"
										},
										{
											"begin": 3476,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3564,
											"end": 3565,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3561,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7733,
											"end": 7880,
											"name": "tag",
											"source": 6,
											"value": "593"
										},
										{
											"begin": 7733,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7811,
											"end": 7818,
											"name": "PUSH",
											"source": 6,
											"value": "6C"
										},
										{
											"begin": 7811,
											"end": 7818,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7811,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "623"
										},
										{
											"begin": 7811,
											"end": 7828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7823,
											"end": 7827,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7811,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 7811,
											"end": 7828,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7811,
											"end": 7828,
											"name": "tag",
											"source": 6,
											"value": "623"
										},
										{
											"begin": 7811,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7801,
											"end": 7808,
											"name": "PUSH",
											"source": 6,
											"value": "6C"
										},
										{
											"begin": 7801,
											"end": 7828,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7852,
											"end": 7862,
											"name": "PUSH",
											"source": 6,
											"value": "6D"
										},
										{
											"begin": 7852,
											"end": 7862,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7852,
											"end": 7872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "624"
										},
										{
											"begin": 7852,
											"end": 7872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7867,
											"end": 7871,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7852,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 7852,
											"end": 7872,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7852,
											"end": 7872,
											"name": "tag",
											"source": 6,
											"value": "624"
										},
										{
											"begin": 7852,
											"end": 7872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7849,
											"name": "PUSH",
											"source": 6,
											"value": "6D"
										},
										{
											"begin": 7839,
											"end": 7872,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7733,
											"end": 7880,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "385"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "317"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "627"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "387"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "630"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "629"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "630"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "629"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "630"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "631"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "627"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "631"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "408"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "632"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "223"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "632"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "634"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "630"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "634"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "635"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "630"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "635"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "630"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "636"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "630"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "636"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "627"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "639"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "631"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "639"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 199,
											"end": 796,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 199,
											"end": 796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 311,
											"end": 315,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 342,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 358,
											"end": 367,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 351,
											"end": 372,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 401,
											"end": 407,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 395,
											"end": 408,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 444,
											"end": 450,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 439,
											"end": 441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 428,
											"end": 437,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 417,
											"end": 451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 469,
											"end": 470,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 619,
											"name": "tag",
											"source": 7,
											"value": "655"
										},
										{
											"begin": 479,
											"end": 619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 493,
											"end": 499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 487,
											"end": 500,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 479,
											"end": 619,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 479,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "657"
										},
										{
											"begin": 479,
											"end": 619,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 588,
											"end": 602,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 588,
											"end": 602,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 588,
											"end": 602,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 584,
											"end": 607,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 584,
											"end": 607,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 578,
											"end": 608,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 554,
											"end": 571,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 554,
											"end": 571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 554,
											"end": 571,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 573,
											"end": 575,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 543,
											"end": 609,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 508,
											"end": 518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 508,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 479,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "655"
										},
										{
											"begin": 479,
											"end": 619,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 479,
											"end": 619,
											"name": "tag",
											"source": 7,
											"value": "657"
										},
										{
											"begin": 479,
											"end": 619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 637,
											"end": 643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 634,
											"end": 635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 644,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 628,
											"end": 719,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 628,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "658"
										},
										{
											"begin": 628,
											"end": 719,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 707,
											"end": 708,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 704,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 699,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 682,
											"end": 691,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 678,
											"end": 700,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 674,
											"end": 705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 667,
											"end": 709,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 628,
											"end": 719,
											"name": "tag",
											"source": 7,
											"value": "658"
										},
										{
											"begin": 628,
											"end": 719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 780,
											"end": 782,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 759,
											"end": 774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 755,
											"end": 784,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 740,
											"end": 785,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 740,
											"end": 785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 740,
											"end": 785,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 740,
											"end": 785,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 787,
											"end": 789,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 790,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 736,
											"end": 790,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 199,
											"end": 796,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 199,
											"end": 796,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 801,
											"end": 974,
											"name": "tag",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 801,
											"end": 974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 869,
											"end": 889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 889,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 918,
											"end": 949,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 918,
											"end": 949,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 908,
											"end": 950,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 908,
											"end": 950,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 898,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "660"
										},
										{
											"begin": 898,
											"end": 968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 964,
											"end": 965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 954,
											"end": 966,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 898,
											"end": 968,
											"name": "tag",
											"source": 7,
											"value": "660"
										},
										{
											"begin": 898,
											"end": 968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 801,
											"end": 974,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 801,
											"end": 974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 801,
											"end": 974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 801,
											"end": 974,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 979,
											"end": 1165,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 979,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1044,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1093,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1088,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1070,
											"end": 1077,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1089,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1094,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1111,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "662"
										},
										{
											"begin": 1059,
											"end": 1111,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1107,
											"end": 1108,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1105,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1109,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1111,
											"name": "tag",
											"source": 7,
											"value": "662"
										},
										{
											"begin": 1059,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 1149,
											"end": 1158,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 1130,
											"end": 1159,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1616,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1362,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1488,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1477,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1489,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1494,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "666"
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1505,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1497,
											"end": 1509,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "tag",
											"source": 7,
											"value": "666"
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "667"
										},
										{
											"begin": 1549,
											"end": 1558,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 1530,
											"end": 1559,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1530,
											"end": 1559,
											"name": "tag",
											"source": 7,
											"value": "667"
										},
										{
											"begin": 1530,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1520,
											"end": 1559,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1591,
											"end": 1609,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1609,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1609,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1610,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1610,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1616,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1803,
											"end": 2131,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1803,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1937,
											"end": 1946,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1969,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "670"
										},
										{
											"begin": 1917,
											"end": 1969,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1965,
											"end": 1966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1955,
											"end": 1967,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1969,
											"name": "tag",
											"source": 7,
											"value": "670"
										},
										{
											"begin": 1917,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "671"
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "tag",
											"source": 7,
											"value": "671"
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 2017,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 2017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "672"
										},
										{
											"begin": 2070,
											"end": 2072,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 2036,
											"end": 2074,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2036,
											"end": 2074,
											"name": "tag",
											"source": 7,
											"value": "672"
										},
										{
											"begin": 2036,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2074,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2074,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2121,
											"end": 2123,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2093,
											"end": 2125,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2083,
											"end": 2125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2083,
											"end": 2125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 2131,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 2131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 2131,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 2131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 2131,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 2131,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2136,
											"end": 2477,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2136,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 2259,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2248,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2233,
											"end": 2265,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2282,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "674"
										},
										{
											"begin": 2230,
											"end": 2282,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2279,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2280,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2282,
											"name": "tag",
											"source": 7,
											"value": "674"
										},
										{
											"begin": 2230,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2324,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2374,
											"end": 2376,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2421,
											"end": 2426,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2414,
											"end": 2427,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2428,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "675"
										},
										{
											"begin": 2387,
											"end": 2447,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2443,
											"end": 2444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2441,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2445,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2447,
											"name": "tag",
											"source": 7,
											"value": "675"
										},
										{
											"begin": 2387,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2471,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2477,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2477,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2477,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2482,
											"end": 3140,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2482,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2726,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2726,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2726,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2678,
											"end": 2696,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2678,
											"end": 2696,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2678,
											"end": 2696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 2819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 2819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 2819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2628,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2655,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2891,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2891,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2852,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2628,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 3114,
											"name": "tag",
											"source": 7,
											"value": "677"
										},
										{
											"begin": 2919,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2927,
											"end": 2940,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 3114,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "679"
										},
										{
											"begin": 2919,
											"end": 3114,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2998,
											"end": 3011,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2998,
											"end": 3011,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2994,
											"end": 3033,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 3034,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 3034,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3104,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3104,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3104,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 3066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 3066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 3066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 3066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3031,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2948,
											"end": 2957,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "677"
										},
										{
											"begin": 2919,
											"end": 3114,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 3114,
											"name": "tag",
											"source": 7,
											"value": "679"
										},
										{
											"begin": 2919,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3131,
											"end": 3134,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 2482,
											"end": 3140,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2482,
											"end": 3140,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3145,
											"end": 3272,
											"name": "tag",
											"source": 7,
											"value": "642"
										},
										{
											"begin": 3145,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3201,
											"end": 3204,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3237,
											"end": 3241,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3227,
											"end": 3242,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3265,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3258,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3277,
											"end": 3552,
											"name": "tag",
											"source": 7,
											"value": "643"
										},
										{
											"begin": 3277,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3350,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3342,
											"end": 3351,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3415,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3417,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3418,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3433,
											"end": 3467,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3433,
											"end": 3467,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3430,
											"end": 3492,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3515,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "683"
										},
										{
											"begin": 3427,
											"end": 3515,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "683"
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "642"
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "tag",
											"source": 7,
											"value": "683"
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3533,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3277,
											"end": 3552,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3277,
											"end": 3552,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3277,
											"end": 3552,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3557,
											"end": 3738,
											"name": "tag",
											"source": 7,
											"value": "644"
										},
										{
											"begin": 3557,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3640,
											"end": 3646,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3634,
											"end": 3690,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3634,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "686"
										},
										{
											"begin": 3634,
											"end": 3690,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "686"
										},
										{
											"begin": 3670,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "642"
										},
										{
											"begin": 3670,
											"end": 3688,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3670,
											"end": 3688,
											"name": "tag",
											"source": 7,
											"value": "686"
										},
										{
											"begin": 3670,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3715,
											"end": 3716,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3711,
											"end": 3725,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3727,
											"end": 3731,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3707,
											"end": 3732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3732,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3557,
											"end": 3738,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3743,
											"end": 4403,
											"name": "tag",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 3743,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3853,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3847,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 3848,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "688"
										},
										{
											"begin": 3817,
											"end": 3872,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3868,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3866,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3870,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3872,
											"name": "tag",
											"source": 7,
											"value": "688"
										},
										{
											"begin": 3817,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3904,
											"end": 3910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3911,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3954,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "689"
										},
										{
											"begin": 3970,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "690"
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "644"
										},
										{
											"begin": 3970,
											"end": 4011,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3970,
											"end": 4011,
											"name": "tag",
											"source": 7,
											"value": "690"
										},
										{
											"begin": 3970,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3954,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "643"
										},
										{
											"begin": 3954,
											"end": 4012,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3954,
											"end": 4012,
											"name": "tag",
											"source": 7,
											"value": "689"
										},
										{
											"begin": 3954,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4046,
											"end": 4061,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4046,
											"end": 4061,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4046,
											"end": 4061,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4132,
											"end": 4133,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4128,
											"end": 4138,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4138,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4138,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4138,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4139,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4144,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4144,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4089,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4171,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4171,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4171,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4188,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "691"
										},
										{
											"begin": 4153,
											"end": 4188,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4181,
											"end": 4182,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4186,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4188,
											"name": "tag",
											"source": 7,
											"value": "691"
										},
										{
											"begin": 4153,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4222,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4218,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4223,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4374,
											"name": "tag",
											"source": 7,
											"value": "692"
										},
										{
											"begin": 4232,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4248,
											"end": 4254,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4246,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4255,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4374,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "694"
										},
										{
											"begin": 4232,
											"end": 4374,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4331,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4331,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4332,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4332,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4277,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4277,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "692"
										},
										{
											"begin": 4232,
											"end": 4374,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4374,
											"name": "tag",
											"source": 7,
											"value": "694"
										},
										{
											"begin": 4232,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 4403,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3743,
											"end": 4403,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4408,
											"end": 6219,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 4408,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 4600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4602,
											"end": 4608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4610,
											"end": 4616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4634,
											"end": 4640,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4698,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4683,
											"end": 4692,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4674,
											"end": 4681,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4693,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4699,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4663,
											"end": 4716,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4663,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "696"
										},
										{
											"begin": 4663,
											"end": 4716,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4712,
											"end": 4713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4702,
											"end": 4714,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4663,
											"end": 4716,
											"name": "tag",
											"source": 7,
											"value": "696"
										},
										{
											"begin": 4663,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "697"
										},
										{
											"begin": 4754,
											"end": 4763,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 4735,
											"end": 4764,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4735,
											"end": 4764,
											"name": "tag",
											"source": 7,
											"value": "697"
										},
										{
											"begin": 4735,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4764,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4783,
											"end": 4785,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4832,
											"end": 4834,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4830,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4836,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4836,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4883,
											"end": 4885,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 4881,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4868,
											"end": 4886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4887,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4845,
											"end": 4887,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4845,
											"end": 4887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 4936,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4923,
											"end": 4932,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4919,
											"end": 4937,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4938,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4896,
											"end": 4938,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4896,
											"end": 4938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 4992,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4978,
											"end": 4987,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4961,
											"end": 4994,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5054,
											"end": 5056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5046,
											"end": 5052,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5043,
											"end": 5057,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5074,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "698"
										},
										{
											"begin": 5040,
											"end": 5074,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5072,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5074,
											"name": "tag",
											"source": 7,
											"value": "698"
										},
										{
											"begin": 5040,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5097,
											"end": 5106,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5115,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5160,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5150,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5142,
											"end": 5144,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5138,
											"end": 5151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5134,
											"end": 5161,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "699"
										},
										{
											"begin": 5124,
											"end": 5179,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5179,
											"name": "tag",
											"source": 7,
											"value": "699"
										},
										{
											"begin": 5124,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5198,
											"end": 5214,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "700"
										},
										{
											"begin": 5250,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "690"
										},
										{
											"begin": 5288,
											"end": 5290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5250,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "644"
										},
										{
											"begin": 5250,
											"end": 5291,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5234,
											"end": 5292,
											"name": "tag",
											"source": 7,
											"value": "700"
										},
										{
											"begin": 5234,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5326,
											"end": 5341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5326,
											"end": 5341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5326,
											"end": 5341,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5409,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5404,
											"end": 5414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5414,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5396,
											"end": 5415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5396,
											"end": 5415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5392,
											"end": 5420,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5392,
											"end": 5420,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5392,
											"end": 5420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5432,
											"end": 5451,
											"name": "DUP15",
											"source": 7
										},
										{
											"begin": 5432,
											"end": 5451,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5432,
											"end": 5451,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "702"
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5462,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5454,
											"end": 5466,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "tag",
											"source": 7,
											"value": "702"
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5499,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5499,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5499,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5499,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5508,
											"end": 5819,
											"name": "tag",
											"source": 7,
											"value": "703"
										},
										{
											"begin": 5508,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5524,
											"end": 5530,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 5522,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5531,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5508,
											"end": 5819,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5508,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "705"
										},
										{
											"begin": 5508,
											"end": 5819,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5607,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5608,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5652,
											"end": 5656,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5645,
											"end": 5650,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5641,
											"end": 5657,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5634,
											"end": 5639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5631,
											"end": 5658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "706"
										},
										{
											"begin": 5621,
											"end": 5746,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5701,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5731,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5725,
											"end": 5727,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5746,
											"name": "tag",
											"source": 7,
											"value": "706"
										},
										{
											"begin": 5621,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5777,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5777,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5541,
											"end": 5553,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5541,
											"end": 5553,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5541,
											"end": 5553,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5541,
											"end": 5553,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 5809,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 5809,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 5809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 5809,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5508,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "703"
										},
										{
											"begin": 5508,
											"end": 5819,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5508,
											"end": 5819,
											"name": "tag",
											"source": 7,
											"value": "705"
										},
										{
											"begin": 5508,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5843,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5896,
											"end": 5899,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5881,
											"end": 5900,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 5900,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5868,
											"end": 5901,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5868,
											"end": 5901,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5913,
											"end": 5929,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5929,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5929,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5910,
											"end": 5946,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5910,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "707"
										},
										{
											"begin": 5910,
											"end": 5946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5942,
											"end": 5943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5932,
											"end": 5944,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5910,
											"end": 5946,
											"name": "tag",
											"source": 7,
											"value": "707"
										},
										{
											"begin": 5910,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "708"
										},
										{
											"begin": 6020,
											"end": 6027,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 6009,
											"end": 6017,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6007,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 5965,
											"end": 6028,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5965,
											"end": 6028,
											"name": "tag",
											"source": 7,
											"value": "708"
										},
										{
											"begin": 5965,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 6028,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 6028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6084,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6085,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6053,
											"end": 6086,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6037,
											"end": 6086,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6037,
											"end": 6086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6111,
											"end": 6113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6101,
											"end": 6109,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6098,
											"end": 6114,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6095,
											"end": 6131,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6095,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "709"
										},
										{
											"begin": 6095,
											"end": 6131,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6125,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6129,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6095,
											"end": 6131,
											"name": "tag",
											"source": 7,
											"value": "709"
										},
										{
											"begin": 6095,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6095,
											"end": 6131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6095,
											"end": 6131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "710"
										},
										{
											"begin": 6205,
											"end": 6212,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 6194,
											"end": 6202,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6183,
											"end": 6192,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 6179,
											"end": 6203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 6150,
											"end": 6213,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6150,
											"end": 6213,
											"name": "tag",
											"source": 7,
											"value": "710"
										},
										{
											"begin": 6150,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6213,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 6219,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 6219,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 6219,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 6219,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 6219,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 6219,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 6219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 6219,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 6219,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 6219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 6219,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6432,
											"end": 7327,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 6432,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6516,
											"end": 6522,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6549,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6590,
											"end": 6592,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6587,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6569,
											"end": 6576,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6588,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6593,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6610,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "713"
										},
										{
											"begin": 6558,
											"end": 6610,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6607,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6603,
											"end": 6604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6596,
											"end": 6608,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6610,
											"name": "tag",
											"source": 7,
											"value": "713"
										},
										{
											"begin": 6558,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6646,
											"end": 6655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6633,
											"end": 6656,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6671,
											"end": 6677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6668,
											"end": 6698,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6665,
											"end": 6715,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6665,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "714"
										},
										{
											"begin": 6665,
											"end": 6715,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6708,
											"end": 6709,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6701,
											"end": 6713,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6665,
											"end": 6715,
											"name": "tag",
											"source": 7,
											"value": "714"
										},
										{
											"begin": 6665,
											"end": 6715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6756,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6756,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6787,
											"end": 6791,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6775,
											"end": 6802,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 6765,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "715"
										},
										{
											"begin": 6765,
											"end": 6820,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6816,
											"end": 6817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6813,
											"end": 6814,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6806,
											"end": 6818,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6820,
											"name": "tag",
											"source": 7,
											"value": "715"
										},
										{
											"begin": 6765,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6854,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6839,
											"end": 6855,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "716"
										},
										{
											"begin": 6891,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "690"
										},
										{
											"begin": 6929,
											"end": 6931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6891,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "644"
										},
										{
											"begin": 6891,
											"end": 6932,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6875,
											"end": 6933,
											"name": "tag",
											"source": 7,
											"value": "716"
										},
										{
											"begin": 6875,
											"end": 6933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7049,
											"end": 7050,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7045,
											"end": 7055,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7045,
											"end": 7055,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7045,
											"end": 7055,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7045,
											"end": 7055,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7037,
											"end": 7056,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7037,
											"end": 7056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7033,
											"end": 7061,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7033,
											"end": 7061,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7033,
											"end": 7061,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7010,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7010,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7010,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7010,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7073,
											"end": 7092,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7073,
											"end": 7092,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7073,
											"end": 7092,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7070,
											"end": 7109,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7070,
											"end": 7109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "718"
										},
										{
											"begin": 7070,
											"end": 7109,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7105,
											"end": 7106,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7102,
											"end": 7103,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7095,
											"end": 7107,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7070,
											"end": 7109,
											"name": "tag",
											"source": 7,
											"value": "718"
										},
										{
											"begin": 7070,
											"end": 7109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7129,
											"end": 7140,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7129,
											"end": 7140,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7129,
											"end": 7140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7129,
											"end": 7140,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7297,
											"name": "tag",
											"source": 7,
											"value": "719"
										},
										{
											"begin": 7149,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7160,
											"end": 7163,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7157,
											"end": 7172,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7297,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "721"
										},
										{
											"begin": 7149,
											"end": 7297,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7231,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "722"
										},
										{
											"begin": 7250,
											"end": 7253,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7231,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 7231,
											"end": 7254,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7231,
											"end": 7254,
											"name": "tag",
											"source": 7,
											"value": "722"
										},
										{
											"begin": 7231,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7219,
											"end": 7255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7219,
											"end": 7255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7182,
											"end": 7194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7182,
											"end": 7194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7182,
											"end": 7194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7182,
											"end": 7194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7275,
											"end": 7287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7275,
											"end": 7287,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7275,
											"end": 7287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7275,
											"end": 7287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "719"
										},
										{
											"begin": 7149,
											"end": 7297,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7297,
											"name": "tag",
											"source": 7,
											"value": "721"
										},
										{
											"begin": 7149,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7316,
											"end": 7321,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 6432,
											"end": 7327,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6432,
											"end": 7327,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7332,
											"end": 7863,
											"name": "tag",
											"source": 7,
											"value": "646"
										},
										{
											"begin": 7332,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7380,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7431,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7421,
											"end": 7425,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7413,
											"end": 7419,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7409,
											"end": 7426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7405,
											"end": 7432,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7395,
											"end": 7450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "724"
										},
										{
											"begin": 7395,
											"end": 7450,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7447,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7443,
											"end": 7444,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7436,
											"end": 7448,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7395,
											"end": 7450,
											"name": "tag",
											"source": 7,
											"value": "724"
										},
										{
											"begin": 7395,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7469,
											"end": 7489,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7504,
											"end": 7506,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7501,
											"end": 7527,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7498,
											"end": 7550,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7498,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "726"
										},
										{
											"begin": 7498,
											"end": 7550,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "726"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "642"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "tag",
											"source": 7,
											"value": "726"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7574,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "727"
										},
										{
											"begin": 7617,
											"end": 7619,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7598,
											"end": 7611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7594,
											"end": 7621,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7623,
											"end": 7627,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7590,
											"end": 7628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7574,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "643"
										},
										{
											"begin": 7574,
											"end": 7629,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7574,
											"end": 7629,
											"name": "tag",
											"source": 7,
											"value": "727"
										},
										{
											"begin": 7574,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7654,
											"end": 7656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7645,
											"end": 7652,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7638,
											"end": 7657,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7700,
											"end": 7703,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7693,
											"end": 7697,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7688,
											"end": 7690,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7686,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7676,
											"end": 7691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7669,
											"end": 7704,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7666,
											"end": 7721,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7666,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "728"
										},
										{
											"begin": 7666,
											"end": 7721,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7717,
											"end": 7718,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7666,
											"end": 7721,
											"name": "tag",
											"source": 7,
											"value": "728"
										},
										{
											"begin": 7666,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7782,
											"end": 7784,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7775,
											"end": 7779,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7767,
											"end": 7773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7763,
											"end": 7780,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7756,
											"end": 7760,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7747,
											"end": 7754,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7743,
											"end": 7761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 7785,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 7830,
											"end": 7831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7805,
											"end": 7821,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7805,
											"end": 7821,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7805,
											"end": 7821,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7827,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7801,
											"end": 7828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7832,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7832,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7832,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7809,
											"end": 7816,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7332,
											"end": 7863,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7332,
											"end": 7863,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7868,
											"end": 8761,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 7868,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8007,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8015,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8017,
											"end": 8023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8025,
											"end": 8031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8033,
											"end": 8039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8041,
											"end": 8047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8049,
											"end": 8055,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8102,
											"end": 8105,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 8090,
											"end": 8099,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8088,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 8077,
											"end": 8100,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8073,
											"end": 8106,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8070,
											"end": 8123,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8070,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "730"
										},
										{
											"begin": 8070,
											"end": 8123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8119,
											"end": 8120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8109,
											"end": 8121,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8070,
											"end": 8123,
											"name": "tag",
											"source": 7,
											"value": "730"
										},
										{
											"begin": 8070,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8159,
											"end": 8168,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8229,
											"end": 8231,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8221,
											"end": 8227,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8218,
											"end": 8232,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8215,
											"end": 8249,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8215,
											"end": 8249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "731"
										},
										{
											"begin": 8215,
											"end": 8249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8245,
											"end": 8246,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8247,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8215,
											"end": 8249,
											"name": "tag",
											"source": 7,
											"value": "731"
										},
										{
											"begin": 8215,
											"end": 8249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8268,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "732"
										},
										{
											"begin": 8310,
											"end": 8317,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 8301,
											"end": 8307,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8290,
											"end": 8299,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 8286,
											"end": 8308,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8268,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "646"
										},
										{
											"begin": 8268,
											"end": 8318,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8268,
											"end": 8318,
											"name": "tag",
											"source": 7,
											"value": "732"
										},
										{
											"begin": 8268,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8318,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8371,
											"end": 8373,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8360,
											"end": 8369,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8343,
											"end": 8375,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8327,
											"end": 8375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8327,
											"end": 8375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8400,
											"end": 8402,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8390,
											"end": 8398,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8387,
											"end": 8403,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8420,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "733"
										},
										{
											"begin": 8384,
											"end": 8420,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8416,
											"end": 8417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8413,
											"end": 8414,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8406,
											"end": 8418,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8420,
											"name": "tag",
											"source": 7,
											"value": "733"
										},
										{
											"begin": 8384,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "734"
										},
										{
											"begin": 8483,
											"end": 8490,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 8472,
											"end": 8480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8461,
											"end": 8470,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 8457,
											"end": 8481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "646"
										},
										{
											"begin": 8439,
											"end": 8491,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8439,
											"end": 8491,
											"name": "tag",
											"source": 7,
											"value": "734"
										},
										{
											"begin": 8439,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8429,
											"end": 8491,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 8429,
											"end": 8491,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8429,
											"end": 8491,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8538,
											"end": 8540,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8527,
											"end": 8536,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8523,
											"end": 8541,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8510,
											"end": 8542,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 8542,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 8542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8591,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8578,
											"end": 8587,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8561,
											"end": 8593,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8551,
											"end": 8593,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8551,
											"end": 8593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8640,
											"end": 8643,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 8629,
											"end": 8638,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8612,
											"end": 8645,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8602,
											"end": 8645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8602,
											"end": 8645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8692,
											"end": 8695,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 8681,
											"end": 8690,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8677,
											"end": 8696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8654,
											"end": 8697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8654,
											"end": 8697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8716,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "735"
										},
										{
											"begin": 8750,
											"end": 8753,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 8739,
											"end": 8748,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 8735,
											"end": 8754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8716,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 8716,
											"end": 8755,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8716,
											"end": 8755,
											"name": "tag",
											"source": 7,
											"value": "735"
										},
										{
											"begin": 8716,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8706,
											"end": 8755,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8706,
											"end": 8755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 8761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 8761,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 8761,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 8761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 8761,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 8761,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 8761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 8761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 8761,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 8761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 8761,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8766,
											"end": 9026,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 8766,
											"end": 9026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8834,
											"end": 8840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8842,
											"end": 8848,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8897,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8874,
											"end": 8881,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8893,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8866,
											"end": 8898,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8863,
											"end": 8915,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8863,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "737"
										},
										{
											"begin": 8863,
											"end": 8915,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8911,
											"end": 8912,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8908,
											"end": 8909,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8901,
											"end": 8913,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8863,
											"end": 8915,
											"name": "tag",
											"source": 7,
											"value": "737"
										},
										{
											"begin": 8863,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8934,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "738"
										},
										{
											"begin": 8953,
											"end": 8962,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8934,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 8934,
											"end": 8963,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8934,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "738"
										},
										{
											"begin": 8934,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8924,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8924,
											"end": 8963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8982,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "739"
										},
										{
											"begin": 9016,
											"end": 9018,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9005,
											"end": 9014,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9001,
											"end": 9019,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8982,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 8982,
											"end": 9020,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8982,
											"end": 9020,
											"name": "tag",
											"source": 7,
											"value": "739"
										},
										{
											"begin": 8982,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8972,
											"end": 9020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8972,
											"end": 9020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 9026,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 9026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 9026,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 9026,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 9026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 9026,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9031,
											"end": 9411,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 9031,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9110,
											"end": 9111,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9153,
											"end": 9165,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9153,
											"end": 9165,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9153,
											"end": 9165,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "741"
										},
										{
											"begin": 9174,
											"end": 9235,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9232,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 9220,
											"end": 9226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9216,
											"end": 9233,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9206,
											"end": 9233,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9206,
											"end": 9233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9235,
											"name": "tag",
											"source": 7,
											"value": "741"
										},
										{
											"begin": 9174,
											"end": 9235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9283,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9273,
											"end": 9279,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9270,
											"end": 9284,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9250,
											"end": 9268,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9285,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9244,
											"end": 9405,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9244,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "742"
										},
										{
											"begin": 9244,
											"end": 9405,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9327,
											"end": 9337,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 9322,
											"end": 9325,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 9318,
											"end": 9338,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9308,
											"end": 9339,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9362,
											"end": 9366,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 9359,
											"end": 9360,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9352,
											"end": 9367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9390,
											"end": 9394,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9380,
											"end": 9395,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9244,
											"end": 9405,
											"name": "tag",
											"source": 7,
											"value": "742"
										},
										{
											"begin": 9244,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9244,
											"end": 9405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9031,
											"end": 9411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9031,
											"end": 9411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9031,
											"end": 9411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9031,
											"end": 9411,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10183,
											"end": 10310,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 10183,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10244,
											"end": 10254,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 10239,
											"end": 10242,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 10235,
											"end": 10255,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 10232,
											"end": 10233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10279,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 10272,
											"end": 10273,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10265,
											"end": 10280,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10299,
											"end": 10303,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10296,
											"end": 10297,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10289,
											"end": 10304,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10315,
											"end": 10442,
											"name": "tag",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 10315,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 10386,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 10371,
											"end": 10374,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 10367,
											"end": 10387,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 10364,
											"end": 10365,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10357,
											"end": 10388,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10407,
											"end": 10411,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 10404,
											"end": 10405,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10397,
											"end": 10412,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10431,
											"end": 10435,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10428,
											"end": 10429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10421,
											"end": 10436,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10447,
											"end": 10572,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 10447,
											"end": 10572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10487,
											"end": 10491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10515,
											"end": 10516,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10512,
											"end": 10513,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10509,
											"end": 10517,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10506,
											"end": 10540,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10506,
											"end": 10540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "749"
										},
										{
											"begin": 10506,
											"end": 10540,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10520,
											"end": 10538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "749"
										},
										{
											"begin": 10520,
											"end": 10538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 10520,
											"end": 10538,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10520,
											"end": 10538,
											"name": "tag",
											"source": 7,
											"value": "749"
										},
										{
											"begin": 10520,
											"end": 10538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10557,
											"end": 10566,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10557,
											"end": 10566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10447,
											"end": 10572,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10577,
											"end": 10704,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 10577,
											"end": 10704,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10638,
											"end": 10648,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 10633,
											"end": 10636,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 10626,
											"end": 10627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10650,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10669,
											"end": 10673,
											"name": "PUSH",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 10666,
											"end": 10667,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10659,
											"end": 10674,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10693,
											"end": 10697,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10690,
											"end": 10691,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10698,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10709,
											"end": 10844,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 10709,
											"end": 10844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10748,
											"end": 10751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10769,
											"end": 10786,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10769,
											"end": 10786,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10766,
											"end": 10809,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10766,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "753"
										},
										{
											"begin": 10766,
											"end": 10809,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10789,
											"end": 10807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "753"
										},
										{
											"begin": 10789,
											"end": 10807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 10789,
											"end": 10807,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10789,
											"end": 10807,
											"name": "tag",
											"source": 7,
											"value": "753"
										},
										{
											"begin": 10789,
											"end": 10807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10836,
											"end": 10837,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10825,
											"end": 10838,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10825,
											"end": 10838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10709,
											"end": 10844,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13320,
											"end": 13495,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 13320,
											"end": 13495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13357,
											"end": 13360,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13401,
											"end": 13405,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 13394,
											"end": 13399,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13390,
											"end": 13406,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13430,
											"end": 13434,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 13421,
											"end": 13428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13418,
											"end": 13435,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13415,
											"end": 13458,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13415,
											"end": 13458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "762"
										},
										{
											"begin": 13415,
											"end": 13458,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13438,
											"end": 13456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "762"
										},
										{
											"begin": 13438,
											"end": 13456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 13438,
											"end": 13456,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13438,
											"end": 13456,
											"name": "tag",
											"source": 7,
											"value": "762"
										},
										{
											"begin": 13438,
											"end": 13456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13487,
											"end": 13488,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13474,
											"end": 13489,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13320,
											"end": 13495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13320,
											"end": 13495,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13500,
											"end": 13709,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 13500,
											"end": 13709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13538,
											"end": 13541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13619,
											"end": 13621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13612,
											"end": 13617,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13608,
											"end": 13622,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13646,
											"end": 13648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13637,
											"end": 13644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13634,
											"end": 13649,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13631,
											"end": 13672,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13631,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "765"
										},
										{
											"begin": 13631,
											"end": 13672,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13652,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "765"
										},
										{
											"begin": 13652,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 13652,
											"end": 13670,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13652,
											"end": 13670,
											"name": "tag",
											"source": 7,
											"value": "765"
										},
										{
											"begin": 13652,
											"end": 13670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13701,
											"end": 13702,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13688,
											"end": 13703,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13688,
											"end": 13703,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13500,
											"end": 13709,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13500,
											"end": 13709,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14473,
											"end": 14895,
											"name": "tag",
											"source": 7,
											"value": "648"
										},
										{
											"begin": 14473,
											"end": 14895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14562,
											"end": 14563,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14605,
											"end": 14610,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14562,
											"end": 14563,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14619,
											"end": 14889,
											"name": "tag",
											"source": 7,
											"value": "769"
										},
										{
											"begin": 14619,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14640,
											"end": 14647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14630,
											"end": 14638,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14627,
											"end": 14648,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14619,
											"end": 14889,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14619,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "771"
										},
										{
											"begin": 14619,
											"end": 14889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14699,
											"end": 14703,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14695,
											"end": 14696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14691,
											"end": 14697,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 14687,
											"end": 14704,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14681,
											"end": 14685,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14678,
											"end": 14705,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14675,
											"end": 14728,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14675,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "773"
										},
										{
											"begin": 14675,
											"end": 14728,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14708,
											"end": 14726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "773"
										},
										{
											"begin": 14708,
											"end": 14726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 14708,
											"end": 14726,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14708,
											"end": 14726,
											"name": "tag",
											"source": 7,
											"value": "773"
										},
										{
											"begin": 14708,
											"end": 14726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14758,
											"end": 14765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14748,
											"end": 14756,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14744,
											"end": 14766,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14741,
											"end": 14796,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14741,
											"end": 14796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "774"
										},
										{
											"begin": 14741,
											"end": 14796,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14778,
											"end": 14794,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14778,
											"end": 14794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14778,
											"end": 14794,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 14778,
											"end": 14794,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14741,
											"end": 14796,
											"name": "tag",
											"source": 7,
											"value": "774"
										},
										{
											"begin": 14741,
											"end": 14796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14857,
											"end": 14879,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14857,
											"end": 14879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14857,
											"end": 14879,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 14857,
											"end": 14879,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14817,
											"end": 14832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14817,
											"end": 14832,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14817,
											"end": 14832,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 14817,
											"end": 14832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14619,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "769"
										},
										{
											"begin": 14619,
											"end": 14889,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14619,
											"end": 14889,
											"name": "tag",
											"source": 7,
											"value": "771"
										},
										{
											"begin": 14619,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14623,
											"end": 14626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14473,
											"end": 14895,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14473,
											"end": 14895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14473,
											"end": 14895,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14473,
											"end": 14895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14473,
											"end": 14895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14473,
											"end": 14895,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14900,
											"end": 15706,
											"name": "tag",
											"source": 7,
											"value": "649"
										},
										{
											"begin": 14900,
											"end": 15706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14949,
											"end": 14954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14979,
											"end": 14987,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14969,
											"end": 15049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "776"
										},
										{
											"begin": 14969,
											"end": 15049,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15020,
											"end": 15021,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15034,
											"end": 15039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 15034,
											"end": 15039,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14969,
											"end": 15049,
											"name": "tag",
											"source": 7,
											"value": "776"
										},
										{
											"begin": 14969,
											"end": 15049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15068,
											"end": 15072,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15058,
											"end": 15134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "777"
										},
										{
											"begin": 15058,
											"end": 15134,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15105,
											"end": 15106,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15119,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 15119,
											"end": 15124,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15058,
											"end": 15134,
											"name": "tag",
											"source": 7,
											"value": "777"
										},
										{
											"begin": 15058,
											"end": 15134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15150,
											"end": 15154,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15168,
											"end": 15169,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15163,
											"end": 15222,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15163,
											"end": 15222,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 15163,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "779"
										},
										{
											"begin": 15163,
											"end": 15222,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15236,
											"end": 15237,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 15231,
											"end": 15361,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15231,
											"end": 15361,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 15231,
											"end": 15361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "780"
										},
										{
											"begin": 15231,
											"end": 15361,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15143,
											"end": 15361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "778"
										},
										{
											"begin": 15143,
											"end": 15361,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15163,
											"end": 15222,
											"name": "tag",
											"source": 7,
											"value": "779"
										},
										{
											"begin": 15163,
											"end": 15222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15193,
											"end": 15194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15184,
											"end": 15194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15184,
											"end": 15194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15207,
											"end": 15212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15207,
											"end": 15212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 15207,
											"end": 15212,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15231,
											"end": 15361,
											"name": "tag",
											"source": 7,
											"value": "780"
										},
										{
											"begin": 15231,
											"end": 15361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15268,
											"end": 15271,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 15258,
											"end": 15266,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15255,
											"end": 15272,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 15252,
											"end": 15295,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15252,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "782"
										},
										{
											"begin": 15252,
											"end": 15295,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15275,
											"end": 15293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "782"
										},
										{
											"begin": 15275,
											"end": 15293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 15275,
											"end": 15293,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15275,
											"end": 15293,
											"name": "tag",
											"source": 7,
											"value": "782"
										},
										{
											"begin": 15275,
											"end": 15293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15331,
											"end": 15332,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15317,
											"end": 15333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15317,
											"end": 15333,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 15346,
											"end": 15351,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15143,
											"end": 15361,
											"name": "tag",
											"source": 7,
											"value": "778"
										},
										{
											"begin": 15143,
											"end": 15361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15143,
											"end": 15361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15445,
											"end": 15447,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15435,
											"end": 15443,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15432,
											"end": 15448,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15426,
											"end": 15429,
											"name": "PUSH",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 15420,
											"end": 15424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15417,
											"end": 15430,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15413,
											"end": 15449,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15407,
											"end": 15409,
											"name": "PUSH",
											"source": 7,
											"value": "4E"
										},
										{
											"begin": 15397,
											"end": 15405,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15394,
											"end": 15410,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15389,
											"end": 15391,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 15383,
											"end": 15387,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15380,
											"end": 15392,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15376,
											"end": 15411,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15373,
											"end": 15450,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 15370,
											"end": 15529,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15370,
											"end": 15529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "783"
										},
										{
											"begin": 15370,
											"end": 15529,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15482,
											"end": 15501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15482,
											"end": 15501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15482,
											"end": 15501,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 15514,
											"end": 15519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 15514,
											"end": 15519,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15370,
											"end": 15529,
											"name": "tag",
											"source": 7,
											"value": "783"
										},
										{
											"begin": 15370,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15561,
											"end": 15595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "784"
										},
										{
											"begin": 15586,
											"end": 15594,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15580,
											"end": 15584,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15561,
											"end": 15595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "648"
										},
										{
											"begin": 15561,
											"end": 15595,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15561,
											"end": 15595,
											"name": "tag",
											"source": 7,
											"value": "784"
										},
										{
											"begin": 15561,
											"end": 15595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15631,
											"end": 15637,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15627,
											"end": 15628,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15623,
											"end": 15629,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 15619,
											"end": 15638,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 15610,
											"end": 15617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15607,
											"end": 15639,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 15604,
											"end": 15662,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15604,
											"end": 15662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "786"
										},
										{
											"begin": 15604,
											"end": 15662,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15642,
											"end": 15660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "786"
										},
										{
											"begin": 15642,
											"end": 15660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 15642,
											"end": 15660,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15642,
											"end": 15660,
											"name": "tag",
											"source": 7,
											"value": "786"
										},
										{
											"begin": 15642,
											"end": 15660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15680,
											"end": 15700,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 15680,
											"end": 15700,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14900,
											"end": 15706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14900,
											"end": 15706,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15711,
											"end": 15842,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 15711,
											"end": 15842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15771,
											"end": 15776,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15800,
											"end": 15836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 15827,
											"end": 15835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15821,
											"end": 15825,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15800,
											"end": 15836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "649"
										},
										{
											"begin": 15800,
											"end": 15836,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15847,
											"end": 16015,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 15847,
											"end": 16015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15887,
											"end": 15894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15953,
											"end": 15954,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15949,
											"end": 15950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15945,
											"end": 15951,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 15941,
											"end": 15955,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 15938,
											"end": 15939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15935,
											"end": 15956,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 15930,
											"end": 15931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15923,
											"end": 15932,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15916,
											"end": 15933,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15912,
											"end": 15957,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15909,
											"end": 15980,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15909,
											"end": 15980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "791"
										},
										{
											"begin": 15909,
											"end": 15980,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15960,
											"end": 15978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "791"
										},
										{
											"begin": 15960,
											"end": 15978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 15960,
											"end": 15978,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15960,
											"end": 15978,
											"name": "tag",
											"source": 7,
											"value": "791"
										},
										{
											"begin": 15960,
											"end": 15978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16000,
											"end": 16009,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16000,
											"end": 16009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15847,
											"end": 16015,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16020,
											"end": 16147,
											"name": "tag",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 16020,
											"end": 16147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16081,
											"end": 16091,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 16076,
											"end": 16079,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 16072,
											"end": 16092,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 16069,
											"end": 16070,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16062,
											"end": 16093,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16112,
											"end": 16116,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 16109,
											"end": 16110,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16102,
											"end": 16117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16136,
											"end": 16140,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 16133,
											"end": 16134,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16126,
											"end": 16141,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 16152,
											"end": 16264,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 16152,
											"end": 16264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16184,
											"end": 16185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16210,
											"end": 16211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16200,
											"end": 16235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "795"
										},
										{
											"begin": 16200,
											"end": 16235,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16215,
											"end": 16233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "795"
										},
										{
											"begin": 16215,
											"end": 16233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 16215,
											"end": 16233,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16215,
											"end": 16233,
											"name": "tag",
											"source": 7,
											"value": "795"
										},
										{
											"begin": 16215,
											"end": 16233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16249,
											"end": 16258,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 16249,
											"end": 16258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16152,
											"end": 16264,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 19673,
											"end": 19793,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 19673,
											"end": 19793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19713,
											"end": 19714,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19739,
											"end": 19740,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19729,
											"end": 19764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "807"
										},
										{
											"begin": 19729,
											"end": 19764,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19744,
											"end": 19762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "807"
										},
										{
											"begin": 19744,
											"end": 19762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 19744,
											"end": 19762,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19744,
											"end": 19762,
											"name": "tag",
											"source": 7,
											"value": "807"
										},
										{
											"begin": 19744,
											"end": 19762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19778,
											"end": 19787,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 19778,
											"end": 19787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19673,
											"end": 19793,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 19798,
											"end": 19926,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 19798,
											"end": 19926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19838,
											"end": 19841,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19869,
											"end": 19870,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19865,
											"end": 19871,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 19862,
											"end": 19863,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19859,
											"end": 19872,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 19856,
											"end": 19895,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19856,
											"end": 19895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "810"
										},
										{
											"begin": 19856,
											"end": 19895,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19875,
											"end": 19893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "810"
										},
										{
											"begin": 19875,
											"end": 19893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 19875,
											"end": 19893,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19875,
											"end": 19893,
											"name": "tag",
											"source": 7,
											"value": "810"
										},
										{
											"begin": 19875,
											"end": 19893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19911,
											"end": 19920,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19911,
											"end": 19920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 19926,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 19931,
											"end": 20338,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 19931,
											"end": 20338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20133,
											"end": 20135,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20115,
											"end": 20136,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20115,
											"end": 20136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20115,
											"end": 20136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20172,
											"end": 20174,
											"name": "PUSH",
											"source": 7,
											"value": "2B"
										},
										{
											"begin": 20152,
											"end": 20170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20152,
											"end": 20170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20152,
											"end": 20170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20145,
											"end": 20175,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20211,
											"end": 20245,
											"name": "PUSH",
											"source": 7,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 20206,
											"end": 20208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20191,
											"end": 20209,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20191,
											"end": 20209,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20184,
											"end": 20246,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20277,
											"end": 20279,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 20262,
											"end": 20280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20280,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20255,
											"end": 20296,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20328,
											"end": 20331,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 20313,
											"end": 20332,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20313,
											"end": 20332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19931,
											"end": 20338,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									],
									".data": {
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_maxTxAmount()": "7d1db4a5",
							"_permitTransfer(address,uint256,uint256,uint256,uint8[],bytes32[],bytes32[])": "4990560f",
							"_taxFee()": "3b124fe7",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"claimTokens()": "48c54b9d",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"deliver(uint256)": "3bd5d173",
							"excludeFromFee(address)": "437823ec",
							"excludeFromReward(address)": "52390c02",
							"includeInFee(address)": "ea2f0b37",
							"includeInReward(address)": "3685d419",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize(string,string,uint256,uint256,uint256,uint256,address)": "a6e57d99",
							"isExcludedFromFee(address)": "5342acb4",
							"isExcludedFromReward(address)": "88f82020",
							"mapSigner(address)": "07c351dd",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"reflectionFromToken(uint256,bool)": "4549b039",
							"renounceOwnership()": "715018a6",
							"setMaxTxPercent(uint256)": "d543dbeb",
							"setSigners(address[])": "a3772662",
							"setTaxFeePercent(uint256)": "061c82d0",
							"signers()": "46f0975a",
							"symbol()": "95d89b41",
							"tokenFromReflection(uint256)": "2d838119",
							"totalFees()": "13114a9d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniqueIdExists(uint256)": "f9342285",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"uniqueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8[]\",\"name\":\"v\",\"type\":\"uint8[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"r\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"s\",\"type\":\"bytes32[]\"}],\"name\":\"_permitTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_NAME\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_SYMBOL\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_DECIMALS\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_txFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_MAXAMOUNT\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"mapSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deductTransferFee\",\"type\":\"bool\"}],\"name\":\"reflectionFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTxPercent\",\"type\":\"uint256\"}],\"name\":\"setMaxTxPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"signers_\",\"type\":\"address[]\"}],\"name\":\"setSigners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"taxFee\",\"type\":\"uint256\"}],\"name\":\"setTaxFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rAmount\",\"type\":\"uint256\"}],\"name\":\"tokenFromReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uniqueIdExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Take3Token.sol\":\"Take3Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e\",\"dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag\"]},\"contracts/Take3Token.sol\":{\"keccak256\":\"0xc5474932fed5d42effe31656bbced29973369b2869c0f0814bec81a65578774f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e57caa2ad6c4e40fad7d543449cfb3dd301f7972743c20263ea953d86d3ff3df\",\"dweb:/ipfs/QmWAYXuULqGkNYULgurdqK6ce9vqEYAif2o3erQJv2tB74\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 644,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 976,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_rOwned",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 980,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_tOwned",
								"offset": 0,
								"slot": "102",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 986,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "103",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 990,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_isExcludedFromFee",
								"offset": 0,
								"slot": "104",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 994,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_isExcluded",
								"offset": 0,
								"slot": "105",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 997,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_excluded",
								"offset": 0,
								"slot": "106",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1006,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_tTotal",
								"offset": 0,
								"slot": "107",
								"type": "t_uint256"
							},
							{
								"astId": 1008,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_rTotal",
								"offset": 0,
								"slot": "108",
								"type": "t_uint256"
							},
							{
								"astId": 1010,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_tFeeTotal",
								"offset": 0,
								"slot": "109",
								"type": "t_uint256"
							},
							{
								"astId": 1012,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_name",
								"offset": 0,
								"slot": "110",
								"type": "t_string_storage"
							},
							{
								"astId": 1014,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "111",
								"type": "t_string_storage"
							},
							{
								"astId": 1016,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "112",
								"type": "t_uint256"
							},
							{
								"astId": 1018,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_taxFee",
								"offset": 0,
								"slot": "113",
								"type": "t_uint256"
							},
							{
								"astId": 1020,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_previousTaxFee",
								"offset": 0,
								"slot": "114",
								"type": "t_uint256"
							},
							{
								"astId": 1022,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_maxTxAmount",
								"offset": 0,
								"slot": "115",
								"type": "t_uint256"
							},
							{
								"astId": 1025,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_signers",
								"offset": 0,
								"slot": "116",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1029,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "_mapSigners",
								"offset": 0,
								"slot": "117",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1033,
								"contract": "contracts/Take3Token.sol:Take3Token",
								"label": "uniqueIdExists",
								"offset": 0,
								"slot": "118",
								"type": "t_mapping(t_uint256,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							603
						],
						"ContextUpgradeable": [
							645
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 646,
							"src": "127:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 283,
							"src": "169:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "748:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 645,
										"src": "763:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								645,
								282
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "788:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 16,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "844:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "875:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:0"
									},
									"src": "817:84:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1055:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1065:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 19,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1038:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:0"
									},
									"scope": 131,
									"src": "1003:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1166:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 32,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "1195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "1176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1149:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:0"
									},
									"scope": 131,
									"src": "1104:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 45,
									"name": "onlyOwner",
									"nameLocation": "1312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:0"
									},
									"src": "1303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1496:30:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "1506:13:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:0"
									},
									"scope": 131,
									"src": "1441:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1644:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 61,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "1673:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:0"
									},
									"scope": 131,
									"src": "1599:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "2125:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2154:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 75,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2154:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2135:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "2135:30:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1735:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2115:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2115:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2080:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:0"
									},
									"scope": 131,
									"src": "2071:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2391:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 91,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2409:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2429:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2421:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2421:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2421:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2409:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2433:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2401:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2503:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2484:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2484:28:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2178:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2381:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2381:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2330:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2356:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2348:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:18:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:0"
									},
									"scope": 131,
									"src": "2321:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2736:124:0",
										"statements": [
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2754:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "2746:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2746:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"id": 113,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2746:25:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2781:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2790:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2781:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2781:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 120,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2834:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2844:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 119,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2813:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2813:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "2808:45:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2525:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2682:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:18:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:0"
									},
									"scope": 131,
									"src": "2673:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2866:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 130,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3145:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "3125:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 127,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3125:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 129,
										"length": {
											"hexValue": "3439",
											"id": 128,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3133:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3125:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 132,
							"src": "708:2445:0",
							"usedErrors": []
						}
					],
					"src": "102:3052:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							603
						],
						"Initializable": [
							282
						]
					},
					"id": 283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 604,
							"src": "138:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 135,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282
							],
							"name": "Initializable",
							"nameLocation": "2401:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:1",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 138,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2535:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 137,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 141,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2664:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 140,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"id": 146,
									"name": "Initialized",
									"nameLocation": "2798:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2810:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 143,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:1"
									},
									"src": "2792:33:1"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3101:483:1",
										"statements": [
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3116:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "3111:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3133:14:1",
													"subExpression": {
														"id": 151,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3134:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 155,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "3179:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 156,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3197:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3212:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3197:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3179:34:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3178:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3219:45:1",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 165,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3258:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 164,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3250:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 163,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3250:7:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3250:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 161,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 603,
																						"src": "3220:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$603_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 378,
																					"src": "3220:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3220:44:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 169,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3268:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3284:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3268:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3219:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3218:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3178:108:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3300:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3157:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:201:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3157:201:1"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 178,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "3368:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3383:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3368:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "3368:16:1"
											},
											{
												"condition": {
													"id": 182,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3398:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "IfStatement",
												"src": "3394:65:1",
												"trueBody": {
													"id": 187,
													"nodeType": "Block",
													"src": "3414:45:1",
													"statements": [
														{
															"expression": {
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 183,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3428:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3444:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3428:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "3428:20:1"
														}
													]
												}
											},
											{
												"id": 189,
												"nodeType": "PlaceholderStatement",
												"src": "3468:1:1"
											},
											{
												"condition": {
													"id": 190,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3483:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 200,
												"nodeType": "IfStatement",
												"src": "3479:99:1",
												"trueBody": {
													"id": 199,
													"nodeType": "Block",
													"src": "3499:79:1",
													"statements": [
														{
															"expression": {
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 191,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3513:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3529:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3513:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 194,
															"nodeType": "ExpressionStatement",
															"src": "3513:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3565:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 195,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "3553:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3553:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 198,
															"nodeType": "EmitStatement",
															"src": "3548:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "2831:242:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 202,
									"name": "initializer",
									"nameLocation": "3087:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:2:1"
									},
									"src": "3078:506:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4399:255:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4417:14:1",
																"subExpression": {
																	"id": 208,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "4418:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "4435:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 211,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4450:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4435:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4417:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4459:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4409:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4409:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "4409:99:1"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "4518:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "4533:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4518:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "4518:22:1"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4550:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4566:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4550:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "4550:20:1"
											},
											{
												"id": 225,
												"nodeType": "PlaceholderStatement",
												"src": "4580:1:1"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4607:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4591:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "4591:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 231,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "4639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 230,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4627:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4627:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "EmitStatement",
												"src": "4622:25:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3590:766:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 235,
									"name": "reinitializer",
									"nameLocation": "4370:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4390:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4384:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4384:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4383:15:1"
									},
									"src": "4361:293:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "4892:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "4910:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4925:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4902:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4902:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "4902:69:1"
											},
											{
												"id": 243,
												"nodeType": "PlaceholderStatement",
												"src": "4981:1:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4660:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 245,
									"name": "onlyInitializing",
									"nameLocation": "4873:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4889:2:1"
									},
									"src": "4864:125:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "5437:230:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5455:14:1",
															"subExpression": {
																"id": 250,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "5456:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5471:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5447:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5447:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "5447:66:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 255,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "5527:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5547:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 257,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5547:5:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 256,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5542:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5542:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5542:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5527:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "5523:138:1",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "5559:102:1",
													"statements": [
														{
															"expression": {
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 262,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "5573:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5593:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 264,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "5593:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 263,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5588:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5588:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5588:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5573:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "5573:30:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5639:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 272,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "5639:5:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 271,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "5634:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5634:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "5634:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 270,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5622:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5622:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 277,
															"nodeType": "EmitStatement",
															"src": "5617:33:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "4995:388:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5397:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5417:2:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5437:0:1"
									},
									"scope": 282,
									"src": "5388:279:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 283,
							"src": "2383:3286:1",
							"usedErrors": []
						}
					],
					"src": "113:5557:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							360
						]
					},
					"id": 361,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 285,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 360,
							"linearizedBaseContracts": [
								360
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 294,
									"name": "Transfer",
									"nameLocation": "405:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "414:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "436:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "456:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:2"
									},
									"src": "399:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 303,
									"name": "Approval",
									"nameLocation": "636:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "645:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "668:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "693:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:2"
									},
									"src": "630:78:2"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:2"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "831:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:2"
									},
									"scope": 360,
									"src": "785:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "942:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "982:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:2"
									},
									"scope": 360,
									"src": "923:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1234:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1268:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:2"
									},
									"scope": 360,
									"src": "1204:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1568:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1583:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:2"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1623:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:2"
									},
									"scope": 360,
									"src": "1549:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2302:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2319:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:2"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2353:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:2"
									},
									"scope": 360,
									"src": "2285:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2696:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2688:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2718:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2710:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2738:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2730:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:72:2"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2769:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2769:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:6:2"
									},
									"scope": 360,
									"src": "2657:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 361,
							"src": "202:2575:2",
							"usedErrors": []
						}
					],
					"src": "106:2672:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							603
						]
					},
					"id": 604,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 362,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 363,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 603,
							"linearizedBaseContracts": [
								603
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1252:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 371,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "1476:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 370,
												"id": 376,
												"nodeType": "Return",
												"src": "1469:30:3"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1206:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:3"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1246:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 368,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:3"
									},
									"scope": 603,
									"src": "1186:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2494:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 389,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$603",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$603",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 387,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 392,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "2537:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:3"
											},
											{
												"assignments": [
													398,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 398,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 411,
														"src": "2589:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 397,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 405,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 399,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "2607:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 401,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "2629:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 407,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "2658:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:3"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2442:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2469:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:3"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:3"
									},
									"scope": 603,
									"src": "2423:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "3566:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3596:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 424,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3604:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 422,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															429,
															449
														],
														"referencedDeclaration": 449,
														"src": "3583:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 421,
												"id": 427,
												"nodeType": "Return",
												"src": "3576:67:3"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "3499:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "3515:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:3"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "3552:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:3"
									},
									"scope": 603,
									"src": "3477:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "4019:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "4058:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "4066:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 445,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "4075:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 441,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															469,
															519
														],
														"referencedDeclaration": 519,
														"src": "4036:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 440,
												"id": 447,
												"nodeType": "Return",
												"src": "4029:59:3"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "3656:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3881:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3911:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "3903:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3940:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "3927:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 433,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3927:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3968:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "3954:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 435,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3954:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:93:3"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4005:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4005:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:14:3"
									},
									"scope": 603,
									"src": "3872:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "4600:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 462,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "4639:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "4647:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 464,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 461,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															469,
															519
														],
														"referencedDeclaration": 519,
														"src": "4617:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 460,
												"id": 467,
												"nodeType": "Return",
												"src": "4610:94:3"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "4101:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4466:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4505:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4497:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4534:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4521:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4521:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4556:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4548:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:80:3"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4586:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4586:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:14:3"
									},
									"scope": 603,
									"src": "4457:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "5138:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 486,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5164:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$603",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$603",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5156:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 484,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5156:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5156:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5156:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 489,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "5181:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5188:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "5148:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 496,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "5258:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 495,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "5247:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5247:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5267:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5239:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5239:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "5239:60:3"
											},
											{
												"assignments": [
													502,
													504
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5316:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "5311:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 501,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5338:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "5325:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 503,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5325:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [
														{
															"id": 509,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5378:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 505,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "5352:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5352:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 507,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "5371:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5352:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5352:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5310:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 513,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "5417:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 514,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "5426:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 515,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5438:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 512,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "5400:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5400:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 482,
												"id": 517,
												"nodeType": "Return",
												"src": "5393:58:3"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4717:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4968:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5007:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "4999:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5036:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "5023:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5023:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "5050:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5087:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "5073:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5073:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:116:3"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "5124:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5124:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:14:3"
									},
									"scope": 603,
									"src": "4959:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "5735:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "5771:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "5779:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5785:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 529,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															536,
															571
														],
														"referencedDeclaration": 571,
														"src": "5752:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5752:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 528,
												"id": 534,
												"nodeType": "Return",
												"src": "5745:80:3"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "5464:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5644:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5671:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "5663:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5692:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "5679:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 523,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5679:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5662:35:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "5721:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5721:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:14:3"
									},
									"scope": 603,
									"src": "5635:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "6174:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 550,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "6203:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 549,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "6192:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6192:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6212:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6184:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "6184:67:3"
											},
											{
												"assignments": [
													556,
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 556,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6268:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "6263:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 555,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6263:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6290:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "6277:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 557,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6277:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 563,
												"initialValue": {
													"arguments": [
														{
															"id": 561,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "6322:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 559,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "6304:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6304:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6262:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 565,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "6361:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 566,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "6370:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 567,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "6382:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 564,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "6344:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6344:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 547,
												"id": 569,
												"nodeType": "Return",
												"src": "6337:58:3"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "5838:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6025:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6061:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6053:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6053:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6090:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6077:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 540,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6077:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6118:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6104:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 542,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6104:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:93:3"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6160:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 545,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6160:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:14:3"
									},
									"scope": 603,
									"src": "6016:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "6782:582:3",
										"statements": [
											{
												"condition": {
													"id": 583,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 574,
													"src": "6796:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "6853:505:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 587,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "6937:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6937:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6957:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6937:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 597,
																"nodeType": "Block",
																"src": "7295:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 594,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "7320:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 593,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7313:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7313:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 596,
																		"nodeType": "ExpressionStatement",
																		"src": "7313:20:3"
																	}
																]
															},
															"id": 598,
															"nodeType": "IfStatement",
															"src": "6933:415:3",
															"trueBody": {
																"id": 592,
																"nodeType": "Block",
																"src": "6960:329:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7130:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7152:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7181:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7175:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7175:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7156:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7224:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7228:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7220:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7220:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7241:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7213:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7213:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7213:44:3"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 576,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7181:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 576,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7228:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 591,
																		"nodeType": "InlineAssembly",
																		"src": "7121:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "6792:566:3",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "6805:42:3",
													"statements": [
														{
															"expression": {
																"id": 584,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "6826:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 582,
															"id": 585,
															"nodeType": "Return",
															"src": "6819:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "6408:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "6631:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6662:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "6657:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 573,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6657:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6692:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "6679:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 575,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6679:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6726:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "6712:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6712:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6647:97:3"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "6768:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:3"
									},
									"scope": 603,
									"src": "6622:742:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 604,
							"src": "194:7172:3",
							"usedErrors": []
						}
					],
					"src": "101:7266:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							603
						],
						"ContextUpgradeable": [
							645
						],
						"Initializable": [
							282
						]
					},
					"id": 646,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 605,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 606,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 283,
							"src": "110:42:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 608,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "691:13:4"
									},
									"id": 609,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:4"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 607,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 645,
							"linearizedBaseContracts": [
								645,
								282
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "763:7:4",
										"statements": []
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 612,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 611,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "746:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:4"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:4"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:4"
									},
									"scope": 645,
									"src": "711:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "838:7:4",
										"statements": []
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 618,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 617,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "821:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:4"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:4"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:4"
									},
									"scope": 645,
									"src": "776:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "912:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 626,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 625,
												"id": 628,
												"nodeType": "Return",
												"src": "922:17:4"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:4"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "903:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:4"
									},
									"scope": 645,
									"src": "850:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "1019:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 635,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 634,
												"id": 637,
												"nodeType": "Return",
												"src": "1029:15:4"
											}
										]
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "1003:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:4"
									},
									"scope": 645,
									"src": "952:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 644,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "1316:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 641,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 643,
										"length": {
											"hexValue": "3530",
											"id": 642,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 646,
							"src": "651:693:4",
							"usedErrors": []
						}
					],
					"src": "86:1259:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol",
					"exportedSymbols": {
						"SafeMathUpgradeable": [
							957
						]
					},
					"id": 958,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 647,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 648,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 957,
							"linearizedBaseContracts": [
								957
							],
							"name": "SafeMathUpgradeable",
							"nameLocation": "490:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "728:140:5",
										"statements": [
											{
												"id": 678,
												"nodeType": "UncheckedBlock",
												"src": "738:124:5",
												"statements": [
													{
														"assignments": [
															661
														],
														"declarations": [
															{
																"constant": false,
																"id": 661,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "770:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 678,
																"src": "762:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 660,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "762:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 665,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 662,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "774:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 663,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "778:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "774:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "762:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 666,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "797:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 667,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "801:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "797:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 673,
														"nodeType": "IfStatement",
														"src": "793:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "812:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "819:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 671,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "811:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 659,
															"id": 672,
															"nodeType": "Return",
															"src": "804:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "843:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 675,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "849:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 676,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "842:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 659,
														"id": 677,
														"nodeType": "Return",
														"src": "835:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "516:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "661:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "687:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "679:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:22:5"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "713:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "713:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "719:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:15:5"
									},
									"scope": 957,
									"src": "652:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "1089:113:5",
										"statements": [
											{
												"id": 706,
												"nodeType": "UncheckedBlock",
												"src": "1099:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 692,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "1127:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 693,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "1131:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1127:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 699,
														"nodeType": "IfStatement",
														"src": "1123:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1142:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1149:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1141:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 691,
															"id": 698,
															"nodeType": "Return",
															"src": "1134:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1173:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 701,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "1179:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 702,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "1183:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1179:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 704,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1172:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 691,
														"id": 705,
														"nodeType": "Return",
														"src": "1165:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "874:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1022:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1037:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1029:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1048:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1040:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:22:5"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1074:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1074:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1080:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:15:5"
									},
									"scope": 957,
									"src": "1013:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "1426:417:5",
										"statements": [
											{
												"id": 748,
												"nodeType": "UncheckedBlock",
												"src": "1436:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 720,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "1694:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1699:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1694:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 727,
														"nodeType": "IfStatement",
														"src": "1690:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1710:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1716:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 725,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1709:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 719,
															"id": 726,
															"nodeType": "Return",
															"src": "1702:16:5"
														}
													},
													{
														"assignments": [
															729
														],
														"declarations": [
															{
																"constant": false,
																"id": 729,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1740:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 748,
																"src": "1732:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 728,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1732:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 733,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 730,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "1744:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 731,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "1748:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1744:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1732:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 734,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "1767:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 735,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "1771:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1767:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 737,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "1776:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1767:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 743,
														"nodeType": "IfStatement",
														"src": "1763:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1787:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1794:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 741,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1786:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 719,
															"id": 742,
															"nodeType": "Return",
															"src": "1779:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1818:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 745,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "1824:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 746,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1817:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 719,
														"id": 747,
														"nodeType": "Return",
														"src": "1810:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "1208:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1359:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1385:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1377:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1377:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:22:5"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1411:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1411:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1417:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1410:15:5"
									},
									"scope": 957,
									"src": "1350:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "2068:114:5",
										"statements": [
											{
												"id": 776,
												"nodeType": "UncheckedBlock",
												"src": "2078:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 762,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "2106:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2111:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2106:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 769,
														"nodeType": "IfStatement",
														"src": "2102:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2122:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2129:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 767,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2121:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 761,
															"id": 768,
															"nodeType": "Return",
															"src": "2114:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2153:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 771,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 753,
																		"src": "2159:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 772,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "2163:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2159:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 774,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2152:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 761,
														"id": 775,
														"nodeType": "Return",
														"src": "2145:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2001:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2016:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2027:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2019:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:22:5"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2053:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 757,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2059:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:15:5"
									},
									"scope": 957,
									"src": "1992:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "2417:114:5",
										"statements": [
											{
												"id": 804,
												"nodeType": "UncheckedBlock",
												"src": "2427:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 790,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "2455:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2460:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2455:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 797,
														"nodeType": "IfStatement",
														"src": "2451:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2471:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2478:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 795,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2470:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 789,
															"id": 796,
															"nodeType": "Return",
															"src": "2463:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2502:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 799,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "2508:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 800,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "2512:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2508:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 802,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2501:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 789,
														"id": 803,
														"nodeType": "Return",
														"src": "2494:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "2188:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2350:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2365:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2357:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2376:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2368:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2356:22:5"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2402:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 785,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2402:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2408:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:15:5"
									},
									"scope": 957,
									"src": "2341:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "2833:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 816,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "2850:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 817,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "2854:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2850:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 815,
												"id": 819,
												"nodeType": "Return",
												"src": "2843:12:5"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "2537:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2775:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2787:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "2779:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2798:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "2790:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2778:22:5"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "2824:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2823:9:5"
									},
									"scope": 957,
									"src": "2766:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "3200:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 831,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "3217:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 832,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "3221:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3217:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 830,
												"id": 834,
												"nodeType": "Return",
												"src": "3210:12:5"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "2868:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3142:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3154:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "3146:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3165:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "3157:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3145:22:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "3191:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3190:9:5"
									},
									"scope": 957,
									"src": "3133:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "3543:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 846,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "3560:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 847,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "3564:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3560:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 845,
												"id": 849,
												"nodeType": "Return",
												"src": "3553:12:5"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "3235:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3485:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3508:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3500:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3500:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3488:22:5"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3534:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3534:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3533:9:5"
									},
									"scope": 957,
									"src": "3476:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "3928:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 861,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "3945:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 862,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "3949:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3945:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 860,
												"id": 864,
												"nodeType": "Return",
												"src": "3938:12:5"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "3578:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3870:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3893:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3885:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3873:22:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3919:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:9:5"
									},
									"scope": 957,
									"src": "3861:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "4477:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "4494:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 877,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "4498:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4494:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 875,
												"id": 879,
												"nodeType": "Return",
												"src": "4487:12:5"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "3963:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4419:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4431:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4423:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4442:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4434:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4434:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4422:22:5"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "4468:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4467:9:5"
									},
									"scope": 957,
									"src": "4410:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "5095:106:5",
										"statements": [
											{
												"id": 904,
												"nodeType": "UncheckedBlock",
												"src": "5105:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 894,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "5137:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 895,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "5142:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5137:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 897,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "5145:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 893,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5129:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5129:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 899,
														"nodeType": "ExpressionStatement",
														"src": "5129:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 900,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "5179:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 901,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "5183:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5179:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 892,
														"id": 903,
														"nodeType": "Return",
														"src": "5172:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "4512:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4979:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5000:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4992:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5019:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "5011:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5044:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "5030:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5030:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4982:80:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "5086:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5086:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5085:9:5"
									},
									"scope": 957,
									"src": "4970:231:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "5810:105:5",
										"statements": [
											{
												"id": 929,
												"nodeType": "UncheckedBlock",
												"src": "5820:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 919,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 911,
																		"src": "5852:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5856:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5852:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 922,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "5859:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 918,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5844:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5844:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 924,
														"nodeType": "ExpressionStatement",
														"src": "5844:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 925,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "5893:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 926,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "5897:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5893:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 917,
														"id": 928,
														"nodeType": "Return",
														"src": "5886:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "5207:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5694:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5715:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "5707:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5734:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "5726:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5726:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5759:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "5745:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 912,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5745:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5697:80:5"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "5801:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5801:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5800:9:5"
									},
									"scope": 957,
									"src": "5685:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "6686:105:5",
										"statements": [
											{
												"id": 954,
												"nodeType": "UncheckedBlock",
												"src": "6696:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 944,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "6728:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6732:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6728:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 947,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "6735:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 943,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6720:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6720:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 949,
														"nodeType": "ExpressionStatement",
														"src": "6720:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 950,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "6769:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 951,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "6773:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6769:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 942,
														"id": 953,
														"nodeType": "Return",
														"src": "6762:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "5921:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6570:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6591:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "6583:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6610:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "6602:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6635:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "6621:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 937,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6621:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6573:80:5"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "6677:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6677:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6676:9:5"
									},
									"scope": 957,
									"src": "6561:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 958,
							"src": "482:6311:5",
							"usedErrors": []
						}
					],
					"src": "107:6687:5"
				},
				"id": 5
			},
			"contracts/Take3Token.sol": {
				"ast": {
					"absolutePath": "contracts/Take3Token.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							603
						],
						"ContextUpgradeable": [
							645
						],
						"IERC20Upgradeable": [
							360
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						],
						"SafeMathUpgradeable": [
							957
						],
						"Take3Token": [
							2696
						]
					},
					"id": 2697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 959,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 960,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2697,
							"sourceUnit": 361,
							"src": "67:79:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 961,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2697,
							"sourceUnit": 132,
							"src": "148:75:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"id": 962,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2697,
							"sourceUnit": 646,
							"src": "225:74:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/Math/SafeMathUpgradeable.sol",
							"id": 963,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2697,
							"sourceUnit": 958,
							"src": "301:80:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 964,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 645,
										"src": "413:18:6"
									},
									"id": 965,
									"nodeType": "InheritanceSpecifier",
									"src": "413:18:6"
								},
								{
									"baseName": {
										"id": 966,
										"name": "IERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 360,
										"src": "438:17:6"
									},
									"id": 967,
									"nodeType": "InheritanceSpecifier",
									"src": "438:17:6"
								},
								{
									"baseName": {
										"id": 968,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "462:18:6"
									},
									"id": 969,
									"nodeType": "InheritanceSpecifier",
									"src": "462:18:6"
								}
							],
							"canonicalName": "Take3Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2696,
							"linearizedBaseContracts": [
								2696,
								131,
								360,
								645,
								282
							],
							"name": "Take3Token",
							"nameLocation": "394:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 972,
									"libraryName": {
										"id": 970,
										"name": "SafeMathUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 957,
										"src": "495:19:6"
									},
									"nodeType": "UsingForDirective",
									"src": "489:38:6",
									"typeName": {
										"id": 971,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "519:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 976,
									"mutability": "mutable",
									"name": "_rOwned",
									"nameLocation": "569:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "533:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 975,
										"keyType": {
											"id": 973,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "541:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "533:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 974,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "552:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 980,
									"mutability": "mutable",
									"name": "_tOwned",
									"nameLocation": "619:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "583:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 979,
										"keyType": {
											"id": 977,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "591:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "583:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 978,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "602:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 986,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "689:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "633:67:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 985,
										"keyType": {
											"id": 981,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "641:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "633:47:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 984,
											"keyType": {
												"id": 982,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "660:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "652:27:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 983,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "671:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 990,
									"mutability": "mutable",
									"name": "_isExcludedFromFee",
									"nameLocation": "740:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "707:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 989,
										"keyType": {
											"id": 987,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "715:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "707:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 988,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "726:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 994,
									"mutability": "mutable",
									"name": "_isExcluded",
									"nameLocation": "798:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "765:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 993,
										"keyType": {
											"id": 991,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "773:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "765:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 992,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "784:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 997,
									"mutability": "mutable",
									"name": "_excluded",
									"nameLocation": "834:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "816:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 995,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "816:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 996,
										"nodeType": "ArrayTypeName",
										"src": "816:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1004,
									"mutability": "constant",
									"name": "MAX",
									"nameLocation": "877:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "852:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 998,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "852:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1003,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "883:11:6",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "892:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 1000,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "884:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:6",
													"typeDescriptions": {}
												}
											},
											"id": 1002,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "884:10:6",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1006,
									"mutability": "mutable",
									"name": "_tTotal",
									"nameLocation": "917:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "901:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1005,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "901:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1008,
									"mutability": "mutable",
									"name": "_rTotal",
									"nameLocation": "947:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "931:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1007,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "931:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1010,
									"mutability": "mutable",
									"name": "_tFeeTotal",
									"nameLocation": "977:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "961:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1009,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "961:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1012,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1011:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "996:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1011,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "996:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1014,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1038:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "1023:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1013,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1023:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1016,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "1068:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "1052:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1015,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1052:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3b124fe7",
									"id": 1018,
									"mutability": "mutable",
									"name": "_taxFee",
									"nameLocation": "1101:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "1086:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1017,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1086:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1020,
									"mutability": "mutable",
									"name": "_previousTaxFee",
									"nameLocation": "1131:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "1115:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1019,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1115:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "7d1db4a5",
									"id": 1022,
									"mutability": "mutable",
									"name": "_maxTxAmount",
									"nameLocation": "1168:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "1153:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1021,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1153:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1025,
									"mutability": "mutable",
									"name": "_signers",
									"nameLocation": "1207:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "1189:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1023,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1189:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1024,
										"nodeType": "ArrayTypeName",
										"src": "1189:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1029,
									"mutability": "mutable",
									"name": "_mapSigners",
									"nameLocation": "1255:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "1222:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1028,
										"keyType": {
											"id": 1026,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1230:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1222:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1027,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1241:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "f9342285",
									"id": 1033,
									"mutability": "mutable",
									"name": "uniqueIdExists",
									"nameLocation": "1305:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "1273:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 1032,
										"keyType": {
											"id": 1030,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1281:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1273:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueType": {
											"id": 1031,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1292:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "1607:692:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1052,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1618:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1618:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "1618:16:6"
											},
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1055,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "1647:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1056,
														"name": "_NAME",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "1655:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1647:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "1647:13:6"
											},
											{
												"expression": {
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1059,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "1671:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1060,
														"name": "_SYMBOL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "1681:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:6"
											},
											{
												"expression": {
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1063,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "1699:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1064,
														"name": "_DECIMALS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "1711:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1699:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "1699:21:6"
											},
											{
												"expression": {
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1067,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "1731:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1068,
															"name": "_supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "1741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1751:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"id": 1070,
																"name": "_decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "1755:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1751:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1741:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1731:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "1731:33:6"
											},
											{
												"expression": {
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1075,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "1775:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1076,
																	"name": "MAX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "1786:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1077,
																				"name": "MAX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "1793:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 1078,
																				"name": "_tTotal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1006,
																				"src": "1799:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1793:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1080,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1792:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1786:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1082,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1785:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1775:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "1775:33:6"
											},
											{
												"expression": {
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1085,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "1819:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1086,
														"name": "_txFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "1829:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1819:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "1819:16:6"
											},
											{
												"expression": {
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1089,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "1846:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1090,
														"name": "_txFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "1864:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1846:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "1846:24:6"
											},
											{
												"expression": {
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1093,
														"name": "_maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "1881:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1094,
															"name": "_MAXAMOUNT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "1896:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1909:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"id": 1096,
																"name": "_decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "1913:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1909:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1896:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1881:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "1881:41:6"
											},
											{
												"expression": {
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1101,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1935:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1103,
														"indexExpression": {
															"id": 1102,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "1943:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1935:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1104,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "1957:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1935:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "1935:29:6"
											},
											{
												"expression": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1107,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "2029:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1109,
														"indexExpression": {
															"id": 1108,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "2048:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2029:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2029:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "2029:37:6"
											},
											{
												"expression": {
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1113,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "2077:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1118,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1116,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2104:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Take3Token_$2696",
																		"typeString": "contract Take3Token"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Take3Token_$2696",
																		"typeString": "contract Take3Token"
																	}
																],
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2096:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1114,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2096:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2077:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2113:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2077:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "2077:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1123,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "2146:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1122,
														"name": "excludeFromReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "2128:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "2128:29:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1129,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2194:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Take3Token_$2696",
																		"typeString": "contract Take3Token"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Take3Token_$2696",
																		"typeString": "contract Take3Token"
																	}
																],
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2186:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1127,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2186:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2186:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1126,
														"name": "excludeFromReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "2168:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2168:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "2168:32:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2267:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2259:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1134,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2259:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2259:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1138,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "2271:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1139,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "2283:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1133,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "2250:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2250:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "EmitStatement",
												"src": "2245:46:6"
											}
										]
									},
									"functionSelector": "a6e57d99",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1050,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1049,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 202,
												"src": "1595:11:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1595:11:6"
										}
									],
									"name": "initialize",
									"nameLocation": "1337:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "_NAME",
												"nameLocation": "1372:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1358:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1034,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1358:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "_SYMBOL",
												"nameLocation": "1402:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1388:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1036,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1388:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "_DECIMALS",
												"nameLocation": "1428:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1420:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "_supply",
												"nameLocation": "1456:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1448:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "_txFee",
												"nameLocation": "1482:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1474:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "_MAXAMOUNT",
												"nameLocation": "1507:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1499:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "1570:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1562:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:240:6"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1607:0:6"
									},
									"scope": 2696,
									"src": "1328:971:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "2359:31:6",
										"statements": [
											{
												"expression": {
													"id": 1148,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1012,
													"src": "2377:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1147,
												"id": 1149,
												"nodeType": "Return",
												"src": "2370:12:6"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2316:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2320:2:6"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "2344:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1145,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2344:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:15:6"
									},
									"scope": 2696,
									"src": "2307:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2452:33:6",
										"statements": [
											{
												"expression": {
													"id": 1156,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1014,
													"src": "2470:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1157,
												"nodeType": "Return",
												"src": "2463:14:6"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2407:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2413:2:6"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2437:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1153,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2437:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2436:15:6"
									},
									"scope": 2696,
									"src": "2398:87:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "2543:35:6",
										"statements": [
											{
												"expression": {
													"id": 1164,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1016,
													"src": "2561:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1163,
												"id": 1165,
												"nodeType": "Return",
												"src": "2554:16:6"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2502:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:2:6"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "2534:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2534:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2533:9:6"
									},
									"scope": 2696,
									"src": "2493:85:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "2649:29:6",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2667:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												},
												"functionReturnParameters": 1171,
												"id": 1173,
												"nodeType": "Return",
												"src": "2660:10:6"
											}
										]
									},
									"functionSelector": "54fd4d50",
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "2595:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2602:2:6"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2634:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1169,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2634:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2633:15:6"
									},
									"scope": 2696,
									"src": "2586:92:6",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										309
									],
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "2748:33:6",
										"statements": [
											{
												"expression": {
													"id": 1181,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1006,
													"src": "2766:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1180,
												"id": 1182,
												"nodeType": "Return",
												"src": "2759:14:6"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2695:11:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2721:8:6"
									},
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2706:2:6"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "2739:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:9:6"
									},
									"scope": 2696,
									"src": "2686:95:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										317
									],
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "2864:123:6",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 1192,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "2879:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1194,
													"indexExpression": {
														"id": 1193,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "2891:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2879:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1199,
												"nodeType": "IfStatement",
												"src": "2875:49:6",
												"trueBody": {
													"expression": {
														"baseExpression": {
															"id": 1195,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "2908:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1197,
														"indexExpression": {
															"id": 1196,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "2916:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2908:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1191,
													"id": 1198,
													"nodeType": "Return",
													"src": "2901:23:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1201,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "2962:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1203,
															"indexExpression": {
																"id": 1202,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "2970:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2962:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1200,
														"name": "tokenFromReflection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "2942:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2942:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1191,
												"id": 1205,
												"nodeType": "Return",
												"src": "2935:44:6"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2798:9:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1188,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2837:8:6"
									},
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2816:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "2808:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2808:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2807:17:6"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "2855:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:6"
									},
									"scope": 2696,
									"src": "2789:198:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										327
									],
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "3111:83:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1218,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "3132:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3132:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1220,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "3146:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1221,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "3157:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1217,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "3122:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3122:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "3122:42:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3182:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1216,
												"id": 1225,
												"nodeType": "Return",
												"src": "3175:11:6"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3004:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1213,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3073:8:6"
									},
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3021:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3013:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3013:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3040:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3032:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3032:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:35:6"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3100:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3100:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3099:6:6"
									},
									"scope": 2696,
									"src": "2995:199:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										337
									],
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "3333:53:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1237,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "3351:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1239,
														"indexExpression": {
															"id": 1238,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "3363:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3351:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1241,
													"indexExpression": {
														"id": 1240,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3370:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3351:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1242,
												"nodeType": "Return",
												"src": "3344:34:6"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3211:9:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1233,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3292:8:6"
									},
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3229:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "3221:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3221:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3244:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "3236:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3236:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3220:32:6"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "3319:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3319:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3318:9:6"
									},
									"scope": 2696,
									"src": "3202:184:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										347
									],
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "3507:80:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1255,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "3527:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3527:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1257,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "3541:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1258,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "3550:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1254,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "3518:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3518:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "3518:39:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3575:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1253,
												"id": 1262,
												"nodeType": "Return",
												"src": "3568:11:6"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3403:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1250,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3469:8:6"
									},
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3419:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "3411:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3411:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3436:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "3428:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3410:33:6"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "3496:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1251,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3496:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3495:6:6"
									},
									"scope": 2696,
									"src": "3394:193:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										359
									],
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "3733:308:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1277,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "3754:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1278,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "3762:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1279,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "3773:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1276,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "3744:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3744:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "3744:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1283,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "3814:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1284,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "3835:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3835:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1293,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "3918:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3943:42:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1286,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 986,
																			"src": "3862:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1288,
																		"indexExpression": {
																			"id": 1287,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "3874:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3862:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1291,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1289,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 630,
																			"src": "3882:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3882:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3862:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 906,
																"src": "3862:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3862:138:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1282,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "3791:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3791:220:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "3791:220:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4029:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1275,
												"id": 1299,
												"nodeType": "Return",
												"src": "4022:11:6"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3604:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1272,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3709:8:6"
									},
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3635:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "3627:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3627:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3660:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "3652:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3688:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "3680:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3680:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:85:6"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "3727:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3727:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3726:6:6"
									},
									"scope": 2696,
									"src": "3595:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "4175:174:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1311,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "4209:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4209:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "4236:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1321,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "4297:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1314,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 986,
																			"src": "4258:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1317,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1315,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 630,
																				"src": "4270:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4270:12:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4258:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1319,
																	"indexExpression": {
																		"id": 1318,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "4284:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4258:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 821,
																"src": "4258:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4258:50:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1310,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "4186:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4186:133:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "4186:133:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4337:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1309,
												"id": 1326,
												"nodeType": "Return",
												"src": "4330:11:6"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "4058:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4084:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "4076:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "4101:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "4093:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:37:6"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "4164:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4164:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4163:6:6"
									},
									"scope": 2696,
									"src": "4049:300:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "4488:269:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1338,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "4522:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4522:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1340,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "4549:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1348,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1332,
																	"src": "4628:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4662:39:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1341,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 986,
																			"src": "4571:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1344,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1342,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 630,
																				"src": "4583:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4583:12:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4571:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1346,
																	"indexExpression": {
																		"id": 1345,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1330,
																		"src": "4597:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4571:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 906,
																"src": "4571:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4571:145:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1337,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "4499:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4499:228:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "4499:228:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4745:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1336,
												"id": 1354,
												"nodeType": "Return",
												"src": "4738:11:6"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "4366:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4392:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "4384:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4384:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "4409:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "4401:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4383:42:6"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "4477:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4477:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:6:6"
									},
									"scope": 2696,
									"src": "4357:400:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "4839:46:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1363,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "4857:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1365,
													"indexExpression": {
														"id": 1364,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "4869:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4857:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1362,
												"id": 1366,
												"nodeType": "Return",
												"src": "4850:27:6"
											}
										]
									},
									"functionSelector": "88f82020",
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcludedFromReward",
									"nameLocation": "4774:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4803:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "4795:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4795:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4794:17:6"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "4833:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4833:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:6:6"
									},
									"scope": 2696,
									"src": "4765:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "4944:36:6",
										"statements": [
											{
												"expression": {
													"id": 1373,
													"name": "_tFeeTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1010,
													"src": "4962:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1372,
												"id": 1374,
												"nodeType": "Return",
												"src": "4955:17:6"
											}
										]
									},
									"functionSelector": "13114a9d",
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalFees",
									"nameLocation": "4902:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4911:2:6"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "4935:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4934:9:6"
									},
									"scope": 2696,
									"src": "4893:87:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "5029:376:6",
										"statements": [
											{
												"assignments": [
													1382
												],
												"declarations": [
													{
														"constant": false,
														"id": 1382,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "5048:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1425,
														"src": "5040:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1381,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5040:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1385,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1383,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "5057:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5057:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5040:29:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5102:20:6",
															"subExpression": {
																"baseExpression": {
																	"id": 1387,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "5103:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1389,
																"indexExpression": {
																	"id": 1388,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "5115:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5103:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578636c75646564206164647265737365732063616e6e6f742063616c6c20746869732066756e6374696f6e",
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5137:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																"typeString": "literal_string \"Excluded addresses cannot call this function\""
															},
															"value": "Excluded addresses cannot call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																"typeString": "literal_string \"Excluded addresses cannot call this function\""
															}
														],
														"id": 1386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5080:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5080:114:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "5080:114:6"
											},
											{
												"assignments": [
													1395,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1395,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "5214:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1425,
														"src": "5206:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1394,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5206:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null
												],
												"id": 1399,
												"initialValue": {
													"arguments": [
														{
															"id": 1397,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "5244:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1396,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "5233:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5233:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5205:47:6"
											},
											{
												"expression": {
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1400,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "5263:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1402,
														"indexExpression": {
															"id": 1401,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "5271:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5263:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1407,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "5301:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1403,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "5281:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1405,
																"indexExpression": {
																	"id": 1404,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "5289:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5281:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 836,
															"src": "5281:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5281:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5263:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "5263:46:6"
											},
											{
												"expression": {
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1411,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "5320:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1414,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "5342:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1412,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "5330:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 836,
															"src": "5330:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5330:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5320:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "5320:30:6"
											},
											{
												"expression": {
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1418,
														"name": "_tFeeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "5361:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1421,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "5389:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1419,
																"name": "_tFeeTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "5374:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "5374:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5374:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5361:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "5361:36:6"
											}
										]
									},
									"functionSelector": "3bd5d173",
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deliver",
									"nameLocation": "4997:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "5013:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "5005:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5004:17:6"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5029:0:6"
									},
									"scope": 2696,
									"src": "4988:417:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "5545:343:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1436,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "5564:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1437,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "5575:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5564:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5584:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																"typeString": "literal_string \"Amount must be less than supply\""
															},
															"value": "Amount must be less than supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																"typeString": "literal_string \"Amount must be less than supply\""
															}
														],
														"id": 1435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5556:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5556:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "5556:62:6"
											},
											{
												"condition": {
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5633:18:6",
													"subExpression": {
														"id": 1442,
														"name": "deductTransferFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "5634:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1461,
													"nodeType": "Block",
													"src": "5762:119:6",
													"statements": [
														{
															"assignments": [
																null,
																1454,
																null,
																null,
																null
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 1454,
																	"mutability": "mutable",
																	"name": "rTransferAmount",
																	"nameLocation": "5788:15:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1461,
																	"src": "5780:23:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1453,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5780:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null
															],
															"id": 1458,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1456,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "5824:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1455,
																	"name": "_getValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1724,
																	"src": "5813:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5813:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5777:55:6"
														},
														{
															"expression": {
																"id": 1459,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1454,
																"src": "5854:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1434,
															"id": 1460,
															"nodeType": "Return",
															"src": "5847:22:6"
														}
													]
												},
												"id": 1462,
												"nodeType": "IfStatement",
												"src": "5629:252:6",
												"trueBody": {
													"id": 1452,
													"nodeType": "Block",
													"src": "5653:103:6",
													"statements": [
														{
															"assignments": [
																1445,
																null,
																null,
																null,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1445,
																	"mutability": "mutable",
																	"name": "rAmount",
																	"nameLocation": "5677:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1452,
																	"src": "5669:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1444,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5669:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null,
																null
															],
															"id": 1449,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1447,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "5707:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1446,
																	"name": "_getValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1724,
																	"src": "5696:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5696:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5668:47:6"
														},
														{
															"expression": {
																"id": 1450,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "5737:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1434,
															"id": 1451,
															"nodeType": "Return",
															"src": "5730:14:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4549b039",
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflectionFromToken",
									"nameLocation": "5422:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "5450:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "5442:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5442:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "deductTransferFee",
												"nameLocation": "5464:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "5459:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5459:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5441:41:6"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "5531:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5531:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5530:9:6"
									},
									"scope": 2696,
									"src": "5413:475:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "6004:214:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1472,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "6037:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1473,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "6048:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6037:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c207265666c656374696f6e73",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6070:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															},
															"value": "Amount must be less than total reflections"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															}
														],
														"id": 1471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6015:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:110:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "6015:110:6"
											},
											{
												"assignments": [
													1479
												],
												"declarations": [
													{
														"constant": false,
														"id": 1479,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "6144:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1488,
														"src": "6136:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6136:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1482,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1480,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "6158:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6158:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6136:32:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1485,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "6198:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1483,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "6186:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 866,
														"src": "6186:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6186:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1470,
												"id": 1487,
												"nodeType": "Return",
												"src": "6179:31:6"
											}
										]
									},
									"functionSelector": "2d838119",
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenFromReflection",
									"nameLocation": "5905:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "rAmount",
												"nameLocation": "5933:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "5925:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5925:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5924:17:6"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "5990:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5990:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5989:9:6"
									},
									"scope": 2696,
									"src": "5896:322:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "6287:385:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6420:21:6",
															"subExpression": {
																"baseExpression": {
																	"id": 1497,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "6421:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1499,
																"indexExpression": {
																	"id": 1498,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "6433:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6421:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6443:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															},
															"value": "Account is already excluded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															}
														],
														"id": 1496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6412:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6412:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1503,
												"nodeType": "ExpressionStatement",
												"src": "6412:61:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1504,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "6488:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1506,
														"indexExpression": {
															"id": 1505,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "6496:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6488:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6507:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6488:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1520,
												"nodeType": "IfStatement",
												"src": "6484:109:6",
												"trueBody": {
													"id": 1519,
													"nodeType": "Block",
													"src": "6510:83:6",
													"statements": [
														{
															"expression": {
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1509,
																		"name": "_tOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "6525:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1511,
																	"indexExpression": {
																		"id": 1510,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1491,
																		"src": "6533:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6525:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1513,
																				"name": "_rOwned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "6564:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1515,
																			"indexExpression": {
																				"id": 1514,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1491,
																				"src": "6572:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6564:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1512,
																		"name": "tokenFromReflection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "6544:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6544:37:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6525:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1518,
															"nodeType": "ExpressionStatement",
															"src": "6525:56:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1521,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "6603:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1523,
														"indexExpression": {
															"id": 1522,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "6615:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6603:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6626:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6603:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "6603:27:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1530,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "6656:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1527,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "6641:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6641:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6641:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "6641:23:6"
											}
										]
									},
									"functionSelector": "52390c02",
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1494,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1493,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "6277:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6277:9:6"
										}
									],
									"name": "excludeFromReward",
									"nameLocation": "6235:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6261:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "6253:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:17:6"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6287:0:6"
									},
									"scope": 2696,
									"src": "6226:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "6741:416:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1542,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "6760:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1544,
															"indexExpression": {
																"id": 1543,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "6772:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6760:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6782:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															},
															"value": "Account is already excluded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															}
														],
														"id": 1541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6752:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6752:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "6752:60:6"
											},
											{
												"body": {
													"id": 1595,
													"nodeType": "Block",
													"src": "6870:280:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1559,
																		"name": "_excluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "6889:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1561,
																	"indexExpression": {
																		"id": 1560,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "6899:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6889:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1562,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1536,
																	"src": "6905:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6889:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1594,
															"nodeType": "IfStatement",
															"src": "6885:254:6",
															"trueBody": {
																"id": 1593,
																"nodeType": "Block",
																"src": "6914:225:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1564,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 997,
																					"src": "6933:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1566,
																				"indexExpression": {
																					"id": 1565,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1549,
																					"src": "6943:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6933:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1567,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 997,
																					"src": "6948:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1572,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1571,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1568,
																							"name": "_excluded",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 997,
																							"src": "6958:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1569,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "6958:16:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1570,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6977:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "6958:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6948:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "6933:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1574,
																		"nodeType": "ExpressionStatement",
																		"src": "6933:46:6"
																	},
																	{
																		"expression": {
																			"id": 1579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1575,
																					"name": "_tOwned",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 980,
																					"src": "6998:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1577,
																				"indexExpression": {
																					"id": 1576,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1536,
																					"src": "7006:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6998:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7017:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "6998:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1580,
																		"nodeType": "ExpressionStatement",
																		"src": "6998:20:6"
																	},
																	{
																		"expression": {
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1581,
																					"name": "_isExcluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 994,
																					"src": "7037:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1583,
																				"indexExpression": {
																					"id": 1582,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1536,
																					"src": "7049:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "7037:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 1584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7060:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "7037:28:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1586,
																		"nodeType": "ExpressionStatement",
																		"src": "7037:28:6"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1587,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 997,
																					"src": "7084:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "7084:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7084:15:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1591,
																		"nodeType": "ExpressionStatement",
																		"src": "7084:15:6"
																	},
																	{
																		"id": 1592,
																		"nodeType": "Break",
																		"src": "7118:5:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1552,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "6843:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1553,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "6847:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6847:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6843:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1596,
												"initializationExpression": {
													"assignments": [
														1549
													],
													"declarations": [
														{
															"constant": false,
															"id": 1549,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6836:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1596,
															"src": "6828:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1548,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6828:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1551,
													"initialValue": {
														"hexValue": "30",
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6840:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6828:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6865:3:6",
														"subExpression": {
															"id": 1556,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "6865:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1558,
													"nodeType": "ExpressionStatement",
													"src": "6865:3:6"
												},
												"nodeType": "ForStatement",
												"src": "6823:327:6"
											}
										]
									},
									"functionSelector": "3685d419",
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1539,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1538,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "6731:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6731:9:6"
										}
									],
									"name": "includeInReward",
									"nameLocation": "6689:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6713:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "6705:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6705:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6704:17:6"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6741:0:6"
									},
									"scope": 2696,
									"src": "6680:477:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "7223:53:6",
										"statements": [
											{
												"expression": {
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1605,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "7234:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1607,
														"indexExpression": {
															"id": 1606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "7253:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7234:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7264:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7234:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "7234:34:6"
											}
										]
									},
									"functionSelector": "437823ec",
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1603,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1602,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "7213:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7213:9:6"
										}
									],
									"name": "excludeFromFee",
									"nameLocation": "7174:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7197:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "7189:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7189:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7188:17:6"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7223:0:6"
									},
									"scope": 2696,
									"src": "7165:111:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "7340:54:6",
										"statements": [
											{
												"expression": {
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1619,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "7351:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1621,
														"indexExpression": {
															"id": 1620,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "7370:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7351:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7381:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7351:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "7351:35:6"
											}
										]
									},
									"functionSelector": "ea2f0b37",
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1617,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1616,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "7330:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7330:9:6"
										}
									],
									"name": "includeInFee",
									"nameLocation": "7293:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7314:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "7306:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7306:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7305:17:6"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7340:0:6"
									},
									"scope": 2696,
									"src": "7284:110:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "7463:35:6",
										"statements": [
											{
												"expression": {
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1633,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "7474:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1634,
														"name": "taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "7484:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7474:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "7474:16:6"
											}
										]
									},
									"functionSelector": "061c82d0",
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1631,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1630,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "7453:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7453:9:6"
										}
									],
									"name": "setTaxFeePercent",
									"nameLocation": "7411:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "taxFee",
												"nameLocation": "7436:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "7428:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7428:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7427:16:6"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7463:0:6"
									},
									"scope": 2696,
									"src": "7402:96:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "7570:62:6",
										"statements": [
											{
												"expression": {
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1645,
														"name": "_maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "7581:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1646,
															"name": "maxTxPercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "7596:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7611:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"id": 1648,
																"name": "_decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "7615:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7611:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7596:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7581:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "7581:43:6"
											}
										]
									},
									"functionSelector": "d543dbeb",
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1643,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1642,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "7560:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7560:9:6"
										}
									],
									"name": "setMaxTxPercent",
									"nameLocation": "7515:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "maxTxPercent",
												"nameLocation": "7539:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "7531:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7531:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7530:22:6"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7570:0:6"
									},
									"scope": 2696,
									"src": "7506:126:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "7723:2:6",
										"statements": []
									},
									"id": 1658,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7703:2:6"
									},
									"returnParameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7723:0:6"
									},
									"scope": 2696,
									"src": "7696:29:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "7790:90:6",
										"statements": [
											{
												"expression": {
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1665,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "7801:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1668,
																"name": "rFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1660,
																"src": "7823:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1666,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "7811:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 836,
															"src": "7811:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7811:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7801:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1671,
												"nodeType": "ExpressionStatement",
												"src": "7801:27:6"
											},
											{
												"expression": {
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1672,
														"name": "_tFeeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "7839:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1675,
																"name": "tFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "7867:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1673,
																"name": "_tFeeTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "7852:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "7852:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7852:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7839:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "7839:33:6"
											}
										]
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reflectFee",
									"nameLocation": "7742:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "rFee",
												"nameLocation": "7762:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "7754:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7754:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "tFee",
												"nameLocation": "7776:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "7768:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7753:28:6"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7790:0:6"
									},
									"scope": 2696,
									"src": "7733:147:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "8111:500:6",
										"statements": [
											{
												"assignments": [
													1696,
													1698
												],
												"declarations": [
													{
														"constant": false,
														"id": 1696,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "8145:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "8137:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1695,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1698,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "8183:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "8175:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1697,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8175:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1702,
												"initialValue": {
													"arguments": [
														{
															"id": 1700,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "8235:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1699,
														"name": "_getTValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "8223:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256)"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8223:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8122:121:6"
											},
											{
												"assignments": [
													1704,
													1706,
													1708
												],
												"declarations": [
													{
														"constant": false,
														"id": 1704,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "8263:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "8255:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1703,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8255:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1706,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "8280:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "8272:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8272:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1708,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "8305:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "8297:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1707,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8297:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1715,
												"initialValue": {
													"arguments": [
														{
															"id": 1710,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "8339:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1711,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "8361:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1712,
																"name": "_getRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1811,
																"src": "8407:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8407:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1709,
														"name": "_getRValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1793,
														"src": "8313:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256,uint256,uint256)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8313:115:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8254:174:6"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1716,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "8461:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1717,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "8483:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1718,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "8513:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1719,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "8532:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1720,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "8562:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1721,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8446:157:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1694,
												"id": 1722,
												"nodeType": "Return",
												"src": "8439:164:6"
											}
										]
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getValues",
									"nameLocation": "7897:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "7916:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "7908:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7908:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7907:17:6"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "7988:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7988:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "8010:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8010:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "8032:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8032:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "8054:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8054:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "8076:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8076:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7973:132:6"
									},
									"scope": 2696,
									"src": "7888:723:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "8744:254:6",
										"statements": [
											{
												"assignments": [
													1734
												],
												"declarations": [
													{
														"constant": false,
														"id": 1734,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "8763:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1750,
														"src": "8755:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1733,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8755:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1738,
												"initialValue": {
													"arguments": [
														{
															"id": 1736,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "8786:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1735,
														"name": "calculateTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "8770:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8770:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8755:39:6"
											},
											{
												"assignments": [
													1740
												],
												"declarations": [
													{
														"constant": false,
														"id": 1740,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "8877:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1750,
														"src": "8869:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1739,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8869:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1745,
												"initialValue": {
													"arguments": [
														{
															"id": 1743,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "8907:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1741,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "8895:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 836,
														"src": "8895:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8895:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8869:43:6"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1746,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "8951:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1747,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "8968:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1748,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8950:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1732,
												"id": 1749,
												"nodeType": "Return",
												"src": "8943:30:6"
											}
										]
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTValues",
									"nameLocation": "8628:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "8648:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "8640:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8640:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8639:17:6"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "8706:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8706:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "8715:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8715:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8705:18:6"
									},
									"scope": 2696,
									"src": "8619:379:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1792,
										"nodeType": "Block",
										"src": "9275:293:6",
										"statements": [
											{
												"assignments": [
													1767
												],
												"declarations": [
													{
														"constant": false,
														"id": 1767,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "9294:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1792,
														"src": "9286:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1766,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9286:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1772,
												"initialValue": {
													"arguments": [
														{
															"id": 1770,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "9316:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1768,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "9304:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 851,
														"src": "9304:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9304:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9286:42:6"
											},
											{
												"assignments": [
													1774
												],
												"declarations": [
													{
														"constant": false,
														"id": 1774,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "9347:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1792,
														"src": "9339:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9339:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1779,
												"initialValue": {
													"arguments": [
														{
															"id": 1777,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "9363:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1775,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "9354:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 851,
														"src": "9354:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9354:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9339:36:6"
											},
											{
												"assignments": [
													1781
												],
												"declarations": [
													{
														"constant": false,
														"id": 1781,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "9455:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1792,
														"src": "9447:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1780,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9447:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1786,
												"initialValue": {
													"arguments": [
														{
															"id": 1784,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "9485:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1782,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "9473:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 836,
														"src": "9473:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9473:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9447:43:6"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1787,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "9529:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1788,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "9538:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1789,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "9555:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1790,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9528:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1765,
												"id": 1791,
												"nodeType": "Return",
												"src": "9521:39:6"
											}
										]
									},
									"id": 1793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRValues",
									"nameLocation": "9015:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "9045:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "9037:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9037:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "tFee",
												"nameLocation": "9071:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "9063:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9063:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "currentRate",
												"nameLocation": "9125:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "9117:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9117:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9026:117:6"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "9207:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9207:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "9229:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9229:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "9251:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9251:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9192:77:6"
									},
									"scope": 2696,
									"src": "9006:562:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "9627:113:6",
										"statements": [
											{
												"assignments": [
													1799,
													1801
												],
												"declarations": [
													{
														"constant": false,
														"id": 1799,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "9647:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1810,
														"src": "9639:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1798,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9639:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1801,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "9664:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1810,
														"src": "9656:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1800,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9656:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1804,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1802,
														"name": "_getCurrentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1897,
														"src": "9675:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9675:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9638:56:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1807,
															"name": "tSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "9724:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1805,
															"name": "rSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "9712:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 866,
														"src": "9712:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9712:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1797,
												"id": 1809,
												"nodeType": "Return",
												"src": "9705:27:6"
											}
										]
									},
									"id": 1811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRate",
									"nameLocation": "9585:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9593:2:6"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "9618:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9618:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9617:9:6"
									},
									"scope": 2696,
									"src": "9576:164:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1896,
										"nodeType": "Block",
										"src": "9817:536:6",
										"statements": [
											{
												"assignments": [
													1819
												],
												"declarations": [
													{
														"constant": false,
														"id": 1819,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "9836:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1896,
														"src": "9828:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1818,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9828:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1821,
												"initialValue": {
													"id": 1820,
													"name": "_rTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1008,
													"src": "9846:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9828:25:6"
											},
											{
												"assignments": [
													1823
												],
												"declarations": [
													{
														"constant": false,
														"id": 1823,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "9872:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1896,
														"src": "9864:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9864:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1825,
												"initialValue": {
													"id": 1824,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1006,
													"src": "9882:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9864:25:6"
											},
											{
												"body": {
													"id": 1879,
													"nodeType": "Block",
													"src": "9947:291:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1837,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "9984:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1841,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1838,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "9992:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1840,
																			"indexExpression": {
																				"id": 1839,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1827,
																				"src": "10002:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9992:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9984:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1842,
																		"name": "rSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1819,
																		"src": "10008:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9984:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1844,
																			"name": "_tOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "10036:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1848,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1845,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "10044:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1847,
																			"indexExpression": {
																				"id": 1846,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1827,
																				"src": "10054:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10044:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10036:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1849,
																		"name": "tSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1823,
																		"src": "10060:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10036:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9984:83:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1856,
															"nodeType": "IfStatement",
															"src": "9962:146:6",
															"trueBody": {
																"expression": {
																	"components": [
																		{
																			"id": 1852,
																			"name": "_rTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "10091:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1853,
																			"name": "_tTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1006,
																			"src": "10100:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1854,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10090:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"functionReturnParameters": 1817,
																"id": 1855,
																"nodeType": "Return",
																"src": "10083:25:6"
															}
														},
														{
															"expression": {
																"id": 1866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1857,
																	"name": "rSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "10123:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1860,
																				"name": "_rOwned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "10145:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1864,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1861,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 997,
																					"src": "10153:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1863,
																				"indexExpression": {
																					"id": 1862,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1827,
																					"src": "10163:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10153:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10145:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1858,
																			"name": "rSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1819,
																			"src": "10133:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 836,
																		"src": "10133:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10133:34:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10123:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1867,
															"nodeType": "ExpressionStatement",
															"src": "10123:44:6"
														},
														{
															"expression": {
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1868,
																	"name": "tSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1823,
																	"src": "10182:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1871,
																				"name": "_tOwned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 980,
																				"src": "10204:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1875,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1872,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 997,
																					"src": "10212:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1874,
																				"indexExpression": {
																					"id": 1873,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1827,
																					"src": "10222:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10212:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10204:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1869,
																			"name": "tSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "10192:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 836,
																		"src": "10192:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10192:34:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10182:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1878,
															"nodeType": "ExpressionStatement",
															"src": "10182:44:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1830,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "9920:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1831,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "9924:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9924:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9920:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1880,
												"initializationExpression": {
													"assignments": [
														1827
													],
													"declarations": [
														{
															"constant": false,
															"id": 1827,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9913:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1880,
															"src": "9905:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1826,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9905:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1829,
													"initialValue": {
														"hexValue": "30",
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9917:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9905:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9942:3:6",
														"subExpression": {
															"id": 1834,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "9942:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1836,
													"nodeType": "ExpressionStatement",
													"src": "9942:3:6"
												},
												"nodeType": "ForStatement",
												"src": "9900:338:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1881,
														"name": "rSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1819,
														"src": "10252:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"id": 1884,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "10274:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1882,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "10262:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 866,
															"src": "10262:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10262:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10252:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1891,
												"nodeType": "IfStatement",
												"src": "10248:61:6",
												"trueBody": {
													"expression": {
														"components": [
															{
																"id": 1887,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "10292:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1888,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "10301:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1889,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10291:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"functionReturnParameters": 1817,
													"id": 1890,
													"nodeType": "Return",
													"src": "10284:25:6"
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1892,
															"name": "rSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "10328:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1893,
															"name": "tSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "10337:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1894,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10327:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1817,
												"id": 1895,
												"nodeType": "Return",
												"src": "10320:25:6"
											}
										]
									},
									"id": 1897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCurrentSupply",
									"nameLocation": "9757:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9774:2:6"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "9799:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9799:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "9808:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9808:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9798:18:6"
									},
									"scope": 2696,
									"src": "9748:605:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "10785:67:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1910,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "10830:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Take3Token_$2696",
																			"typeString": "contract Take3Token"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Take3Token_$2696",
																			"typeString": "contract Take3Token"
																		}
																	],
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10822:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1908,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10822:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10822:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "10822:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1904,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "10804:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10804:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10796:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1902,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10796:8:6",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10796:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "10796:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10796:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "10796:48:6"
											}
										]
									},
									"functionSelector": "48c54b9d",
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1900,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1899,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "10775:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "10775:9:6"
										}
									],
									"name": "claimTokens",
									"nameLocation": "10754:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10765:2:6"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10785:0:6"
									},
									"scope": 2696,
									"src": "10745:107:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "10933:57:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10976:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "32",
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10980:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "10976:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1925,
																	"name": "_taxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "10963:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1923,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "10951:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "10951:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10951:20:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 866,
														"src": "10951:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10951:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1922,
												"id": 1932,
												"nodeType": "Return",
												"src": "10944:38:6"
											}
										]
									},
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTaxFee",
									"nameLocation": "10869:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10893:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "10885:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10885:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10884:17:6"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "10924:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10924:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10923:9:6"
									},
									"scope": 2696,
									"src": "10860:130:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1950,
										"nodeType": "Block",
										"src": "11030:185:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1937,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "11045:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11056:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11045:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1941,
												"nodeType": "IfStatement",
												"src": "11041:25:6",
												"trueBody": {
													"functionReturnParameters": 1936,
													"id": 1940,
													"nodeType": "Return",
													"src": "11059:7:6"
												}
											},
											{
												"expression": {
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1942,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "11078:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1943,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "11096:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11078:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1945,
												"nodeType": "ExpressionStatement",
												"src": "11078:25:6"
											},
											{
												"expression": {
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1946,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "11166:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11176:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11166:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "11166:11:6"
											}
										]
									},
									"id": 1951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeAllFee",
									"nameLocation": "11007:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11019:2:6"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11030:0:6"
									},
									"scope": 2696,
									"src": "10998:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "11256:94:6",
										"statements": [
											{
												"expression": {
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1954,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "11267:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1955,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "11277:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11267:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "11267:25:6"
											}
										]
									},
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "restoreAllFee",
									"nameLocation": "11232:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11245:2:6"
									},
									"returnParameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11256:0:6"
									},
									"scope": 2696,
									"src": "11223:127:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "11429:53:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1966,
														"name": "_isExcludedFromFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "11447:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1968,
													"indexExpression": {
														"id": 1967,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "11466:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11447:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1965,
												"id": 1969,
												"nodeType": "Return",
												"src": "11440:34:6"
											}
										]
									},
									"functionSelector": "5342acb4",
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcludedFromFee",
									"nameLocation": "11367:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11393:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "11385:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11385:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11384:17:6"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "11423:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1963,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11423:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11422:6:6"
									},
									"scope": 2696,
									"src": "11358:124:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "11598:263:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1981,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "11617:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11634:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11626:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1982,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11626:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11626:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11617:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11638:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1980,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11609:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11609:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1989,
												"nodeType": "ExpressionStatement",
												"src": "11609:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1991,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1975,
																"src": "11696:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11715:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11707:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1992,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11707:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11707:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11696:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11719:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1990,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11688:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11688:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1999,
												"nodeType": "ExpressionStatement",
												"src": "11688:68:6"
											},
											{
												"expression": {
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2000,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "11769:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2003,
															"indexExpression": {
																"id": 2001,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "11781:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11769:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2004,
														"indexExpression": {
															"id": 2002,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "11788:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11769:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2005,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1977,
														"src": "11799:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11769:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "11769:36:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2009,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "11830:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2010,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "11837:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2011,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "11846:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2008,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "11821:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11821:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2013,
												"nodeType": "EmitStatement",
												"src": "11816:37:6"
											}
										]
									},
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11499:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11526:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "11518:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11518:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11550:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "11542:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11542:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11576:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "11568:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11568:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11507:82:6"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11598:0:6"
									},
									"scope": 2696,
									"src": "11490:371:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2110,
										"nodeType": "Block",
										"src": "11972:1766:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2025,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "11991:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12007:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11999:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2026,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11999:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11999:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11991:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12011:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 2024,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11983:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11983:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2033,
												"nodeType": "ExpressionStatement",
												"src": "11983:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2035,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "12070:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12084:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12076:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2036,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12076:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12076:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12070:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12088:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 2034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12062:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12062:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2043,
												"nodeType": "ExpressionStatement",
												"src": "12062:64:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2045,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "12145:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12154:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12145:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12157:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															},
															"value": "Transfer amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															}
														],
														"id": 2044,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12137:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12137:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2050,
												"nodeType": "ExpressionStatement",
												"src": "12137:64:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2051,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "12216:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2052,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "12224:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12224:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12216:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2055,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "12235:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2056,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "12241:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12241:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12235:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12216:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2067,
												"nodeType": "IfStatement",
												"src": "12212:175:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2061,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2021,
																	"src": "12289:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2062,
																	"name": "_maxTxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "12299:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12289:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"hexValue": "5472616e7366657220616d6f756e74206578636565647320746865206d61785478416d6f756e742e",
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12330:42:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd",
																	"typeString": "literal_string \"Transfer amount exceeds the maxTxAmount.\""
																},
																"value": "Transfer amount exceeds the maxTxAmount."
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd",
																	"typeString": "literal_string \"Transfer amount exceeds the maxTxAmount.\""
																}
															],
															"id": 2060,
															"name": "require",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967278,
																4294967278
															],
															"referencedDeclaration": 4294967278,
															"src": "12263:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (bool,string memory) pure"
															}
														},
														"id": 2065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12263:124:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2066,
													"nodeType": "ExpressionStatement",
													"src": "12263:124:6"
												}
											},
											{
												"assignments": [
													2069
												],
												"declarations": [
													{
														"constant": false,
														"id": 2069,
														"mutability": "mutable",
														"name": "contractTokenBalance",
														"nameLocation": "12690:20:6",
														"nodeType": "VariableDeclaration",
														"scope": 2110,
														"src": "12682:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2068,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12682:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2076,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2073,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12731:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Take3Token_$2696",
																		"typeString": "contract Take3Token"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Take3Token_$2696",
																		"typeString": "contract Take3Token"
																	}
																],
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12723:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2071,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12723:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12723:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2070,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "12713:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12713:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12682:55:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2077,
														"name": "contractTokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2069,
														"src": "12754:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2078,
														"name": "_maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "12778:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12754:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2085,
												"nodeType": "IfStatement",
												"src": "12750:104:6",
												"trueBody": {
													"id": 2084,
													"nodeType": "Block",
													"src": "12792:62:6",
													"statements": [
														{
															"expression": {
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2080,
																	"name": "contractTokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2069,
																	"src": "12807:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2081,
																	"name": "_maxTxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "12830:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12807:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2083,
															"nodeType": "ExpressionStatement",
															"src": "12807:35:6"
														}
													]
												}
											},
											{
												"assignments": [
													2087
												],
												"declarations": [
													{
														"constant": false,
														"id": 2087,
														"mutability": "mutable",
														"name": "takeFee",
														"nameLocation": "13402:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 2110,
														"src": "13397:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2086,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13397:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2089,
												"initialValue": {
													"hexValue": "74727565",
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13412:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13397:19:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2090,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "13517:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2092,
														"indexExpression": {
															"id": 2091,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "13536:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13517:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 2093,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "13545:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2095,
														"indexExpression": {
															"id": 2094,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "13564:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13545:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13517:50:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2102,
												"nodeType": "IfStatement",
												"src": "13513:98:6",
												"trueBody": {
													"id": 2101,
													"nodeType": "Block",
													"src": "13569:42:6",
													"statements": [
														{
															"expression": {
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2097,
																	"name": "takeFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2087,
																	"src": "13584:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13594:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "13584:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2100,
															"nodeType": "ExpressionStatement",
															"src": "13584:15:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2104,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "13704:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2105,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "13710:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2106,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "13714:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2107,
															"name": "takeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "13722:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2103,
														"name": "_tokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2206,
														"src": "13689:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13689:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2109,
												"nodeType": "ExpressionStatement",
												"src": "13689:41:6"
											}
										]
									},
									"id": 2111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11878:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11906:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "11898:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11898:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11929:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "11921:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11921:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11950:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "11942:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11942:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11887:76:6"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11972:0:6"
									},
									"scope": 2696,
									"src": "11869:1869:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "16197:698:6",
										"statements": [
											{
												"condition": {
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16212:8:6",
													"subExpression": {
														"id": 2122,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "16213:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2127,
												"nodeType": "IfStatement",
												"src": "16208:28:6",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2124,
															"name": "removeAllFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "16222:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																"typeString": "function ()"
															}
														},
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16222:14:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2126,
													"nodeType": "ExpressionStatement",
													"src": "16222:14:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2128,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "16253:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2130,
														"indexExpression": {
															"id": 2129,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "16265:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16253:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "16276:23:6",
														"subExpression": {
															"baseExpression": {
																"id": 2131,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "16277:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2133,
															"indexExpression": {
																"id": 2132,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "16289:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16277:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16253:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "16386:20:6",
															"subExpression": {
																"baseExpression": {
																	"id": 2143,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "16387:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2145,
																"indexExpression": {
																	"id": 2144,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2113,
																	"src": "16399:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16387:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"baseExpression": {
																"id": 2147,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "16410:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2149,
															"indexExpression": {
																"id": 2148,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "16422:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16410:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "16386:46:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "16517:20:6",
																"subExpression": {
																	"baseExpression": {
																		"id": 2158,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "16518:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2160,
																	"indexExpression": {
																		"id": 2159,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2113,
																		"src": "16530:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16518:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "16541:23:6",
																"subExpression": {
																	"baseExpression": {
																		"id": 2162,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "16542:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2164,
																	"indexExpression": {
																		"id": 2163,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "16554:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16542:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "16517:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2174,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "16647:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2176,
																	"indexExpression": {
																		"id": 2175,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2113,
																		"src": "16659:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16647:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2177,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "16670:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2179,
																	"indexExpression": {
																		"id": 2178,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "16682:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16670:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "16647:45:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2194,
																"nodeType": "Block",
																"src": "16775:71:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2189,
																					"name": "sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2113,
																					"src": "16808:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2190,
																					"name": "recipient",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2115,
																					"src": "16816:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2191,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2117,
																					"src": "16827:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2188,
																				"name": "_transferStandard",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2263,
																				"src": "16790:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16790:44:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2193,
																		"nodeType": "ExpressionStatement",
																		"src": "16790:44:6"
																	}
																]
															},
															"id": 2195,
															"nodeType": "IfStatement",
															"src": "16643:203:6",
															"trueBody": {
																"id": 2187,
																"nodeType": "Block",
																"src": "16694:75:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2182,
																					"name": "sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2113,
																					"src": "16731:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2183,
																					"name": "recipient",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2115,
																					"src": "16739:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2184,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2117,
																					"src": "16750:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2181,
																				"name": "_transferBothExcluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2478,
																				"src": "16709:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16709:48:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2186,
																		"nodeType": "ExpressionStatement",
																		"src": "16709:48:6"
																	}
																]
															}
														},
														"id": 2196,
														"nodeType": "IfStatement",
														"src": "16513:333:6",
														"trueBody": {
															"id": 2173,
															"nodeType": "Block",
															"src": "16566:71:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 2168,
																				"name": "sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2113,
																				"src": "16599:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2169,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2115,
																				"src": "16607:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2170,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2117,
																				"src": "16618:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2167,
																			"name": "_transferStandard",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "16581:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 2171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16581:44:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2172,
																	"nodeType": "ExpressionStatement",
																	"src": "16581:44:6"
																}
															]
														}
													},
													"id": 2197,
													"nodeType": "IfStatement",
													"src": "16382:464:6",
													"trueBody": {
														"id": 2157,
														"nodeType": "Block",
														"src": "16434:73:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2152,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2113,
																			"src": "16469:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2153,
																			"name": "recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "16477:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2154,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2117,
																			"src": "16488:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2151,
																		"name": "_transferToExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "16449:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 2155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16449:46:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2156,
																"nodeType": "ExpressionStatement",
																"src": "16449:46:6"
															}
														]
													}
												},
												"id": 2198,
												"nodeType": "IfStatement",
												"src": "16249:597:6",
												"trueBody": {
													"id": 2142,
													"nodeType": "Block",
													"src": "16301:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2137,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2113,
																		"src": "16338:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2138,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "16346:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2139,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2117,
																		"src": "16357:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2136,
																	"name": "_transferFromExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2399,
																	"src": "16316:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16316:48:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2141,
															"nodeType": "ExpressionStatement",
															"src": "16316:48:6"
														}
													]
												}
											},
											{
												"condition": {
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16862:8:6",
													"subExpression": {
														"id": 2199,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "16863:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2204,
												"nodeType": "IfStatement",
												"src": "16858:29:6",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2201,
															"name": "restoreAllFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "16872:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																"typeString": "function ()"
															}
														},
														"id": 2202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16872:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2203,
													"nodeType": "ExpressionStatement",
													"src": "16872:15:6"
												}
											}
										]
									},
									"id": 2206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenTransfer",
									"nameLocation": "16066:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "16099:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "16091:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16091:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "16124:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "16116:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16116:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16152:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "16144:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16144:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "takeFee",
												"nameLocation": "16174:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "16169:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16169:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16080:108:6"
									},
									"returnParameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16197:0:6"
									},
									"scope": 2696,
									"src": "16057:838:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "17024:495:6",
										"statements": [
											{
												"assignments": [
													2216,
													2218,
													2220,
													2222,
													2224
												],
												"declarations": [
													{
														"constant": false,
														"id": 2216,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "17058:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 2262,
														"src": "17050:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2215,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17050:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2218,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "17088:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 2262,
														"src": "17080:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17080:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2220,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "17126:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2262,
														"src": "17118:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17118:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2222,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "17153:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 2262,
														"src": "17145:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17145:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2224,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "17191:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2262,
														"src": "17183:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17183:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2228,
												"initialValue": {
													"arguments": [
														{
															"id": 2226,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2212,
															"src": "17242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2225,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "17231:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17231:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17035:215:6"
											},
											{
												"expression": {
													"id": 2238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2229,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "17261:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2231,
														"indexExpression": {
															"id": 2230,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "17269:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17261:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2236,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "17299:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2232,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "17279:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2234,
																"indexExpression": {
																	"id": 2233,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "17287:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17279:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 836,
															"src": "17279:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17279:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17261:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2239,
												"nodeType": "ExpressionStatement",
												"src": "17261:46:6"
											},
											{
												"expression": {
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2240,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "17318:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2242,
														"indexExpression": {
															"id": 2241,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2210,
															"src": "17326:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17318:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2247,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2218,
																"src": "17362:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2243,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "17339:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2245,
																"indexExpression": {
																	"id": 2244,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "17347:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17339:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "17339:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17339:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17318:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "17318:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2252,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2220,
															"src": "17440:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2253,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "17446:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2251,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "17428:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17428:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2255,
												"nodeType": "ExpressionStatement",
												"src": "17428:23:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2257,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "17476:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2258,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2210,
															"src": "17484:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2259,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2222,
															"src": "17495:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2256,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "17467:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17467:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2261,
												"nodeType": "EmitStatement",
												"src": "17462:49:6"
											}
										]
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferStandard",
									"nameLocation": "16912:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "16948:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "16940:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16940:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "16973:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "16965:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16965:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "17001:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "16993:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16993:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16929:86:6"
									},
									"returnParameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17024:0:6"
									},
									"scope": 2696,
									"src": "16903:616:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2330,
										"nodeType": "Block",
										"src": "17650:566:6",
										"statements": [
											{
												"assignments": [
													2273,
													2275,
													2277,
													2279,
													2281
												],
												"declarations": [
													{
														"constant": false,
														"id": 2273,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "17684:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 2330,
														"src": "17676:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2272,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17676:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2275,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "17714:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 2330,
														"src": "17706:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17706:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2277,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "17752:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2330,
														"src": "17744:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17744:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2279,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "17779:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 2330,
														"src": "17771:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17771:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2281,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "17817:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2330,
														"src": "17809:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17809:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2285,
												"initialValue": {
													"arguments": [
														{
															"id": 2283,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "17868:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2282,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "17857:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17857:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17661:215:6"
											},
											{
												"expression": {
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2286,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "17887:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2288,
														"indexExpression": {
															"id": 2287,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "17895:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17887:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2293,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2273,
																"src": "17925:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2289,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "17905:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2291,
																"indexExpression": {
																	"id": 2290,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2265,
																	"src": "17913:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17905:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 836,
															"src": "17905:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17905:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17887:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2296,
												"nodeType": "ExpressionStatement",
												"src": "17887:46:6"
											},
											{
												"expression": {
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2297,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "17944:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2299,
														"indexExpression": {
															"id": 2298,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "17952:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17944:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2304,
																"name": "tTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2279,
																"src": "17988:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2300,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "17965:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2302,
																"indexExpression": {
																	"id": 2301,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2267,
																	"src": "17973:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17965:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "17965:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17965:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17944:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2307,
												"nodeType": "ExpressionStatement",
												"src": "17944:60:6"
											},
											{
												"expression": {
													"id": 2317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2308,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "18015:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2310,
														"indexExpression": {
															"id": 2309,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "18023:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18015:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2315,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "18059:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2311,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "18036:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2313,
																"indexExpression": {
																	"id": 2312,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2267,
																	"src": "18044:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18036:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "18036:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18036:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18015:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2318,
												"nodeType": "ExpressionStatement",
												"src": "18015:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2320,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "18137:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2321,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "18143:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2319,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "18125:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18125:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2323,
												"nodeType": "ExpressionStatement",
												"src": "18125:23:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2325,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "18173:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2326,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "18181:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2327,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "18192:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2324,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "18164:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18164:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2329,
												"nodeType": "EmitStatement",
												"src": "18159:49:6"
											}
										]
									},
									"id": 2331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferToExcluded",
									"nameLocation": "17536:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "17574:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "17566:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17566:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "17599:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "17591:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17591:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "17627:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "17619:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17619:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17555:86:6"
									},
									"returnParameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17650:0:6"
									},
									"scope": 2696,
									"src": "17527:689:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2398,
										"nodeType": "Block",
										"src": "18349:552:6",
										"statements": [
											{
												"assignments": [
													2341,
													2343,
													2345,
													2347,
													2349
												],
												"declarations": [
													{
														"constant": false,
														"id": 2341,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "18383:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 2398,
														"src": "18375:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18375:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2343,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "18413:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 2398,
														"src": "18405:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2342,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18405:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2345,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "18451:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2398,
														"src": "18443:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2344,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18443:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2347,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "18478:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 2398,
														"src": "18470:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2346,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18470:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2349,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "18516:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2398,
														"src": "18508:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18508:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2353,
												"initialValue": {
													"arguments": [
														{
															"id": 2351,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "18567:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2350,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "18556:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18556:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18360:215:6"
											},
											{
												"expression": {
													"id": 2363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2354,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "18586:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2356,
														"indexExpression": {
															"id": 2355,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2333,
															"src": "18594:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18586:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2361,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2337,
																"src": "18624:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2357,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "18604:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2359,
																"indexExpression": {
																	"id": 2358,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2333,
																	"src": "18612:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18604:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 836,
															"src": "18604:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18604:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18586:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2364,
												"nodeType": "ExpressionStatement",
												"src": "18586:46:6"
											},
											{
												"expression": {
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2365,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "18643:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2367,
														"indexExpression": {
															"id": 2366,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2333,
															"src": "18651:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18643:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2372,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "18681:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2368,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "18661:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2370,
																"indexExpression": {
																	"id": 2369,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2333,
																	"src": "18669:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18661:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 836,
															"src": "18661:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18661:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18643:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2375,
												"nodeType": "ExpressionStatement",
												"src": "18643:46:6"
											},
											{
												"expression": {
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2376,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "18700:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2378,
														"indexExpression": {
															"id": 2377,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2335,
															"src": "18708:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18700:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2383,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2343,
																"src": "18744:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2379,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "18721:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2381,
																"indexExpression": {
																	"id": 2380,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2335,
																	"src": "18729:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18721:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "18721:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18721:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18700:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2386,
												"nodeType": "ExpressionStatement",
												"src": "18700:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2388,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2345,
															"src": "18822:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2389,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "18828:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2387,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "18810:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18810:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2391,
												"nodeType": "ExpressionStatement",
												"src": "18810:23:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2393,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2333,
															"src": "18858:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2394,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2335,
															"src": "18866:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2395,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2347,
															"src": "18877:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2392,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "18849:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18849:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2397,
												"nodeType": "EmitStatement",
												"src": "18844:49:6"
											}
										]
									},
									"id": 2399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFromExcluded",
									"nameLocation": "18233:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "18273:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "18265:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18265:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "18298:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "18290:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18290:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "18326:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "18318:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18318:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18254:86:6"
									},
									"returnParameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18349:0:6"
									},
									"scope": 2696,
									"src": "18224:677:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2477,
										"nodeType": "Block",
										"src": "19034:623:6",
										"statements": [
											{
												"assignments": [
													2409,
													2411,
													2413,
													2415,
													2417
												],
												"declarations": [
													{
														"constant": false,
														"id": 2409,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "19068:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 2477,
														"src": "19060:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2408,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19060:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2411,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "19098:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 2477,
														"src": "19090:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2410,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19090:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2413,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "19136:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2477,
														"src": "19128:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19128:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2415,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "19163:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 2477,
														"src": "19155:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2414,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19155:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2417,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "19201:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2477,
														"src": "19193:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19193:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2421,
												"initialValue": {
													"arguments": [
														{
															"id": 2419,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2405,
															"src": "19252:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2418,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "19241:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19241:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19045:215:6"
											},
											{
												"expression": {
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2422,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "19271:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2424,
														"indexExpression": {
															"id": 2423,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2401,
															"src": "19279:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19271:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2429,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2405,
																"src": "19309:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2425,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "19289:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2427,
																"indexExpression": {
																	"id": 2426,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "19297:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19289:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 836,
															"src": "19289:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19289:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19271:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2432,
												"nodeType": "ExpressionStatement",
												"src": "19271:46:6"
											},
											{
												"expression": {
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2433,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "19328:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2435,
														"indexExpression": {
															"id": 2434,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2401,
															"src": "19336:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19328:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2440,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "19366:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2436,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "19346:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2438,
																"indexExpression": {
																	"id": 2437,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "19354:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19346:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 836,
															"src": "19346:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19346:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19328:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2443,
												"nodeType": "ExpressionStatement",
												"src": "19328:46:6"
											},
											{
												"expression": {
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2444,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "19385:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2446,
														"indexExpression": {
															"id": 2445,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "19393:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19385:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2451,
																"name": "tTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2415,
																"src": "19429:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2447,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "19406:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2449,
																"indexExpression": {
																	"id": 2448,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "19414:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19406:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "19406:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19406:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19385:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2454,
												"nodeType": "ExpressionStatement",
												"src": "19385:60:6"
											},
											{
												"expression": {
													"id": 2464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2455,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "19456:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2457,
														"indexExpression": {
															"id": 2456,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "19464:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19456:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2462,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2411,
																"src": "19500:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2458,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "19477:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2460,
																"indexExpression": {
																	"id": 2459,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "19485:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19477:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "19477:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19477:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19456:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2465,
												"nodeType": "ExpressionStatement",
												"src": "19456:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2467,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2413,
															"src": "19578:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2468,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2417,
															"src": "19584:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2466,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "19566:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19566:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2470,
												"nodeType": "ExpressionStatement",
												"src": "19566:23:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2472,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2401,
															"src": "19614:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2473,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "19622:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2474,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2415,
															"src": "19633:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2471,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "19605:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19605:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2476,
												"nodeType": "EmitStatement",
												"src": "19600:49:6"
											}
										]
									},
									"id": 2478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferBothExcluded",
									"nameLocation": "18918:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "18958:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "18950:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18950:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "18983:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "18975:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18975:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "19011:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "19003:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19003:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18939:86:6"
									},
									"returnParameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19034:0:6"
									},
									"scope": 2696,
									"src": "18909:748:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2486,
										"nodeType": "Block",
										"src": "19725:34:6",
										"statements": [
											{
												"expression": {
													"id": 2484,
													"name": "_signers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1025,
													"src": "19743:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 2483,
												"id": 2485,
												"nodeType": "Return",
												"src": "19736:15:6"
											}
										]
									},
									"functionSelector": "46f0975a",
									"id": 2487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "signers",
									"nameLocation": "19674:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19681:2:6"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "19707:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2480,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "19707:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2481,
													"nodeType": "ArrayTypeName",
													"src": "19707:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19706:18:6"
									},
									"scope": 2696,
									"src": "19665:94:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2514,
										"nodeType": "Block",
										"src": "19841:165:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2496,
															"name": "_signers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "19863:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19873:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"id": 2498,
															"name": "_mapSigners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "19880:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														],
														"id": 2495,
														"name": "_updateMap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2561,
														"src": "19852:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$_t_mapping$_t_address_$_t_bool_$_$returns$__$",
															"typeString": "function (address[] memory,bool,mapping(address => bool))"
														}
													},
													"id": 2499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19852:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2500,
												"nodeType": "ExpressionStatement",
												"src": "19852:40:6"
											},
											{
												"expression": {
													"id": 2502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "19903:15:6",
													"subExpression": {
														"id": 2501,
														"name": "_signers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "19910:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2503,
												"nodeType": "ExpressionStatement",
												"src": "19903:15:6"
											},
											{
												"expression": {
													"id": 2506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2504,
														"name": "_signers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "19929:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2505,
														"name": "signers_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2490,
														"src": "19940:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "19929:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 2507,
												"nodeType": "ExpressionStatement",
												"src": "19929:19:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2509,
															"name": "signers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2490,
															"src": "19970:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19980:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 2511,
															"name": "_mapSigners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "19986:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														],
														"id": 2508,
														"name": "_updateMap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2561,
														"src": "19959:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$_t_mapping$_t_address_$_t_bool_$_$returns$__$",
															"typeString": "function (address[] memory,bool,mapping(address => bool))"
														}
													},
													"id": 2512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19959:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2513,
												"nodeType": "ExpressionStatement",
												"src": "19959:39:6"
											}
										]
									},
									"functionSelector": "a3772662",
									"id": 2515,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2493,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2492,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "19831:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "19831:9:6"
										}
									],
									"name": "setSigners",
									"nameLocation": "19776:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "signers_",
												"nameLocation": "19804:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "19787:25:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2488,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "19787:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2489,
													"nodeType": "ArrayTypeName",
													"src": "19787:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19786:27:6"
									},
									"returnParameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19841:0:6"
									},
									"scope": 2696,
									"src": "19767:239:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2526,
										"nodeType": "Block",
										"src": "20078:45:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2522,
														"name": "_mapSigners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "20096:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2524,
													"indexExpression": {
														"id": 2523,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2517,
														"src": "20108:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20096:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2521,
												"id": 2525,
												"nodeType": "Return",
												"src": "20089:26:6"
											}
										]
									},
									"functionSelector": "07c351dd",
									"id": 2527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mapSigner",
									"nameLocation": "20023:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "20041:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "20033:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20033:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20032:16:6"
									},
									"returnParameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "20072:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20072:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20071:6:6"
									},
									"scope": 2696,
									"src": "20014:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2560,
										"nodeType": "Block",
										"src": "20267:105:6",
										"statements": [
											{
												"body": {
													"id": 2558,
													"nodeType": "Block",
													"src": "20318:47:6",
													"statements": [
														{
															"expression": {
																"id": 2556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2550,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2536,
																		"src": "20333:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2554,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 2551,
																			"name": "arr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2530,
																			"src": "20337:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2553,
																		"indexExpression": {
																			"id": 2552,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2540,
																			"src": "20341:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "20337:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "20333:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2555,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2532,
																	"src": "20347:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "20333:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2557,
															"nodeType": "ExpressionStatement",
															"src": "20333:20:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2543,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2540,
														"src": "20297:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2544,
															"name": "arr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2530,
															"src": "20301:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "20301:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20297:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2559,
												"initializationExpression": {
													"assignments": [
														2540
													],
													"declarations": [
														{
															"constant": false,
															"id": 2540,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "20290:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 2559,
															"src": "20283:8:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"typeName": {
																"id": 2539,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "20283:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2542,
													"initialValue": {
														"hexValue": "30",
														"id": 2541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20294:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "20283:12:6"
												},
												"loopExpression": {
													"expression": {
														"id": 2548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "20313:3:6",
														"subExpression": {
															"id": 2547,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2540,
															"src": "20313:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 2549,
													"nodeType": "ExpressionStatement",
													"src": "20313:3:6"
												},
												"nodeType": "ForStatement",
												"src": "20278:87:6"
											}
										]
									},
									"id": 2561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateMap",
									"nameLocation": "20140:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "20178:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "20161:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2528,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "20161:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2529,
													"nodeType": "ArrayTypeName",
													"src": "20161:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "20197:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "20192:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20192:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "20247:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "20214:36:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"typeName": {
													"id": 2535,
													"keyType": {
														"id": 2533,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "20222:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "20214:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
														"typeString": "mapping(address => bool)"
													},
													"valueType": {
														"id": 2534,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "20233:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20150:107:6"
									},
									"returnParameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20267:0:6"
									},
									"scope": 2696,
									"src": "20131:241:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2694,
										"nodeType": "Block",
										"src": "20619:848:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2582,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "20638:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 2583,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "20650:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "20650:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20638:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578706972656420646561646c696e65",
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20667:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d",
																"typeString": "literal_string \"Expired deadline\""
															},
															"value": "Expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d",
																"typeString": "literal_string \"Expired deadline\""
															}
														],
														"id": 2581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20630:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20630:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2588,
												"nodeType": "ExpressionStatement",
												"src": "20630:56:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "20705:25:6",
															"subExpression": {
																"baseExpression": {
																	"id": 2590,
																	"name": "uniqueIdExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "20706:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 2592,
																"indexExpression": {
																	"id": 2591,
																	"name": "uniqueId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2565,
																	"src": "20721:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20706:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e6971756520696420657869737473",
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20732:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b",
																"typeString": "literal_string \"Unique id exists\""
															},
															"value": "Unique id exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b",
																"typeString": "literal_string \"Unique id exists\""
															}
														],
														"id": 2589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20697:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20697:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2596,
												"nodeType": "ExpressionStatement",
												"src": "20697:54:6"
											},
											{
												"assignments": [
													2598
												],
												"declarations": [
													{
														"constant": false,
														"id": 2598,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "20772:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2694,
														"src": "20764:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2597,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20764:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2601,
												"initialValue": {
													"expression": {
														"id": 2599,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "20781:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "20781:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20764:27:6"
											},
											{
												"assignments": [
													2603
												],
												"declarations": [
													{
														"constant": false,
														"id": 2603,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "20810:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 2694,
														"src": "20802:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2602,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20802:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2607,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2604,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "20818:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Take3Token_$2696_$",
																"typeString": "type(contract super Take3Token)"
															}
														},
														"id": 2605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "20818:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20818:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20802:29:6"
											},
											{
												"assignments": [
													2609
												],
												"declarations": [
													{
														"constant": false,
														"id": 2609,
														"mutability": "mutable",
														"name": "permitTxHash",
														"nameLocation": "20852:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 2694,
														"src": "20844:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2608,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "20844:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2621,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2613,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2603,
																	"src": "20902:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2614,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2598,
																	"src": "20909:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2615,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2563,
																	"src": "20917:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2616,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2567,
																	"src": "20928:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2617,
																	"name": "uniqueId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2565,
																	"src": "20936:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2618,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2569,
																	"src": "20946:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2611,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20891:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "20891:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20891:64:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2610,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "20867:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20867:99:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20844:122:6"
											},
											{
												"assignments": [
													2623
												],
												"declarations": [
													{
														"constant": false,
														"id": 2623,
														"mutability": "mutable",
														"name": "lastAddr",
														"nameLocation": "20987:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 2694,
														"src": "20979:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2622,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20979:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2628,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21006:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "20998:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2624,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20998:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 2627,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20998:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20979:29:6"
											},
											{
												"assignments": [
													2630
												],
												"declarations": [
													{
														"constant": false,
														"id": 2630,
														"mutability": "mutable",
														"name": "verifiedSigners",
														"nameLocation": "21025:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 2694,
														"src": "21019:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2629,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "21019:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2632,
												"initialValue": {
													"hexValue": "30",
													"id": 2631,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21043:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21019:25:6"
											},
											{
												"body": {
													"id": 2674,
													"nodeType": "Block",
													"src": "21093:224:6",
													"statements": [
														{
															"assignments": [
																2645
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2645,
																	"mutability": "mutable",
																	"name": "recovered",
																	"nameLocation": "21116:9:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 2674,
																	"src": "21108:17:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2644,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21108:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2658,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2647,
																		"name": "permitTxHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2609,
																		"src": "21138:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2648,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2572,
																			"src": "21152:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																				"typeString": "uint8[] memory"
																			}
																		},
																		"id": 2650,
																		"indexExpression": {
																			"id": 2649,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2634,
																			"src": "21154:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21152:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2651,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2575,
																			"src": "21158:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 2653,
																		"indexExpression": {
																			"id": 2652,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2634,
																			"src": "21160:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21158:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2654,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2578,
																			"src": "21164:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 2656,
																		"indexExpression": {
																			"id": 2655,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2634,
																			"src": "21166:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21164:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2646,
																	"name": "ecrecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967290,
																	"src": "21128:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																	}
																},
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21128:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21108:61:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2659,
																		"name": "recovered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2645,
																		"src": "21188:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2660,
																		"name": "lastAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2623,
																		"src": "21200:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "21188:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2662,
																		"name": "_mapSigners",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "21212:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2664,
																	"indexExpression": {
																		"id": 2663,
																		"name": "recovered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2645,
																		"src": "21224:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21212:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "21188:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2669,
															"nodeType": "IfStatement",
															"src": "21184:86:6",
															"trueBody": {
																"expression": {
																	"id": 2667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "21253:17:6",
																	"subExpression": {
																		"id": 2666,
																		"name": "verifiedSigners",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2630,
																		"src": "21253:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 2668,
																"nodeType": "ExpressionStatement",
																"src": "21253:17:6"
															}
														},
														{
															"expression": {
																"id": 2672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2670,
																	"name": "lastAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2623,
																	"src": "21285:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2671,
																	"name": "recovered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2645,
																	"src": "21296:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "21285:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2673,
															"nodeType": "ExpressionStatement",
															"src": "21285:20:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2637,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2634,
														"src": "21074:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2638,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2572,
															"src": "21078:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																"typeString": "uint8[] memory"
															}
														},
														"id": 2639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "21078:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21074:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2675,
												"initializationExpression": {
													"assignments": [
														2634
													],
													"declarations": [
														{
															"constant": false,
															"id": 2634,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "21067:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 2675,
															"src": "21060:8:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"typeName": {
																"id": 2633,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "21060:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2636,
													"initialValue": {
														"hexValue": "30",
														"id": 2635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21071:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "21060:12:6"
												},
												"loopExpression": {
													"expression": {
														"id": 2642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "21088:3:6",
														"subExpression": {
															"id": 2641,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2634,
															"src": "21088:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 2643,
													"nodeType": "ExpressionStatement",
													"src": "21088:3:6"
												},
												"nodeType": "ForStatement",
												"src": "21055:262:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2677,
																"name": "verifiedSigners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2630,
																"src": "21337:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "33",
																"id": 2678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21356:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "21337:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207369676e657273",
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21359:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67",
																"typeString": "literal_string \"Invalid signers\""
															},
															"value": "Invalid signers"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67",
																"typeString": "literal_string \"Invalid signers\""
															}
														],
														"id": 2676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21329:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21329:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2682,
												"nodeType": "ExpressionStatement",
												"src": "21329:48:6"
											},
											{
												"expression": {
													"id": 2687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2683,
															"name": "uniqueIdExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "21390:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 2685,
														"indexExpression": {
															"id": 2684,
															"name": "uniqueId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2565,
															"src": "21405:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21390:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21417:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "21390:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2688,
												"nodeType": "ExpressionStatement",
												"src": "21390:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2690,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "21441:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2691,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2567,
															"src": "21452:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2689,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "21432:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 2692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21432:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2693,
												"nodeType": "ExpressionStatement",
												"src": "21432:27:6"
											}
										]
									},
									"functionSelector": "4990560f",
									"id": 2695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_permitTransfer",
									"nameLocation": "20389:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "20423:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "20415:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "uniqueId",
												"nameLocation": "20451:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "20443:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20443:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20478:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "20470:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20470:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "20503:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "20495:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20495:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "20537:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "20522:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 2570,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "20522:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2571,
													"nodeType": "ArrayTypeName",
													"src": "20522:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "20566:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "20549:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2573,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "20549:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2574,
													"nodeType": "ArrayTypeName",
													"src": "20549:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "20595:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "20578:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2576,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "20578:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2577,
													"nodeType": "ArrayTypeName",
													"src": "20578:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20404:199:6"
									},
									"returnParameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20619:0:6"
									},
									"scope": 2696,
									"src": "20380:1087:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2697,
							"src": "385:21085:6",
							"usedErrors": []
						}
					],
					"src": "33:21439:6"
				},
				"id": 6
			}
		}
	}
}