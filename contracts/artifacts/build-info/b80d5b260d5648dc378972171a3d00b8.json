{
	"id": "b80d5b260d5648dc378972171a3d00b8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DeAnt3Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\n\r\ncontract DeAnt3Token is ERC20CappedUpgradeable, OwnableUpgradeable {\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n    uint256 private _rewardAmt;\r\n    uint256 private _cap;\r\n    uint256 private _taxFee;\r\n    uint256 public totalBurned;\r\n    address[] private _signers;\r\n    mapping(address => bool) public _mapSigners;\r\n    mapping(uint256 => bool) public uniqueIdExists;\r\n    mapping(address => uint256) public userTotalBurned;\r\n\r\n    function initialize(\r\n        string memory _NAME,\r\n        string memory _SYMBOL,\r\n        uint8 _DECIMALS,\r\n        uint256 cap,\r\n        uint256 initialBalance,\r\n        uint256 taxFee\r\n    ) public initializer {\r\n        __Ownable_init();\r\n        __ERC20_init(_NAME, _SYMBOL);\r\n        __ERC20Capped_init(cap * 10**_DECIMALS);\r\n        _name = _NAME;\r\n        _symbol = _SYMBOL;\r\n        _decimals = _DECIMALS;\r\n        _rewardAmt = 0.1 ether;\r\n        _cap = cap;\r\n        _taxFee = taxFee;\r\n        _mint(address(this), initialBalance);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function getRewardAmt() public view returns (uint256) {\r\n        return _rewardAmt;\r\n    }\r\n\r\n    function setRewardAmtInWei(uint256 _newAmt) external onlyOwner {\r\n        _rewardAmt = _newAmt;\r\n    }\r\n\r\n    function getTaxFee() public view returns (uint256) {\r\n        return _taxFee;\r\n    }\r\n\r\n    function setTaxFee(uint256 _newTaxFee) external onlyOwner {\r\n        _taxFee = _newTaxFee;\r\n    }\r\n\r\n    function signers() external view returns (address[] memory) {\r\n        return _signers;\r\n    }\r\n\r\n    function setSigners(address[] memory signers_) external virtual onlyOwner {\r\n        _updateMap(_signers, false, _mapSigners);\r\n        delete _signers;\r\n        _signers = signers_;\r\n        _updateMap(signers_, true, _mapSigners);\r\n    }\r\n\r\n    function mapSigner(address signer) external view returns (bool) {\r\n        return _mapSigners[signer];\r\n    }\r\n\r\n    function _updateMap(\r\n        address[] memory arr,\r\n        bool status,\r\n        mapping(address => bool) storage map\r\n    ) internal {\r\n        for (uint64 i = 0; i < arr.length; i++) {\r\n            map[arr[i]] = status;\r\n        }\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        if (msg.sender == owner()) {\r\n            super.transfer(recipient, amount);\r\n        } else {\r\n            uint256 burnAmt = _calculateBurnAmt(amount);\r\n            _burnAndUpdate(msg.sender, burnAmt);\r\n            uint256 newAmt = amount - burnAmt;\r\n            super.transfer(recipient, newAmt);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        uint256 newAmt = _calculateBurnAmt(amount);\r\n        _burnAndUpdate(from, newAmt);\r\n        super.transferFrom(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function _calculateBurnAmt(uint256 amount) private view returns (uint256) {\r\n        uint256 burnAmt = (amount * _taxFee) / 100;\r\n        return burnAmt;\r\n    }\r\n\r\n    function _burnAndUpdate(address account, uint256 amount) private {\r\n        _burn(account, amount);\r\n        totalBurned = totalBurned + amount;\r\n        userTotalBurned[account] = userTotalBurned[account] + amount;\r\n    }\r\n\r\n    function permitMint(\r\n        address payable recipient,\r\n        uint256 uniqueId,\r\n        uint256 amount,\r\n        uint256 deadline,\r\n        uint8[] memory v,\r\n        bytes32[] memory r,\r\n        bytes32[] memory s\r\n    ) public virtual {\r\n        require(deadline >= block.timestamp, \"Expired deadline\");\r\n        require(!uniqueIdExists[uniqueId], \"Unique id exists\");\r\n\r\n        address spender = msg.sender;\r\n        address owner = super.owner();\r\n\r\n        bytes32 permitTxHash = keccak256(\r\n            abi.encodePacked(\r\n                bytes1(0x19),\r\n                bytes1(0),\r\n                owner,\r\n                spender,\r\n                recipient,\r\n                amount,\r\n                uniqueId,\r\n                deadline\r\n            )\r\n        );\r\n\r\n        address lastAddr = address(0);\r\n        uint8 verifiedSigners = 0;\r\n        for (uint64 i = 0; i < v.length; i++) {\r\n            address recovered = ecrecover(permitTxHash, v[i], r[i], s[i]);\r\n            if (recovered > lastAddr && _mapSigners[recovered])\r\n                verifiedSigners++;\r\n            lastAddr = recovered;\r\n        }\r\n\r\n        require(verifiedSigners >= 2, \"Invalid signers\");\r\n        uniqueIdExists[uniqueId] = true;\r\n\r\n        (bool success, ) = recipient.call{value: _rewardAmt * amount}(\"\");\r\n        require(success, \"Failed to send Mech\");\r\n        super._mint(recipient, amount);\r\n    }\r\n\r\n    // function _permitMintTest(address payable recipient, uint256 amount)\r\n    //     public\r\n    //     virtual\r\n    // {\r\n    //     super._mint(recipient, amount);\r\n    //     sendMech(recipient, 0.1 ether);\r\n    // }\r\n\r\n    // function sendMech(address payable _to, uint256 _amount) public {\r\n    //     // Note that \"to\" is declared as payable\r\n    //     (bool success, ) = _to.call{value: _amount}(\"\");\r\n    //     require(success, \"Failed to send Ether\");\r\n    // }\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/ERC20Capped.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n *\n * @custom:storage-size 51\n */\nabstract contract ERC20CappedUpgradeable is Initializable, ERC20Upgradeable {\n    uint256 private _cap;\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    function __ERC20Capped_init(uint256 cap_) internal onlyInitializing {\n        __ERC20Capped_init_unchained(cap_);\n    }\n\n    function __ERC20Capped_init_unchained(uint256 cap_) internal onlyInitializing {\n        require(cap_ > 0, \"ERC20Capped: cap is 0\");\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {ERC20-_mint}.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\");\n        super._mint(account, amount);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1367,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1482:13245  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1482:13245  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1240:1427   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3668:3680  _totalSupply */\n      sload(0x35)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":4969:4994   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":4823:5000   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5529:5815  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3430:3521  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3512:3514  18 */\n      0x12\n        /* \"#utility.yul\":5147:5183   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5135:5137   */\n      0x20\n        /* \"#utility.yul\":5120:5138   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3430:3521  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":5005:5189   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6210:6444  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3745:3870  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3863  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3819:3826  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3863  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3854  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3863  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3745:3870  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2704:2806  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4066:4255  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2560  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2579:2584  _name */\n      0x36\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2584  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4853:4857  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4939  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4923:4930  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4932:4938  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4915  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4939  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4956:4960  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5529:5815  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5656:5660  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5750  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5728:5732  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5743:5749  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5727  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5750  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5787  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5770:5774  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5776:5778  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5780:5786  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5769  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5787  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5804:5808  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5529:5815  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6210:6444  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6298:6302  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6416  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6368:6375  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6405:6415  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6402  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6368:6375  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6386  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6402  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6415  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6360  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6416  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2704:2806  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2760:2773  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2799  _symbol */\n      0x37\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2785:2799  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7024:7028  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7024:7028  bool */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7130  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7122:7129  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7114  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7130  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7078:7130  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7168:7183  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7148:7164  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7148:7183  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4619:4621   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4601:4622   */\n      mstore\n        /* \"#utility.yul\":4658:4660   */\n      0x25\n        /* \"#utility.yul\":4638:4656   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4631:4661   */\n      mstore\n        /* \"#utility.yul\":4697:4731   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4677:4695   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4670:4732   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4748:4766   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4741:4776   */\n      mstore\n        /* \"#utility.yul\":4793:4812   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7319  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7268:7273  owner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7275:7282  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7303:7318  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7284:7300  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7284:7318  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7267  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7319  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4066:4255  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4145:4149  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4227  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4216:4218  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4220:4226  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4208  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4227  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4446  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4402:4409  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4446  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4439  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4446  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4455  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10447:10817  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10578:10597  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4196:4217   */\n      mstore\n        /* \"#utility.yul\":4253:4255   */\n      0x24\n        /* \"#utility.yul\":4233:4251   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4226:4256   */\n      mstore\n        /* \"#utility.yul\":4292:4326   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4272:4290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4265:4327   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4343:4361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4336:4370   */\n      mstore\n        /* \"#utility.yul\":4387:4406   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4012:4412   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10656:10677  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":2438:2836   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10745  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10738  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10745  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10754  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10763  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10778:10810  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":4969:4994   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10778:10810  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10778:10810  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10447:10817  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11098:11539  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11228:11252  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11255:11280  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11265:11270  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11272:11279  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11255:11264  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11255:11280  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11228:11280  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11294:11310  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11294:11331  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11290:11533  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11375:11381  amount */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11371  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11381  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x1d\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3152   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3153   */\n      mstore\n        /* \"#utility.yul\":3170:3188   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":2841:3194   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11457:11508  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11466:11471  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11473:11480  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11501:11507  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11482:11498  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11482:11507  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11457:11465  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11457:11508  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11218:11539  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11098:11539  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7812:8463  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7938:7956  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3808:3810   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3790:3811   */\n      mstore\n        /* \"#utility.yul\":3847:3849   */\n      0x25\n        /* \"#utility.yul\":3827:3845   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3820:3850   */\n      mstore\n        /* \"#utility.yul\":3886:3920   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3866:3884   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3859:3921   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3937:3955   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3930:3965   */\n      mstore\n        /* \"#utility.yul\":3982:4001   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3606:4007   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8016:8032  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":2034:2433   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8169  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8132:8151  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8169  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8163  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8169  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8187:8208  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3401:3403   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3383:3404   */\n      mstore\n        /* \"#utility.yul\":3440:3442   */\n      0x26\n        /* \"#utility.yul\":3420:3438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3413:3443   */\n      mstore\n        /* \"#utility.yul\":3479:3513   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3459:3477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3452:3514   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3530:3548   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3523:3559   */\n      mstore\n        /* \"#utility.yul\":3576:3595   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":3199:3601   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8300  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8294  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8300  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8303:8323  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8323  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8356  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8366  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8317:8323  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8300  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8366  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8317:8323  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8366  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8397:8399  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8391:8395  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8401:8407  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":4969:4994   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n      swap1\n        /* \"#utility.yul\":4823:5000   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8419:8456  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12123:12244  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_142:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_144:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_146:\n        /* \"#utility.yul\":343:372   */\n      tag_147\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_142\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_60:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_149:\n        /* \"#utility.yul\":551:580   */\n      tag_150\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_142\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_151\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_142\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_153:\n        /* \"#utility.yul\":833:862   */\n      tag_154\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_142\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_155\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_142\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_157:\n        /* \"#utility.yul\":1149:1178   */\n      tag_158\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_142\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_161:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_161)\n    tag_163:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1952   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1952   */\n    tag_164:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1432:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5194:5419   */\n    tag_88:\n        /* \"#utility.yul\":5234:5237   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      dup3\n        /* \"#utility.yul\":5261:5267   */\n      not\n        /* \"#utility.yul\":5258:5259   */\n      dup3\n        /* \"#utility.yul\":5255:5268   */\n      gt\n        /* \"#utility.yul\":5252:5388   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":5310:5320   */\n      0x4e487b71\n        /* \"#utility.yul\":5305:5308   */\n      0xe0\n        /* \"#utility.yul\":5301:5321   */\n      shl\n        /* \"#utility.yul\":5298:5299   */\n      0x00\n        /* \"#utility.yul\":5291:5322   */\n      mstore\n        /* \"#utility.yul\":5345:5349   */\n      0x11\n        /* \"#utility.yul\":5342:5343   */\n      0x04\n        /* \"#utility.yul\":5335:5350   */\n      mstore\n        /* \"#utility.yul\":5373:5377   */\n      0x24\n        /* \"#utility.yul\":5370:5371   */\n      0x00\n        /* \"#utility.yul\":5363:5378   */\n      revert\n        /* \"#utility.yul\":5252:5388   */\n    tag_175:\n      pop\n        /* \"#utility.yul\":5404:5413   */\n      add\n      swap1\n        /* \"#utility.yul\":5194:5419   */\n      jump\t// out\n        /* \"#utility.yul\":5424:5804   */\n    tag_65:\n        /* \"#utility.yul\":5503:5504   */\n      0x01\n        /* \"#utility.yul\":5499:5511   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5546:5558   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5567:5628   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":5621:5625   */\n      0x7f\n        /* \"#utility.yul\":5613:5619   */\n      dup3\n        /* \"#utility.yul\":5609:5626   */\n      and\n        /* \"#utility.yul\":5599:5626   */\n      swap2\n      pop\n        /* \"#utility.yul\":5567:5628   */\n    tag_177:\n        /* \"#utility.yul\":5674:5676   */\n      0x20\n        /* \"#utility.yul\":5666:5672   */\n      dup3\n        /* \"#utility.yul\":5663:5677   */\n      lt\n        /* \"#utility.yul\":5643:5661   */\n      dup2\n        /* \"#utility.yul\":5640:5678   */\n      eq\n        /* \"#utility.yul\":5637:5798   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":5720:5730   */\n      0x4e487b71\n        /* \"#utility.yul\":5715:5718   */\n      0xe0\n        /* \"#utility.yul\":5711:5731   */\n      shl\n        /* \"#utility.yul\":5708:5709   */\n      0x00\n        /* \"#utility.yul\":5701:5732   */\n      mstore\n        /* \"#utility.yul\":5755:5759   */\n      0x22\n        /* \"#utility.yul\":5752:5753   */\n      0x04\n        /* \"#utility.yul\":5745:5760   */\n      mstore\n        /* \"#utility.yul\":5783:5787   */\n      0x24\n        /* \"#utility.yul\":5780:5781   */\n      0x00\n        /* \"#utility.yul\":5773:5788   */\n      revert\n        /* \"#utility.yul\":5637:5798   */\n    tag_178:\n      pop\n        /* \"#utility.yul\":5424:5804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202c9764536db72bb379328f400ac3e71662226b9099542cb3fbcc2d15e05ba25764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610887806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061079b565b60405180910390f35b6100df6100da366004610771565b610232565b60405190151581526020016100c3565b6035545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df610131366004610771565b61026e565b6100f36101443660046106e0565b6001600160a01b031660009081526033602052604090205490565b6100b6610290565b6100df610175366004610771565b61029f565b6100df610188366004610771565b61031f565b6100f361019b366004610702565b61032d565b6060603680546101af90610816565b80601f01602080910402602001604051908101604052809291908181526020018280546101db90610816565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107f0565b610358565b6060603780546101af90610816565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260336020526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061066b9084906107f0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b80356001600160a01b03811681146106db57600080fd5b919050565b6000602082840312156106f257600080fd5b6106fb826106c4565b9392505050565b6000806040838503121561071557600080fd5b61071e836106c4565b915061072c602084016106c4565b90509250929050565b60008060006060848603121561074a57600080fd5b610753846106c4565b9250610761602085016106c4565b9150604084013590509250925092565b6000806040838503121561078457600080fd5b61078d836106c4565b946020939093013593505050565b600060208083528351808285015260005b818110156107c8578581018301518582016040015282016107ac565b818111156107da576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561081157634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061082a57607f821691505b6020821081141561084b57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212202c9764536db72bb379328f400ac3e71662226b9099542cb3fbcc2d15e05ba25764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x887 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x816 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x816 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6FB DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71E DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x72C PUSH1 0x20 DUP5 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP5 PUSH2 0x6C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x761 PUSH1 0x20 DUP6 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78D DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7AC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x811 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x82A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SWAP8 PUSH5 0x536DB72BB3 PUSH26 0x328F400AC3E71662226B9099542CB3FBCC2D15E05BA25764736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "1482:11763:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_887": {
									"entryPoint": null,
									"id": 887,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_822": {
									"entryPoint": 856,
									"id": 822,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_876": {
									"entryPoint": null,
									"id": 876,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1353": {
									"entryPoint": null,
									"id": 1353,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_865": {
									"entryPoint": 1148,
									"id": 865,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_649": {
									"entryPoint": 1270,
									"id": 649,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_444": {
									"entryPoint": 813,
									"id": 444,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_469": {
									"entryPoint": 562,
									"id": 469,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_377": {
									"entryPoint": null,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_572": {
									"entryPoint": 671,
									"id": 572,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_531": {
									"entryPoint": 622,
									"id": 531,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_357": {
									"entryPoint": 416,
									"id": 357,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_367": {
									"entryPoint": 656,
									"id": 367,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_387": {
									"entryPoint": null,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_502": {
									"entryPoint": 586,
									"id": 502,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_426": {
									"entryPoint": 799,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:9"
															},
															"nodeType": "YulIf",
															"src": "111:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "14:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:9"
															},
															"nodeType": "YulIf",
															"src": "272:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:9",
														"type": ""
													}
												],
												"src": "192:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:9"
															},
															"nodeType": "YulIf",
															"src": "480:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:9",
														"type": ""
													}
												],
												"src": "383:260:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:9"
															},
															"nodeType": "YulIf",
															"src": "762:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:9",
														"type": ""
													}
												],
												"src": "648:328:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:9"
															},
															"nodeType": "YulIf",
															"src": "1078:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:9",
														"type": ""
													}
												],
												"src": "981:254:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:9",
														"type": ""
													}
												],
												"src": "1240:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:9",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:9",
																"statements": []
															},
															"src": "1712:140:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:9"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:9",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:9"
															},
															"nodeType": "YulIf",
															"src": "1861:91:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:9",
														"type": ""
													}
												],
												"src": "1432:597:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:9",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:9",
														"type": ""
													}
												],
												"src": "2034:399:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:9",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:9",
														"type": ""
													}
												],
												"src": "2438:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:9"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:31:9",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3162:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3174:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3170:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3162:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:9",
														"type": ""
													}
												],
												"src": "2841:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3373:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3383:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3424:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3420:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3440:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3413:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3463:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3474:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3479:34:9",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3452:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3534:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3545:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:18:9"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3550:8:9",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3523:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3568:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3580:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3591:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3568:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3350:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3364:4:9",
														"type": ""
													}
												],
												"src": "3199:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3780:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3797:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3790:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3790:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3842:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3870:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3881:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3886:34:9",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3859:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3941:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3952:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3937:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3937:18:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3957:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3930:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3930:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3930:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3974:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3982:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3974:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3757:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3771:4:9",
														"type": ""
													}
												],
												"src": "3606:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4186:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4203:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4237:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4248:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4233:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4253:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4226:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4226:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4276:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4287:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4292:34:9",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4358:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4343:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:18:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4363:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4336:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4379:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4391:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4402:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4387:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4163:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4177:4:9",
														"type": ""
													}
												],
												"src": "4012:400:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4608:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4619:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4601:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4601:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4601:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4642:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4653:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4658:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4631:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4631:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4681:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4692:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4677:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4677:18:9"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4697:34:9",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4670:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4670:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4752:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4763:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4748:18:9"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4768:7:9",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4741:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4741:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4785:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4568:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4582:4:9",
														"type": ""
													}
												],
												"src": "4417:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4924:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4934:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4946:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4957:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4976:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4987:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4969:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4969:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4893:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4904:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4915:4:9",
														"type": ""
													}
												],
												"src": "4823:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5102:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5112:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5124:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5120:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5120:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5112:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5154:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5169:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5177:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5165:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5165:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5147:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5147:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5147:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5071:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5082:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5093:4:9",
														"type": ""
													}
												],
												"src": "5005:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5242:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5277:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5298:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5305:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5310:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5301:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5301:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5291:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5291:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5291:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5342:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5345:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5335:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5335:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5335:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5370:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5373:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5363:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5363:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5363:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5258:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5265:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5261:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5261:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5255:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:13:9"
															},
															"nodeType": "YulIf",
															"src": "5252:136:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5397:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5408:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5411:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5404:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5397:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5225:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5228:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5234:3:9",
														"type": ""
													}
												],
												"src": "5194:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5479:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5489:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5503:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5506:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5499:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5489:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5520:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5550:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5556:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5546:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5546:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5524:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5597:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5599:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5613:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5621:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5609:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5609:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5599:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5577:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5570:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5570:26:9"
															},
															"nodeType": "YulIf",
															"src": "5567:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5687:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5708:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5715:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5720:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5711:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5711:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5701:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5701:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5701:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5752:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5755:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5745:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5745:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5745:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5780:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5783:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5773:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5773:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5643:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5666:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5674:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5663:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5640:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:38:9"
															},
															"nodeType": "YulIf",
															"src": "5637:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5459:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5468:6:9",
														"type": ""
													}
												],
												"src": "5424:380:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061079b565b60405180910390f35b6100df6100da366004610771565b610232565b60405190151581526020016100c3565b6035545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df610131366004610771565b61026e565b6100f36101443660046106e0565b6001600160a01b031660009081526033602052604090205490565b6100b6610290565b6100df610175366004610771565b61029f565b6100df610188366004610771565b61031f565b6100f361019b366004610702565b61032d565b6060603680546101af90610816565b80601f01602080910402602001604051908101604052809291908181526020018280546101db90610816565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107f0565b610358565b6060603780546101af90610816565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260336020526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061066b9084906107f0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b80356001600160a01b03811681146106db57600080fd5b919050565b6000602082840312156106f257600080fd5b6106fb826106c4565b9392505050565b6000806040838503121561071557600080fd5b61071e836106c4565b915061072c602084016106c4565b90509250929050565b60008060006060848603121561074a57600080fd5b610753846106c4565b9250610761602085016106c4565b9150604084013590509250925092565b6000806040838503121561078457600080fd5b61078d836106c4565b946020939093013593505050565b600060208083528351808285015260005b818110156107c8578581018301518582016040015282016107ac565b818111156107da576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561081157634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061082a57607f821691505b6020821081141561084b57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212202c9764536db72bb379328f400ac3e71662226b9099542cb3fbcc2d15e05ba25764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x816 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x816 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6FB DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71E DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x72C PUSH1 0x20 DUP5 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP5 PUSH2 0x6C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x761 PUSH1 0x20 DUP6 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78D DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7AC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x811 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x82A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SWAP8 PUSH5 0x536DB72BB3 PUSH26 0x328F400AC3E71662226B9099542CB3FBCC2D15E05BA25764736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "1482:11763:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:9;;1398:22;1380:41;;1368:2;1353:18;4770:197:2;1240:187:9;3581:106:2;3668:12;;3581:106;;;4969:25:9;;;4957:2;4942:18;3581:106:2;4823:177:9;5529:286:2;;;;;;:::i;:::-;;:::i;3430:91::-;;;3512:2;5147:36:9;;5135:2;5120:18;3430:91:2;5005:184:9;6210:234:2;;;;;;:::i;:::-;;:::i;3745:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;2704:102;;;:::i;6931:427::-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;4313:149::-;;;;;;:::i;:::-;;:::i;2493:98::-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:7;4907:32:2;929:10:7;4923:7:2;4932:6;4907:8;:32::i;:::-;-1:-1:-1;4956:4:2;;4770:197;-1:-1:-1;;;4770:197:2:o;5529:286::-;5656:4;929:10:7;5712:38:2;5728:4;929:10:7;5743:6:2;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:2;;5529:286;-1:-1:-1;;;;5529:286:2:o;6210:234::-;6298:4;929:10:7;6352:64:2;929:10:7;6368:7:2;6405:10;6377:25;929:10:7;6368:7:2;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;2704:102::-;2760:13;2792:7;2785:14;;;;;:::i;6931:427::-;7024:4;929:10:7;7024:4:2;7105:25;929:10:7;7122:7:2;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:2;;4619:2:9;7140:85:2;;;4601:21:9;4658:2;4638:18;;;4631:30;4697:34;4677:18;;;4670:62;-1:-1:-1;;;4748:18:9;;;4741:35;4793:19;;7140:85:2;;;;;;;;;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;4066:189::-;4145:4;929:10:7;4199:28:2;929:10:7;4216:2:2;4220:6;4199:9;:28::i;4313:149::-;-1:-1:-1;;;;;4428:18:2;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;10447:370::-;-1:-1:-1;;;;;10578:19:2;;10570:68;;;;-1:-1:-1;;;10570:68:2;;4214:2:9;10570:68:2;;;4196:21:9;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;-1:-1:-1;;;4343:18:9;;;4336:34;4387:19;;10570:68:2;4012:400:9;10570:68:2;-1:-1:-1;;;;;10656:21:2;;10648:68;;;;-1:-1:-1;;;10648:68:2;;2640:2:9;10648:68:2;;;2622:21:9;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:9;;;2762:32;2811:19;;10648:68:2;2438:398:9;10648:68:2;-1:-1:-1;;;;;10727:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;4969:25:9;;;10778:32:2;;4942:18:9;10778:32:2;;;;;;;10447:370;;;:::o;11098:441::-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:2;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:2;;3043:2:9;11347:68:2;;;3025:21:9;3082:2;3062:18;;;3055:30;3121:31;3101:18;;;3094:59;3170:18;;11347:68:2;2841:353:9;11347:68:2;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11218:321;11098:441;;;:::o;7812:651::-;-1:-1:-1;;;;;7938:18:2;;7930:68;;;;-1:-1:-1;;;7930:68:2;;3808:2:9;7930:68:2;;;3790:21:9;3847:2;3827:18;;;3820:30;3886:34;3866:18;;;3859:62;-1:-1:-1;;;3937:18:9;;;3930:35;3982:19;;7930:68:2;3606:401:9;7930:68:2;-1:-1:-1;;;;;8016:16:2;;8008:64;;;;-1:-1:-1;;;8008:64:2;;2236:2:9;8008:64:2;;;2218:21:9;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:9;;;2358:33;2408:19;;8008:64:2;2034:399:9;8008:64:2;-1:-1:-1;;;;;8154:15:2;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:2;;3401:2:9;8179:72:2;;;3383:21:9;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:9;;;3523:36;3576:19;;8179:72:2;3199:402:9;8179:72:2;-1:-1:-1;;;;;8285:15:2;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:2;8391:4;-1:-1:-1;;;;;8382:26:2;;8401:6;8382:26;;;;4969:25:9;;4957:2;4942:18;;4823:177;8382:26:2;;;;;;;;8419:37;12123:121;14:173:9;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:9:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:9:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:9;1992:15;-1:-1:-1;;1988:29:9;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:9:o;5194:225::-;5234:3;5265:1;5261:6;5258:1;5255:13;5252:136;;;5310:10;5305:3;5301:20;5298:1;5291:31;5345:4;5342:1;5335:15;5373:4;5370:1;5363:15;5252:136;-1:-1:-1;5404:9:9;;5194:225::o;5424:380::-;5503:1;5499:12;;;;5546;;;5567:61;;5621:4;5613:6;5609:17;5599:27;;5567:61;5674:2;5666:6;5663:14;5643:18;5640:38;5637:161;;;5720:10;5715:3;5711:20;5708:1;5701:31;5755:4;5752:1;5745:15;5783:4;5780:1;5773:15;5637:161;;5424:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "436600",
								"executionCost": "474",
								"totalCost": "437074"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2559",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51264",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__ERC20_init(string memory,string memory)": "infinite",
								"__ERC20_init_unchained(string memory,string memory)": "infinite",
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c9764536db72bb379328f400ac3e71662226b9099542cb3fbcc2d15e05ba25764736f6c63430008070033",
									".code": [
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1240,
											"end": 1427,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "PUSH",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4823,
											"end": 5000,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3514,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5147,
											"end": 5183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5147,
											"end": 5183,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 5005,
											"end": 5189,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3826,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2560,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2579,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4923,
											"end": 4930,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4938,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4907,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4956,
											"end": 4960,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4956,
											"end": 4960,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5728,
											"end": 5732,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5749,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5712,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5770,
											"end": 5774,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5778,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5760,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5804,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5804,
											"end": 5808,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6352,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6405,
											"end": 6415,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6352,
											"end": 6416,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2792,
											"end": 2799,
											"name": "PUSH",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7024,
											"end": 7028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7024,
											"end": 7028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7129,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7078,
											"end": 7130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7078,
											"end": 7130,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7168,
											"end": 7183,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7183,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4601,
											"end": 4622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4660,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4631,
											"end": 4661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4731,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4732,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4741,
											"end": 4776,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7268,
											"end": 7273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7275,
											"end": 7282,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7303,
											"end": 7318,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7300,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7259,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4145,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4220,
											"end": 4226,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4199,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4199,
											"end": 4227,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4402,
											"end": 4409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4439,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10578,
											"end": 10597,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10578,
											"end": 10597,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4256,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4292,
											"end": 4326,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4336,
											"end": 4370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4012,
											"end": 4412,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10656,
											"end": 10677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10677,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2438,
											"end": 2836,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10738,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10763,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10763,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11228,
											"end": 11252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11265,
											"end": 11270,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11272,
											"end": 11279,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11255,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11228,
											"end": 11280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11228,
											"end": 11280,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11294,
											"end": 11310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11331,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11290,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11290,
											"end": 11533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11375,
											"end": 11381,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11355,
											"end": 11371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11355,
											"end": 11381,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11355,
											"end": 11381,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 3153,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2841,
											"end": 3194,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11457,
											"end": 11508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11466,
											"end": 11471,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11473,
											"end": 11480,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11501,
											"end": 11507,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11482,
											"end": 11498,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11482,
											"end": 11507,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11457,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11457,
											"end": 11508,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11457,
											"end": 11508,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11457,
											"end": 11508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11218,
											"end": 11539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7812,
											"end": 8463,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7812,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3790,
											"end": 3811,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3850,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 3920,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3859,
											"end": 3921,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3965,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3606,
											"end": 4007,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8016,
											"end": 8032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8016,
											"end": 8032,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2433,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8132,
											"end": 8151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8163,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3404,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 3442,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3413,
											"end": 3443,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3452,
											"end": 3514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3559,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3199,
											"end": 3601,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8294,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8303,
											"end": 8323,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8303,
											"end": 8323,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8303,
											"end": 8323,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8323,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8397,
											"end": 8399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8395,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4823,
											"end": 5000,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8419,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12123,
											"end": 12244,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5234,
											"end": 5237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5258,
											"end": 5259,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5255,
											"end": 5268,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5320,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 5305,
											"end": 5308,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 5301,
											"end": 5321,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5291,
											"end": 5322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5345,
											"end": 5349,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 5342,
											"end": 5343,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5335,
											"end": 5350,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5373,
											"end": 5377,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5370,
											"end": 5371,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5378,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5504,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 5613,
											"end": 5619,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5609,
											"end": 5626,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5599,
											"end": 5626,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5599,
											"end": 5626,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5676,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5672,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5663,
											"end": 5677,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5640,
											"end": 5678,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5730,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 5715,
											"end": 5718,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5708,
											"end": 5709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5732,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5755,
											"end": 5759,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5745,
											"end": 5760,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5783,
											"end": 5787,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5773,
											"end": 5788,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1367,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 301,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 309,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 311,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 892,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol": {
				"ERC20CappedUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:storage-size": "51",
						"details": "Extension of {ERC20} that adds a cap to the supply of tokens.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:storage-size\":\"51\",\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":\"ERC20CappedUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":{\"keccak256\":\"0xc707bc7f15de49a0c4da261822a3075d8c171b3c08543fc8f0d0021b8d227b92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3c294a8ff16f223772b520a7b823dff54458ba98e6da4ffe9a3a427a16a47c6\",\"dweb:/ipfs/QmRbZ5hdJzUMVAai2Zpc8YdSuPWxeNPV1aiosRySrEuQpu\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1367,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 301,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 309,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 311,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 892,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							},
							{
								"astId": 982,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_cap",
								"offset": 0,
								"slot": "101",
								"type": "t_uint256"
							},
							{
								"astId": 1057,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"IERC20MetadataUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203d134b401d2a1a9a376bbb172f5dd5d23d0a9e28e88692922e0b1dd75edb983964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d134b401d2a1a9a376bbb172f5dd5d23d0a9e28e88692922e0b1dd75edb983964736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SGT 0x4B BLOCKHASH SAR 0x2A BYTE SWAP11 CALLDATACOPY PUSH12 0xBB172F5DD5D23D0A9E28E886 SWAP3 SWAP3 0x2E SIGNEXTEND SAR 0xD7 0x5E 0xDB SWAP9 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:7172:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:7172:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d134b401d2a1a9a376bbb172f5dd5d23d0a9e28e88692922e0b1dd75edb983964736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SGT 0x4B BLOCKHASH SAR 0x2A BYTE SWAP11 CALLDATACOPY PUSH12 0xBB172F5DD5D23D0A9E28E886 SWAP3 SWAP3 0x2E SIGNEXTEND SAR 0xD7 0x5E 0xDB SWAP9 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:7172:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d134b401d2a1a9a376bbb172f5dd5d23d0a9e28e88692922e0b1dd75edb983964736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1367,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DeAnt3Token.sol": {
				"DeAnt3Token": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_mapSigners",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardAmt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTaxFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_NAME",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_SYMBOL",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "_DECIMALS",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "initialBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "taxFee",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "mapSigner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "uniqueId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8[]",
									"name": "v",
									"type": "uint8[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "r",
									"type": "bytes32[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "s",
									"type": "bytes32[]"
								}
							],
							"name": "permitMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newAmt",
									"type": "uint256"
								}
							],
							"name": "setRewardAmtInWei",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "signers_",
									"type": "address[]"
								}
							],
							"name": "setSigners",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newTaxFee",
									"type": "uint256"
								}
							],
							"name": "setTaxFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signers",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uniqueIdExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userTotalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DeAnt3Token.sol\":243:5613  contract DeAnt3Token is ERC20CappedUpgradeable, OwnableUpgradeable {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DeAnt3Token.sol\":243:5613  contract DeAnt3Token is ERC20CappedUpgradeable, OwnableUpgradeable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xc4081a4c\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe4c97e6a\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe4c97e6a\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf66608fe\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf9342285\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xc4081a4c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd89135cd\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0xa457c2d7\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xac7fa3c6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb24a0893\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa3772662\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x313ce567\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x3de47e32\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x3de47e32\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x46f0975a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x18160ddd\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1e0d4ce9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2b9a1d3c\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x07c351dd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeAnt3Token.sol\":2178:2287  function mapSigner(address signer) external view returns (bool) {\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":2260:2279  _mapSigners[signer] */\n      and\n        /* \"contracts/DeAnt3Token.sol\":2236:2240  bool */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2260:2279  _mapSigners[signer] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":2260:2271  _mapSigners */\n      0xd2\n        /* \"contracts/DeAnt3Token.sol\":2260:2279  _mapSigners[signer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":2178:2287  function mapSigner(address signer) external view returns (bool) {\r... */\n      jump\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":8594:8608   */\n      swap1\n      iszero\n        /* \"#utility.yul\":8587:8609   */\n      iszero\n        /* \"#utility.yul\":8569:8610   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8557:8559   */\n      0x20\n        /* \"#utility.yul\":8542:8560   */\n      add\n        /* \"contracts/DeAnt3Token.sol\":2178:2287  function mapSigner(address signer) external view returns (bool) {\r... */\n      tag_43\n        /* \"#utility.yul\":8429:8616   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_46\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3668:3680  _totalSupply */\n      sload(0x35)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_59:\n      mload(0x40)\n        /* \"#utility.yul\":17606:17631   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":17594:17596   */\n      0x20\n        /* \"#utility.yul\":17579:17597   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_43\n        /* \"#utility.yul\":17460:17637   */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":662:712  mapping(address => uint256) public userTotalBurned */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_59\n      tag_65\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_65:\n      mstore(0x20, 0xd4)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/DeAnt3Token.sol\":3017:3323  function transferFrom(\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_46\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":721:1271  function initialize(\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/DeAnt3Token.sol\":1316:1416  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":1399:1408  _decimals */\n      sload(0xcc)\n        /* \"contracts/DeAnt3Token.sol\":1316:1416  function decimals() public view virtual override returns (uint8) {\r... */\n      mload(0x40)\n        /* \"contracts/DeAnt3Token.sol\":1399:1408  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":9176:9212   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9164:9166   */\n      0x20\n        /* \"#utility.yul\":9149:9167   */\n      add\n        /* \"contracts/DeAnt3Token.sol\":1316:1416  function decimals() public view virtual override returns (uint8) {\r... */\n      tag_43\n        /* \"#utility.yul\":9024:9218   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":929:1010  function cap() public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":999:1003  _cap */\n      sload(0x65)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":929:1010  function cap() public view virtual returns (uint256) {... */\n      jump(tag_59)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6210:6444  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_46\n      tag_90\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":559:602  mapping(address => bool) public _mapSigners */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_46\n      tag_95\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_95:\n      mstore(0x20, 0xd2)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/DeAnt3Token.sol\":1829:1923  function signers() external view returns (address[] memory) {\r... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3745:3870  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_59\n      tag_105\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3863  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3819:3826  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3863  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3854  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3863  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3745:3870  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_75\n      tag_110\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      sload(0x98)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7704:7755   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7692:7694   */\n      0x20\n        /* \"#utility.yul\":7677:7695   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      tag_43\n        /* \"#utility.yul\":7558:7761   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2704:2806  function symbol() public view virtual override returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_41\n      tag_118\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":1931:2170  function setSigners(address[] memory signers_) external virtual onlyOwner {\r... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_75\n      tag_122\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_46\n      tag_127\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":2544:3009  function transfer(address recipient, uint256 amount)\r... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_46\n      tag_132\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":1424:1514  function getRewardAmt() public view returns (uint256) {\r... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":1496:1506  _rewardAmt */\n      sload(0xcd)\n        /* \"contracts/DeAnt3Token.sol\":1424:1514  function getRewardAmt() public view returns (uint256) {\r... */\n      jump(tag_59)\n        /* \"contracts/DeAnt3Token.sol\":1522:1624  function setRewardAmtInWei(uint256 _newAmt) external onlyOwner {\r... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_75\n      tag_141\n      calldatasize\n      0x04\n      tag_142\n      jump\t// in\n    tag_141:\n      tag_143\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":1724:1821  function setTaxFee(uint256 _newTaxFee) external onlyOwner {\r... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_75\n      tag_146\n      calldatasize\n      0x04\n      tag_142\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":493:519  uint256 public totalBurned */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_59\n      sload(0xd0)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_59\n      tag_154\n      calldatasize\n      0x04\n      tag_155\n      jump\t// in\n    tag_154:\n      tag_156\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":3729:5132  function permitMint(\r... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_75\n      tag_160\n      calldatasize\n      0x04\n      tag_161\n      jump\t// in\n    tag_160:\n      tag_162\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_75\n      tag_165\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_165:\n      tag_166\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":1632:1716  function getTaxFee() public view returns (uint256) {\r... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":1701:1708  _taxFee */\n      sload(0xcf)\n        /* \"contracts/DeAnt3Token.sol\":1632:1716  function getTaxFee() public view returns (uint256) {\r... */\n      jump(tag_59)\n        /* \"contracts/DeAnt3Token.sol\":609:655  mapping(uint256 => bool) public uniqueIdExists */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_46\n      tag_173\n      calldatasize\n      0x04\n      tag_142\n      jump\t// in\n    tag_173:\n      mstore(0x20, 0xd3)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2560  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2579:2584  _name */\n      0x36\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2584  return _name */\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_179\n      swap1\n      tag_178\n      jump\t// in\n    tag_179:\n      dup1\n      iszero\n      tag_180\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_181\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_180)\n    tag_181:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_182:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_182\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4853:4857  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4939  _approve(owner, spender, amount) */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4923:4930  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4932:4938  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4915  _approve */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4939  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4956:4960  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4949:4960  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_184:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":3017:3323  function transferFrom(\r... */\n    tag_72:\n        /* \"contracts/DeAnt3Token.sol\":3148:3152  bool */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":3165:3179  uint256 newAmt */\n      dup1\n        /* \"contracts/DeAnt3Token.sol\":3182:3207  _calculateBurnAmt(amount) */\n      tag_191\n        /* \"contracts/DeAnt3Token.sol\":3200:3206  amount */\n      dup4\n        /* \"contracts/DeAnt3Token.sol\":3182:3199  _calculateBurnAmt */\n      tag_192\n        /* \"contracts/DeAnt3Token.sol\":3182:3207  _calculateBurnAmt(amount) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/DeAnt3Token.sol\":3165:3207  uint256 newAmt = _calculateBurnAmt(amount) */\n      swap1\n      pop\n        /* \"contracts/DeAnt3Token.sol\":3218:3246  _burnAndUpdate(from, newAmt) */\n      tag_193\n        /* \"contracts/DeAnt3Token.sol\":3233:3237  from */\n      dup6\n        /* \"contracts/DeAnt3Token.sol\":3239:3245  newAmt */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":3218:3232  _burnAndUpdate */\n      tag_194\n        /* \"contracts/DeAnt3Token.sol\":3218:3246  _burnAndUpdate(from, newAmt) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/DeAnt3Token.sol\":3257:3293  super.transferFrom(from, to, amount) */\n      tag_195\n        /* \"contracts/DeAnt3Token.sol\":3276:3280  from */\n      dup6\n        /* \"contracts/DeAnt3Token.sol\":3282:3284  to */\n      dup6\n        /* \"contracts/DeAnt3Token.sol\":3286:3292  amount */\n      dup6\n        /* \"contracts/DeAnt3Token.sol\":3257:3275  super.transferFrom */\n      tag_196\n        /* \"contracts/DeAnt3Token.sol\":3257:3293  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_195:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":3311:3315  true */\n      0x01\n      swap6\n        /* \"contracts/DeAnt3Token.sol\":3017:3323  function transferFrom(\r... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":721:1271  function initialize(\r... */\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3130  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3134:3147  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3147  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_198\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3212:3213  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3213  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n    tag_198:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3178:3286  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_202\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3258:3262  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_202\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3280  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3285  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13796:13798   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13778:13799   */\n      mstore\n        /* \"#utility.yul\":13835:13837   */\n      0x2e\n        /* \"#utility.yul\":13815:13833   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13808:13838   */\n      mstore\n        /* \"#utility.yul\":13874:13908   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":13854:13872   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13847:13909   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":13925:13943   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13918:13962   */\n      mstore\n        /* \"#utility.yul\":13979:13998   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3380  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3383:3384  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3441  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3448  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n    tag_206:\n        /* \"contracts/DeAnt3Token.sol\":946:962  __Ownable_init() */\n      tag_208\n        /* \"contracts/DeAnt3Token.sol\":946:960  __Ownable_init */\n      tag_209\n        /* \"contracts/DeAnt3Token.sol\":946:962  __Ownable_init() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/DeAnt3Token.sol\":973:1001  __ERC20_init(_NAME, _SYMBOL) */\n      tag_210\n        /* \"contracts/DeAnt3Token.sol\":986:991  _NAME */\n      dup8\n        /* \"contracts/DeAnt3Token.sol\":993:1000  _SYMBOL */\n      dup8\n        /* \"contracts/DeAnt3Token.sol\":973:985  __ERC20_init */\n      tag_211\n        /* \"contracts/DeAnt3Token.sol\":973:1001  __ERC20_init(_NAME, _SYMBOL) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/DeAnt3Token.sol\":1012:1051  __ERC20Capped_init(cap * 10**_DECIMALS) */\n      tag_212\n        /* \"contracts/DeAnt3Token.sol\":1037:1050  10**_DECIMALS */\n      tag_213\n        /* \"contracts/DeAnt3Token.sol\":1041:1050  _DECIMALS */\n      dup7\n        /* \"contracts/DeAnt3Token.sol\":1037:1039  10 */\n      0x0a\n        /* \"contracts/DeAnt3Token.sol\":1037:1050  10**_DECIMALS */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"contracts/DeAnt3Token.sol\":1031:1050  cap * 10**_DECIMALS */\n      tag_215\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":1031:1034  cap */\n      dup7\n        /* \"contracts/DeAnt3Token.sol\":1031:1050  cap * 10**_DECIMALS */\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"contracts/DeAnt3Token.sol\":1012:1030  __ERC20Capped_init */\n      tag_217\n        /* \"contracts/DeAnt3Token.sol\":1012:1051  __ERC20Capped_init(cap * 10**_DECIMALS) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/DeAnt3Token.sol\":1062:1075  _name = _NAME */\n      dup7\n      mload\n      tag_218\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":1062:1067  _name */\n      0xca\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":1062:1075  _name = _NAME */\n      0x20\n      dup11\n      add\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":1086:1103  _symbol = _SYMBOL */\n      dup6\n      mload\n      tag_220\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":1086:1093  _symbol */\n      0xcb\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":1086:1103  _symbol = _SYMBOL */\n      0x20\n      dup10\n      add\n      swap1\n      tag_219\n      jump\t// in\n    tag_220:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":1114:1123  _decimals */\n      0xcc\n        /* \"contracts/DeAnt3Token.sol\":1114:1135  _decimals = _DECIMALS */\n      dup1\n      sload\n      not(0xff)\n      and\n      0xff\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":1159:1168  0.1 ether */\n      0x016345785d8a0000\n        /* \"contracts/DeAnt3Token.sol\":1146:1156  _rewardAmt */\n      0xcd\n        /* \"contracts/DeAnt3Token.sol\":1146:1168  _rewardAmt = 0.1 ether */\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":1179:1183  _cap */\n      0xce\n        /* \"contracts/DeAnt3Token.sol\":1179:1189  _cap = cap */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":1200:1207  _taxFee */\n      0xcf\n        /* \"contracts/DeAnt3Token.sol\":1200:1216  _taxFee = taxFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":1227:1263  _mint(address(this), initialBalance) */\n      tag_221\n        /* \"contracts/DeAnt3Token.sol\":1241:1245  this */\n      address\n        /* \"contracts/DeAnt3Token.sol\":1248:1262  initialBalance */\n      dup5\n        /* \"contracts/DeAnt3Token.sol\":1227:1232  _mint */\n      tag_222\n        /* \"contracts/DeAnt3Token.sol\":1227:1263  _mint(address(this), initialBalance) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3483:3497  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3529:3534  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3513:3534  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":9176:9212   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":9164:9166   */\n      0x20\n        /* \"#utility.yul\":9149:9167   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3101:3584  {... */\n      pop\n        /* \"contracts/DeAnt3Token.sol\":721:1271  function initialize(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6210:6444  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6298:6302  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6416  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6368:6375  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6405:6415  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6402  allowance(owner, spender) */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6368:6375  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6386  allowance */\n      tag_156\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6402  allowance(owner, spender) */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6415  allowance(owner, spender) + addedValue */\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6360  _approve */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6416  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":1829:1923  function signers() external view returns (address[] memory) {\r... */\n    tag_100:\n        /* \"contracts/DeAnt3Token.sol\":1871:1887  address[] memory */\n      0x60\n        /* \"contracts/DeAnt3Token.sol\":1907:1915  _signers */\n      0xd1\n        /* \"contracts/DeAnt3Token.sol\":1900:1915  return _signers */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_236:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_236\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DeAnt3Token.sol\":1829:1923  function signers() external view returns (address[] memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_239\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2162:2163  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2153  _transferOwnership */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2704:2806  function symbol() public view virtual override returns (string memory) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2760:2773  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2799  _symbol */\n      0x37\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2785:2799  return _symbol */\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":1931:2170  function setSigners(address[] memory signers_) external virtual onlyOwner {\r... */\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_252\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_252:\n        /* \"contracts/DeAnt3Token.sol\":2016:2056  _updateMap(_signers, false, _mapSigners) */\n      tag_254\n        /* \"contracts/DeAnt3Token.sol\":2027:2035  _signers */\n      0xd1\n        /* \"contracts/DeAnt3Token.sol\":2016:2056  _updateMap(_signers, false, _mapSigners) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_255\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_256:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_256\n      jumpi\n    tag_255:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2037:2042  false */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2044:2055  _mapSigners */\n      0xd2\n        /* \"contracts/DeAnt3Token.sol\":2016:2026  _updateMap */\n      tag_257\n        /* \"contracts/DeAnt3Token.sol\":2016:2056  _updateMap(_signers, false, _mapSigners) */\n      jump\t// in\n    tag_254:\n        /* \"contracts/DeAnt3Token.sol\":2067:2082  delete _signers */\n      tag_258\n        /* \"contracts/DeAnt3Token.sol\":2074:2082  _signers */\n      0xd1\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2067:2082  delete _signers */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"contracts/DeAnt3Token.sol\":2093:2112  _signers = signers_ */\n      dup1\n      mload\n      tag_260\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":2093:2101  _signers */\n      0xd1\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":2093:2112  _signers = signers_ */\n      0x20\n      dup5\n      add\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2123:2162  _updateMap(signers_, true, _mapSigners) */\n      tag_262\n        /* \"contracts/DeAnt3Token.sol\":2134:2142  signers_ */\n      dup2\n        /* \"contracts/DeAnt3Token.sol\":2144:2148  true */\n      0x01\n        /* \"contracts/DeAnt3Token.sol\":2150:2161  _mapSigners */\n      0xd2\n        /* \"contracts/DeAnt3Token.sol\":2123:2133  _updateMap */\n      tag_257\n        /* \"contracts/DeAnt3Token.sol\":2123:2162  _updateMap(signers_, true, _mapSigners) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/DeAnt3Token.sol\":1931:2170  function setSigners(address[] memory signers_) external virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7024:7028  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7024:7028  bool */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7130  allowance(owner, spender) */\n      tag_265\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7122:7129  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7114  allowance */\n      tag_156\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7130  allowance(owner, spender) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7078:7130  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7168:7183  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7148:7164  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7148:7183  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16896:16898   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16878:16899   */\n      mstore\n        /* \"#utility.yul\":16935:16937   */\n      0x25\n        /* \"#utility.yul\":16915:16933   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16908:16938   */\n      mstore\n        /* \"#utility.yul\":16974:17008   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":16954:16972   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16947:17009   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":17025:17043   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17018:17053   */\n      mstore\n        /* \"#utility.yul\":17070:17089   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_204\n        /* \"#utility.yul\":16694:17095   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7319  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_269\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7268:7273  owner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7275:7282  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7303:7318  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7284:7300  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7284:7318  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7267  _approve */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7319  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_269:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7347:7351  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":2544:3009  function transfer(address recipient, uint256 amount)\r... */\n    tag_133:\n        /* \"contracts/DeAnt3Token.sol\":2649:2653  bool */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2689:2696  owner() */\n      tag_271\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x98))\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":2689:2696  owner() */\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":2675:2696  msg.sender == owner() */\n      and\n        /* \"contracts/DeAnt3Token.sol\":2675:2685  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":2675:2696  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/DeAnt3Token.sol\":2671:2980  if (msg.sender == owner()) {\r... */\n      iszero\n      tag_272\n      jumpi\n        /* \"contracts/DeAnt3Token.sol\":2713:2746  super.transfer(recipient, amount) */\n      tag_273\n        /* \"contracts/DeAnt3Token.sol\":2728:2737  recipient */\n      dup4\n        /* \"contracts/DeAnt3Token.sol\":2739:2745  amount */\n      dup4\n        /* \"contracts/DeAnt3Token.sol\":2713:2727  super.transfer */\n      tag_274\n        /* \"contracts/DeAnt3Token.sol\":2713:2746  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_273:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2671:2980  if (msg.sender == owner()) {\r... */\n      jump(tag_275)\n    tag_272:\n        /* \"contracts/DeAnt3Token.sol\":2779:2794  uint256 burnAmt */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2797:2822  _calculateBurnAmt(amount) */\n      tag_276\n        /* \"contracts/DeAnt3Token.sol\":2815:2821  amount */\n      dup4\n        /* \"contracts/DeAnt3Token.sol\":2797:2814  _calculateBurnAmt */\n      tag_192\n        /* \"contracts/DeAnt3Token.sol\":2797:2822  _calculateBurnAmt(amount) */\n      jump\t// in\n    tag_276:\n        /* \"contracts/DeAnt3Token.sol\":2779:2822  uint256 burnAmt = _calculateBurnAmt(amount) */\n      swap1\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2837:2872  _burnAndUpdate(msg.sender, burnAmt) */\n      tag_277\n        /* \"contracts/DeAnt3Token.sol\":2852:2862  msg.sender */\n      caller\n        /* \"contracts/DeAnt3Token.sol\":2864:2871  burnAmt */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":2837:2851  _burnAndUpdate */\n      tag_194\n        /* \"contracts/DeAnt3Token.sol\":2837:2872  _burnAndUpdate(msg.sender, burnAmt) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/DeAnt3Token.sol\":2887:2901  uint256 newAmt */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2904:2920  amount - burnAmt */\n      tag_278\n        /* \"contracts/DeAnt3Token.sol\":2913:2920  burnAmt */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":2904:2910  amount */\n      dup6\n        /* \"contracts/DeAnt3Token.sol\":2904:2920  amount - burnAmt */\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"contracts/DeAnt3Token.sol\":2887:2920  uint256 newAmt = amount - burnAmt */\n      swap1\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2935:2968  super.transfer(recipient, newAmt) */\n      tag_280\n        /* \"contracts/DeAnt3Token.sol\":2950:2959  recipient */\n      dup6\n        /* \"contracts/DeAnt3Token.sol\":2961:2967  newAmt */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":2935:2949  super.transfer */\n      tag_274\n        /* \"contracts/DeAnt3Token.sol\":2935:2968  super.transfer(recipient, newAmt) */\n      jump\t// in\n    tag_280:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2764:2980  {\r... */\n      pop\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2671:2980  if (msg.sender == owner()) {\r... */\n    tag_275:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2997:3001  true */\n      0x01\n        /* \"contracts/DeAnt3Token.sol\":2544:3009  function transfer(address recipient, uint256 amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":1522:1624  function setRewardAmtInWei(uint256 _newAmt) external onlyOwner {\r... */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_283\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_283:\n        /* \"contracts/DeAnt3Token.sol\":1596:1606  _rewardAmt */\n      0xcd\n        /* \"contracts/DeAnt3Token.sol\":1596:1616  _rewardAmt = _newAmt */\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":1522:1624  function setRewardAmtInWei(uint256 _newAmt) external onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":1724:1821  function setTaxFee(uint256 _newTaxFee) external onlyOwner {\r... */\n    tag_147:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_286\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_286:\n        /* \"contracts/DeAnt3Token.sol\":1793:1800  _taxFee */\n      0xcf\n        /* \"contracts/DeAnt3Token.sol\":1793:1813  _taxFee = _newTaxFee */\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":1724:1821  function setTaxFee(uint256 _newTaxFee) external onlyOwner {\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4446  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4402:4409  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4446  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4439  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4446  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4455  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":3729:5132  function permitMint(\r... */\n    tag_162:\n        /* \"contracts/DeAnt3Token.sol\":4002:4017  block.timestamp */\n      timestamp\n        /* \"contracts/DeAnt3Token.sol\":3990:3998  deadline */\n      dup5\n        /* \"contracts/DeAnt3Token.sol\":3990:4017  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/DeAnt3Token.sol\":3982:4038  require(deadline >= block.timestamp, \"Expired deadline\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14572:14574   */\n      0x20\n        /* \"contracts/DeAnt3Token.sol\":3982:4038  require(deadline >= block.timestamp, \"Expired deadline\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14554:14575   */\n      mstore\n        /* \"#utility.yul\":14611:14613   */\n      0x10\n        /* \"#utility.yul\":14591:14609   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14584:14614   */\n      mstore\n      shl(0x80, 0x4578706972656420646561646c696e65)\n        /* \"#utility.yul\":14630:14648   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14623:14669   */\n      mstore\n        /* \"#utility.yul\":14686:14704   */\n      0x64\n      add\n        /* \"contracts/DeAnt3Token.sol\":3982:4038  require(deadline >= block.timestamp, \"Expired deadline\") */\n      tag_204\n        /* \"#utility.yul\":14370:14710   */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":3982:4038  require(deadline >= block.timestamp, \"Expired deadline\") */\n    tag_290:\n        /* \"contracts/DeAnt3Token.sol\":4058:4082  uniqueIdExists[uniqueId] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":4058:4072  uniqueIdExists */\n      0xd3\n        /* \"contracts/DeAnt3Token.sol\":4058:4082  uniqueIdExists[uniqueId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/DeAnt3Token.sol\":4057:4082  !uniqueIdExists[uniqueId] */\n      iszero\n        /* \"contracts/DeAnt3Token.sol\":4049:4103  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11184:11186   */\n      0x20\n        /* \"contracts/DeAnt3Token.sol\":4049:4103  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11166:11187   */\n      mstore\n        /* \"#utility.yul\":11223:11225   */\n      0x10\n        /* \"#utility.yul\":11203:11221   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11196:11226   */\n      mstore\n      shl(0x80, 0x556e6971756520696420657869737473)\n        /* \"#utility.yul\":11242:11260   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11235:11281   */\n      mstore\n        /* \"#utility.yul\":11298:11316   */\n      0x64\n      add\n        /* \"contracts/DeAnt3Token.sol\":4049:4103  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n      tag_204\n        /* \"#utility.yul\":10982:11322   */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":4049:4103  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n    tag_293:\n        /* \"contracts/DeAnt3Token.sol\":4134:4144  msg.sender */\n      caller\n        /* \"contracts/DeAnt3Token.sol\":4116:4131  address spender */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":4171:4184  super.owner() */\n      tag_296\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x98))\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":4171:4184  super.owner() */\n    tag_296:\n        /* \"contracts/DeAnt3Token.sol\":4244:4491  abi.encodePacked(\r... */\n      mload(0x40)\n      shl(0xf8, 0x19)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":6909:6937   */\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":4197:4217  bytes32 permitTxHash */\n      0x00\n        /* \"#utility.yul\":6953:6964   */\n      0x21\n      dup3\n      add\n        /* \"#utility.yul\":6946:6982   */\n      dup2\n      swap1\n      mstore\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":7069:7071   */\n      0x60\n        /* \"#utility.yul\":7065:7080   */\n      dup5\n      dup2\n      shl\n        /* \"#utility.yul\":7061:7085   */\n      dup3\n      and\n        /* \"#utility.yul\":7048:7059   */\n      0x22\n      dup6\n      add\n        /* \"#utility.yul\":7041:7086   */\n      mstore\n        /* \"#utility.yul\":7120:7135   */\n      dup7\n      dup2\n      shl\n        /* \"#utility.yul\":7116:7140   */\n      dup3\n      and\n        /* \"#utility.yul\":7102:7114   */\n      0x36\n      dup6\n      add\n        /* \"#utility.yul\":7095:7141   */\n      mstore\n        /* \"#utility.yul\":7175:7190   */\n      dup14\n      swap1\n      shl\n        /* \"#utility.yul\":7171:7195   */\n      and\n        /* \"#utility.yul\":7157:7169   */\n      0x4a\n      dup4\n      add\n        /* \"#utility.yul\":7150:7196   */\n      mstore\n        /* \"#utility.yul\":7212:7224   */\n      0x5e\n      dup3\n      add\n        /* \"#utility.yul\":7205:7233   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":7249:7261   */\n      0x7e\n      dup3\n      add\n        /* \"#utility.yul\":7242:7270   */\n      dup12\n      swap1\n      mstore\n        /* \"#utility.yul\":7286:7299   */\n      0x9e\n      dup3\n      add\n        /* \"#utility.yul\":7279:7308   */\n      dup10\n      swap1\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":4155:4184  address owner = super.owner() */\n      swap2\n      swap3\n      pop\n        /* \"#utility.yul\":7324:7337   */\n      0xbe\n      add\n        /* \"contracts/DeAnt3Token.sol\":4244:4491  abi.encodePacked(\r... */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":4220:4502  keccak256(\r... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/DeAnt3Token.sol\":4197:4502  bytes32 permitTxHash = keccak256(\r... */\n      swap1\n      pop\n        /* \"contracts/DeAnt3Token.sol\":4515:4531  address lastAddr */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":4555:4576  uint8 verifiedSigners */\n      dup1\n        /* \"contracts/DeAnt3Token.sol\":4596:4604  uint64 i */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":4591:4853  for (uint64 i = 0; i < v.length; i++) {\r... */\n    tag_299:\n        /* \"contracts/DeAnt3Token.sol\":4614:4615  v */\n      dup9\n        /* \"contracts/DeAnt3Token.sol\":4614:4622  v.length */\n      mload\n        /* \"contracts/DeAnt3Token.sol\":4610:4611  i */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4610:4622  i < v.length */\n      and\n      lt\n        /* \"contracts/DeAnt3Token.sol\":4591:4853  for (uint64 i = 0; i < v.length; i++) {\r... */\n      iszero\n      tag_300\n      jumpi\n        /* \"contracts/DeAnt3Token.sol\":4644:4661  address recovered */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":4664:4705  ecrecover(permitTxHash, v[i], r[i], s[i]) */\n      0x01\n        /* \"contracts/DeAnt3Token.sol\":4674:4686  permitTxHash */\n      dup6\n        /* \"contracts/DeAnt3Token.sol\":4688:4689  v */\n      dup12\n        /* \"contracts/DeAnt3Token.sol\":4690:4691  i */\n      dup5\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4688:4692  v[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_303\n      jumpi\n      tag_303\n      tag_304\n      jump\t// in\n    tag_303:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DeAnt3Token.sol\":4694:4695  r */\n      dup12\n        /* \"contracts/DeAnt3Token.sol\":4696:4697  i */\n      dup6\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4694:4698  r[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_306\n      jumpi\n      tag_306\n      tag_304\n      jump\t// in\n    tag_306:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DeAnt3Token.sol\":4700:4701  s */\n      dup12\n        /* \"contracts/DeAnt3Token.sol\":4702:4703  i */\n      dup7\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4700:4704  s[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_308\n      jumpi\n      tag_308\n      tag_304\n      jump\t// in\n    tag_308:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DeAnt3Token.sol\":4664:4705  ecrecover(permitTxHash, v[i], r[i], s[i]) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_309\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":8848:8873   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":8921:8925   */\n      0xff\n        /* \"#utility.yul\":8909:8926   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":8904:8906   */\n      0x20\n        /* \"#utility.yul\":8889:8907   */\n      dup5\n      add\n        /* \"#utility.yul\":8882:8927   */\n      mstore\n        /* \"#utility.yul\":8958:8960   */\n      0x40\n        /* \"#utility.yul\":8943:8961   */\n      dup4\n      add\n        /* \"#utility.yul\":8936:8970   */\n      mstore\n        /* \"#utility.yul\":9001:9003   */\n      0x60\n        /* \"#utility.yul\":8986:9004   */\n      dup3\n      add\n        /* \"#utility.yul\":8979:9013   */\n      mstore\n        /* \"#utility.yul\":8835:8838   */\n      0x80\n        /* \"#utility.yul\":8820:8839   */\n      add\n      swap1\n        /* \"#utility.yul\":8621:9019   */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":4664:4705  ecrecover(permitTxHash, v[i], r[i], s[i]) */\n    tag_309:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_312\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_312:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/DeAnt3Token.sol\":4644:4705  address recovered = ecrecover(permitTxHash, v[i], r[i], s[i]) */\n      swap1\n      pop\n        /* \"contracts/DeAnt3Token.sol\":4736:4744  lastAddr */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4724:4744  recovered > lastAddr */\n      and\n        /* \"contracts/DeAnt3Token.sol\":4724:4733  recovered */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4724:4744  recovered > lastAddr */\n      and\n      gt\n        /* \"contracts/DeAnt3Token.sol\":4724:4770  recovered > lastAddr && _mapSigners[recovered] */\n      dup1\n      iszero\n      tag_313\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4748:4770  _mapSigners[recovered] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":4748:4759  _mapSigners */\n      0xd2\n        /* \"contracts/DeAnt3Token.sol\":4748:4770  _mapSigners[recovered] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/DeAnt3Token.sol\":4724:4770  recovered > lastAddr && _mapSigners[recovered] */\n    tag_313:\n        /* \"contracts/DeAnt3Token.sol\":4720:4806  if (recovered > lastAddr && _mapSigners[recovered])\r... */\n      iszero\n      tag_314\n      jumpi\n        /* \"contracts/DeAnt3Token.sol\":4789:4806  verifiedSigners++ */\n      dup3\n      tag_315\n      dup2\n      tag_316\n      jump\t// in\n    tag_315:\n      swap4\n      pop\n      pop\n        /* \"contracts/DeAnt3Token.sol\":4720:4806  if (recovered > lastAddr && _mapSigners[recovered])\r... */\n    tag_314:\n        /* \"contracts/DeAnt3Token.sol\":4832:4841  recovered */\n      swap3\n      pop\n        /* \"contracts/DeAnt3Token.sol\":4624:4627  i++ */\n      dup1\n      tag_317\n      dup2\n      tag_318\n      jump\t// in\n    tag_317:\n      swap2\n      pop\n      pop\n        /* \"contracts/DeAnt3Token.sol\":4591:4853  for (uint64 i = 0; i < v.length; i++) {\r... */\n      jump(tag_299)\n    tag_300:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":4892:4893  2 */\n      0x02\n        /* \"contracts/DeAnt3Token.sol\":4873:4888  verifiedSigners */\n      dup2\n        /* \"contracts/DeAnt3Token.sol\":4873:4893  verifiedSigners >= 2 */\n      0xff\n      and\n      lt\n      iszero\n        /* \"contracts/DeAnt3Token.sol\":4865:4913  require(verifiedSigners >= 2, \"Invalid signers\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13452:13454   */\n      0x20\n        /* \"contracts/DeAnt3Token.sol\":4865:4913  require(verifiedSigners >= 2, \"Invalid signers\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13434:13455   */\n      mstore\n        /* \"#utility.yul\":13491:13493   */\n      0x0f\n        /* \"#utility.yul\":13471:13489   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13464:13494   */\n      mstore\n      shl(0x88, 0x496e76616c6964207369676e657273)\n        /* \"#utility.yul\":13510:13528   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13503:13548   */\n      mstore\n        /* \"#utility.yul\":13565:13583   */\n      0x64\n      add\n        /* \"contracts/DeAnt3Token.sol\":4865:4913  require(verifiedSigners >= 2, \"Invalid signers\") */\n      tag_204\n        /* \"#utility.yul\":13250:13589   */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":4865:4913  require(verifiedSigners >= 2, \"Invalid signers\") */\n    tag_319:\n        /* \"contracts/DeAnt3Token.sol\":4924:4948  uniqueIdExists[uniqueId] */\n      0x00\n      dup12\n      dup2\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":4924:4938  uniqueIdExists */\n      0xd3\n        /* \"contracts/DeAnt3Token.sol\":4924:4948  uniqueIdExists[uniqueId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/DeAnt3Token.sol\":4924:4955  uniqueIdExists[uniqueId] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/DeAnt3Token.sol\":4951:4955  true */\n      0x01\n        /* \"contracts/DeAnt3Token.sol\":4924:4955  uniqueIdExists[uniqueId] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":5009:5019  _rewardAmt */\n      sload(0xcd)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4987:5001  recipient.call */\n      dup15\n      and\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":5009:5028  _rewardAmt * amount */\n      tag_322\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":5022:5028  amount */\n      dup14\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":5009:5028  _rewardAmt * amount */\n      tag_216\n      jump\t// in\n    tag_322:\n        /* \"contracts/DeAnt3Token.sol\":4987:5033  recipient.call{value: _rewardAmt * amount}(\"\") */\n      mload(0x40)\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_327\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_326)\n    tag_327:\n      0x60\n      swap2\n      pop\n    tag_326:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":4968:5033  (bool success, ) = recipient.call{value: _rewardAmt * amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/DeAnt3Token.sol\":5052:5059  success */\n      dup1\n        /* \"contracts/DeAnt3Token.sol\":5044:5083  require(success, \"Failed to send Mech\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13104:13106   */\n      0x20\n        /* \"contracts/DeAnt3Token.sol\":5044:5083  require(success, \"Failed to send Mech\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13086:13107   */\n      mstore\n        /* \"#utility.yul\":13143:13145   */\n      0x13\n        /* \"#utility.yul\":13123:13141   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13116:13146   */\n      mstore\n      shl(0x6b, 0x08cc2d2d8cac840e8de40e6cadcc8409acac6d)\n        /* \"#utility.yul\":13162:13180   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13155:13204   */\n      mstore\n        /* \"#utility.yul\":13221:13239   */\n      0x64\n      add\n        /* \"contracts/DeAnt3Token.sol\":5044:5083  require(success, \"Failed to send Mech\") */\n      tag_204\n        /* \"#utility.yul\":12902:13245   */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":5044:5083  require(success, \"Failed to send Mech\") */\n    tag_328:\n        /* \"contracts/DeAnt3Token.sol\":5094:5124  super._mint(recipient, amount) */\n      tag_331\n        /* \"contracts/DeAnt3Token.sol\":5106:5115  recipient */\n      dup14\n        /* \"contracts/DeAnt3Token.sol\":5117:5123  amount */\n      dup13\n        /* \"contracts/DeAnt3Token.sol\":5094:5105  super._mint */\n      tag_222\n        /* \"contracts/DeAnt3Token.sol\":5094:5124  super._mint(recipient, amount) */\n      jump\t// in\n    tag_331:\n        /* \"contracts/DeAnt3Token.sol\":3971:5132  {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DeAnt3Token.sol\":3729:5132  function permitMint(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_333\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11529:11531   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11511:11532   */\n      mstore\n        /* \"#utility.yul\":11568:11570   */\n      0x26\n        /* \"#utility.yul\":11548:11566   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11541:11571   */\n      mstore\n        /* \"#utility.yul\":11607:11641   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11587:11605   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11580:11642   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":11658:11676   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11651:11687   */\n      mstore\n        /* \"#utility.yul\":11704:11723   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_204\n        /* \"#utility.yul\":11327:11729   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_335:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2503:2511  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2502  _transferOwnership */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10447:10817  function _approve(... */\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10578:10597  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_342\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16079:16081   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16061:16082   */\n      mstore\n        /* \"#utility.yul\":16118:16120   */\n      0x24\n        /* \"#utility.yul\":16098:16116   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":16091:16121   */\n      mstore\n        /* \"#utility.yul\":16157:16191   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":16137:16155   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16130:16192   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":16208:16226   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16201:16235   */\n      mstore\n        /* \"#utility.yul\":16252:16271   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_204\n        /* \"#utility.yul\":15877:16277   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_342:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10656:10677  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11936:11938   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11918:11939   */\n      mstore\n        /* \"#utility.yul\":11975:11977   */\n      0x22\n        /* \"#utility.yul\":11955:11973   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11948:11978   */\n      mstore\n        /* \"#utility.yul\":12014:12048   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":11994:12012   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11987:12049   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":12065:12083   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12058:12090   */\n      mstore\n        /* \"#utility.yul\":12107:12126   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_204\n        /* \"#utility.yul\":11734:12132   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_345:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10745  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10738  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10745  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10754  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10763  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10778:10810  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":17606:17631   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10778:10810  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":17579:17597   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10778:10810  Approval(owner, spender, amount) */\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10447:10817  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":3331:3491  function _calculateBurnAmt(uint256 amount) private view returns (uint256) {\r... */\n    tag_192:\n        /* \"contracts/DeAnt3Token.sol\":3396:3403  uint256 */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":3416:3431  uint256 burnAmt */\n      dup1\n        /* \"contracts/DeAnt3Token.sol\":3455:3458  100 */\n      0x64\n        /* \"contracts/DeAnt3Token.sol\":3444:3451  _taxFee */\n      sload(0xcf)\n        /* \"contracts/DeAnt3Token.sol\":3435:3441  amount */\n      dup5\n        /* \"contracts/DeAnt3Token.sol\":3435:3451  amount * _taxFee */\n      tag_350\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_350:\n        /* \"contracts/DeAnt3Token.sol\":3434:3458  (amount * _taxFee) / 100 */\n      tag_351\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n        /* \"contracts/DeAnt3Token.sol\":3416:3458  uint256 burnAmt = (amount * _taxFee) / 100 */\n      swap4\n        /* \"contracts/DeAnt3Token.sol\":3331:3491  function _calculateBurnAmt(uint256 amount) private view returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":3499:3721  function _burnAndUpdate(address account, uint256 amount) private {\r... */\n    tag_194:\n        /* \"contracts/DeAnt3Token.sol\":3575:3597  _burn(account, amount) */\n      tag_354\n        /* \"contracts/DeAnt3Token.sol\":3581:3588  account */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":3590:3596  amount */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":3575:3580  _burn */\n      tag_355\n        /* \"contracts/DeAnt3Token.sol\":3575:3597  _burn(account, amount) */\n      jump\t// in\n    tag_354:\n        /* \"contracts/DeAnt3Token.sol\":3636:3642  amount */\n      dup1\n        /* \"contracts/DeAnt3Token.sol\":3622:3633  totalBurned */\n      sload(0xd0)\n        /* \"contracts/DeAnt3Token.sol\":3622:3642  totalBurned + amount */\n      tag_356\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_356:\n        /* \"contracts/DeAnt3Token.sol\":3608:3619  totalBurned */\n      0xd0\n        /* \"contracts/DeAnt3Token.sol\":3608:3642  totalBurned = totalBurned + amount */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":3680:3704  userTotalBurned[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":3680:3695  userTotalBurned */\n      0xd4\n        /* \"contracts/DeAnt3Token.sol\":3680:3704  userTotalBurned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DeAnt3Token.sol\":3680:3713  userTotalBurned[account] + amount */\n      tag_357\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":3707:3713  amount */\n      dup3\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":3680:3713  userTotalBurned[account] + amount */\n      tag_233\n      jump\t// in\n    tag_357:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":3653:3677  userTotalBurned[account] */\n      swap1\n      swap3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":3653:3668  userTotalBurned */\n      0xd4\n        /* \"contracts/DeAnt3Token.sol\":3653:3677  userTotalBurned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DeAnt3Token.sol\":3653:3713  userTotalBurned[account] = userTotalBurned[account] + amount */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/DeAnt3Token.sol\":3499:3721  function _burnAndUpdate(address account, uint256 amount) private {\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5529:5815  function transferFrom(... */\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5656:5660  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5750  _spendAllowance(from, spender, amount) */\n      tag_360\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5728:5732  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5743:5749  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5727  _spendAllowance */\n      tag_361\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5750  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_360:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5787  _transfer(from, to, amount) */\n      tag_269\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5770:5774  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5776:5778  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5780:5786  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5769  _transfer */\n      tag_363\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5787  _transfer(from, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_366\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_368\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_371\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2116:2263  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_373\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_368\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2218:2256  __ERC20_init_unchained(name_, symbol_) */\n      tag_376\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2241:2246  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2248:2255  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2218:2240  __ERC20_init_unchained */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2218:2256  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2116:2263  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":567:686  function __ERC20Capped_init(uint256 cap_) internal onlyInitializing {... */\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_368\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":645:679  __ERC20Capped_init_unchained(cap_) */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":674:678  cap_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":645:673  __ERC20Capped_init_unchained */\n      tag_383\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":645:679  __ERC20Capped_init_unchained(cap_) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1063:1278  function _mint(address account, uint256 amount) internal virtual override {... */\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":999:1003  _cap */\n      sload(0x65)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1188:1194  amount */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1155:1185  ERC20Upgradeable.totalSupply() */\n      tag_386\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3668:3680  _totalSupply */\n      sload(0x35)\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1155:1185  ERC20Upgradeable.totalSupply() */\n    tag_386:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1155:1194  ERC20Upgradeable.totalSupply() + amount */\n      tag_387\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1155:1203  ERC20Upgradeable.totalSupply() + amount <= cap() */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1147:1233  require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      tag_388\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15725:15727   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1147:1233  require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15707:15728   */\n      mstore\n        /* \"#utility.yul\":15764:15766   */\n      0x19\n        /* \"#utility.yul\":15744:15762   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15737:15767   */\n      mstore\n        /* \"#utility.yul\":15803:15830   */\n      0x45524332304361707065643a2063617020657863656564656400000000000000\n        /* \"#utility.yul\":15783:15801   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15776:15831   */\n      mstore\n        /* \"#utility.yul\":15848:15866   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1147:1233  require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      tag_204\n        /* \"#utility.yul\":15523:15872   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1147:1233  require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n    tag_388:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1243:1271  super._mint(account, amount) */\n      tag_376\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1255:1262  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1264:1270  amount */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1243:1254  super._mint */\n      tag_392\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1243:1271  super._mint(account, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x98))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14211:14213   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14193:14214   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14230:14248   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14223:14253   */\n      mstore\n        /* \"#utility.yul\":14289:14323   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14269:14287   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14262:14324   */\n      mstore\n        /* \"#utility.yul\":14341:14359   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_204\n        /* \"#utility.yul\":14009:14365   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      0x98\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2762  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2736:2860  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":2295:2536  function _updateMap(\r... */\n    tag_257:\n        /* \"contracts/DeAnt3Token.sol\":2447:2455  uint64 i */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2442:2529  for (uint64 i = 0; i < arr.length; i++) {\r... */\n    tag_401:\n        /* \"contracts/DeAnt3Token.sol\":2465:2468  arr */\n      dup4\n        /* \"contracts/DeAnt3Token.sol\":2465:2475  arr.length */\n      mload\n        /* \"contracts/DeAnt3Token.sol\":2461:2462  i */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":2461:2475  i < arr.length */\n      and\n      lt\n        /* \"contracts/DeAnt3Token.sol\":2442:2529  for (uint64 i = 0; i < arr.length; i++) {\r... */\n      iszero\n      tag_402\n      jumpi\n        /* \"contracts/DeAnt3Token.sol\":2511:2517  status */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":2497:2500  map */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":2497:2508  map[arr[i]] */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2501:2504  arr */\n      dup7\n        /* \"contracts/DeAnt3Token.sol\":2505:2506  i */\n      dup5\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":2501:2507  arr[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_405\n      jumpi\n      tag_405\n      tag_304\n      jump\t// in\n    tag_405:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":2497:2508  map[arr[i]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeAnt3Token.sol\":2497:2517  map[arr[i]] = status */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":2477:2480  i++ */\n      dup1\n      tag_406\n      dup2\n      tag_318\n      jump\t// in\n    tag_406:\n      swap2\n      pop\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2442:2529  for (uint64 i = 0; i < arr.length; i++) {\r... */\n      jump(tag_401)\n    tag_402:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2295:2536  function _updateMap(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4066:4255  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4145:4149  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4227  _transfer(owner, to, amount) */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4216:4218  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4220:4226  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4208  _transfer */\n      tag_363\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4227  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9448:10024  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_355:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9531:9552  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9523:9590  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_411\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14917:14919   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9523:9590  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14899:14920   */\n      mstore\n        /* \"#utility.yul\":14956:14958   */\n      0x21\n        /* \"#utility.yul\":14936:14954   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14929:14959   */\n      mstore\n        /* \"#utility.yul\":14995:15029   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":14975:14993   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14968:15030   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":15046:15064   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15039:15070   */\n      mstore\n        /* \"#utility.yul\":15087:15106   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9523:9590  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_204\n        /* \"#utility.yul\":14715:15112   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9523:9590  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_411:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9704  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9661:9683  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9704  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9695  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9704  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9722:9746  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9714:9785  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_416\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10781:10783   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9714:9785  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10763:10784   */\n      mstore\n        /* \"#utility.yul\":10820:10822   */\n      0x22\n        /* \"#utility.yul\":10800:10818   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10793:10823   */\n      mstore\n        /* \"#utility.yul\":10859:10893   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":10839:10857   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10832:10894   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":10910:10928   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10903:10935   */\n      mstore\n        /* \"#utility.yul\":10952:10971   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9714:9785  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_204\n        /* \"#utility.yul\":10579:10977   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9714:9785  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_416:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9819:9837  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9819:9828  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9819:9837  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9840:9863  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9819:9863  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9883:9895  _totalSupply */\n      0x35\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9883:9905  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9857:9863  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9819:9837  _balances[account] */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9883:9905  _totalSupply -= amount */\n      tag_419\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9857:9863  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9883:9905  _totalSupply -= amount */\n      tag_279\n      jump\t// in\n    tag_419:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9921:9958  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":17606:17631   */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9947:9948  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9921:9958  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":17594:17596   */\n      0x20\n        /* \"#utility.yul\":17579:17597   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9921:9958  Transfer(account, address(0), amount) */\n      tag_348\n        /* \"#utility.yul\":17460:17637   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9969:10017  _afterTokenTransfer(account, address(0), amount) */\n    tag_421:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9513:10024  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9448:10024  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11098:11539  function _spendAllowance(... */\n    tag_361:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11228:11252  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11255:11280  allowance(owner, spender) */\n      tag_424\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11265:11270  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11272:11279  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11255:11264  allowance */\n      tag_156\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11255:11280  allowance(owner, spender) */\n      jump\t// in\n    tag_424:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11228:11280  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11294:11310  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11294:11331  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11290:11533  if (currentAllowance != type(uint256).max) {... */\n      tag_402\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11375:11381  amount */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11371  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11381  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_426\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12339:12341   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12321:12342   */\n      mstore\n        /* \"#utility.yul\":12378:12380   */\n      0x1d\n        /* \"#utility.yul\":12358:12376   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12351:12381   */\n      mstore\n        /* \"#utility.yul\":12417:12448   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":12397:12415   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12390:12449   */\n      mstore\n        /* \"#utility.yul\":12466:12484   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_204\n        /* \"#utility.yul\":12137:12490   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_426:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11457:11508  _approve(owner, spender, currentAllowance - amount) */\n      tag_402\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11466:11471  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11473:11480  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11501:11507  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11482:11498  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11482:11507  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11457:11465  _approve */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11457:11508  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7812:8463  function _transfer(... */\n    tag_363:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7938:7956  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_431\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15319:15321   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15301:15322   */\n      mstore\n        /* \"#utility.yul\":15358:15360   */\n      0x25\n        /* \"#utility.yul\":15338:15356   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15331:15361   */\n      mstore\n        /* \"#utility.yul\":15397:15431   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":15377:15395   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15370:15432   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":15448:15466   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15441:15476   */\n      mstore\n        /* \"#utility.yul\":15493:15512   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_204\n        /* \"#utility.yul\":15117:15518   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_431:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8016:8032  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_434\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10027:10029   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10009:10030   */\n      mstore\n        /* \"#utility.yul\":10066:10068   */\n      0x23\n        /* \"#utility.yul\":10046:10064   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10039:10069   */\n      mstore\n        /* \"#utility.yul\":10105:10139   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":10085:10103   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10078:10140   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":10156:10174   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10149:10182   */\n      mstore\n        /* \"#utility.yul\":10199:10218   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_204\n        /* \"#utility.yul\":9825:10224   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_434:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8169  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8132:8151  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8169  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8163  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8169  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8187:8208  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_438\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12697:12699   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12679:12700   */\n      mstore\n        /* \"#utility.yul\":12736:12738   */\n      0x26\n        /* \"#utility.yul\":12716:12734   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12709:12739   */\n      mstore\n        /* \"#utility.yul\":12775:12809   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12755:12773   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12748:12810   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":12826:12844   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12819:12855   */\n      mstore\n        /* \"#utility.yul\":12872:12891   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_204\n        /* \"#utility.yul\":12495:12897   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_438:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8300  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8294  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8300  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8303:8323  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8323  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8356  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8366  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8317:8323  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8300  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8366  _balances[to] += amount */\n      tag_441\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8317:8323  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8366  _balances[to] += amount */\n      tag_233\n      jump\t// in\n    tag_441:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8397:8399  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8391:8395  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8401:8407  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_442\n      swap2\n        /* \"#utility.yul\":17606:17631   */\n      dup2\n      mstore\n        /* \"#utility.yul\":17594:17596   */\n      0x20\n        /* \"#utility.yul\":17579:17597   */\n      add\n      swap1\n        /* \"#utility.yul\":17460:17637   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n    tag_442:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8419:8456  _afterTokenTransfer(from, to, amount) */\n      tag_402\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9448:10024  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_371:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_445\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_368\n      jump\t// in\n    tag_445:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2269:2428  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_377:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_451\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_368\n      jump\t// in\n    tag_451:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2381:2394  _name = name_ */\n      dup2\n      mload\n      tag_454\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2381:2386  _name */\n      0x36\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2381:2394  _name = name_ */\n      0x20\n      dup6\n      add\n      swap1\n      tag_219\n      jump\t// in\n    tag_454:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2404:2421  _symbol = symbol_ */\n      dup1\n      mload\n      tag_421\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2404:2411  _symbol */\n      0x37\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2404:2421  _symbol = symbol_ */\n      0x20\n      dup5\n      add\n      swap1\n      tag_219\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":692:850  function __ERC20Capped_init_unchained(uint256 cap_) internal onlyInitializing {... */\n    tag_383:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_457\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_368\n      jump\t// in\n    tag_457:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":795:796  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":788:792  cap_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":788:796  cap_ > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":780:822  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n      tag_460\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10431:10433   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":780:822  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10413:10434   */\n      mstore\n        /* \"#utility.yul\":10470:10472   */\n      0x15\n        /* \"#utility.yul\":10450:10468   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10443:10473   */\n      mstore\n      shl(0x5c, 0x045524332304361707065643a20636170206973203)\n        /* \"#utility.yul\":10489:10507   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10482:10533   */\n      mstore\n        /* \"#utility.yul\":10550:10568   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":780:822  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n      tag_204\n        /* \"#utility.yul\":10229:10574   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":780:822  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n    tag_460:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":832:836  _cap */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":832:843  _cap = cap_ */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":692:850  function __ERC20Capped_init_unchained(uint256 cap_) internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8739:9128  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_392:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8822:8843  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8814:8879  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_464\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17302:17304   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8814:8879  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17284:17305   */\n      mstore\n        /* \"#utility.yul\":17341:17343   */\n      0x1f\n        /* \"#utility.yul\":17321:17339   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17314:17344   */\n      mstore\n        /* \"#utility.yul\":17380:17413   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":17360:17378   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17353:17414   */\n      mstore\n        /* \"#utility.yul\":17431:17449   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8814:8879  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_204\n        /* \"#utility.yul\":17100:17455   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8814:8879  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_464:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8966:8972  amount */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8950:8962  _totalSupply */\n      0x35\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8950:8972  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_468\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_468:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8982:9000  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8982:8991  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8982:9000  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8982:9010  _balances[account] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9004:9010  amount */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8982:9000  _balances[account] */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8982:9010  _balances[account] += amount */\n      tag_469\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9004:9010  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8982:9010  _balances[account] += amount */\n      tag_233\n      jump\t// in\n    tag_469:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9025:9062  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":17606:17631   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9025:9062  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9042:9043  0 */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9025:9062  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":17594:17596   */\n      0x20\n        /* \"#utility.yul\":17579:17597   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9025:9062  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2116:2263  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n    tag_219:\n      dup3\n      dup1\n      sload\n      tag_474\n      swap1\n      tag_178\n      jump\t// in\n    tag_474:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_476\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_479)\n    tag_476:\n      dup3\n      0x1f\n      lt\n      tag_477\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_479)\n    tag_477:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_479\n      jumpi\n      swap2\n      dup3\n      add\n    tag_478:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_479\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_478)\n    tag_479:\n      pop\n      tag_480\n      swap3\n      swap2\n      pop\n      tag_481\n      jump\t// in\n    tag_480:\n      pop\n      swap1\n      jump\t// out\n    tag_259:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_262\n      swap2\n      swap1\n      tag_481\n      jump\t// in\n    tag_261:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_479\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_485:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_479\n      jumpi\n      dup3\n      mload\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_485)\n    tag_481:\n    tag_488:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_480\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_488)\n        /* \"#utility.yul\":14:687   */\n    tag_491:\n        /* \"#utility.yul\":68:73   */\n      0x00\n        /* \"#utility.yul\":121:124   */\n      dup3\n        /* \"#utility.yul\":114:118   */\n      0x1f\n        /* \"#utility.yul\":106:112   */\n      dup4\n        /* \"#utility.yul\":102:119   */\n      add\n        /* \"#utility.yul\":98:125   */\n      slt\n        /* \"#utility.yul\":88:143   */\n      tag_493\n      jumpi\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":136:137   */\n      dup1\n        /* \"#utility.yul\":129:141   */\n      revert\n        /* \"#utility.yul\":88:143   */\n    tag_493:\n        /* \"#utility.yul\":175:181   */\n      dup2\n        /* \"#utility.yul\":162:182   */\n      calldataload\n        /* \"#utility.yul\":201:205   */\n      0x20\n        /* \"#utility.yul\":225:285   */\n      tag_494\n        /* \"#utility.yul\":241:284   */\n      tag_495\n        /* \"#utility.yul\":281:283   */\n      dup4\n        /* \"#utility.yul\":241:284   */\n      tag_496\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":225:285   */\n      tag_497\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":307:310   */\n      dup1\n        /* \"#utility.yul\":331:333   */\n      dup4\n        /* \"#utility.yul\":326:329   */\n      dup3\n        /* \"#utility.yul\":319:334   */\n      mstore\n        /* \"#utility.yul\":359:361   */\n      dup3\n        /* \"#utility.yul\":354:357   */\n      dup3\n        /* \"#utility.yul\":350:362   */\n      add\n        /* \"#utility.yul\":343:362   */\n      swap2\n      pop\n        /* \"#utility.yul\":394:396   */\n      dup3\n        /* \"#utility.yul\":386:392   */\n      dup7\n        /* \"#utility.yul\":382:397   */\n      add\n        /* \"#utility.yul\":446:449   */\n      dup8\n        /* \"#utility.yul\":441:443   */\n      dup5\n        /* \"#utility.yul\":435:437   */\n      dup7\n        /* \"#utility.yul\":432:433   */\n      0x05\n        /* \"#utility.yul\":428:438   */\n      shl\n        /* \"#utility.yul\":420:426   */\n      dup10\n        /* \"#utility.yul\":416:439   */\n      add\n        /* \"#utility.yul\":412:444   */\n      add\n        /* \"#utility.yul\":409:450   */\n      gt\n        /* \"#utility.yul\":406:467   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":463:464   */\n      0x00\n        /* \"#utility.yul\":460:461   */\n      dup1\n        /* \"#utility.yul\":453:465   */\n      revert\n        /* \"#utility.yul\":406:467   */\n    tag_498:\n        /* \"#utility.yul\":485:486   */\n      0x00\n        /* \"#utility.yul\":495:658   */\n    tag_499:\n        /* \"#utility.yul\":509:511   */\n      dup6\n        /* \"#utility.yul\":506:507   */\n      dup2\n        /* \"#utility.yul\":503:512   */\n      lt\n        /* \"#utility.yul\":495:658   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":566:583   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":554:584   */\n      dup5\n      mstore\n        /* \"#utility.yul\":604:616   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":636:648   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":527:528   */\n      0x01\n        /* \"#utility.yul\":520:529   */\n      add\n        /* \"#utility.yul\":495:658   */\n      jump(tag_499)\n    tag_501:\n      pop\n        /* \"#utility.yul\":676:681   */\n      swap1\n      swap8\n        /* \"#utility.yul\":14:687   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":692:1223   */\n    tag_502:\n        /* \"#utility.yul\":735:740   */\n      0x00\n        /* \"#utility.yul\":788:791   */\n      dup3\n        /* \"#utility.yul\":781:785   */\n      0x1f\n        /* \"#utility.yul\":773:779   */\n      dup4\n        /* \"#utility.yul\":769:786   */\n      add\n        /* \"#utility.yul\":765:792   */\n      slt\n        /* \"#utility.yul\":755:810   */\n      tag_504\n      jumpi\n        /* \"#utility.yul\":806:807   */\n      0x00\n        /* \"#utility.yul\":803:804   */\n      dup1\n        /* \"#utility.yul\":796:808   */\n      revert\n        /* \"#utility.yul\":755:810   */\n    tag_504:\n        /* \"#utility.yul\":842:848   */\n      dup2\n        /* \"#utility.yul\":829:849   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":864:866   */\n      dup2\n        /* \"#utility.yul\":861:887   */\n      gt\n        /* \"#utility.yul\":858:910   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":890:908   */\n      tag_506\n      tag_507\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":934:989   */\n      tag_508\n        /* \"#utility.yul\":977:979   */\n      0x1f\n        /* \"#utility.yul\":958:971   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":954:981   */\n      and\n        /* \"#utility.yul\":983:987   */\n      0x20\n        /* \"#utility.yul\":950:988   */\n      add\n        /* \"#utility.yul\":934:989   */\n      tag_497\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":1014:1016   */\n      dup2\n        /* \"#utility.yul\":1005:1012   */\n      dup2\n        /* \"#utility.yul\":998:1017   */\n      mstore\n        /* \"#utility.yul\":1060:1063   */\n      dup5\n        /* \"#utility.yul\":1053:1057   */\n      0x20\n        /* \"#utility.yul\":1048:1050   */\n      dup4\n        /* \"#utility.yul\":1040:1046   */\n      dup7\n        /* \"#utility.yul\":1036:1051   */\n      add\n        /* \"#utility.yul\":1032:1058   */\n      add\n        /* \"#utility.yul\":1029:1064   */\n      gt\n        /* \"#utility.yul\":1026:1081   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":1077:1078   */\n      0x00\n        /* \"#utility.yul\":1074:1075   */\n      dup1\n        /* \"#utility.yul\":1067:1079   */\n      revert\n        /* \"#utility.yul\":1026:1081   */\n    tag_509:\n        /* \"#utility.yul\":1142:1144   */\n      dup2\n        /* \"#utility.yul\":1135:1139   */\n      0x20\n        /* \"#utility.yul\":1127:1133   */\n      dup6\n        /* \"#utility.yul\":1123:1140   */\n      add\n        /* \"#utility.yul\":1116:1120   */\n      0x20\n        /* \"#utility.yul\":1107:1114   */\n      dup4\n        /* \"#utility.yul\":1103:1121   */\n      add\n        /* \"#utility.yul\":1090:1145   */\n      calldatacopy\n        /* \"#utility.yul\":1190:1191   */\n      0x00\n        /* \"#utility.yul\":1165:1181   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1183:1187   */\n      0x20\n        /* \"#utility.yul\":1161:1188   */\n      add\n        /* \"#utility.yul\":1154:1192   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1169:1176   */\n      swap4\n        /* \"#utility.yul\":692:1223   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1228:1384   */\n    tag_510:\n        /* \"#utility.yul\":1294:1314   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1354:1358   */\n      0xff\n        /* \"#utility.yul\":1343:1359   */\n      dup2\n      and\n        /* \"#utility.yul\":1333:1360   */\n      dup2\n      eq\n        /* \"#utility.yul\":1323:1378   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":1374:1375   */\n      0x00\n        /* \"#utility.yul\":1371:1372   */\n      dup1\n        /* \"#utility.yul\":1364:1376   */\n      revert\n        /* \"#utility.yul\":1323:1378   */\n    tag_512:\n        /* \"#utility.yul\":1228:1384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1389:1636   */\n    tag_48:\n        /* \"#utility.yul\":1448:1454   */\n      0x00\n        /* \"#utility.yul\":1501:1503   */\n      0x20\n        /* \"#utility.yul\":1489:1498   */\n      dup3\n        /* \"#utility.yul\":1480:1487   */\n      dup5\n        /* \"#utility.yul\":1476:1499   */\n      sub\n        /* \"#utility.yul\":1472:1504   */\n      slt\n        /* \"#utility.yul\":1469:1521   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":1517:1518   */\n      0x00\n        /* \"#utility.yul\":1514:1515   */\n      dup1\n        /* \"#utility.yul\":1507:1519   */\n      revert\n        /* \"#utility.yul\":1469:1521   */\n    tag_514:\n        /* \"#utility.yul\":1556:1565   */\n      dup2\n        /* \"#utility.yul\":1543:1566   */\n      calldataload\n        /* \"#utility.yul\":1575:1606   */\n      tag_351\n        /* \"#utility.yul\":1600:1605   */\n      dup2\n        /* \"#utility.yul\":1575:1606   */\n      tag_516\n      jump\t// in\n        /* \"#utility.yul\":1641:3369   */\n    tag_161:\n        /* \"#utility.yul\":1835:1841   */\n      0x00\n        /* \"#utility.yul\":1843:1849   */\n      dup1\n        /* \"#utility.yul\":1851:1857   */\n      0x00\n        /* \"#utility.yul\":1859:1865   */\n      dup1\n        /* \"#utility.yul\":1867:1873   */\n      0x00\n        /* \"#utility.yul\":1875:1881   */\n      dup1\n        /* \"#utility.yul\":1883:1889   */\n      0x00\n        /* \"#utility.yul\":1936:1939   */\n      0xe0\n        /* \"#utility.yul\":1924:1933   */\n      dup9\n        /* \"#utility.yul\":1915:1922   */\n      dup11\n        /* \"#utility.yul\":1911:1934   */\n      sub\n        /* \"#utility.yul\":1907:1940   */\n      slt\n        /* \"#utility.yul\":1904:1957   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":1953:1954   */\n      0x00\n        /* \"#utility.yul\":1950:1951   */\n      dup1\n        /* \"#utility.yul\":1943:1955   */\n      revert\n        /* \"#utility.yul\":1904:1957   */\n    tag_518:\n        /* \"#utility.yul\":1992:2001   */\n      dup8\n        /* \"#utility.yul\":1979:2002   */\n      calldataload\n        /* \"#utility.yul\":2011:2042   */\n      tag_519\n        /* \"#utility.yul\":2036:2041   */\n      dup2\n        /* \"#utility.yul\":2011:2042   */\n      tag_516\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":2061:2066   */\n      swap7\n      pop\n        /* \"#utility.yul\":2085:2087   */\n      0x20\n        /* \"#utility.yul\":2119:2137   */\n      dup9\n      dup2\n      add\n        /* \"#utility.yul\":2106:2138   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":2185:2187   */\n      0x40\n        /* \"#utility.yul\":2170:2188   */\n      dup10\n      add\n        /* \"#utility.yul\":2157:2189   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2236:2238   */\n      0x60\n        /* \"#utility.yul\":2221:2239   */\n      dup10\n      add\n        /* \"#utility.yul\":2208:2240   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":2291:2294   */\n      0x80\n        /* \"#utility.yul\":2276:2295   */\n      dup10\n      add\n        /* \"#utility.yul\":2263:2296   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2345:2359   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2342:2376   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":2372:2373   */\n      0x00\n        /* \"#utility.yul\":2369:2370   */\n      dup1\n        /* \"#utility.yul\":2362:2374   */\n      revert\n        /* \"#utility.yul\":2342:2376   */\n    tag_520:\n        /* \"#utility.yul\":2410:2416   */\n      dup2\n        /* \"#utility.yul\":2399:2408   */\n      dup12\n        /* \"#utility.yul\":2395:2417   */\n      add\n        /* \"#utility.yul\":2385:2417   */\n      swap2\n      pop\n        /* \"#utility.yul\":2455:2462   */\n      dup12\n        /* \"#utility.yul\":2448:2452   */\n      0x1f\n        /* \"#utility.yul\":2444:2446   */\n      dup4\n        /* \"#utility.yul\":2440:2453   */\n      add\n        /* \"#utility.yul\":2436:2463   */\n      slt\n        /* \"#utility.yul\":2426:2481   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":2477:2478   */\n      0x00\n        /* \"#utility.yul\":2474:2475   */\n      dup1\n        /* \"#utility.yul\":2467:2479   */\n      revert\n        /* \"#utility.yul\":2426:2481   */\n    tag_521:\n        /* \"#utility.yul\":2513:2515   */\n      dup2\n        /* \"#utility.yul\":2500:2516   */\n      calldataload\n        /* \"#utility.yul\":2536:2596   */\n      tag_522\n        /* \"#utility.yul\":2552:2595   */\n      tag_495\n        /* \"#utility.yul\":2592:2594   */\n      dup3\n        /* \"#utility.yul\":2552:2595   */\n      tag_496\n      jump\t// in\n        /* \"#utility.yul\":2536:2596   */\n    tag_522:\n        /* \"#utility.yul\":2618:2621   */\n      dup1\n        /* \"#utility.yul\":2642:2644   */\n      dup3\n        /* \"#utility.yul\":2637:2640   */\n      dup3\n        /* \"#utility.yul\":2630:2645   */\n      mstore\n        /* \"#utility.yul\":2670:2672   */\n      dup6\n        /* \"#utility.yul\":2665:2668   */\n      dup3\n        /* \"#utility.yul\":2661:2673   */\n      add\n        /* \"#utility.yul\":2654:2673   */\n      swap2\n      pop\n        /* \"#utility.yul\":2701:2703   */\n      dup6\n        /* \"#utility.yul\":2697:2699   */\n      dup6\n        /* \"#utility.yul\":2693:2704   */\n      add\n        /* \"#utility.yul\":2749:2756   */\n      dup16\n        /* \"#utility.yul\":2744:2746   */\n      dup8\n        /* \"#utility.yul\":2738:2740   */\n      dup6\n        /* \"#utility.yul\":2735:2736   */\n      0x05\n        /* \"#utility.yul\":2731:2741   */\n      shl\n        /* \"#utility.yul\":2727:2729   */\n      dup9\n        /* \"#utility.yul\":2723:2742   */\n      add\n        /* \"#utility.yul\":2719:2747   */\n      add\n        /* \"#utility.yul\":2716:2757   */\n      gt\n        /* \"#utility.yul\":2713:2774   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":2770:2771   */\n      0x00\n        /* \"#utility.yul\":2767:2768   */\n      dup1\n        /* \"#utility.yul\":2760:2772   */\n      revert\n        /* \"#utility.yul\":2713:2774   */\n    tag_524:\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2783:2793   */\n      swap6\n      pop\n        /* \"#utility.yul\":2802:2969   */\n    tag_525:\n        /* \"#utility.yul\":2816:2818   */\n      dup4\n        /* \"#utility.yul\":2813:2814   */\n      dup7\n        /* \"#utility.yul\":2810:2819   */\n      lt\n        /* \"#utility.yul\":2802:2969   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":2873:2894   */\n      tag_528\n        /* \"#utility.yul\":2890:2893   */\n      dup2\n        /* \"#utility.yul\":2873:2894   */\n      tag_510\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":2861:2895   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2834:2835   */\n      0x01\n        /* \"#utility.yul\":2827:2836   */\n      swap6\n      swap1\n      swap6\n      add\n      swap5\n        /* \"#utility.yul\":2915:2927   */\n      swap2\n      dup7\n      add\n      swap2\n        /* \"#utility.yul\":2947:2959   */\n      dup7\n      add\n        /* \"#utility.yul\":2802:2969   */\n      jump(tag_525)\n    tag_527:\n      pop\n        /* \"#utility.yul\":2988:2993   */\n      swap8\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3046:3049   */\n      0xa0\n        /* \"#utility.yul\":3031:3050   */\n      dup12\n      add\n        /* \"#utility.yul\":3018:3051   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":3063:3079   */\n      dup1\n      dup4\n      gt\n        /* \"#utility.yul\":3060:3096   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":3092:3093   */\n      0x00\n        /* \"#utility.yul\":3089:3090   */\n      dup1\n        /* \"#utility.yul\":3082:3094   */\n      revert\n        /* \"#utility.yul\":3060:3096   */\n    tag_529:\n        /* \"#utility.yul\":3115:3178   */\n      tag_530\n        /* \"#utility.yul\":3170:3177   */\n      dup13\n        /* \"#utility.yul\":3159:3167   */\n      dup5\n        /* \"#utility.yul\":3148:3157   */\n      dup14\n        /* \"#utility.yul\":3144:3168   */\n      add\n        /* \"#utility.yul\":3115:3178   */\n      tag_491\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":3105:3178   */\n      swap5\n      pop\n        /* \"#utility.yul\":3231:3234   */\n      0xc0\n        /* \"#utility.yul\":3220:3229   */\n      dup12\n        /* \"#utility.yul\":3216:3235   */\n      add\n        /* \"#utility.yul\":3203:3236   */\n      calldataload\n        /* \"#utility.yul\":3187:3236   */\n      swap3\n      pop\n        /* \"#utility.yul\":3261:3263   */\n      dup1\n        /* \"#utility.yul\":3251:3259   */\n      dup4\n        /* \"#utility.yul\":3248:3264   */\n      gt\n        /* \"#utility.yul\":3245:3281   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":3277:3278   */\n      0x00\n        /* \"#utility.yul\":3274:3275   */\n      dup1\n        /* \"#utility.yul\":3267:3279   */\n      revert\n        /* \"#utility.yul\":3245:3281   */\n    tag_531:\n      pop\n      pop\n        /* \"#utility.yul\":3300:3363   */\n      tag_532\n        /* \"#utility.yul\":3355:3362   */\n      dup11\n        /* \"#utility.yul\":3344:3352   */\n      dup3\n        /* \"#utility.yul\":3333:3342   */\n      dup12\n        /* \"#utility.yul\":3329:3353   */\n      add\n        /* \"#utility.yul\":3300:3363   */\n      tag_491\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":3290:3363   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1641:3369   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3374:3762   */\n    tag_155:\n        /* \"#utility.yul\":3442:3448   */\n      0x00\n        /* \"#utility.yul\":3450:3456   */\n      dup1\n        /* \"#utility.yul\":3503:3505   */\n      0x40\n        /* \"#utility.yul\":3491:3500   */\n      dup4\n        /* \"#utility.yul\":3482:3489   */\n      dup6\n        /* \"#utility.yul\":3478:3501   */\n      sub\n        /* \"#utility.yul\":3474:3506   */\n      slt\n        /* \"#utility.yul\":3471:3523   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":3519:3520   */\n      0x00\n        /* \"#utility.yul\":3516:3517   */\n      dup1\n        /* \"#utility.yul\":3509:3521   */\n      revert\n        /* \"#utility.yul\":3471:3523   */\n    tag_534:\n        /* \"#utility.yul\":3558:3567   */\n      dup3\n        /* \"#utility.yul\":3545:3568   */\n      calldataload\n        /* \"#utility.yul\":3577:3608   */\n      tag_535\n        /* \"#utility.yul\":3602:3607   */\n      dup2\n        /* \"#utility.yul\":3577:3608   */\n      tag_516\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":3627:3632   */\n      swap2\n      pop\n        /* \"#utility.yul\":3684:3686   */\n      0x20\n        /* \"#utility.yul\":3669:3687   */\n      dup4\n      add\n        /* \"#utility.yul\":3656:3688   */\n      calldataload\n        /* \"#utility.yul\":3697:3730   */\n      tag_536\n        /* \"#utility.yul\":3656:3688   */\n      dup2\n        /* \"#utility.yul\":3697:3730   */\n      tag_516\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":3749:3756   */\n      dup1\n        /* \"#utility.yul\":3739:3756   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3374:3762   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3767:4223   */\n    tag_71:\n        /* \"#utility.yul\":3844:3850   */\n      0x00\n        /* \"#utility.yul\":3852:3858   */\n      dup1\n        /* \"#utility.yul\":3860:3866   */\n      0x00\n        /* \"#utility.yul\":3913:3915   */\n      0x60\n        /* \"#utility.yul\":3901:3910   */\n      dup5\n        /* \"#utility.yul\":3892:3899   */\n      dup7\n        /* \"#utility.yul\":3888:3911   */\n      sub\n        /* \"#utility.yul\":3884:3916   */\n      slt\n        /* \"#utility.yul\":3881:3933   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":3929:3930   */\n      0x00\n        /* \"#utility.yul\":3926:3927   */\n      dup1\n        /* \"#utility.yul\":3919:3931   */\n      revert\n        /* \"#utility.yul\":3881:3933   */\n    tag_538:\n        /* \"#utility.yul\":3968:3977   */\n      dup4\n        /* \"#utility.yul\":3955:3978   */\n      calldataload\n        /* \"#utility.yul\":3987:4018   */\n      tag_539\n        /* \"#utility.yul\":4012:4017   */\n      dup2\n        /* \"#utility.yul\":3987:4018   */\n      tag_516\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":4037:4042   */\n      swap3\n      pop\n        /* \"#utility.yul\":4094:4096   */\n      0x20\n        /* \"#utility.yul\":4079:4097   */\n      dup5\n      add\n        /* \"#utility.yul\":4066:4098   */\n      calldataload\n        /* \"#utility.yul\":4107:4140   */\n      tag_540\n        /* \"#utility.yul\":4066:4098   */\n      dup2\n        /* \"#utility.yul\":4107:4140   */\n      tag_516\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":3767:4223   */\n      swap3\n      swap6\n        /* \"#utility.yul\":4159:4166   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4213:4215   */\n      0x40\n        /* \"#utility.yul\":4198:4216   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4185:4217   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":3767:4223   */\n      jump\t// out\n        /* \"#utility.yul\":4228:4543   */\n    tag_55:\n        /* \"#utility.yul\":4296:4302   */\n      0x00\n        /* \"#utility.yul\":4304:4310   */\n      dup1\n        /* \"#utility.yul\":4357:4359   */\n      0x40\n        /* \"#utility.yul\":4345:4354   */\n      dup4\n        /* \"#utility.yul\":4336:4343   */\n      dup6\n        /* \"#utility.yul\":4332:4355   */\n      sub\n        /* \"#utility.yul\":4328:4360   */\n      slt\n        /* \"#utility.yul\":4325:4377   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":4373:4374   */\n      0x00\n        /* \"#utility.yul\":4370:4371   */\n      dup1\n        /* \"#utility.yul\":4363:4375   */\n      revert\n        /* \"#utility.yul\":4325:4377   */\n    tag_542:\n        /* \"#utility.yul\":4412:4421   */\n      dup3\n        /* \"#utility.yul\":4399:4422   */\n      calldataload\n        /* \"#utility.yul\":4431:4462   */\n      tag_543\n        /* \"#utility.yul\":4456:4461   */\n      dup2\n        /* \"#utility.yul\":4431:4462   */\n      tag_516\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":4481:4486   */\n      swap5\n        /* \"#utility.yul\":4533:4535   */\n      0x20\n        /* \"#utility.yul\":4518:4536   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4505:4537   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4228:4543   */\n      jump\t// out\n        /* \"#utility.yul\":4548:5525   */\n    tag_123:\n        /* \"#utility.yul\":4632:4638   */\n      0x00\n        /* \"#utility.yul\":4663:4665   */\n      0x20\n        /* \"#utility.yul\":4706:4708   */\n      dup1\n        /* \"#utility.yul\":4694:4703   */\n      dup4\n        /* \"#utility.yul\":4685:4692   */\n      dup6\n        /* \"#utility.yul\":4681:4704   */\n      sub\n        /* \"#utility.yul\":4677:4709   */\n      slt\n        /* \"#utility.yul\":4674:4726   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":4722:4723   */\n      0x00\n        /* \"#utility.yul\":4719:4720   */\n      dup1\n        /* \"#utility.yul\":4712:4724   */\n      revert\n        /* \"#utility.yul\":4674:4726   */\n    tag_545:\n        /* \"#utility.yul\":4762:4771   */\n      dup3\n        /* \"#utility.yul\":4749:4772   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4787:4793   */\n      dup2\n        /* \"#utility.yul\":4784:4814   */\n      gt\n        /* \"#utility.yul\":4781:4831   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":4827:4828   */\n      0x00\n        /* \"#utility.yul\":4824:4825   */\n      dup1\n        /* \"#utility.yul\":4817:4829   */\n      revert\n        /* \"#utility.yul\":4781:4831   */\n    tag_546:\n        /* \"#utility.yul\":4850:4872   */\n      dup4\n      add\n        /* \"#utility.yul\":4903:4907   */\n      0x1f\n        /* \"#utility.yul\":4895:4908   */\n      dup2\n      add\n        /* \"#utility.yul\":4891:4918   */\n      dup6\n      sgt\n        /* \"#utility.yul\":4881:4936   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":4932:4933   */\n      0x00\n        /* \"#utility.yul\":4929:4930   */\n      dup1\n        /* \"#utility.yul\":4922:4934   */\n      revert\n        /* \"#utility.yul\":4881:4936   */\n    tag_547:\n        /* \"#utility.yul\":4968:4970   */\n      dup1\n        /* \"#utility.yul\":4955:4971   */\n      calldataload\n        /* \"#utility.yul\":4991:5051   */\n      tag_548\n        /* \"#utility.yul\":5007:5050   */\n      tag_495\n        /* \"#utility.yul\":5047:5049   */\n      dup3\n        /* \"#utility.yul\":5007:5050   */\n      tag_496\n      jump\t// in\n        /* \"#utility.yul\":4991:5051   */\n    tag_548:\n        /* \"#utility.yul\":5073:5076   */\n      dup1\n        /* \"#utility.yul\":5097:5099   */\n      dup3\n        /* \"#utility.yul\":5092:5095   */\n      dup3\n        /* \"#utility.yul\":5085:5100   */\n      mstore\n        /* \"#utility.yul\":5125:5127   */\n      dup5\n        /* \"#utility.yul\":5120:5123   */\n      dup3\n        /* \"#utility.yul\":5116:5128   */\n      add\n        /* \"#utility.yul\":5109:5128   */\n      swap2\n      pop\n        /* \"#utility.yul\":5156:5158   */\n      dup5\n        /* \"#utility.yul\":5152:5154   */\n      dup5\n        /* \"#utility.yul\":5148:5159   */\n      add\n        /* \"#utility.yul\":5204:5211   */\n      dup9\n        /* \"#utility.yul\":5199:5201   */\n      dup7\n        /* \"#utility.yul\":5193:5195   */\n      dup6\n        /* \"#utility.yul\":5190:5191   */\n      0x05\n        /* \"#utility.yul\":5186:5196   */\n      shl\n        /* \"#utility.yul\":5182:5184   */\n      dup8\n        /* \"#utility.yul\":5178:5197   */\n      add\n        /* \"#utility.yul\":5174:5202   */\n      add\n        /* \"#utility.yul\":5171:5212   */\n      gt\n        /* \"#utility.yul\":5168:5229   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":5225:5226   */\n      0x00\n        /* \"#utility.yul\":5222:5223   */\n      dup1\n        /* \"#utility.yul\":5215:5227   */\n      revert\n        /* \"#utility.yul\":5168:5229   */\n    tag_550:\n        /* \"#utility.yul\":5247:5248   */\n      0x00\n        /* \"#utility.yul\":5238:5248   */\n      swap5\n      pop\n        /* \"#utility.yul\":5257:5495   */\n    tag_551:\n        /* \"#utility.yul\":5271:5273   */\n      dup4\n        /* \"#utility.yul\":5268:5269   */\n      dup6\n        /* \"#utility.yul\":5265:5274   */\n      lt\n        /* \"#utility.yul\":5257:5495   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":5342:5345   */\n      dup1\n        /* \"#utility.yul\":5329:5346   */\n      calldataload\n        /* \"#utility.yul\":5359:5390   */\n      tag_554\n        /* \"#utility.yul\":5384:5389   */\n      dup2\n        /* \"#utility.yul\":5359:5390   */\n      tag_516\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":5403:5421   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5289:5290   */\n      0x01\n        /* \"#utility.yul\":5282:5291   */\n      swap5\n      swap1\n      swap5\n      add\n      swap4\n        /* \"#utility.yul\":5441:5453   */\n      swap2\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":5473:5485   */\n      dup6\n      add\n        /* \"#utility.yul\":5257:5495   */\n      jump(tag_551)\n    tag_553:\n      pop\n        /* \"#utility.yul\":5514:5519   */\n      swap8\n        /* \"#utility.yul\":4548:5525   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:6350   */\n    tag_77:\n        /* \"#utility.yul\":5652:5658   */\n      0x00\n        /* \"#utility.yul\":5660:5666   */\n      dup1\n        /* \"#utility.yul\":5668:5674   */\n      0x00\n        /* \"#utility.yul\":5676:5682   */\n      dup1\n        /* \"#utility.yul\":5684:5690   */\n      0x00\n        /* \"#utility.yul\":5692:5698   */\n      dup1\n        /* \"#utility.yul\":5745:5748   */\n      0xc0\n        /* \"#utility.yul\":5733:5742   */\n      dup8\n        /* \"#utility.yul\":5724:5731   */\n      dup10\n        /* \"#utility.yul\":5720:5743   */\n      sub\n        /* \"#utility.yul\":5716:5749   */\n      slt\n        /* \"#utility.yul\":5713:5766   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":5762:5763   */\n      0x00\n        /* \"#utility.yul\":5759:5760   */\n      dup1\n        /* \"#utility.yul\":5752:5764   */\n      revert\n        /* \"#utility.yul\":5713:5766   */\n    tag_556:\n        /* \"#utility.yul\":5802:5811   */\n      dup7\n        /* \"#utility.yul\":5789:5812   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5872:5874   */\n      dup1\n        /* \"#utility.yul\":5864:5870   */\n      dup3\n        /* \"#utility.yul\":5861:5875   */\n      gt\n        /* \"#utility.yul\":5858:5892   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":5888:5889   */\n      0x00\n        /* \"#utility.yul\":5885:5886   */\n      dup1\n        /* \"#utility.yul\":5878:5890   */\n      revert\n        /* \"#utility.yul\":5858:5892   */\n    tag_557:\n        /* \"#utility.yul\":5911:5961   */\n      tag_558\n        /* \"#utility.yul\":5953:5960   */\n      dup11\n        /* \"#utility.yul\":5944:5950   */\n      dup4\n        /* \"#utility.yul\":5933:5942   */\n      dup12\n        /* \"#utility.yul\":5929:5951   */\n      add\n        /* \"#utility.yul\":5911:5961   */\n      tag_502\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":5901:5961   */\n      swap8\n      pop\n        /* \"#utility.yul\":6014:6016   */\n      0x20\n        /* \"#utility.yul\":6003:6012   */\n      dup10\n        /* \"#utility.yul\":5999:6017   */\n      add\n        /* \"#utility.yul\":5986:6018   */\n      calldataload\n        /* \"#utility.yul\":5970:6018   */\n      swap2\n      pop\n        /* \"#utility.yul\":6043:6045   */\n      dup1\n        /* \"#utility.yul\":6033:6041   */\n      dup3\n        /* \"#utility.yul\":6030:6046   */\n      gt\n        /* \"#utility.yul\":6027:6063   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":6059:6060   */\n      0x00\n        /* \"#utility.yul\":6056:6057   */\n      dup1\n        /* \"#utility.yul\":6049:6061   */\n      revert\n        /* \"#utility.yul\":6027:6063   */\n    tag_559:\n      pop\n        /* \"#utility.yul\":6082:6134   */\n      tag_560\n        /* \"#utility.yul\":6126:6133   */\n      dup10\n        /* \"#utility.yul\":6115:6123   */\n      dup3\n        /* \"#utility.yul\":6104:6113   */\n      dup11\n        /* \"#utility.yul\":6100:6124   */\n      add\n        /* \"#utility.yul\":6082:6134   */\n      tag_502\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":6072:6134   */\n      swap6\n      pop\n      pop\n        /* \"#utility.yul\":6153:6189   */\n      tag_561\n        /* \"#utility.yul\":6185:6187   */\n      0x40\n        /* \"#utility.yul\":6174:6183   */\n      dup9\n        /* \"#utility.yul\":6170:6188   */\n      add\n        /* \"#utility.yul\":6153:6189   */\n      tag_510\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":6143:6189   */\n      swap4\n      pop\n        /* \"#utility.yul\":6236:6238   */\n      0x60\n        /* \"#utility.yul\":6225:6234   */\n      dup8\n        /* \"#utility.yul\":6221:6239   */\n      add\n        /* \"#utility.yul\":6208:6240   */\n      calldataload\n        /* \"#utility.yul\":6198:6240   */\n      swap3\n      pop\n        /* \"#utility.yul\":6287:6290   */\n      0x80\n        /* \"#utility.yul\":6276:6285   */\n      dup8\n        /* \"#utility.yul\":6272:6291   */\n      add\n        /* \"#utility.yul\":6259:6292   */\n      calldataload\n        /* \"#utility.yul\":6249:6292   */\n      swap2\n      pop\n        /* \"#utility.yul\":6339:6342   */\n      0xa0\n        /* \"#utility.yul\":6328:6337   */\n      dup8\n        /* \"#utility.yul\":6324:6343   */\n      add\n        /* \"#utility.yul\":6311:6344   */\n      calldataload\n        /* \"#utility.yul\":6301:6344   */\n      swap1\n      pop\n        /* \"#utility.yul\":5530:6350   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":6355:6535   */\n    tag_142:\n        /* \"#utility.yul\":6414:6420   */\n      0x00\n        /* \"#utility.yul\":6467:6469   */\n      0x20\n        /* \"#utility.yul\":6455:6464   */\n      dup3\n        /* \"#utility.yul\":6446:6453   */\n      dup5\n        /* \"#utility.yul\":6442:6465   */\n      sub\n        /* \"#utility.yul\":6438:6470   */\n      slt\n        /* \"#utility.yul\":6435:6487   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":6483:6484   */\n      0x00\n        /* \"#utility.yul\":6480:6481   */\n      dup1\n        /* \"#utility.yul\":6473:6485   */\n      revert\n        /* \"#utility.yul\":6435:6487   */\n    tag_563:\n      pop\n        /* \"#utility.yul\":6506:6529   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":6355:6535   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7766:8424   */\n    tag_102:\n        /* \"#utility.yul\":7937:7939   */\n      0x20\n        /* \"#utility.yul\":7989:8010   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8059:8072   */\n      dup3\n      mload\n        /* \"#utility.yul\":7962:7980   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":8081:8103   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7908:7912   */\n      0x00\n      swap2\n        /* \"#utility.yul\":7937:7939   */\n      swap1\n        /* \"#utility.yul\":8160:8175   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":8134:8136   */\n      0x40\n        /* \"#utility.yul\":8119:8137   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":7908:7912   */\n      dup5\n        /* \"#utility.yul\":8203:8398   */\n    tag_568:\n        /* \"#utility.yul\":8217:8223   */\n      dup2\n        /* \"#utility.yul\":8214:8215   */\n      dup2\n        /* \"#utility.yul\":8211:8224   */\n      lt\n        /* \"#utility.yul\":8203:8398   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":8282:8295   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8278:8317   */\n      and\n        /* \"#utility.yul\":8266:8318   */\n      dup4\n      mstore\n        /* \"#utility.yul\":8373:8388   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":8338:8350   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":8314:8315   */\n      0x01\n        /* \"#utility.yul\":8232:8241   */\n      add\n        /* \"#utility.yul\":8203:8398   */\n      jump(tag_568)\n    tag_570:\n      pop\n        /* \"#utility.yul\":8415:8418   */\n      swap1\n      swap7\n        /* \"#utility.yul\":7766:8424   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9223:9820   */\n    tag_44:\n        /* \"#utility.yul\":9335:9339   */\n      0x00\n        /* \"#utility.yul\":9364:9366   */\n      0x20\n        /* \"#utility.yul\":9393:9395   */\n      dup1\n        /* \"#utility.yul\":9382:9391   */\n      dup4\n        /* \"#utility.yul\":9375:9396   */\n      mstore\n        /* \"#utility.yul\":9425:9431   */\n      dup4\n        /* \"#utility.yul\":9419:9432   */\n      mload\n        /* \"#utility.yul\":9468:9474   */\n      dup1\n        /* \"#utility.yul\":9463:9465   */\n      dup3\n        /* \"#utility.yul\":9452:9461   */\n      dup6\n        /* \"#utility.yul\":9448:9466   */\n      add\n        /* \"#utility.yul\":9441:9475   */\n      mstore\n        /* \"#utility.yul\":9493:9494   */\n      0x00\n        /* \"#utility.yul\":9503:9643   */\n    tag_575:\n        /* \"#utility.yul\":9517:9523   */\n      dup2\n        /* \"#utility.yul\":9514:9515   */\n      dup2\n        /* \"#utility.yul\":9511:9524   */\n      lt\n        /* \"#utility.yul\":9503:9643   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":9612:9626   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":9608:9631   */\n      dup4\n      add\n        /* \"#utility.yul\":9602:9632   */\n      mload\n        /* \"#utility.yul\":9578:9595   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":9597:9599   */\n      0x40\n        /* \"#utility.yul\":9574:9600   */\n      add\n        /* \"#utility.yul\":9567:9633   */\n      mstore\n        /* \"#utility.yul\":9532:9542   */\n      dup3\n      add\n        /* \"#utility.yul\":9503:9643   */\n      jump(tag_575)\n    tag_577:\n        /* \"#utility.yul\":9661:9667   */\n      dup2\n        /* \"#utility.yul\":9658:9659   */\n      dup2\n        /* \"#utility.yul\":9655:9668   */\n      gt\n        /* \"#utility.yul\":9652:9743   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":9731:9732   */\n      0x00\n        /* \"#utility.yul\":9726:9728   */\n      0x40\n        /* \"#utility.yul\":9717:9723   */\n      dup4\n        /* \"#utility.yul\":9706:9715   */\n      dup8\n        /* \"#utility.yul\":9702:9724   */\n      add\n        /* \"#utility.yul\":9698:9729   */\n      add\n        /* \"#utility.yul\":9691:9733   */\n      mstore\n        /* \"#utility.yul\":9652:9743   */\n    tag_578:\n      pop\n        /* \"#utility.yul\":9804:9806   */\n      0x1f\n        /* \"#utility.yul\":9783:9798   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":9779:9808   */\n      and\n        /* \"#utility.yul\":9764:9809   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":9811:9813   */\n      0x40\n        /* \"#utility.yul\":9760:9814   */\n      add\n      swap4\n        /* \"#utility.yul\":9223:9820   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16282:16689   */\n    tag_368:\n        /* \"#utility.yul\":16484:16486   */\n      0x20\n        /* \"#utility.yul\":16466:16487   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16523:16525   */\n      0x2b\n        /* \"#utility.yul\":16503:16521   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16496:16526   */\n      mstore\n        /* \"#utility.yul\":16562:16596   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":16557:16559   */\n      0x40\n        /* \"#utility.yul\":16542:16560   */\n      dup3\n      add\n        /* \"#utility.yul\":16535:16597   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":16628:16630   */\n      0x60\n        /* \"#utility.yul\":16613:16631   */\n      dup3\n      add\n        /* \"#utility.yul\":16606:16647   */\n      mstore\n        /* \"#utility.yul\":16679:16682   */\n      0x80\n        /* \"#utility.yul\":16664:16683   */\n      add\n      swap1\n        /* \"#utility.yul\":16282:16689   */\n      jump\t// out\n        /* \"#utility.yul\":17831:18106   */\n    tag_497:\n        /* \"#utility.yul\":17902:17904   */\n      0x40\n        /* \"#utility.yul\":17896:17905   */\n      mload\n        /* \"#utility.yul\":17967:17969   */\n      0x1f\n        /* \"#utility.yul\":17948:17961   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":17944:17971   */\n      and\n        /* \"#utility.yul\":17932:17972   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":17987:18021   */\n      dup2\n      gt\n        /* \"#utility.yul\":18023:18045   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":17984:18046   */\n      or\n        /* \"#utility.yul\":17981:18069   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":18049:18067   */\n      tag_603\n      tag_507\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":18085:18087   */\n      0x40\n        /* \"#utility.yul\":18078:18100   */\n      mstore\n        /* \"#utility.yul\":17831:18106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18111:18294   */\n    tag_496:\n        /* \"#utility.yul\":18171:18175   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":18196:18202   */\n      dup3\n        /* \"#utility.yul\":18193:18223   */\n      gt\n        /* \"#utility.yul\":18190:18246   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":18226:18244   */\n      tag_606\n      tag_507\n      jump\t// in\n    tag_606:\n      pop\n        /* \"#utility.yul\":18271:18272   */\n      0x05\n        /* \"#utility.yul\":18267:18281   */\n      shl\n        /* \"#utility.yul\":18283:18287   */\n      0x20\n        /* \"#utility.yul\":18263:18288   */\n      add\n      swap1\n        /* \"#utility.yul\":18111:18294   */\n      jump\t// out\n        /* \"#utility.yul\":18299:18427   */\n    tag_233:\n        /* \"#utility.yul\":18339:18342   */\n      0x00\n        /* \"#utility.yul\":18370:18371   */\n      dup3\n        /* \"#utility.yul\":18366:18372   */\n      not\n        /* \"#utility.yul\":18363:18364   */\n      dup3\n        /* \"#utility.yul\":18360:18373   */\n      gt\n        /* \"#utility.yul\":18357:18396   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":18376:18394   */\n      tag_609\n      tag_610\n      jump\t// in\n    tag_609:\n      pop\n        /* \"#utility.yul\":18412:18421   */\n      add\n      swap1\n        /* \"#utility.yul\":18299:18427   */\n      jump\t// out\n        /* \"#utility.yul\":18432:18649   */\n    tag_352:\n        /* \"#utility.yul\":18472:18473   */\n      0x00\n        /* \"#utility.yul\":18498:18499   */\n      dup3\n        /* \"#utility.yul\":18488:18620   */\n      tag_612\n      jumpi\n        /* \"#utility.yul\":18542:18552   */\n      0x4e487b71\n        /* \"#utility.yul\":18537:18540   */\n      0xe0\n        /* \"#utility.yul\":18533:18553   */\n      shl\n        /* \"#utility.yul\":18530:18531   */\n      0x00\n        /* \"#utility.yul\":18523:18554   */\n      mstore\n        /* \"#utility.yul\":18577:18581   */\n      0x12\n        /* \"#utility.yul\":18574:18575   */\n      0x04\n        /* \"#utility.yul\":18567:18582   */\n      mstore\n        /* \"#utility.yul\":18605:18609   */\n      0x24\n        /* \"#utility.yul\":18602:18603   */\n      0x00\n        /* \"#utility.yul\":18595:18610   */\n      revert\n        /* \"#utility.yul\":18488:18620   */\n    tag_612:\n      pop\n        /* \"#utility.yul\":18634:18643   */\n      div\n      swap1\n        /* \"#utility.yul\":18432:18649   */\n      jump\t// out\n        /* \"#utility.yul\":18654:19076   */\n    tag_613:\n        /* \"#utility.yul\":18743:18744   */\n      0x01\n        /* \"#utility.yul\":18786:18791   */\n      dup2\n        /* \"#utility.yul\":18743:18744   */\n      dup2\n        /* \"#utility.yul\":18800:19070   */\n    tag_615:\n        /* \"#utility.yul\":18821:18828   */\n      dup1\n        /* \"#utility.yul\":18811:18819   */\n      dup6\n        /* \"#utility.yul\":18808:18829   */\n      gt\n        /* \"#utility.yul\":18800:19070   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":18880:18884   */\n      dup2\n        /* \"#utility.yul\":18876:18877   */\n      0x00\n        /* \"#utility.yul\":18872:18878   */\n      not\n        /* \"#utility.yul\":18868:18885   */\n      div\n        /* \"#utility.yul\":18862:18866   */\n      dup3\n        /* \"#utility.yul\":18859:18886   */\n      gt\n        /* \"#utility.yul\":18856:18909   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":18889:18907   */\n      tag_619\n      tag_610\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":18939:18946   */\n      dup1\n        /* \"#utility.yul\":18929:18937   */\n      dup6\n        /* \"#utility.yul\":18925:18947   */\n      and\n        /* \"#utility.yul\":18922:18977   */\n      iszero\n      tag_620\n      jumpi\n        /* \"#utility.yul\":18959:18975   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":18922:18977   */\n    tag_620:\n        /* \"#utility.yul\":19038:19060   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":18998:19013   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":18800:19070   */\n      jump(tag_615)\n    tag_617:\n        /* \"#utility.yul\":18804:18807   */\n      pop\n        /* \"#utility.yul\":18654:19076   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19081:19221   */\n    tag_214:\n        /* \"#utility.yul\":19139:19144   */\n      0x00\n        /* \"#utility.yul\":19168:19215   */\n      tag_351\n        /* \"#utility.yul\":19209:19213   */\n      0xff\n        /* \"#utility.yul\":19199:19207   */\n      dup5\n        /* \"#utility.yul\":19195:19214   */\n      and\n        /* \"#utility.yul\":19189:19193   */\n      dup4\n        /* \"#utility.yul\":19275:19280   */\n      0x00\n        /* \"#utility.yul\":19305:19313   */\n      dup3\n        /* \"#utility.yul\":19295:19375   */\n      tag_625\n      jumpi\n      pop\n        /* \"#utility.yul\":19346:19347   */\n      0x01\n        /* \"#utility.yul\":19360:19365   */\n      jump(tag_184)\n        /* \"#utility.yul\":19295:19375   */\n    tag_625:\n        /* \"#utility.yul\":19394:19398   */\n      dup2\n        /* \"#utility.yul\":19384:19460   */\n      tag_626\n      jumpi\n      pop\n        /* \"#utility.yul\":19431:19432   */\n      0x00\n        /* \"#utility.yul\":19445:19450   */\n      jump(tag_184)\n        /* \"#utility.yul\":19384:19460   */\n    tag_626:\n        /* \"#utility.yul\":19476:19480   */\n      dup2\n        /* \"#utility.yul\":19494:19495   */\n      0x01\n        /* \"#utility.yul\":19489:19548   */\n      dup2\n      eq\n      tag_628\n      jumpi\n        /* \"#utility.yul\":19562:19563   */\n      0x02\n        /* \"#utility.yul\":19557:19687   */\n      dup2\n      eq\n      tag_629\n      jumpi\n        /* \"#utility.yul\":19469:19687   */\n      jump(tag_627)\n        /* \"#utility.yul\":19489:19548   */\n    tag_628:\n        /* \"#utility.yul\":19519:19520   */\n      0x01\n        /* \"#utility.yul\":19510:19520   */\n      swap2\n      pop\n        /* \"#utility.yul\":19533:19538   */\n      pop\n      jump(tag_184)\n        /* \"#utility.yul\":19557:19687   */\n    tag_629:\n        /* \"#utility.yul\":19594:19597   */\n      0xff\n        /* \"#utility.yul\":19584:19592   */\n      dup5\n        /* \"#utility.yul\":19581:19598   */\n      gt\n        /* \"#utility.yul\":19578:19621   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":19601:19619   */\n      tag_631\n      tag_610\n      jump\t// in\n    tag_631:\n      pop\n      pop\n        /* \"#utility.yul\":19657:19658   */\n      0x01\n        /* \"#utility.yul\":19643:19659   */\n      dup3\n      shl\n        /* \"#utility.yul\":19672:19677   */\n      jump(tag_184)\n        /* \"#utility.yul\":19469:19687   */\n    tag_627:\n      pop\n        /* \"#utility.yul\":19771:19773   */\n      0x20\n        /* \"#utility.yul\":19761:19769   */\n      dup4\n        /* \"#utility.yul\":19758:19774   */\n      lt\n        /* \"#utility.yul\":19752:19755   */\n      0x0133\n        /* \"#utility.yul\":19746:19750   */\n      dup4\n        /* \"#utility.yul\":19743:19756   */\n      lt\n        /* \"#utility.yul\":19739:19775   */\n      and\n        /* \"#utility.yul\":19733:19735   */\n      0x4e\n        /* \"#utility.yul\":19723:19731   */\n      dup5\n        /* \"#utility.yul\":19720:19736   */\n      lt\n        /* \"#utility.yul\":19715:19717   */\n      0x0b\n        /* \"#utility.yul\":19709:19713   */\n      dup5\n        /* \"#utility.yul\":19706:19718   */\n      lt\n        /* \"#utility.yul\":19702:19737   */\n      and\n        /* \"#utility.yul\":19699:19776   */\n      or\n        /* \"#utility.yul\":19696:19855   */\n      iszero\n      tag_632\n      jumpi\n      pop\n        /* \"#utility.yul\":19808:19827   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":19840:19845   */\n      jump(tag_184)\n        /* \"#utility.yul\":19696:19855   */\n    tag_632:\n        /* \"#utility.yul\":19887:19921   */\n      tag_633\n        /* \"#utility.yul\":19912:19920   */\n      dup4\n        /* \"#utility.yul\":19906:19910   */\n      dup4\n        /* \"#utility.yul\":19887:19921   */\n      tag_613\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":19957:19963   */\n      dup1\n        /* \"#utility.yul\":19953:19954   */\n      0x00\n        /* \"#utility.yul\":19949:19955   */\n      not\n        /* \"#utility.yul\":19945:19964   */\n      div\n        /* \"#utility.yul\":19936:19943   */\n      dup3\n        /* \"#utility.yul\":19933:19965   */\n      gt\n        /* \"#utility.yul\":19930:19988   */\n      iszero\n      tag_635\n      jumpi\n        /* \"#utility.yul\":19968:19986   */\n      tag_635\n      tag_610\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":20006:20026   */\n      mul\n      swap4\n        /* \"#utility.yul\":19226:20032   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20037:20205   */\n    tag_216:\n        /* \"#utility.yul\":20077:20084   */\n      0x00\n        /* \"#utility.yul\":20143:20144   */\n      dup2\n        /* \"#utility.yul\":20139:20140   */\n      0x00\n        /* \"#utility.yul\":20135:20141   */\n      not\n        /* \"#utility.yul\":20131:20145   */\n      div\n        /* \"#utility.yul\":20128:20129   */\n      dup4\n        /* \"#utility.yul\":20125:20146   */\n      gt\n        /* \"#utility.yul\":20120:20121   */\n      dup3\n        /* \"#utility.yul\":20113:20122   */\n      iszero\n        /* \"#utility.yul\":20106:20123   */\n      iszero\n        /* \"#utility.yul\":20102:20147   */\n      and\n        /* \"#utility.yul\":20099:20170   */\n      iszero\n      tag_638\n      jumpi\n        /* \"#utility.yul\":20150:20168   */\n      tag_638\n      tag_610\n      jump\t// in\n    tag_638:\n      pop\n        /* \"#utility.yul\":20190:20199   */\n      mul\n      swap1\n        /* \"#utility.yul\":20037:20205   */\n      jump\t// out\n        /* \"#utility.yul\":20210:20335   */\n    tag_279:\n        /* \"#utility.yul\":20250:20254   */\n      0x00\n        /* \"#utility.yul\":20278:20279   */\n      dup3\n        /* \"#utility.yul\":20275:20276   */\n      dup3\n        /* \"#utility.yul\":20272:20280   */\n      lt\n        /* \"#utility.yul\":20269:20303   */\n      iszero\n      tag_641\n      jumpi\n        /* \"#utility.yul\":20283:20301   */\n      tag_641\n      tag_610\n      jump\t// in\n    tag_641:\n      pop\n        /* \"#utility.yul\":20320:20329   */\n      sub\n      swap1\n        /* \"#utility.yul\":20210:20335   */\n      jump\t// out\n        /* \"#utility.yul\":20340:20720   */\n    tag_178:\n        /* \"#utility.yul\":20419:20420   */\n      0x01\n        /* \"#utility.yul\":20415:20427   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":20462:20474   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":20483:20544   */\n      tag_643\n      jumpi\n        /* \"#utility.yul\":20537:20541   */\n      0x7f\n        /* \"#utility.yul\":20529:20535   */\n      dup3\n        /* \"#utility.yul\":20525:20542   */\n      and\n        /* \"#utility.yul\":20515:20542   */\n      swap2\n      pop\n        /* \"#utility.yul\":20483:20544   */\n    tag_643:\n        /* \"#utility.yul\":20590:20592   */\n      0x20\n        /* \"#utility.yul\":20582:20588   */\n      dup3\n        /* \"#utility.yul\":20579:20593   */\n      lt\n        /* \"#utility.yul\":20559:20577   */\n      dup2\n        /* \"#utility.yul\":20556:20594   */\n      eq\n        /* \"#utility.yul\":20553:20714   */\n      iszero\n      tag_644\n      jumpi\n        /* \"#utility.yul\":20636:20646   */\n      0x4e487b71\n        /* \"#utility.yul\":20631:20634   */\n      0xe0\n        /* \"#utility.yul\":20627:20647   */\n      shl\n        /* \"#utility.yul\":20624:20625   */\n      0x00\n        /* \"#utility.yul\":20617:20648   */\n      mstore\n        /* \"#utility.yul\":20671:20675   */\n      0x22\n        /* \"#utility.yul\":20668:20669   */\n      0x04\n        /* \"#utility.yul\":20661:20676   */\n      mstore\n        /* \"#utility.yul\":20699:20703   */\n      0x24\n        /* \"#utility.yul\":20696:20697   */\n      0x00\n        /* \"#utility.yul\":20689:20704   */\n      revert\n        /* \"#utility.yul\":20553:20714   */\n    tag_644:\n      pop\n        /* \"#utility.yul\":20340:20720   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20725:20934   */\n    tag_318:\n        /* \"#utility.yul\":20763:20766   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":20844:20846   */\n      dup1\n        /* \"#utility.yul\":20837:20842   */\n      dup4\n        /* \"#utility.yul\":20833:20847   */\n      and\n        /* \"#utility.yul\":20871:20873   */\n      dup2\n        /* \"#utility.yul\":20862:20869   */\n      dup2\n        /* \"#utility.yul\":20859:20874   */\n      eq\n        /* \"#utility.yul\":20856:20897   */\n      iszero\n      tag_647\n      jumpi\n        /* \"#utility.yul\":20877:20895   */\n      tag_647\n      tag_610\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":20926:20927   */\n      0x01\n        /* \"#utility.yul\":20913:20928   */\n      add\n      swap4\n        /* \"#utility.yul\":20725:20934   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20939:21114   */\n    tag_316:\n        /* \"#utility.yul\":20976:20979   */\n      0x00\n        /* \"#utility.yul\":21020:21024   */\n      0xff\n        /* \"#utility.yul\":21013:21018   */\n      dup3\n        /* \"#utility.yul\":21009:21025   */\n      and\n        /* \"#utility.yul\":21049:21053   */\n      0xff\n        /* \"#utility.yul\":21040:21047   */\n      dup2\n        /* \"#utility.yul\":21037:21054   */\n      eq\n        /* \"#utility.yul\":21034:21077   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":21057:21075   */\n      tag_650\n      tag_610\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":21106:21107   */\n      0x01\n        /* \"#utility.yul\":21093:21108   */\n      add\n      swap3\n        /* \"#utility.yul\":20939:21114   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21119:21246   */\n    tag_610:\n        /* \"#utility.yul\":21180:21190   */\n      0x4e487b71\n        /* \"#utility.yul\":21175:21178   */\n      0xe0\n        /* \"#utility.yul\":21171:21191   */\n      shl\n        /* \"#utility.yul\":21168:21169   */\n      0x00\n        /* \"#utility.yul\":21161:21192   */\n      mstore\n        /* \"#utility.yul\":21211:21215   */\n      0x11\n        /* \"#utility.yul\":21208:21209   */\n      0x04\n        /* \"#utility.yul\":21201:21216   */\n      mstore\n        /* \"#utility.yul\":21235:21239   */\n      0x24\n        /* \"#utility.yul\":21232:21233   */\n      0x00\n        /* \"#utility.yul\":21225:21240   */\n      revert\n        /* \"#utility.yul\":21251:21378   */\n    tag_304:\n        /* \"#utility.yul\":21312:21322   */\n      0x4e487b71\n        /* \"#utility.yul\":21307:21310   */\n      0xe0\n        /* \"#utility.yul\":21303:21323   */\n      shl\n        /* \"#utility.yul\":21300:21301   */\n      0x00\n        /* \"#utility.yul\":21293:21324   */\n      mstore\n        /* \"#utility.yul\":21343:21347   */\n      0x32\n        /* \"#utility.yul\":21340:21341   */\n      0x04\n        /* \"#utility.yul\":21333:21348   */\n      mstore\n        /* \"#utility.yul\":21367:21371   */\n      0x24\n        /* \"#utility.yul\":21364:21365   */\n      0x00\n        /* \"#utility.yul\":21357:21372   */\n      revert\n        /* \"#utility.yul\":21383:21510   */\n    tag_507:\n        /* \"#utility.yul\":21444:21454   */\n      0x4e487b71\n        /* \"#utility.yul\":21439:21442   */\n      0xe0\n        /* \"#utility.yul\":21435:21455   */\n      shl\n        /* \"#utility.yul\":21432:21433   */\n      0x00\n        /* \"#utility.yul\":21425:21456   */\n      mstore\n        /* \"#utility.yul\":21475:21479   */\n      0x41\n        /* \"#utility.yul\":21472:21473   */\n      0x04\n        /* \"#utility.yul\":21465:21480   */\n      mstore\n        /* \"#utility.yul\":21499:21503   */\n      0x24\n        /* \"#utility.yul\":21496:21497   */\n      0x00\n        /* \"#utility.yul\":21489:21504   */\n      revert\n        /* \"#utility.yul\":21515:21646   */\n    tag_516:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":21590:21621   */\n      dup2\n      and\n        /* \"#utility.yul\":21580:21622   */\n      dup2\n      eq\n        /* \"#utility.yul\":21570:21640   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":21636:21637   */\n      0x00\n        /* \"#utility.yul\":21633:21634   */\n      dup1\n        /* \"#utility.yul\":21626:21638   */\n      revert\n\n    auxdata: 0xa2646970667358221220d6cd6c2f9a26d0b4e5f8ba27517c11bbc662ec2e24911586308e15a912a61f9564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xC4081A4C GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE4C97E6A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE4C97E6A EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xF66608FE EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xF9342285 EQ PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4081A4C EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xAC7FA3C6 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xB24A0893 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xA3772662 EQ PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x3DE47E32 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x3DE47E32 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x46F0975A EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x1E0D4CE9 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x2B9A1D3C EQ PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x7C351DD EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1C2 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B92 JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C5E JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B92 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1D06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x882 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x896 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBE JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B92 JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B92 JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCD SLOAD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x4AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0xA43 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0xD0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x500 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B18 JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x520 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x540 CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0xE0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCF SLOAD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x575 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x599 SWAP1 PUSH2 0x1FA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5C5 SWAP1 PUSH2 0x1FA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x612 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x612 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x62A DUP2 DUP6 DUP6 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x642 DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP1 POP PUSH2 0x64E DUP6 DUP3 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x659 DUP6 DUP6 DUP6 PUSH2 0x102A JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x685 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x69F JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x69F JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x732 PUSH2 0x1043 JUMP JUMPDEST PUSH2 0x73C DUP8 DUP8 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x759 PUSH2 0x74A DUP7 PUSH1 0xA PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x754 SWAP1 DUP7 PUSH2 0x1F6E JUMP JUMPDEST PUSH2 0x10A7 JUMP JUMPDEST DUP7 MLOAD PUSH2 0x76C SWAP1 PUSH1 0xCA SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST POP DUP6 MLOAD PUSH2 0x780 SWAP1 PUSH1 0xCB SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST POP PUSH1 0xCC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 AND OR SWAP1 SSTORE PUSH8 0x16345785D8A0000 PUSH1 0xCD SSTORE PUSH1 0xCE DUP5 SWAP1 SSTORE PUSH1 0xCF DUP3 SWAP1 SSTORE PUSH2 0x7B0 ADDRESS DUP5 PUSH2 0x10D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x62A DUP2 DUP6 DUP6 PUSH2 0x812 DUP4 DUP4 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x81C SWAP2 SWAP1 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x612 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x85B JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x88A PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x894 PUSH1 0x0 PUSH2 0x11A0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x599 SWAP1 PUSH2 0x1FA4 JUMP JUMPDEST PUSH2 0x8AD PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x914 PUSH1 0xD1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E8 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH1 0xD2 PUSH2 0x11F2 JUMP JUMPDEST PUSH2 0x920 PUSH1 0xD1 PUSH1 0x0 PUSH2 0x1860 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x933 SWAP1 PUSH1 0xD1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x187E JUMP JUMPDEST POP PUSH2 0x941 DUP2 PUSH1 0x1 PUSH1 0xD2 PUSH2 0x11F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x952 DUP3 DUP7 PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x9BF DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xE82 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DE PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA07 JUMPI PUSH2 0xA01 DUP4 DUP4 PUSH2 0x1270 JUMP JUMPDEST POP PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA12 DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP1 POP PUSH2 0xA1E CALLER DUP3 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2A DUP3 DUP6 PUSH2 0x1F8D JUMP JUMPDEST SWAP1 POP PUSH2 0xA36 DUP6 DUP3 PUSH2 0x1270 JUMP JUMPDEST POP POP POP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4B PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xCD SSTORE JUMP JUMPDEST PUSH2 0xA58 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xCF SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4578706972656420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x556E6971756520696420657869737473 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xB32 PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x21 DUP3 ADD DUP2 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x22 DUP6 ADD MSTORE DUP7 DUP2 SHL DUP3 AND PUSH1 0x36 DUP6 ADD MSTORE DUP14 SWAP1 SHL AND PUSH1 0x4A DUP4 ADD MSTORE PUSH1 0x5E DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x7E DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0x9E DUP3 ADD DUP10 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0xBE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP9 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0xCF2 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 DUP12 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xBE0 JUMPI PUSH2 0xBE0 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xC03 JUMPI PUSH2 0xC03 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xC26 JUMPI PUSH2 0xC26 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xC64 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT DUP1 ISZERO PUSH2 0xCCB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xCDE JUMPI DUP3 PUSH2 0xCDA DUP2 PUSH2 0x2006 JUMP JUMPDEST SWAP4 POP POP JUMPDEST SWAP3 POP DUP1 PUSH2 0xCEA DUP2 PUSH2 0x1FDF JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBAE JUMP JUMPDEST POP PUSH1 0x2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C6964207369676E657273 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xCD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP1 PUSH2 0xD6B SWAP1 DUP14 SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDA7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x8CC2D2D8CAC840E8DE40E6CADCC8409ACAC6D PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0xDFD DUP14 DUP13 PUSH2 0x10D7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE14 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x941 DUP2 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0xCF SLOAD DUP5 PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH2 0xFC4 SWAP2 SWAP1 PUSH2 0x1E5E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFD5 DUP3 DUP3 PUSH2 0x127E JUMP JUMPDEST DUP1 PUSH1 0xD0 SLOAD PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x1E46 JUMP JUMPDEST PUSH1 0xD0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100A SWAP1 DUP3 SWAP1 PUSH2 0x1E46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x1038 DUP6 DUP3 DUP6 PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x9BF DUP6 DUP6 DUP6 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH2 0x894 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1099 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH2 0x10A3 DUP3 DUP3 PUSH2 0x163B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH2 0x941 DUP2 PUSH2 0x1689 JUMP JUMPDEST PUSH1 0x65 SLOAD DUP2 PUSH2 0x10E4 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x1E46 JUMP JUMPDEST GT ISZERO PUSH2 0x113C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x10A3 DUP3 DUP3 PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x98 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0x126A JUMPI DUP3 DUP3 PUSH1 0x0 DUP7 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0x1226 JUMPI PUSH2 0x1226 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x1262 DUP2 PUSH2 0x1FDF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11F5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x62A DUP2 DUP6 DUP6 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1381 SWAP1 DUP5 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xF9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D5 DUP5 DUP5 PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x126A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1430 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x126A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x14A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x157B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x15B2 SWAP1 DUP5 SWAP1 PUSH2 0x1E46 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x15FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH2 0x894 CALLER PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1675 SWAP1 PUSH1 0x36 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x13C4 SWAP1 PUSH1 0x37 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x16F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x45524332304361707065643A20636170206973203 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1765 SWAP2 SWAP1 PUSH2 0x1E46 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1792 SWAP1 DUP5 SWAP1 PUSH2 0x1E46 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x17E8 SWAP1 PUSH2 0x1FA4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x180A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1850 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1823 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1850 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1850 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1850 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1835 JUMP JUMPDEST POP PUSH2 0x185C SWAP3 SWAP2 POP PUSH2 0x18D3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x941 SWAP2 SWAP1 PUSH2 0x18D3 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1850 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1850 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x189E JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x185C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18D4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x190E PUSH2 0x1909 DUP4 PUSH2 0x1E23 JUMP JUMPDEST PUSH2 0x1DF3 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x192E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x194D JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1931 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x196B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1984 JUMPI PUSH2 0x1984 PUSH2 0x2052 JUMP JUMPDEST PUSH2 0x1997 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1DF3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x19AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x19DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFC4 DUP2 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1A22 DUP2 PUSH2 0x2068 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1A54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A76 PUSH2 0x1909 DUP3 PUSH2 0x1E23 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP6 DUP3 ADD SWAP2 POP DUP6 DUP6 ADD DUP16 DUP8 DUP6 PUSH1 0x5 SHL DUP9 ADD ADD GT ISZERO PUSH2 0x1A96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1AC0 JUMPI PUSH2 0x1AAC DUP2 PUSH2 0x19C9 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x1A9B JUMP JUMPDEST POP SWAP8 POP POP POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1AD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE5 DUP13 DUP5 DUP14 ADD PUSH2 0x18E8 JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x1B09 DUP11 DUP3 DUP12 ADD PUSH2 0x18E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1B36 DUP2 PUSH2 0x2068 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B46 DUP2 PUSH2 0x2068 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1B71 DUP2 PUSH2 0x2068 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1B81 DUP2 PUSH2 0x2068 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1BB0 DUP2 PUSH2 0x2068 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1BF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1C06 PUSH2 0x1909 DUP3 PUSH2 0x1E23 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x1C26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1C52 JUMPI DUP1 CALLDATALOAD PUSH2 0x1C3E DUP2 PUSH2 0x2068 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x1C2B JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1C77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1C8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C9A DUP11 DUP4 DUP12 ADD PUSH2 0x195A JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CBD DUP10 DUP3 DUP11 ADD PUSH2 0x195A JUMP JUMPDEST SWAP6 POP POP PUSH2 0x1CCC PUSH1 0x40 DUP9 ADD PUSH2 0x19C9 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D47 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1D22 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D80 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1D64 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1D92 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1E1B JUMPI PUSH2 0x1E1B PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1E3C JUMPI PUSH2 0x1E3C PUSH2 0x2052 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1E59 JUMPI PUSH2 0x1E59 PUSH2 0x2026 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1E7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1EBB JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1EA1 JUMPI PUSH2 0x1EA1 PUSH2 0x2026 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1EAE JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1E85 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC4 PUSH1 0xFF DUP5 AND DUP4 PUSH1 0x0 DUP3 PUSH2 0x1EDC JUMPI POP PUSH1 0x1 PUSH2 0x630 JUMP JUMPDEST DUP2 PUSH2 0x1EE9 JUMPI POP PUSH1 0x0 PUSH2 0x630 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1EFF JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1F09 JUMPI PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x630 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F1A JUMPI PUSH2 0x1F1A PUSH2 0x2026 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x630 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F48 JUMPI POP DUP2 DUP2 EXP PUSH2 0x630 JUMP JUMPDEST PUSH2 0x1F52 DUP4 DUP4 PUSH2 0x1E80 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1F66 JUMPI PUSH2 0x1F66 PUSH2 0x2026 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1F88 JUMPI PUSH2 0x1F88 PUSH2 0x2026 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1F9F JUMPI PUSH2 0x1F9F PUSH2 0x2026 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1FB8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1FD9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x1FFC JUMPI PUSH2 0x1FFC PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x201D JUMPI PUSH2 0x201D PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x941 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xCD PUSH13 0x2F9A26D0B4E5F8BA27517C11BB 0xC6 PUSH3 0xEC2E24 SWAP2 ISZERO DUP7 ADDRESS DUP15 ISZERO 0xA9 SLT 0xA6 0x1F SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "243:5370:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1475": {
									"entryPoint": null,
									"id": 1475,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20Capped_init_995": {
									"entryPoint": 4263,
									"id": 995,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__ERC20Capped_init_unchained_1014": {
									"entryPoint": 5769,
									"id": 1014,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__ERC20_init_329": {
									"entryPoint": 4210,
									"id": 329,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_347": {
									"entryPoint": 5691,
									"id": 347,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_26": {
									"entryPoint": 4163,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_37": {
									"entryPoint": 5643,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_887": {
									"entryPoint": null,
									"id": 887,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_822": {
									"entryPoint": 3714,
									"id": 822,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_876": {
									"entryPoint": null,
									"id": 876,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burnAndUpdate_1742": {
									"entryPoint": 4043,
									"id": 1742,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_burn_777": {
									"entryPoint": 4734,
									"id": 777,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_calculateBurnAmt_1713": {
									"entryPoint": 4007,
									"id": 1713,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_checkOwner_68": {
									"entryPoint": 4422,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mapSigners_1397": {
									"entryPoint": null,
									"id": 1397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1052": {
									"entryPoint": 4311,
									"id": 1052,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_705": {
									"entryPoint": 5885,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1353": {
									"entryPoint": null,
									"id": 1353,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_865": {
									"entryPoint": 5065,
									"id": 865,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_125": {
									"entryPoint": 4512,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_649": {
									"entryPoint": 5181,
									"id": 649,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateMap_1607": {
									"entryPoint": 4594,
									"id": 1607,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_444": {
									"entryPoint": 2653,
									"id": 444,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_469": {
									"entryPoint": 1564,
									"id": 469,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@cap_1023": {
									"entryPoint": null,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_1484": {
									"entryPoint": null,
									"id": 1484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_572": {
									"entryPoint": 2372,
									"id": 572,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRewardAmt_1492": {
									"entryPoint": null,
									"id": 1492,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTaxFee_1512": {
									"entryPoint": null,
									"id": 1512,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_531": {
									"entryPoint": 2047,
									"id": 531,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_1471": {
									"entryPoint": 1637,
									"id": 1471,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@isContract_1101": {
									"entryPoint": null,
									"id": 1101,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mapSigner_1573": {
									"entryPoint": null,
									"id": 1573,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_357": {
									"entryPoint": 1418,
									"id": 357,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@permitMint_1902": {
									"entryPoint": 2696,
									"id": 1902,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@renounceOwnership_82": {
									"entryPoint": 2178,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRewardAmtInWei_1504": {
									"entryPoint": 2627,
									"id": 1504,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSigners_1561": {
									"entryPoint": 2213,
									"id": 1561,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTaxFee_1524": {
									"entryPoint": 2640,
									"id": 1524,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@signers_1533": {
									"entryPoint": 2081,
									"id": 1533,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_367": {
									"entryPoint": 2198,
									"id": 367,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalBurned_1390": {
									"entryPoint": null,
									"id": 1390,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_387": {
									"entryPoint": null,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1694": {
									"entryPoint": 1590,
									"id": 1694,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_502": {
									"entryPoint": 4138,
									"id": 502,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_105": {
									"entryPoint": 3596,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1660": {
									"entryPoint": 2506,
									"id": 1660,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_426": {
									"entryPoint": 4720,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniqueIdExists_1401": {
									"entryPoint": null,
									"id": 1401,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userTotalBurned_1405": {
									"entryPoint": null,
									"id": 1405,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_array_bytes32_dyn": {
									"entryPoint": 6376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 6490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256t_uint256t_uint256t_array$_t_uint8_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_uint256": {
									"entryPoint": 7262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint8": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 7715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 7875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint64": {
									"entryPoint": 8159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 8198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8230,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8252,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 8296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21648:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:609:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:9"
															},
															"nodeType": "YulIf",
															"src": "88:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "175:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "162:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "191:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "201:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "195:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "214:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "281:2:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "241:39:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:43:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "225:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:60:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "218:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "294:16:9",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "307:3:9"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "298:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "326:3:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "331:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "319:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "319:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "319:15:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "354:3:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "350:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:12:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "343:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "371:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "386:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "394:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "382:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:15:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "375:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "451:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "460:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "463:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "453:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "453:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "453:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "420:6:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "432:1:9",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "435:2:9"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "428:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "428:10:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "416:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "416:23:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "441:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "412:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "412:32:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "446:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "409:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "409:41:9"
															},
															"nodeType": "YulIf",
															"src": "406:61:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "476:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "485:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "480:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "540:118:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "561:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "579:3:9"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "566:12:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "566:17:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "554:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "554:30:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "554:30:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "597:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "608:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "613:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "604:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "604:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "597:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "629:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "640:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "645:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "636:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "636:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "629:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "506:1:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "509:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "503:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "513:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "515:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "524:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "527:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "520:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "520:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "515:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "499:3:9",
																"statements": []
															},
															"src": "495:163:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "667:14:9",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "676:5:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "667:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_bytes32_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:9",
														"type": ""
													}
												],
												"src": "14:673:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "745:478:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "794:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "803:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "806:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "796:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "796:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "796:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "773:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "769:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "769:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "788:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "758:35:9"
															},
															"nodeType": "YulIf",
															"src": "755:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "819:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "842:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "829:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "829:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "823:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "888:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "890:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "890:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "890:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "864:2:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "868:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "861:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:26:9"
															},
															"nodeType": "YulIf",
															"src": "858:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "919:70:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "962:2:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "966:4:9",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "958:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "958:13:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "977:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "973:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "973:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "954:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "954:27:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "983:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "950:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "950:38:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "934:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "934:55:9"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "923:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "1005:7:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1014:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "998:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "998:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "998:19:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1065:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1074:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1067:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1067:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1067:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1040:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1048:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1053:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1032:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1032:26:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1060:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1029:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1029:35:9"
															},
															"nodeType": "YulIf",
															"src": "1026:55:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "1107:7:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1116:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1103:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1103:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1127:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1135:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1123:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1123:17:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1142:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1090:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1090:55:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "1169:7:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1178:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1165:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1165:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1183:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1161:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:27:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1190:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1154:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1201:16:9",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "1210:7:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1201:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "719:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "727:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "735:5:9",
														"type": ""
													}
												],
												"src": "692:531:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1275:109:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1285:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1294:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1285:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1336:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1347:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1354:4:9",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1343:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1343:16:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1333:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1333:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1326:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:35:9"
															},
															"nodeType": "YulIf",
															"src": "1323:55:9"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1254:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1265:5:9",
														"type": ""
													}
												],
												"src": "1228:156:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1459:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1505:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1514:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1517:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1507:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1507:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1507:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1480:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1489:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1476:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1476:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1501:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1472:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1472:32:9"
															},
															"nodeType": "YulIf",
															"src": "1469:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1530:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1556:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1543:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1534:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1600:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1575:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1575:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1615:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1625:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1615:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1425:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1436:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1448:6:9",
														"type": ""
													}
												],
												"src": "1389:247:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1894:1475:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1941:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1953:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1943:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1943:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1943:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1915:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1924:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1911:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1911:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1936:3:9",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1907:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1907:33:9"
															},
															"nodeType": "YulIf",
															"src": "1904:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1966:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1992:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1979:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1979:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1970:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2036:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2011:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2051:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2061:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2075:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2085:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2079:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2096:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2123:9:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2134:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2119:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2119:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2106:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2096:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2147:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2174:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2185:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2170:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2170:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2157:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2157:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2147:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2198:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2225:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2236:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2221:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2221:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2208:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2208:32:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2198:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2249:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2280:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2291:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2276:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2263:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:33:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2253:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2305:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2315:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2309:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2360:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2369:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2372:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2362:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2362:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2362:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2348:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2356:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2345:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2345:14:9"
															},
															"nodeType": "YulIf",
															"src": "2342:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2385:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2399:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2410:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2395:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2395:22:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2389:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2465:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2474:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2477:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2467:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2467:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2467:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2444:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2448:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2440:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2440:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2455:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2436:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2436:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2429:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:35:9"
															},
															"nodeType": "YulIf",
															"src": "2426:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2490:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2513:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2500:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2500:16:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2494:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2525:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2592:2:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "2552:39:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2552:43:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2536:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2536:60:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2529:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2605:16:9",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "2618:3:9"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "2609:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2637:3:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2642:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2630:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2630:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2630:15:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2654:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2665:3:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2670:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2661:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2661:12:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2682:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2697:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2701:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2693:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2693:11:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "2686:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2758:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2767:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2770:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2760:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2760:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2760:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2727:2:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2735:1:9",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "2738:2:9"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2731:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2731:10:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2723:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2723:19:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2744:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2719:28:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2749:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2716:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:41:9"
															},
															"nodeType": "YulIf",
															"src": "2713:61:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2783:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2792:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2787:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2847:122:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2868:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "2890:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_uint8",
																						"nodeType": "YulIdentifier",
																						"src": "2873:16:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2873:21:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2861:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2861:34:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2861:34:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2908:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2919:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2924:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2915:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2915:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2908:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2940:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2951:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2956:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2947:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2947:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2940:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2816:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2810:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2810:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2820:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2822:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2831:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2834:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2827:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2827:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2822:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2806:3:9",
																"statements": []
															},
															"src": "2802:167:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2978:15:9",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "2988:5:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2978:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3002:49:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3035:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3046:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3031:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3031:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3018:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3018:33:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3006:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3080:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3092:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3082:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3082:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3082:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3066:8:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3076:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3063:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3063:16:9"
															},
															"nodeType": "YulIf",
															"src": "3060:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3105:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3148:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3159:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3144:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3144:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3170:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_bytes32_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3115:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3115:63:9"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3187:49:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3220:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3231:3:9",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3216:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3216:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3203:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3203:33:9"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "3191:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3265:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3274:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3277:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3267:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3267:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3267:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "3251:8:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3261:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3248:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3248:16:9"
															},
															"nodeType": "YulIf",
															"src": "3245:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3290:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3333:9:9"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "3344:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3329:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3329:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3355:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_bytes32_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3300:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3300:63:9"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256t_uint256t_uint256t_array$_t_uint8_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1812:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1823:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1835:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1843:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1851:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1859:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1867:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1875:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1883:6:9",
														"type": ""
													}
												],
												"src": "1641:1728:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3461:301:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3507:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3516:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3519:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3509:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3509:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3482:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3491:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3478:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3478:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3503:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3474:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3474:32:9"
															},
															"nodeType": "YulIf",
															"src": "3471:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3532:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3558:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3545:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3536:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3602:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3577:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3577:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3577:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3617:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3627:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3617:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3641:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3673:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3684:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3669:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3669:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3656:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3645:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3722:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3697:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3697:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3697:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3739:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3749:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3739:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3419:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3430:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3442:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3450:6:9",
														"type": ""
													}
												],
												"src": "3374:388:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3871:352:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3917:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3926:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3919:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3919:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3919:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3892:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3901:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3888:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3888:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3913:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3884:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:32:9"
															},
															"nodeType": "YulIf",
															"src": "3881:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3942:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3968:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3955:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3955:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3946:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4012:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3987:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3987:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4027:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4037:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4027:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4051:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4083:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4079:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4079:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4066:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4066:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4055:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4132:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4107:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4107:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4107:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4149:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4159:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4149:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4175:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4202:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4213:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4198:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4198:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4185:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4185:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4175:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3821:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3832:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3844:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3852:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3860:6:9",
														"type": ""
													}
												],
												"src": "3767:456:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4315:228:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4361:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4370:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4373:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4363:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4363:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4363:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4336:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4345:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4332:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4357:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4328:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4328:32:9"
															},
															"nodeType": "YulIf",
															"src": "4325:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4386:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4412:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4399:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4399:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4390:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4456:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4431:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4431:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4431:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4471:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4481:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4471:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4495:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4522:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4533:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4518:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4518:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4505:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4505:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4495:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4273:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4284:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4296:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4304:6:9",
														"type": ""
													}
												],
												"src": "4228:315:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4643:882:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4653:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4663:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4657:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4710:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4719:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4722:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4712:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4712:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4712:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4685:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4694:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4681:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4681:23:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4706:2:9"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4677:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4677:32:9"
															},
															"nodeType": "YulIf",
															"src": "4674:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4735:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4762:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4749:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4749:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4739:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4815:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4824:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4827:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4817:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4817:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4817:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4787:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4795:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4784:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4784:30:9"
															},
															"nodeType": "YulIf",
															"src": "4781:50:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4840:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4854:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4865:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4850:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4850:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4844:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4920:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4929:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4932:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4922:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4922:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4922:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4899:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4903:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4895:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4895:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4910:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4891:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4891:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4884:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4884:35:9"
															},
															"nodeType": "YulIf",
															"src": "4881:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4945:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4968:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4955:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4955:16:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4949:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4980:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "5047:2:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "5007:39:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5007:43:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4991:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:60:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4984:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5060:16:9",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "5073:3:9"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "5064:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5092:3:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5097:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5085:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5085:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5085:15:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5109:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5120:3:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5125:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5116:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5116:12:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5109:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5137:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5152:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5156:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5148:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5148:11:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5141:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5213:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5222:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5225:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5215:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5215:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5215:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5182:2:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5190:1:9",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "5193:2:9"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5186:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5186:10:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5178:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5178:19:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5199:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5174:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5174:28:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5204:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5171:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:41:9"
															},
															"nodeType": "YulIf",
															"src": "5168:61:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5238:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5247:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5242:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5302:193:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5316:30:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5342:3:9"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "5329:12:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5329:17:9"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "5320:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "5384:5:9"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "5359:24:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5359:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5359:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5410:3:9"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "5415:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5403:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5403:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5403:18:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5434:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5445:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5450:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5441:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5441:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5434:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5466:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5477:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5482:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5473:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5473:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5466:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5268:1:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5271:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5265:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5265:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5275:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5277:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5286:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5289:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5282:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5282:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5277:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5261:3:9",
																"statements": []
															},
															"src": "5257:238:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5504:15:9",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "5514:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5504:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4609:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4620:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4632:6:9",
														"type": ""
													}
												],
												"src": "4548:977:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5703:647:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5750:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5759:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5762:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5752:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5752:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5752:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5724:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5733:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5720:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5720:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5745:3:9",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5716:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5716:33:9"
															},
															"nodeType": "YulIf",
															"src": "5713:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5775:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5802:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5789:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5789:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5779:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5821:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5831:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5825:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5876:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5885:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5888:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5878:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5878:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5878:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5864:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5872:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5861:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5861:14:9"
															},
															"nodeType": "YulIf",
															"src": "5858:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5901:60:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5933:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5944:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5929:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5929:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5953:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "5911:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5911:50:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5901:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5970:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6003:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5999:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5999:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5986:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5986:32:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5974:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6047:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6056:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6059:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6049:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6049:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6049:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6033:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6043:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6030:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6030:16:9"
															},
															"nodeType": "YulIf",
															"src": "6027:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6072:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6104:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6115:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6100:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6100:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6126:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "6082:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6082:52:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6143:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6174:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6185:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6170:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6170:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "6153:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6153:36:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6143:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6198:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6225:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6236:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6221:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6221:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6208:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6208:32:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6198:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6249:43:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6276:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6287:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6272:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6272:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6259:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6259:33:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "6249:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6301:43:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6328:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6339:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6324:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6311:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6311:33:9"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "6301:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5629:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5640:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5652:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5660:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5668:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5676:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5684:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5692:6:9",
														"type": ""
													}
												],
												"src": "5530:820:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6425:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6471:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6480:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6483:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6473:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6473:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6473:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6446:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6455:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6442:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6442:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6467:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6438:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6438:32:9"
															},
															"nodeType": "YulIf",
															"src": "6435:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6496:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6519:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6506:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6506:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6496:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6391:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6402:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6414:6:9",
														"type": ""
													}
												],
												"src": "6355:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6867:476:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6877:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6891:3:9",
																		"type": "",
																		"value": "248"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6896:3:9",
																		"type": "",
																		"value": "255"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "6887:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6887:13:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6881:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6916:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6925:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6933:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6921:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6921:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6909:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6909:28:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6909:28:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6957:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6962:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6953:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6953:11:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6970:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6978:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6966:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6966:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6946:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6946:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6946:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6991:41:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7005:26:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "7001:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7001:31:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6995:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7052:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7057:1:9",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7048:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7048:11:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7069:2:9",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "7073:6:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7065:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7065:15:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "7082:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7061:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7061:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7041:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7041:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7041:45:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7106:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7111:2:9",
																				"type": "",
																				"value": "22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7102:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7102:12:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7124:2:9",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "7128:6:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7120:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7120:15:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "7137:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7116:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7116:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7095:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7095:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7095:46:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7161:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7166:2:9",
																				"type": "",
																				"value": "42"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7157:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7157:12:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7179:2:9",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "7183:6:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7175:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7175:15:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "7192:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7171:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7171:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7150:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7150:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7150:46:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7216:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7221:2:9",
																				"type": "",
																				"value": "62"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7212:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7212:12:9"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "7226:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7205:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7205:28:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7205:28:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7253:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7258:2:9",
																				"type": "",
																				"value": "94"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7249:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7249:12:9"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "7263:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7242:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7242:28:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7242:28:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7290:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7295:3:9",
																				"type": "",
																				"value": "126"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7286:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7286:13:9"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "7301:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7279:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7279:29:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7279:29:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7317:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7328:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7333:3:9",
																		"type": "",
																		"value": "158"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7324:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7324:13:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7317:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6787:3:9",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "6792:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "6800:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "6808:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6816:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6824:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6832:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6840:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6848:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6859:3:9",
														"type": ""
													}
												],
												"src": "6540:803:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7539:14:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7541:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7548:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7541:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7523:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7531:3:9",
														"type": ""
													}
												],
												"src": "7348:205:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7659:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7669:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7681:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7692:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7677:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7677:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7669:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7711:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7726:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7742:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7747:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7738:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7738:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7751:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7734:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7734:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7722:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7722:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7704:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7704:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7704:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7628:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7639:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7650:4:9",
														"type": ""
													}
												],
												"src": "7558:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7917:507:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7927:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7937:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7931:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7948:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7966:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7977:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7962:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7962:18:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "7952:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7996:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8007:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7989:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7989:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7989:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8019:17:9",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "8030:6:9"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "8023:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8045:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8065:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8059:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8059:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8049:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "8088:6:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8096:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8081:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8081:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8081:22:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8112:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8123:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8134:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8119:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8119:18:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8112:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8146:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8164:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8172:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8160:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8160:15:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "8150:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8184:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8193:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8188:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8252:146:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8273:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8288:6:9"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "8282:5:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8282:13:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8305:3:9",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8310:1:9",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "8301:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8301:11:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8314:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "8297:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8297:19:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "8278:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8278:39:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8266:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8266:52:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8266:52:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8331:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8342:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8347:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8338:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8338:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8331:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8363:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8377:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8385:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8373:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8373:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8363:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8214:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8217:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8211:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8211:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8225:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8227:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8236:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8239:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8232:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8232:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8227:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8207:3:9",
																"statements": []
															},
															"src": "8203:195:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8407:11:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8415:3:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8407:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7886:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7897:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7908:4:9",
														"type": ""
													}
												],
												"src": "7766:658:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8524:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8534:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8546:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8557:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8542:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8542:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8534:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8576:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "8601:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8594:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8594:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8587:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8587:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8569:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8569:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8569:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8493:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8504:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8515:4:9",
														"type": ""
													}
												],
												"src": "8429:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8802:217:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8812:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8824:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8835:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8820:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8820:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8812:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8855:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8866:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8848:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8848:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8848:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8893:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8904:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8889:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8889:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8913:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8921:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8909:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8909:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8882:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8882:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8882:45:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8947:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8958:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8943:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8943:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8963:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8936:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8936:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8936:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8990:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9001:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8986:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8986:18:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9006:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8979:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8979:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8979:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8747:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8758:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8766:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8774:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8782:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8793:4:9",
														"type": ""
													}
												],
												"src": "8621:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9131:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9141:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9153:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9164:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9149:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9149:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9141:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9183:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9198:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9206:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9194:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9194:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9176:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9176:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9176:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9100:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9111:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9122:4:9",
														"type": ""
													}
												],
												"src": "9024:194:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9344:476:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9354:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9364:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9358:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9382:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9393:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9375:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9375:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9375:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9405:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9425:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9419:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9419:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9409:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9452:9:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9463:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9448:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9448:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9468:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9441:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9441:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9441:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9484:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9493:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9488:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9553:90:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "9582:9:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9593:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9578:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9578:17:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9597:2:9",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9574:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9574:26:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "9616:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "9624:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "9612:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9612:14:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "9628:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9608:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9608:23:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9602:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9602:30:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9567:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9567:66:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9567:66:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9514:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9517:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9511:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9511:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9525:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9527:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9536:1:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "9539:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9532:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9532:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9527:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9507:3:9",
																"statements": []
															},
															"src": "9503:140:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9677:66:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "9706:9:9"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "9717:6:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9702:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9702:22:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9726:2:9",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9698:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9698:31:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9731:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9691:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9691:42:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9691:42:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9658:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9661:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9655:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9655:13:9"
															},
															"nodeType": "YulIf",
															"src": "9652:91:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9752:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9768:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "9787:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9795:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9783:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9783:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9804:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9800:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9800:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "9779:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9779:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9764:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9764:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9811:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9760:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9760:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9752:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9313:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9324:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9335:4:9",
														"type": ""
													}
												],
												"src": "9223:597:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9999:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10016:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10027:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10009:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10009:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10009:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10050:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10061:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10046:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10046:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10066:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10039:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10039:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10039:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10089:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10100:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10085:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10085:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10105:34:9",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10078:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10078:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10078:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10160:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10171:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10156:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10156:18:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10176:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10149:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10149:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10149:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10191:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10203:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10214:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10199:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10199:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10191:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9976:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9990:4:9",
														"type": ""
													}
												],
												"src": "9825:399:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10403:171:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10420:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10431:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10413:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10413:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10413:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10454:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10465:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10450:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10450:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10470:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10443:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10443:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10443:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10493:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10504:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10489:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10489:18:9"
																	},
																	{
																		"hexValue": "45524332304361707065643a206361702069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10509:23:9",
																		"type": "",
																		"value": "ERC20Capped: cap is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10482:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10482:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10482:51:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10542:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10554:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10565:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10550:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10550:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10542:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10380:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10394:4:9",
														"type": ""
													}
												],
												"src": "10229:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10753:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10770:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10781:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10763:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10763:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10763:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10804:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10815:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10800:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10800:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10820:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10793:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10793:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10793:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10843:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10854:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10839:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10839:18:9"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10859:34:9",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10832:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10832:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10832:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10914:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10925:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10910:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10910:18:9"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10930:4:9",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10903:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10903:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10903:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10944:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10956:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10967:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10952:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10952:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10944:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10730:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10744:4:9",
														"type": ""
													}
												],
												"src": "10579:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11156:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11173:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11184:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11166:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11166:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11166:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11207:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11218:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11203:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11203:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11223:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11196:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11196:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11246:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11257:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11242:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11242:18:9"
																	},
																	{
																		"hexValue": "556e6971756520696420657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11262:18:9",
																		"type": "",
																		"value": "Unique id exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11235:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11235:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11235:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11290:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11302:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11313:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11298:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11298:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11290:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11133:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11147:4:9",
														"type": ""
													}
												],
												"src": "10982:340:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11501:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11518:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11529:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11511:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11511:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11511:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11552:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11563:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11548:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11548:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11568:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11541:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11541:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11541:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11591:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11602:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11587:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11587:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11607:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11580:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11580:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11580:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11662:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11673:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11658:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11658:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11678:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11651:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11651:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11651:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11696:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11708:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11719:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11704:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11704:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11696:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11478:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11492:4:9",
														"type": ""
													}
												],
												"src": "11327:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11908:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11925:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11936:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11918:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11918:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11918:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11959:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11970:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11955:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11955:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11975:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11948:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11948:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11948:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11998:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12009:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11994:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11994:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12014:34:9",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11987:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11987:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11987:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12069:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12080:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12065:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12065:18:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12085:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12058:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12058:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12058:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12099:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12111:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12122:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12107:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12107:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12099:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11885:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11899:4:9",
														"type": ""
													}
												],
												"src": "11734:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12311:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12328:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12339:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12321:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12321:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12321:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12362:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12373:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12358:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12358:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12378:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12351:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12351:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12351:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12401:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12412:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12397:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12397:18:9"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12417:31:9",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12390:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12390:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12390:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12458:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12470:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12481:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12466:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12466:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12458:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12288:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12302:4:9",
														"type": ""
													}
												],
												"src": "12137:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12669:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12686:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12697:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12679:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12679:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12679:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12720:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12731:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12716:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12716:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12736:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12709:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12709:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12709:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12759:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12770:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12755:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12755:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12775:34:9",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12748:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12748:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12748:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12830:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12841:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12826:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12826:18:9"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12846:8:9",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12819:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12819:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12819:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12864:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12876:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12887:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12872:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12872:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12864:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12646:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12660:4:9",
														"type": ""
													}
												],
												"src": "12495:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13076:169:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13093:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13104:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13086:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13086:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13086:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13127:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13138:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13123:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13123:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13143:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13116:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13116:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13116:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13166:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13177:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13162:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13162:18:9"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e64204d656368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13182:21:9",
																		"type": "",
																		"value": "Failed to send Mech"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13155:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13155:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13155:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13213:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13225:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13236:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13221:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13221:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13213:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13053:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13067:4:9",
														"type": ""
													}
												],
												"src": "12902:343:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13424:165:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13441:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13452:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13434:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13434:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13434:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13475:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13486:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13471:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13471:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13491:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13464:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13464:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13464:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13514:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13525:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13510:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13510:18:9"
																	},
																	{
																		"hexValue": "496e76616c6964207369676e657273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13530:17:9",
																		"type": "",
																		"value": "Invalid signers"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13503:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13503:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13503:45:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13557:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13569:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13580:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13565:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13565:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13557:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13401:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13415:4:9",
														"type": ""
													}
												],
												"src": "13250:339:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13768:236:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13785:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13796:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13778:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13778:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13778:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13819:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13830:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13815:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13815:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13835:2:9",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13808:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13808:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13808:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13858:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13869:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13854:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13854:18:9"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13874:34:9",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13847:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13847:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13847:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13929:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13940:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13925:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13925:18:9"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13945:16:9",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13918:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13918:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13918:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13971:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13983:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13994:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13979:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13979:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13971:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13745:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13759:4:9",
														"type": ""
													}
												],
												"src": "13594:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14183:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14200:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14211:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14193:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14193:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14193:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14234:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14245:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14230:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14230:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14250:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14223:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14223:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14223:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14273:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14284:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14269:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14269:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14289:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14262:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14262:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14262:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14333:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14345:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14356:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14341:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14341:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14333:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14160:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14174:4:9",
														"type": ""
													}
												],
												"src": "14009:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14544:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14561:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14572:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14554:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14554:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14554:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14595:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14606:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14591:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14591:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14611:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14584:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14584:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14584:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14634:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14645:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14630:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14630:18:9"
																	},
																	{
																		"hexValue": "4578706972656420646561646c696e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14650:18:9",
																		"type": "",
																		"value": "Expired deadline"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14623:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14623:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14623:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14678:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14690:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14701:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14686:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14686:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14678:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14521:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14535:4:9",
														"type": ""
													}
												],
												"src": "14370:340:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14889:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14906:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14917:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14899:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14899:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14899:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14940:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14951:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14936:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14936:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14956:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14929:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14929:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14929:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14979:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14990:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14975:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14975:18:9"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14995:34:9",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14968:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14968:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14968:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15050:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15061:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15046:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15046:18:9"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15066:3:9",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15039:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15039:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15039:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15079:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15091:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15102:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15087:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15087:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15079:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14866:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14880:4:9",
														"type": ""
													}
												],
												"src": "14715:397:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15291:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15308:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15319:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15301:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15301:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15301:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15342:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15353:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15338:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15338:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15358:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15331:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15331:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15331:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15381:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15392:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15377:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15377:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15397:34:9",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15370:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15370:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15370:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15452:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15463:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15448:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15448:18:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15468:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15441:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15441:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15441:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15485:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15497:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15508:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15493:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15493:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15485:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15268:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15282:4:9",
														"type": ""
													}
												],
												"src": "15117:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15697:175:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15714:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15725:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15707:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15707:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15707:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15748:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15759:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15744:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15744:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15764:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15737:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15737:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15737:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15787:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15798:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15783:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15783:18:9"
																	},
																	{
																		"hexValue": "45524332304361707065643a20636170206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15803:27:9",
																		"type": "",
																		"value": "ERC20Capped: cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15776:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15776:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15776:55:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15840:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15852:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15863:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15848:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15848:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15840:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15674:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15688:4:9",
														"type": ""
													}
												],
												"src": "15523:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16051:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16068:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16079:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16061:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16061:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16061:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16102:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16113:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16098:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16098:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16118:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16091:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16091:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16091:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16141:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16152:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16137:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16137:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16157:34:9",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16130:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16130:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16130:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16212:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16223:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16208:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16208:18:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16228:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16201:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16201:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16201:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16244:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16256:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16267:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16252:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16252:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16244:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16028:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16042:4:9",
														"type": ""
													}
												],
												"src": "15877:400:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16456:233:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16473:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16484:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16466:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16466:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16466:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16507:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16518:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16503:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16503:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16523:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16496:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16496:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16496:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16546:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16557:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16542:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16542:18:9"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16562:34:9",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16535:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16535:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16535:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16617:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16628:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16613:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16613:18:9"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16633:13:9",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16606:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16606:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16606:41:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16656:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16668:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16679:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16664:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16664:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16656:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16433:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16447:4:9",
														"type": ""
													}
												],
												"src": "16282:407:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16868:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16885:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16896:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16878:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16878:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16878:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16919:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16930:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16915:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16915:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16935:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16908:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16908:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16908:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16958:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16969:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16954:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16954:18:9"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16974:34:9",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16947:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16947:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16947:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17029:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17040:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17025:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17025:18:9"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17045:7:9",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17018:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17018:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17018:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17062:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17074:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17085:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17070:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17070:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17062:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16845:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16859:4:9",
														"type": ""
													}
												],
												"src": "16694:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17274:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17291:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17302:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17284:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17284:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17284:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17325:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17336:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17321:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17321:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17341:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17314:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17314:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17314:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17364:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17375:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17360:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17360:18:9"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17380:33:9",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17353:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17353:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17353:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17423:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17435:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17446:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17431:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17431:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17423:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17251:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17265:4:9",
														"type": ""
													}
												],
												"src": "17100:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17561:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17571:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17583:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17594:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17579:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17579:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17571:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17613:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17624:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17606:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17606:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17606:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17530:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17541:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17552:4:9",
														"type": ""
													}
												],
												"src": "17460:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17739:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17749:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17761:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17772:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17757:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17757:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17749:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17791:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17806:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17814:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17802:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17802:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17784:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17784:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17784:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17708:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17719:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17730:4:9",
														"type": ""
													}
												],
												"src": "17642:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17876:230:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17886:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17902:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17896:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17896:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "17886:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17914:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "17936:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "17952:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17958:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17948:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17948:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17967:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "17963:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17963:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17944:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17944:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17932:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17932:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "17918:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18047:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "18049:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18049:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18049:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "17990:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18002:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17987:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17987:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "18026:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18038:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "18023:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18023:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "17984:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17984:62:9"
															},
															"nodeType": "YulIf",
															"src": "17981:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18085:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "18089:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18078:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18078:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18078:22:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "17856:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17865:6:9",
														"type": ""
													}
												],
												"src": "17831:275:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18180:114:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18224:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "18226:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18226:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18226:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18196:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18204:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18193:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18193:30:9"
															},
															"nodeType": "YulIf",
															"src": "18190:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18255:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18271:1:9",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18274:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18267:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18267:14:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18283:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18263:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18263:25:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "18255:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18160:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "18171:4:9",
														"type": ""
													}
												],
												"src": "18111:183:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18347:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18374:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18376:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18376:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18376:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18363:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18370:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "18366:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18366:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18360:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18360:13:9"
															},
															"nodeType": "YulIf",
															"src": "18357:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18405:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18416:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18419:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18412:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18412:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "18405:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18330:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18333:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "18339:3:9",
														"type": ""
													}
												],
												"src": "18299:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18478:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18509:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18530:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "18537:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "18542:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "18533:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18533:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18523:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18523:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18523:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18574:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18577:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18567:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18567:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18567:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18602:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18605:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18595:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18595:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18595:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18498:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18491:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18491:9:9"
															},
															"nodeType": "YulIf",
															"src": "18488:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18629:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18638:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18641:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18634:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18634:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "18629:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18463:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18466:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "18472:1:9",
														"type": ""
													}
												],
												"src": "18432:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18718:358:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18728:16:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18743:1:9",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "18732:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18753:16:9",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "18762:7:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "18753:5:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18778:13:9",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "18786:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "18778:4:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18842:228:9",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "18887:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "18889:16:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18889:18:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "18889:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "18862:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "18876:1:9",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "18872:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18872:6:9"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "18880:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "18868:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18868:17:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "18859:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18859:27:9"
																		},
																		"nodeType": "YulIf",
																		"src": "18856:53:9"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "18948:29:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "18950:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "18963:5:9"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "18970:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "18959:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18959:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "18950:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "18929:8:9"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "18939:7:9"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "18925:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18925:22:9"
																		},
																		"nodeType": "YulIf",
																		"src": "18922:55:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "18990:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "19002:4:9"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "19008:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "18998:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18998:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "18990:4:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "19026:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "19042:7:9"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "19051:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "19038:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19038:22:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "19026:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "18811:8:9"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "18821:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18808:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18808:21:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "18830:3:9",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "18804:3:9",
																"statements": []
															},
															"src": "18800:270:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "18682:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "18689:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "18702:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "18709:4:9",
														"type": ""
													}
												],
												"src": "18654:422:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19149:72:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19159:56:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "19189:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "19199:8:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19209:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19195:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19195:19:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "19168:20:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19168:47:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "19159:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "19120:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "19126:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "19139:5:9",
														"type": ""
													}
												],
												"src": "19081:140:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19285:747:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19323:52:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19337:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "19346:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "19337:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "19360:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "19305:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19298:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19298:16:9"
															},
															"nodeType": "YulIf",
															"src": "19295:80:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19408:52:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19422:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "19431:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "19422:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "19445:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "19394:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19387:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19387:12:9"
															},
															"nodeType": "YulIf",
															"src": "19384:76:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "19496:52:9",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "19510:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19519:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "19510:5:9"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "19533:5:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "19489:59:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19494:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "19564:123:9",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "19599:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "19601:16:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19601:18:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "19601:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "19584:8:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "19594:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "19581:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19581:17:9"
																				},
																				"nodeType": "YulIf",
																				"src": "19578:43:9"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "19634:25:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "19647:8:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "19657:1:9",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "19643:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19643:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "19634:5:9"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "19672:5:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "19557:130:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19562:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "19476:4:9"
															},
															"nodeType": "YulSwitch",
															"src": "19469:218:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19785:70:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19799:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "19812:4:9"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "19818:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "19808:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19808:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "19799:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "19840:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "19709:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19715:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "19706:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19706:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "19723:8:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19733:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "19720:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19720:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19702:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19702:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "19746:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19752:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "19743:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19743:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "19761:8:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19771:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "19758:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19758:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19739:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19739:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19699:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19699:77:9"
															},
															"nodeType": "YulIf",
															"src": "19696:159:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19864:57:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "19906:4:9"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "19912:8:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "19887:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19887:34:9"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "19868:7:9",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "19877:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19966:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19968:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19968:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19968:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "19936:7:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19953:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "19949:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19949:6:9"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "19957:6:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "19945:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19945:19:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19933:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19933:32:9"
															},
															"nodeType": "YulIf",
															"src": "19930:58:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19997:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "20010:7:9"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "20019:6:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "20006:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20006:20:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "19997:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "19256:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "19262:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "19275:5:9",
														"type": ""
													}
												],
												"src": "19226:806:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20089:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20148:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20150:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20150:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20150:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20120:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "20113:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20113:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20106:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20106:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20128:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "20139:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "20135:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20135:6:9"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20143:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "20131:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20131:14:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20125:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20125:21:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20102:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20102:45:9"
															},
															"nodeType": "YulIf",
															"src": "20099:71:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20179:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20194:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20197:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "20190:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20190:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "20179:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20068:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20071:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "20077:7:9",
														"type": ""
													}
												],
												"src": "20037:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20259:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20281:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20283:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20283:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20283:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20275:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20278:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20272:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20272:8:9"
															},
															"nodeType": "YulIf",
															"src": "20269:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20312:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20324:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20327:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20320:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20320:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "20312:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20241:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20244:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "20250:4:9",
														"type": ""
													}
												],
												"src": "20210:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20395:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20405:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20419:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20422:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "20415:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20415:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20405:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20436:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20466:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20472:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20462:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20462:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "20440:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20513:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20515:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "20529:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20537:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "20525:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20525:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "20515:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "20493:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20486:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20486:26:9"
															},
															"nodeType": "YulIf",
															"src": "20483:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20603:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20624:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20631:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20636:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "20627:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20627:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20617:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20617:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20617:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20668:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20671:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20661:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20661:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20661:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20696:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20699:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20689:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20689:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20689:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "20559:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "20582:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20590:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "20579:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20579:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20556:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20556:38:9"
															},
															"nodeType": "YulIf",
															"src": "20553:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "20375:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20384:6:9",
														"type": ""
													}
												],
												"src": "20340:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20771:163:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20781:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20791:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "20785:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20818:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20837:5:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "20844:2:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20833:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20833:14:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "20822:7:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20875:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20877:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20877:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20877:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "20862:7:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "20871:2:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20859:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20859:15:9"
															},
															"nodeType": "YulIf",
															"src": "20856:41:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20906:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "20917:7:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20926:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20913:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20913:15:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20906:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20753:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20763:3:9",
														"type": ""
													}
												],
												"src": "20725:209:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20984:130:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20994:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21013:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21020:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21009:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21009:16:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "20998:7:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21055:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21057:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21057:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21057:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "21040:7:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21049:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "21037:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21037:17:9"
															},
															"nodeType": "YulIf",
															"src": "21034:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21086:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "21097:7:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21106:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21093:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21093:15:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "21086:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20966:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20976:3:9",
														"type": ""
													}
												],
												"src": "20939:175:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21151:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21168:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21175:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21180:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "21171:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21171:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21161:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21161:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21161:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21208:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21211:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21201:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21201:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21201:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21232:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21235:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21225:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21225:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21225:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "21119:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21283:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21300:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21307:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21312:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "21303:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21303:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21293:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21293:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21293:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21340:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21343:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21333:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21333:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21333:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21364:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21367:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21357:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21357:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21357:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "21251:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21415:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21432:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21439:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21444:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "21435:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21435:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21425:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21425:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21425:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21472:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21475:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21465:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21465:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21465:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21496:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21499:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21489:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21489:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21489:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "21383:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21560:86:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21624:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21633:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21636:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21626:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21626:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21626:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21583:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21594:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "21609:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "21614:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "21605:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21605:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "21618:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "21601:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21601:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "21590:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21590:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21580:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21580:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21573:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21573:50:9"
															},
															"nodeType": "YulIf",
															"src": "21570:70:9"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21549:5:9",
														"type": ""
													}
												],
												"src": "21515:131:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_array_bytes32_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_uint256t_uint256t_uint256t_array$_t_uint8_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        value1 := calldataload(add(headStart, _1))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, shl(5, _4)), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_uint8(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value4 := dst_1\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _2) { revert(0, 0) }\n        value5 := abi_decode_array_bytes32_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 192))\n        if gt(offset_2, _2) { revert(0, 0) }\n        value6 := abi_decode_array_bytes32_dyn(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let src := add(_2, _1)\n        if gt(add(add(_2, shl(5, _3)), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_uint8(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value7, value6, value5, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := shl(248, 255)\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 1), and(value1, _1))\n        let _2 := not(0xffffffffffffffffffffffff)\n        mstore(add(pos, 2), and(shl(96, value2), _2))\n        mstore(add(pos, 22), and(shl(96, value3), _2))\n        mstore(add(pos, 42), and(shl(96, value4), _2))\n        mstore(add(pos, 62), value5)\n        mstore(add(pos, 94), value6)\n        mstore(add(pos, 126), value7)\n        end := add(pos, 158)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ERC20Capped: cap is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Unique id exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Failed to send Mech\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid signers\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Expired deadline\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Capped: cap exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint64(value) -> ret\n    {\n        let _1 := 0xffffffffffffffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xC4081A4C GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE4C97E6A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE4C97E6A EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xF66608FE EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xF9342285 EQ PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4081A4C EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xAC7FA3C6 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xB24A0893 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xA3772662 EQ PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x3DE47E32 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x3DE47E32 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x46F0975A EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x1E0D4CE9 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x2B9A1D3C EQ PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x7C351DD EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1C2 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B92 JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C5E JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B92 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1D06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x882 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x896 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBE JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B92 JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B92 JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCD SLOAD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x4AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0xA43 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0xD0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x500 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B18 JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x520 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x540 CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0xE0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCF SLOAD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x575 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x599 SWAP1 PUSH2 0x1FA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5C5 SWAP1 PUSH2 0x1FA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x612 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x612 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x62A DUP2 DUP6 DUP6 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x642 DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP1 POP PUSH2 0x64E DUP6 DUP3 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x659 DUP6 DUP6 DUP6 PUSH2 0x102A JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x685 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x69F JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x69F JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x732 PUSH2 0x1043 JUMP JUMPDEST PUSH2 0x73C DUP8 DUP8 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x759 PUSH2 0x74A DUP7 PUSH1 0xA PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x754 SWAP1 DUP7 PUSH2 0x1F6E JUMP JUMPDEST PUSH2 0x10A7 JUMP JUMPDEST DUP7 MLOAD PUSH2 0x76C SWAP1 PUSH1 0xCA SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST POP DUP6 MLOAD PUSH2 0x780 SWAP1 PUSH1 0xCB SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST POP PUSH1 0xCC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 AND OR SWAP1 SSTORE PUSH8 0x16345785D8A0000 PUSH1 0xCD SSTORE PUSH1 0xCE DUP5 SWAP1 SSTORE PUSH1 0xCF DUP3 SWAP1 SSTORE PUSH2 0x7B0 ADDRESS DUP5 PUSH2 0x10D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x62A DUP2 DUP6 DUP6 PUSH2 0x812 DUP4 DUP4 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x81C SWAP2 SWAP1 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x612 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x85B JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x88A PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x894 PUSH1 0x0 PUSH2 0x11A0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x599 SWAP1 PUSH2 0x1FA4 JUMP JUMPDEST PUSH2 0x8AD PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x914 PUSH1 0xD1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E8 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH1 0xD2 PUSH2 0x11F2 JUMP JUMPDEST PUSH2 0x920 PUSH1 0xD1 PUSH1 0x0 PUSH2 0x1860 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x933 SWAP1 PUSH1 0xD1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x187E JUMP JUMPDEST POP PUSH2 0x941 DUP2 PUSH1 0x1 PUSH1 0xD2 PUSH2 0x11F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x952 DUP3 DUP7 PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x9BF DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xE82 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DE PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA07 JUMPI PUSH2 0xA01 DUP4 DUP4 PUSH2 0x1270 JUMP JUMPDEST POP PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA12 DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP1 POP PUSH2 0xA1E CALLER DUP3 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2A DUP3 DUP6 PUSH2 0x1F8D JUMP JUMPDEST SWAP1 POP PUSH2 0xA36 DUP6 DUP3 PUSH2 0x1270 JUMP JUMPDEST POP POP POP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4B PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xCD SSTORE JUMP JUMPDEST PUSH2 0xA58 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xCF SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4578706972656420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x556E6971756520696420657869737473 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xB32 PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x21 DUP3 ADD DUP2 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x22 DUP6 ADD MSTORE DUP7 DUP2 SHL DUP3 AND PUSH1 0x36 DUP6 ADD MSTORE DUP14 SWAP1 SHL AND PUSH1 0x4A DUP4 ADD MSTORE PUSH1 0x5E DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x7E DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0x9E DUP3 ADD DUP10 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0xBE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP9 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0xCF2 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 DUP12 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xBE0 JUMPI PUSH2 0xBE0 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xC03 JUMPI PUSH2 0xC03 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xC26 JUMPI PUSH2 0xC26 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xC64 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT DUP1 ISZERO PUSH2 0xCCB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xCDE JUMPI DUP3 PUSH2 0xCDA DUP2 PUSH2 0x2006 JUMP JUMPDEST SWAP4 POP POP JUMPDEST SWAP3 POP DUP1 PUSH2 0xCEA DUP2 PUSH2 0x1FDF JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBAE JUMP JUMPDEST POP PUSH1 0x2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C6964207369676E657273 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xCD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP1 PUSH2 0xD6B SWAP1 DUP14 SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDA7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x8CC2D2D8CAC840E8DE40E6CADCC8409ACAC6D PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0xDFD DUP14 DUP13 PUSH2 0x10D7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE14 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x941 DUP2 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0xCF SLOAD DUP5 PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH2 0xFC4 SWAP2 SWAP1 PUSH2 0x1E5E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFD5 DUP3 DUP3 PUSH2 0x127E JUMP JUMPDEST DUP1 PUSH1 0xD0 SLOAD PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x1E46 JUMP JUMPDEST PUSH1 0xD0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100A SWAP1 DUP3 SWAP1 PUSH2 0x1E46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x1038 DUP6 DUP3 DUP6 PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x9BF DUP6 DUP6 DUP6 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH2 0x894 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1099 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH2 0x10A3 DUP3 DUP3 PUSH2 0x163B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH2 0x941 DUP2 PUSH2 0x1689 JUMP JUMPDEST PUSH1 0x65 SLOAD DUP2 PUSH2 0x10E4 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x1E46 JUMP JUMPDEST GT ISZERO PUSH2 0x113C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x10A3 DUP3 DUP3 PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x98 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0x126A JUMPI DUP3 DUP3 PUSH1 0x0 DUP7 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0x1226 JUMPI PUSH2 0x1226 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x1262 DUP2 PUSH2 0x1FDF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11F5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x62A DUP2 DUP6 DUP6 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1381 SWAP1 DUP5 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xF9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D5 DUP5 DUP5 PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x126A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1430 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x126A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x14A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x157B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x15B2 SWAP1 DUP5 SWAP1 PUSH2 0x1E46 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x15FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH2 0x894 CALLER PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1675 SWAP1 PUSH1 0x36 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x13C4 SWAP1 PUSH1 0x37 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x16F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x45524332304361707065643A20636170206973203 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1765 SWAP2 SWAP1 PUSH2 0x1E46 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1792 SWAP1 DUP5 SWAP1 PUSH2 0x1E46 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x17E8 SWAP1 PUSH2 0x1FA4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x180A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1850 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1823 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1850 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1850 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1850 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1835 JUMP JUMPDEST POP PUSH2 0x185C SWAP3 SWAP2 POP PUSH2 0x18D3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x941 SWAP2 SWAP1 PUSH2 0x18D3 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1850 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1850 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x189E JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x185C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18D4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x190E PUSH2 0x1909 DUP4 PUSH2 0x1E23 JUMP JUMPDEST PUSH2 0x1DF3 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x192E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x194D JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1931 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x196B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1984 JUMPI PUSH2 0x1984 PUSH2 0x2052 JUMP JUMPDEST PUSH2 0x1997 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1DF3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x19AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x19DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFC4 DUP2 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1A22 DUP2 PUSH2 0x2068 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1A54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A76 PUSH2 0x1909 DUP3 PUSH2 0x1E23 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP6 DUP3 ADD SWAP2 POP DUP6 DUP6 ADD DUP16 DUP8 DUP6 PUSH1 0x5 SHL DUP9 ADD ADD GT ISZERO PUSH2 0x1A96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1AC0 JUMPI PUSH2 0x1AAC DUP2 PUSH2 0x19C9 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x1A9B JUMP JUMPDEST POP SWAP8 POP POP POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1AD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE5 DUP13 DUP5 DUP14 ADD PUSH2 0x18E8 JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x1B09 DUP11 DUP3 DUP12 ADD PUSH2 0x18E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1B36 DUP2 PUSH2 0x2068 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B46 DUP2 PUSH2 0x2068 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1B71 DUP2 PUSH2 0x2068 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1B81 DUP2 PUSH2 0x2068 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1BB0 DUP2 PUSH2 0x2068 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1BF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1C06 PUSH2 0x1909 DUP3 PUSH2 0x1E23 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x1C26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1C52 JUMPI DUP1 CALLDATALOAD PUSH2 0x1C3E DUP2 PUSH2 0x2068 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x1C2B JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1C77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1C8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C9A DUP11 DUP4 DUP12 ADD PUSH2 0x195A JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CBD DUP10 DUP3 DUP11 ADD PUSH2 0x195A JUMP JUMPDEST SWAP6 POP POP PUSH2 0x1CCC PUSH1 0x40 DUP9 ADD PUSH2 0x19C9 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D47 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1D22 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D80 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1D64 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1D92 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1E1B JUMPI PUSH2 0x1E1B PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1E3C JUMPI PUSH2 0x1E3C PUSH2 0x2052 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1E59 JUMPI PUSH2 0x1E59 PUSH2 0x2026 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1E7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1EBB JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1EA1 JUMPI PUSH2 0x1EA1 PUSH2 0x2026 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1EAE JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1E85 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC4 PUSH1 0xFF DUP5 AND DUP4 PUSH1 0x0 DUP3 PUSH2 0x1EDC JUMPI POP PUSH1 0x1 PUSH2 0x630 JUMP JUMPDEST DUP2 PUSH2 0x1EE9 JUMPI POP PUSH1 0x0 PUSH2 0x630 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1EFF JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1F09 JUMPI PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x630 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F1A JUMPI PUSH2 0x1F1A PUSH2 0x2026 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x630 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F48 JUMPI POP DUP2 DUP2 EXP PUSH2 0x630 JUMP JUMPDEST PUSH2 0x1F52 DUP4 DUP4 PUSH2 0x1E80 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1F66 JUMPI PUSH2 0x1F66 PUSH2 0x2026 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1F88 JUMPI PUSH2 0x1F88 PUSH2 0x2026 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1F9F JUMPI PUSH2 0x1F9F PUSH2 0x2026 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1FB8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1FD9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x1FFC JUMPI PUSH2 0x1FFC PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x201D JUMPI PUSH2 0x201D PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x941 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xCD PUSH13 0x2F9A26D0B4E5F8BA27517C11BB 0xC6 PUSH3 0xEC2E24 SWAP2 ISZERO DUP7 ADDRESS DUP15 ISZERO 0xA9 SLT 0xA6 0x1F SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "243:5370:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2178:109:8;;;;;;;;;;-1:-1:-1;2178:109:8;;;;;:::i;:::-;-1:-1:-1;;;;;2260:19:8;2236:4;2260:19;;;:11;:19;;;;;;;;;2178:109;;;;8594:14:9;;8587:22;8569:41;;8557:2;8542:18;2178:109:8;8429:187:9;4770:197:2;;;;;;;;;;-1:-1:-1;4770:197:2;;;;;:::i;:::-;;:::i;3581:106::-;;;;;;;;;;-1:-1:-1;3668:12:2;;3581:106;;;17606:25:9;;;17594:2;17579:18;3581:106:2;17460:177:9;662:50:8;;;;;;;;;;-1:-1:-1;662:50:8;;;;;:::i;:::-;;;;;;;;;;;;;;3017:306;;;;;;;;;;-1:-1:-1;3017:306:8;;;;;:::i;:::-;;:::i;721:550::-;;;;;;;;;;-1:-1:-1;721:550:8;;;;;:::i;:::-;;:::i;:::-;;1316:100;;;;;;;;;;-1:-1:-1;1399:9:8;;1316:100;;1399:9;;;;9176:36:9;;9164:2;9149:18;1316:100:8;9024:194:9;929:81:4;;;;;;;;;;-1:-1:-1;999:4:4;;929:81;;6210:234:2;;;;;;;;;;-1:-1:-1;6210:234:2;;;;;:::i;:::-;;:::i;559:43:8:-;;;;;;;;;;-1:-1:-1;559:43:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;1829:94;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3745:125:2:-;;;;;;;;;;-1:-1:-1;3745:125:2;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;2071:101:0;;;;;;;;;;;;;:::i;1441:85::-;;;;;;;;;;-1:-1:-1;1513:6:0;;1441:85;;-1:-1:-1;;;;;1513:6:0;;;7704:51:9;;7692:2;7677:18;1441:85:0;7558:203:9;2704:102:2;;;;;;;;;;;;;:::i;1931:239:8:-;;;;;;;;;;-1:-1:-1;1931:239:8;;;;;:::i;:::-;;:::i;6931:427:2:-;;;;;;;;;;-1:-1:-1;6931:427:2;;;;;:::i;:::-;;:::i;2544:465:8:-;;;;;;;;;;-1:-1:-1;2544:465:8;;;;;:::i;:::-;;:::i;1424:90::-;;;;;;;;;;-1:-1:-1;1496:10:8;;1424:90;;1522:102;;;;;;;;;;-1:-1:-1;1522:102:8;;;;;:::i;:::-;;:::i;1724:97::-;;;;;;;;;;-1:-1:-1;1724:97:8;;;;;:::i;:::-;;:::i;493:26::-;;;;;;;;;;;;;;;;4313:149:2;;;;;;;;;;-1:-1:-1;4313:149:2;;;;;:::i;:::-;;:::i;3729:1403:8:-;;;;;;;;;;-1:-1:-1;3729:1403:8;;;;;:::i;:::-;;:::i;2321:198:0:-;;;;;;;;;;-1:-1:-1;2321:198:0;;;;;:::i;:::-;;:::i;1632:84:8:-;;;;;;;;;;-1:-1:-1;1701:7:8;;1632:84;;609:46;;;;;;;;;;-1:-1:-1;609:46:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;2493:98:2;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:7;4907:32:2;929:10:7;4923:7:2;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;3017:306:8:-;3148:4;3165:14;3182:25;3200:6;3182:17;:25::i;:::-;3165:42;;3218:28;3233:4;3239:6;3218:14;:28::i;:::-;3257:36;3276:4;3282:2;3286:6;3257:18;:36::i;:::-;-1:-1:-1;3311:4:8;;3017:306;-1:-1:-1;;;;;3017:306:8:o;721:550::-;3111:19:1;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:1;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:1;1476:19:6;:23;;;3219:66:1;;-1:-1:-1;3268:12:1;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:1;;13796:2:9;3157:201:1;;;13778:21:9;13835:2;13815:18;;;13808:30;13874:34;13854:18;;;13847:62;-1:-1:-1;;;13925:18:9;;;13918:44;13979:19;;3157:201:1;;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:1;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:1;;;;;3394:65;946:16:8::1;:14;:16::i;:::-;973:28;986:5;993:7;973:12;:28::i;:::-;1012:39;1037:13;1041:9:::0;1037:2:::1;:13;:::i;:::-;1031:19;::::0;:3;:19:::1;:::i;:::-;1012:18;:39::i;:::-;1062:13:::0;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1086:17:8;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1114:9:8::1;:21:::0;;-1:-1:-1;;1114:21:8::1;;::::0;::::1;;::::0;;1159:9:::1;1146:10;:22:::0;1179:4:::1;:10:::0;;;1200:7:::1;:16:::0;;;1227:36:::1;1241:4;1248:14:::0;1227:5:::1;:36::i;:::-;3483:14:1::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:1;;;3553:14;;-1:-1:-1;9176:36:9;;3553:14:1;;9164:2:9;9149:18;3553:14:1;;;;;;;3479:99;3101:483;721:550:8;;;;;;:::o;6210:234:2:-;6298:4;929:10:7;6352:64:2;929:10:7;6368:7:2;6405:10;6377:25;929:10:7;6368:7:2;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;1829:94:8:-;1871:16;1907:8;1900:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1900:15:8;;;;;;;;;;;;;;;;;;;;;;1829:94;:::o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;2704:102:2:-;2760:13;2792:7;2785:14;;;;;:::i;1931:239:8:-;1334:13:0;:11;:13::i;:::-;2016:40:8::1;2027:8;2016:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;2016:40:8::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;2037:5;2044:11;2016:10;:40::i;:::-;2067:15;2074:8;;2067:15;:::i;:::-;2093:19:::0;;::::1;::::0;:8:::1;::::0;:19:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2123:39;2134:8;2144:4;2150:11;2123:10;:39::i;:::-;1931:239:::0;:::o;6931:427:2:-;7024:4;929:10:7;7024:4:2;7105:25;929:10:7;7122:7:2;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:2;;16896:2:9;7140:85:2;;;16878:21:9;16935:2;16915:18;;;16908:30;16974:34;16954:18;;;16947:62;-1:-1:-1;;;17025:18:9;;;17018:35;17070:19;;7140:85:2;16694:401:9;7140:85:2;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;:::-;-1:-1:-1;7347:4:2;;6931:427;-1:-1:-1;;;;6931:427:2:o;2544:465:8:-;2649:4;2689:7;1513:6:0;;-1:-1:-1;;;;;1513:6:0;;1441:85;2689:7:8;-1:-1:-1;;;;;2675:21:8;:10;-1:-1:-1;;;;;2675:21:8;;2671:309;;;2713:33;2728:9;2739:6;2713:14;:33::i;:::-;;2671:309;;;2779:15;2797:25;2815:6;2797:17;:25::i;:::-;2779:43;;2837:35;2852:10;2864:7;2837:14;:35::i;:::-;2887:14;2904:16;2913:7;2904:6;:16;:::i;:::-;2887:33;;2935;2950:9;2961:6;2935:14;:33::i;:::-;;2764:216;;2671:309;-1:-1:-1;2997:4:8;2544:465;;;;:::o;1522:102::-;1334:13:0;:11;:13::i;:::-;1596:10:8::1;:20:::0;1522:102::o;1724:97::-;1334:13:0;:11;:13::i;:::-;1793:7:8::1;:20:::0;1724:97::o;4313:149:2:-;-1:-1:-1;;;;;4428:18:2;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;3729:1403:8:-;4002:15;3990:8;:27;;3982:56;;;;-1:-1:-1;;;3982:56:8;;14572:2:9;3982:56:8;;;14554:21:9;14611:2;14591:18;;;14584:30;-1:-1:-1;;;14630:18:9;;;14623:46;14686:18;;3982:56:8;14370:340:9;3982:56:8;4058:24;;;;:14;:24;;;;;;;;4057:25;4049:54;;;;-1:-1:-1;;;4049:54:8;;11184:2:9;4049:54:8;;;11166:21:9;11223:2;11203:18;;;11196:30;-1:-1:-1;;;11242:18:9;;;11235:46;11298:18;;4049:54:8;10982:340:9;4049:54:8;4134:10;4116:15;4171:13;1513:6:0;;-1:-1:-1;;;;;1513:6:0;;1441:85;4171:13:8;4244:247;;-1:-1:-1;;;4244:247:8;;;6909:28:9;4197:20:8;6953:11:9;;;6946:36;;;-1:-1:-1;;7069:2:9;7065:15;;;7061:24;;7048:11;;;7041:45;7120:15;;;7116:24;;7102:12;;;7095:46;7175:15;;;7171:24;7157:12;;;7150:46;7212:12;;;7205:28;;;7249:12;;;7242:28;;;7286:13;;;7279:29;;;4155::8;;-1:-1:-1;7324:13:9;;4244:247:8;;;;;;;;;;;;4220:282;;;;;;4197:305;;4515:16;4555:21;4596:8;4591:262;4614:1;:8;4610:1;-1:-1:-1;;;;;4610:12:8;;4591:262;;;4644:17;4664:41;4674:12;4688:1;4690;-1:-1:-1;;;;;4688:4:8;;;;;;;;;:::i;:::-;;;;;;;4694:1;4696;-1:-1:-1;;;;;4694:4:8;;;;;;;;;:::i;:::-;;;;;;;4700:1;4702;-1:-1:-1;;;;;4700:4:8;;;;;;;;;:::i;:::-;;;;;;;4664:41;;;;;;;;;;;;;;;;;8848:25:9;;;8921:4;8909:17;;;;8904:2;8889:18;;8882:45;8958:2;8943:18;;8936:34;9001:2;8986:18;;8979:34;8835:3;8820:19;;8621:398;4664:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4644:61;;4736:8;-1:-1:-1;;;;;4724:20:8;:9;-1:-1:-1;;;;;4724:20:8;;:46;;;;-1:-1:-1;;;;;;4748:22:8;;;;;;:11;:22;;;;;;;;4724:46;4720:86;;;4789:17;;;;:::i;:::-;;;;4720:86;4832:9;-1:-1:-1;4624:3:8;;;;:::i;:::-;;;;4591:262;;;;4892:1;4873:15;:20;;;;4865:48;;;;-1:-1:-1;;;4865:48:8;;13452:2:9;4865:48:8;;;13434:21:9;13491:2;13471:18;;;13464:30;-1:-1:-1;;;13510:18:9;;;13503:45;13565:18;;4865:48:8;13250:339:9;4865:48:8;4924:24;;;;:14;:24;;;;;:31;;-1:-1:-1;;4924:31:8;4951:4;4924:31;;;5009:10;;-1:-1:-1;;;;;4987:14:8;;;5009:19;;5022:6;;5009:19;:::i;:::-;4987:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4968:65;;;5052:7;5044:39;;;;-1:-1:-1;;;5044:39:8;;13104:2:9;5044:39:8;;;13086:21:9;13143:2;13123:18;;;13116:30;-1:-1:-1;;;13162:18:9;;;13155:49;13221:18;;5044:39:8;12902:343:9;5044:39:8;5094:30;5106:9;5117:6;5094:11;:30::i;:::-;3971:1161;;;;;;3729:1403;;;;;;;:::o;2321:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;11529:2:9;2401:73:0::1;::::0;::::1;11511:21:9::0;11568:2;11548:18;;;11541:30;11607:34;11587:18;;;11580:62;-1:-1:-1;;;11658:18:9;;;11651:36;11704:19;;2401:73:0::1;11327:402:9::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;10447:370:2:-:0;-1:-1:-1;;;;;10578:19:2;;10570:68;;;;-1:-1:-1;;;10570:68:2;;16079:2:9;10570:68:2;;;16061:21:9;16118:2;16098:18;;;16091:30;16157:34;16137:18;;;16130:62;-1:-1:-1;;;16208:18:9;;;16201:34;16252:19;;10570:68:2;15877:400:9;10570:68:2;-1:-1:-1;;;;;10656:21:2;;10648:68;;;;-1:-1:-1;;;10648:68:2;;11936:2:9;10648:68:2;;;11918:21:9;11975:2;11955:18;;;11948:30;12014:34;11994:18;;;11987:62;-1:-1:-1;;;12065:18:9;;;12058:32;12107:19;;10648:68:2;11734:398:9;10648:68:2;-1:-1:-1;;;;;10727:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;17606:25:9;;;10778:32:2;;17579:18:9;10778:32:2;;;;;;;;10447:370;;;:::o;3331:160:8:-;3396:7;3416:15;3455:3;3444:7;;3435:6;:16;;;;:::i;:::-;3434:24;;;;:::i;:::-;3416:42;3331:160;-1:-1:-1;;;3331:160:8:o;3499:222::-;3575:22;3581:7;3590:6;3575:5;:22::i;:::-;3636:6;3622:11;;:20;;;;:::i;:::-;3608:11;:34;-1:-1:-1;;;;;3680:24:8;;;;;;:15;:24;;;;;;:33;;3707:6;;3680:33;:::i;:::-;-1:-1:-1;;;;;3653:24:8;;;;;;;:15;:24;;;;;:60;;;;-1:-1:-1;3499:222:8:o;5529:286:2:-;5656:4;929:10:7;5712:38:2;5728:4;929:10:7;5743:6:2;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;1003:95:0:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1065:26:0::1;:24;:26::i;2116:147:2:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;2218:38:2::1;2241:5;2248:7;2218:22;:38::i;:::-;2116:147:::0;;:::o;567:119:4:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;645:34:4::1;674:4;645:28;:34::i;1063:215::-:0;999:4;;1188:6;1155:30;3668:12:2;;;3581:106;1155:30:4;:39;;;;:::i;:::-;:48;;1147:86;;;;-1:-1:-1;;;1147:86:4;;15725:2:9;1147:86:4;;;15707:21:9;15764:2;15744:18;;;15737:30;15803:27;15783:18;;;15776:55;15848:18;;1147:86:4;15523:349:9;1147:86:4;1243:28;1255:7;1264:6;1243:11;:28::i;1599:130:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:7;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;14211:2:9;1654:68:0;;;14193:21:9;;;14230:18;;;14223:30;14289:34;14269:18;;;14262:62;14341:18;;1654:68:0;14009:356:9;2673:187:0;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;2295:241:8:-;2447:8;2442:87;2465:3;:10;2461:1;-1:-1:-1;;;;;2461:14:8;;2442:87;;;2511:6;2497:3;:11;2501:3;2505:1;-1:-1:-1;;;;;2501:6:8;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2497:11:8;;;;;;;;;;;-1:-1:-1;2497:11:8;:20;;-1:-1:-1;;2497:20:8;;;;;;;;;;2477:3;;;;:::i;:::-;;;;2442:87;;;;2295:241;;;:::o;4066:189:2:-;4145:4;929:10:7;4199:28:2;929:10:7;4216:2:2;4220:6;4199:9;:28::i;9448:576::-;-1:-1:-1;;;;;9531:21:2;;9523:67;;;;-1:-1:-1;;;9523:67:2;;14917:2:9;9523:67:2;;;14899:21:9;14956:2;14936:18;;;14929:30;14995:34;14975:18;;;14968:62;-1:-1:-1;;;15046:18:9;;;15039:31;15087:19;;9523:67:2;14715:397:9;9523:67:2;-1:-1:-1;;;;;9686:18:2;;9661:22;9686:18;;;:9;:18;;;;;;9722:24;;;;9714:71;;;;-1:-1:-1;;;9714:71:2;;10781:2:9;9714:71:2;;;10763:21:9;10820:2;10800:18;;;10793:30;10859:34;10839:18;;;10832:62;-1:-1:-1;;;10910:18:9;;;10903:32;10952:19;;9714:71:2;10579:398:9;9714:71:2;-1:-1:-1;;;;;9819:18:2;;;;;;:9;:18;;;;;9840:23;;;9819:44;;9883:12;:22;;9857:6;;9819:18;9883:22;;9857:6;;9883:22;:::i;:::-;;;;-1:-1:-1;;9921:37:2;;17606:25:9;;;9947:1:2;;-1:-1:-1;;;;;9921:37:2;;;;;17594:2:9;17579:18;9921:37:2;17460:177:9;9969:48:2;9513:511;9448:576;;:::o;11098:441::-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:2;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:2;;12339:2:9;11347:68:2;;;12321:21:9;12378:2;12358:18;;;12351:30;12417:31;12397:18;;;12390:59;12466:18;;11347:68:2;12137:353:9;11347:68:2;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;7812:651::-;-1:-1:-1;;;;;7938:18:2;;7930:68;;;;-1:-1:-1;;;7930:68:2;;15319:2:9;7930:68:2;;;15301:21:9;15358:2;15338:18;;;15331:30;15397:34;15377:18;;;15370:62;-1:-1:-1;;;15448:18:9;;;15441:35;15493:19;;7930:68:2;15117:401:9;7930:68:2;-1:-1:-1;;;;;8016:16:2;;8008:64;;;;-1:-1:-1;;;8008:64:2;;10027:2:9;8008:64:2;;;10009:21:9;10066:2;10046:18;;;10039:30;10105:34;10085:18;;;10078:62;-1:-1:-1;;;10156:18:9;;;10149:33;10199:19;;8008:64:2;9825:399:9;8008:64:2;-1:-1:-1;;;;;8154:15:2;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:2;;12697:2:9;8179:72:2;;;12679:21:9;12736:2;12716:18;;;12709:30;12775:34;12755:18;;;12748:62;-1:-1:-1;;;12826:18:9;;;12819:36;12872:19;;8179:72:2;12495:402:9;8179:72:2;-1:-1:-1;;;;;8285:15:2;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:2;8391:4;-1:-1:-1;;;;;8382:26:2;;8401:6;8382:26;;;;17606:25:9;;17594:2;17579:18;;17460:177;8382:26:2;;;;;;;;8419:37;9448:576;1104:111:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1176:32:0::1;929:10:7::0;1176:18:0::1;:32::i;2269:159:2:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;2381:13:2;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2404:17:2;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;692:158:4:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;795:1:4::1;788:4;:8;780:42;;;::::0;-1:-1:-1;;;780:42:4;;10431:2:9;780:42:4::1;::::0;::::1;10413:21:9::0;10470:2;10450:18;;;10443:30;-1:-1:-1;;;10489:18:9;;;10482:51;10550:18;;780:42:4::1;10229:345:9::0;780:42:4::1;832:4;:11:::0;692:158::o;8739:389:2:-;-1:-1:-1;;;;;8822:21:2;;8814:65;;;;-1:-1:-1;;;8814:65:2;;17302:2:9;8814:65:2;;;17284:21:9;17341:2;17321:18;;;17314:30;17380:33;17360:18;;;17353:61;17431:18;;8814:65:2;17100:355:9;8814:65:2;8966:6;8950:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8982:18:2;;;;;;:9;:18;;;;;:28;;9004:6;;8982:18;:28;;9004:6;;8982:28;:::i;:::-;;;;-1:-1:-1;;9025:37:2;;17606:25:9;;;-1:-1:-1;;;;;9025:37:2;;;9042:1;;9025:37;;17594:2:9;17579:18;9025:37:2;;;;;;;2116:147;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:673:9;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;175:6;162:20;201:4;225:60;241:43;281:2;241:43;:::i;:::-;225:60;:::i;:::-;307:3;331:2;326:3;319:15;359:2;354:3;350:12;343:19;;394:2;386:6;382:15;446:3;441:2;435;432:1;428:10;420:6;416:23;412:32;409:41;406:61;;;463:1;460;453:12;406:61;485:1;495:163;509:2;506:1;503:9;495:163;;;566:17;;554:30;;604:12;;;;636;;;;527:1;520:9;495:163;;;-1:-1:-1;676:5:9;;14:673;-1:-1:-1;;;;;;;14:673:9:o;692:531::-;735:5;788:3;781:4;773:6;769:17;765:27;755:55;;806:1;803;796:12;755:55;842:6;829:20;-1:-1:-1;;;;;864:2:9;861:26;858:52;;;890:18;;:::i;:::-;934:55;977:2;958:13;;-1:-1:-1;;954:27:9;983:4;950:38;934:55;:::i;:::-;1014:2;1005:7;998:19;1060:3;1053:4;1048:2;1040:6;1036:15;1032:26;1029:35;1026:55;;;1077:1;1074;1067:12;1026:55;1142:2;1135:4;1127:6;1123:17;1116:4;1107:7;1103:18;1090:55;1190:1;1165:16;;;1183:4;1161:27;1154:38;;;;1169:7;692:531;-1:-1:-1;;;692:531:9:o;1228:156::-;1294:20;;1354:4;1343:16;;1333:27;;1323:55;;1374:1;1371;1364:12;1323:55;1228:156;;;:::o;1389:247::-;1448:6;1501:2;1489:9;1480:7;1476:23;1472:32;1469:52;;;1517:1;1514;1507:12;1469:52;1556:9;1543:23;1575:31;1600:5;1575:31;:::i;1641:1728::-;1835:6;1843;1851;1859;1867;1875;1883;1936:3;1924:9;1915:7;1911:23;1907:33;1904:53;;;1953:1;1950;1943:12;1904:53;1992:9;1979:23;2011:31;2036:5;2011:31;:::i;:::-;2061:5;-1:-1:-1;2085:2:9;2119:18;;;2106:32;;-1:-1:-1;2185:2:9;2170:18;;2157:32;;-1:-1:-1;2236:2:9;2221:18;;2208:32;;-1:-1:-1;2291:3:9;2276:19;;2263:33;-1:-1:-1;;;;;2345:14:9;;;2342:34;;;2372:1;2369;2362:12;2342:34;2410:6;2399:9;2395:22;2385:32;;2455:7;2448:4;2444:2;2440:13;2436:27;2426:55;;2477:1;2474;2467:12;2426:55;2513:2;2500:16;2536:60;2552:43;2592:2;2552:43;:::i;2536:60::-;2618:3;2642:2;2637:3;2630:15;2670:2;2665:3;2661:12;2654:19;;2701:2;2697;2693:11;2749:7;2744:2;2738;2735:1;2731:10;2727:2;2723:19;2719:28;2716:41;2713:61;;;2770:1;2767;2760:12;2713:61;2792:1;2783:10;;2802:167;2816:2;2813:1;2810:9;2802:167;;;2873:21;2890:3;2873:21;:::i;:::-;2861:34;;2834:1;2827:9;;;;;2915:12;;;;2947;;2802:167;;;-1:-1:-1;2988:5:9;-1:-1:-1;;;3046:3:9;3031:19;;3018:33;;-1:-1:-1;3063:16:9;;;3060:36;;;3092:1;3089;3082:12;3060:36;3115:63;3170:7;3159:8;3148:9;3144:24;3115:63;:::i;:::-;3105:73;;3231:3;3220:9;3216:19;3203:33;3187:49;;3261:2;3251:8;3248:16;3245:36;;;3277:1;3274;3267:12;3245:36;;;3300:63;3355:7;3344:8;3333:9;3329:24;3300:63;:::i;:::-;3290:73;;;1641:1728;;;;;;;;;;:::o;3374:388::-;3442:6;3450;3503:2;3491:9;3482:7;3478:23;3474:32;3471:52;;;3519:1;3516;3509:12;3471:52;3558:9;3545:23;3577:31;3602:5;3577:31;:::i;:::-;3627:5;-1:-1:-1;3684:2:9;3669:18;;3656:32;3697:33;3656:32;3697:33;:::i;:::-;3749:7;3739:17;;;3374:388;;;;;:::o;3767:456::-;3844:6;3852;3860;3913:2;3901:9;3892:7;3888:23;3884:32;3881:52;;;3929:1;3926;3919:12;3881:52;3968:9;3955:23;3987:31;4012:5;3987:31;:::i;:::-;4037:5;-1:-1:-1;4094:2:9;4079:18;;4066:32;4107:33;4066:32;4107:33;:::i;:::-;3767:456;;4159:7;;-1:-1:-1;;;4213:2:9;4198:18;;;;4185:32;;3767:456::o;4228:315::-;4296:6;4304;4357:2;4345:9;4336:7;4332:23;4328:32;4325:52;;;4373:1;4370;4363:12;4325:52;4412:9;4399:23;4431:31;4456:5;4431:31;:::i;:::-;4481:5;4533:2;4518:18;;;;4505:32;;-1:-1:-1;;;4228:315:9:o;4548:977::-;4632:6;4663:2;4706;4694:9;4685:7;4681:23;4677:32;4674:52;;;4722:1;4719;4712:12;4674:52;4762:9;4749:23;-1:-1:-1;;;;;4787:6:9;4784:30;4781:50;;;4827:1;4824;4817:12;4781:50;4850:22;;4903:4;4895:13;;4891:27;-1:-1:-1;4881:55:9;;4932:1;4929;4922:12;4881:55;4968:2;4955:16;4991:60;5007:43;5047:2;5007:43;:::i;4991:60::-;5073:3;5097:2;5092:3;5085:15;5125:2;5120:3;5116:12;5109:19;;5156:2;5152;5148:11;5204:7;5199:2;5193;5190:1;5186:10;5182:2;5178:19;5174:28;5171:41;5168:61;;;5225:1;5222;5215:12;5168:61;5247:1;5238:10;;5257:238;5271:2;5268:1;5265:9;5257:238;;;5342:3;5329:17;5359:31;5384:5;5359:31;:::i;:::-;5403:18;;5289:1;5282:9;;;;;5441:12;;;;5473;;5257:238;;;-1:-1:-1;5514:5:9;4548:977;-1:-1:-1;;;;;;;4548:977:9:o;5530:820::-;5652:6;5660;5668;5676;5684;5692;5745:3;5733:9;5724:7;5720:23;5716:33;5713:53;;;5762:1;5759;5752:12;5713:53;5802:9;5789:23;-1:-1:-1;;;;;5872:2:9;5864:6;5861:14;5858:34;;;5888:1;5885;5878:12;5858:34;5911:50;5953:7;5944:6;5933:9;5929:22;5911:50;:::i;:::-;5901:60;;6014:2;6003:9;5999:18;5986:32;5970:48;;6043:2;6033:8;6030:16;6027:36;;;6059:1;6056;6049:12;6027:36;;6082:52;6126:7;6115:8;6104:9;6100:24;6082:52;:::i;:::-;6072:62;;;6153:36;6185:2;6174:9;6170:18;6153:36;:::i;:::-;6143:46;;6236:2;6225:9;6221:18;6208:32;6198:42;;6287:3;6276:9;6272:19;6259:33;6249:43;;6339:3;6328:9;6324:19;6311:33;6301:43;;5530:820;;;;;;;;:::o;6355:180::-;6414:6;6467:2;6455:9;6446:7;6442:23;6438:32;6435:52;;;6483:1;6480;6473:12;6435:52;-1:-1:-1;6506:23:9;;6355:180;-1:-1:-1;6355:180:9:o;7766:658::-;7937:2;7989:21;;;8059:13;;7962:18;;;8081:22;;;7908:4;;7937:2;8160:15;;;;8134:2;8119:18;;;7908:4;8203:195;8217:6;8214:1;8211:13;8203:195;;;8282:13;;-1:-1:-1;;;;;8278:39:9;8266:52;;8373:15;;;;8338:12;;;;8314:1;8232:9;8203:195;;;-1:-1:-1;8415:3:9;;7766:658;-1:-1:-1;;;;;;7766:658:9:o;9223:597::-;9335:4;9364:2;9393;9382:9;9375:21;9425:6;9419:13;9468:6;9463:2;9452:9;9448:18;9441:34;9493:1;9503:140;9517:6;9514:1;9511:13;9503:140;;;9612:14;;;9608:23;;9602:30;9578:17;;;9597:2;9574:26;9567:66;9532:10;;9503:140;;;9661:6;9658:1;9655:13;9652:91;;;9731:1;9726:2;9717:6;9706:9;9702:22;9698:31;9691:42;9652:91;-1:-1:-1;9804:2:9;9783:15;-1:-1:-1;;9779:29:9;9764:45;;;;9811:2;9760:54;;9223:597;-1:-1:-1;;;9223:597:9:o;16282:407::-;16484:2;16466:21;;;16523:2;16503:18;;;16496:30;16562:34;16557:2;16542:18;;16535:62;-1:-1:-1;;;16628:2:9;16613:18;;16606:41;16679:3;16664:19;;16282:407::o;17831:275::-;17902:2;17896:9;17967:2;17948:13;;-1:-1:-1;;17944:27:9;17932:40;;-1:-1:-1;;;;;17987:34:9;;18023:22;;;17984:62;17981:88;;;18049:18;;:::i;:::-;18085:2;18078:22;17831:275;;-1:-1:-1;17831:275:9:o;18111:183::-;18171:4;-1:-1:-1;;;;;18196:6:9;18193:30;18190:56;;;18226:18;;:::i;:::-;-1:-1:-1;18271:1:9;18267:14;18283:4;18263:25;;18111:183::o;18299:128::-;18339:3;18370:1;18366:6;18363:1;18360:13;18357:39;;;18376:18;;:::i;:::-;-1:-1:-1;18412:9:9;;18299:128::o;18432:217::-;18472:1;18498;18488:132;;18542:10;18537:3;18533:20;18530:1;18523:31;18577:4;18574:1;18567:15;18605:4;18602:1;18595:15;18488:132;-1:-1:-1;18634:9:9;;18432:217::o;18654:422::-;18743:1;18786:5;18743:1;18800:270;18821:7;18811:8;18808:21;18800:270;;;18880:4;18876:1;18872:6;18868:17;18862:4;18859:27;18856:53;;;18889:18;;:::i;:::-;18939:7;18929:8;18925:22;18922:55;;;18959:16;;;;18922:55;19038:22;;;;18998:15;;;;18800:270;;;18804:3;18654:422;;;;;:::o;19081:140::-;19139:5;19168:47;19209:4;19199:8;19195:19;19189:4;19275:5;19305:8;19295:80;;-1:-1:-1;19346:1:9;19360:5;;19295:80;19394:4;19384:76;;-1:-1:-1;19431:1:9;19445:5;;19384:76;19476:4;19494:1;19489:59;;;;19562:1;19557:130;;;;19469:218;;19489:59;19519:1;19510:10;;19533:5;;;19557:130;19594:3;19584:8;19581:17;19578:43;;;19601:18;;:::i;:::-;-1:-1:-1;;19657:1:9;19643:16;;19672:5;;19469:218;;19771:2;19761:8;19758:16;19752:3;19746:4;19743:13;19739:36;19733:2;19723:8;19720:16;19715:2;19709:4;19706:12;19702:35;19699:77;19696:159;;;-1:-1:-1;19808:19:9;;;19840:5;;19696:159;19887:34;19912:8;19906:4;19887:34;:::i;:::-;19957:6;19953:1;19949:6;19945:19;19936:7;19933:32;19930:58;;;19968:18;;:::i;:::-;20006:20;;19226:806;-1:-1:-1;;;19226:806:9:o;20037:168::-;20077:7;20143:1;20139;20135:6;20131:14;20128:1;20125:21;20120:1;20113:9;20106:17;20102:45;20099:71;;;20150:18;;:::i;:::-;-1:-1:-1;20190:9:9;;20037:168::o;20210:125::-;20250:4;20278:1;20275;20272:8;20269:34;;;20283:18;;:::i;:::-;-1:-1:-1;20320:9:9;;20210:125::o;20340:380::-;20419:1;20415:12;;;;20462;;;20483:61;;20537:4;20529:6;20525:17;20515:27;;20483:61;20590:2;20582:6;20579:14;20559:18;20556:38;20553:161;;;20636:10;20631:3;20627:20;20624:1;20617:31;20671:4;20668:1;20661:15;20699:4;20696:1;20689:15;20553:161;;20340:380;;;:::o;20725:209::-;20763:3;-1:-1:-1;;;;;20844:2:9;20837:5;20833:14;20871:2;20862:7;20859:15;20856:41;;;20877:18;;:::i;:::-;20926:1;20913:15;;20725:209;-1:-1:-1;;;20725:209:9:o;20939:175::-;20976:3;21020:4;21013:5;21009:16;21049:4;21040:7;21037:17;21034:43;;;21057:18;;:::i;:::-;21106:1;21093:15;;20939:175;-1:-1:-1;;20939:175:9:o;21119:127::-;21180:10;21175:3;21171:20;21168:1;21161:31;21211:4;21208:1;21201:15;21235:4;21232:1;21225:15;21251:127;21312:10;21307:3;21303:20;21300:1;21293:31;21343:4;21340:1;21333:15;21367:4;21364:1;21357:15;21383:127;21444:10;21439:3;21435:20;21432:1;21425:31;21475:4;21472:1;21465:15;21499:4;21496:1;21489:15;21515:131;-1:-1:-1;;;;;21590:31:9;;21580:42;;21570:70;;21636:1;21633;21626:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1674200",
								"executionCost": "1757",
								"totalCost": "1675957"
							},
							"external": {
								"_mapSigners(address)": "2570",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24691",
								"balanceOf(address)": "2620",
								"cap()": "2360",
								"decimals()": "2335",
								"decreaseAllowance(address,uint256)": "26990",
								"getRewardAmt()": "2381",
								"getTaxFee()": "2380",
								"increaseAllowance(address,uint256)": "27067",
								"initialize(string,string,uint8,uint256,uint256,uint256)": "infinite",
								"mapSigner(address)": "2612",
								"name()": "infinite",
								"owner()": "2347",
								"permitMint(address,uint256,uint256,uint256,uint8[],bytes32[],bytes32[])": "infinite",
								"renounceOwnership()": "infinite",
								"setRewardAmtInWei(uint256)": "24599",
								"setSigners(address[])": "infinite",
								"setTaxFee(uint256)": "24533",
								"signers()": "infinite",
								"symbol()": "infinite",
								"totalBurned()": "2362",
								"totalSupply()": "2327",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniqueIdExists(uint256)": "2560",
								"userTotalBurned(address)": "2581"
							},
							"internal": {
								"_burnAndUpdate(address,uint256)": "infinite",
								"_calculateBurnAmt(uint256)": "2288",
								"_updateMap(address[] memory,bool,mapping(address => bool))": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d6cd6c2f9a26d0b4e5f8ba27517c11bbc662ec2e24911586308e15a912a61f9564736f6c63430008070033",
									".code": [
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "C4081A4C"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "E4C97E6A"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "E4C97E6A"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "F66608FE"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "F9342285"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "C4081A4C"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "D89135CD"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "A457C2D7"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "A457C2D7"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "AC7FA3C6"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "B24A0893"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "A3772662"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "3DE47E32"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "3DE47E32"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "46F0975A"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "355274EA"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "39509351"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "1E0D4CE9"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "2B9A1D3C"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "7C351DD"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2240,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2271,
											"name": "PUSH",
											"source": 8,
											"value": "D2"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8594,
											"end": 8608,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8608,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8587,
											"end": 8609,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8569,
											"end": 8610,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8569,
											"end": 8610,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8559,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8542,
											"end": 8560,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 8429,
											"end": 8616,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "PUSH",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17606,
											"end": 17631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17606,
											"end": 17631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17606,
											"end": 17631,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17594,
											"end": 17596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17579,
											"end": 17597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 17460,
											"end": 17637,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 662,
											"end": 712,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH",
											"source": 8,
											"value": "D4"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "PUSH",
											"source": 8,
											"value": "CC"
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9176,
											"end": 9212,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9176,
											"end": 9212,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9166,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9149,
											"end": 9167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 9024,
											"end": 9218,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1003,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 999,
											"end": 1003,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH",
											"source": 8,
											"value": "D2"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3826,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7755,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7755,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7694,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7558,
											"end": 7761,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1496,
											"end": 1506,
											"name": "PUSH",
											"source": 8,
											"value": "CD"
										},
										{
											"begin": 1496,
											"end": 1506,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 493,
											"end": 519,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 493,
											"end": 519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 493,
											"end": 519,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 519,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 493,
											"end": 519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 493,
											"end": 519,
											"name": "PUSH",
											"source": 8,
											"value": "D0"
										},
										{
											"begin": 493,
											"end": 519,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1708,
											"name": "PUSH",
											"source": 8,
											"value": "CF"
										},
										{
											"begin": 1701,
											"end": 1708,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH",
											"source": 8,
											"value": "D3"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2560,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2579,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4923,
											"end": 4930,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4938,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4907,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4956,
											"end": 4960,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4960,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4960,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4960,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3148,
											"end": 3152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3179,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3182,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 3182,
											"end": 3207,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3182,
											"end": 3207,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 3182,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3218,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3233,
											"end": 3237,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3218,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3218,
											"end": 3246,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3218,
											"end": 3246,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3218,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3257,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3284,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3292,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3257,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3257,
											"end": 3293,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3257,
											"end": 3293,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3257,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3311,
											"end": 3315,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3311,
											"end": 3315,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3111,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3268,
											"end": 3285,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13796,
											"end": 13798,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13778,
											"end": 13799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13835,
											"end": 13837,
											"name": "PUSH",
											"source": 9,
											"value": "2E"
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13815,
											"end": 13833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13808,
											"end": 13838,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13874,
											"end": 13908,
											"name": "PUSH",
											"source": 9,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 13854,
											"end": 13872,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13854,
											"end": 13872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13854,
											"end": 13872,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13847,
											"end": 13909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13918,
											"end": 13962,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13979,
											"end": 13998,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 13979,
											"end": 13998,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 946,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 946,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 946,
											"end": 962,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 946,
											"end": 962,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 946,
											"end": 962,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 973,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 993,
											"end": 1000,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 973,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 973,
											"end": 1001,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 1001,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 973,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1041,
											"end": 1050,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1037,
											"end": 1039,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "PUSH",
											"source": 8,
											"value": "CA"
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "PUSH",
											"source": 8,
											"value": "CB"
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1123,
											"name": "PUSH",
											"source": 8,
											"value": "CC"
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1159,
											"end": 1168,
											"name": "PUSH",
											"source": 8,
											"value": "16345785D8A0000"
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "PUSH",
											"source": 8,
											"value": "CD"
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "CE"
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1200,
											"end": 1207,
											"name": "PUSH",
											"source": 8,
											"value": "CF"
										},
										{
											"begin": 1200,
											"end": 1216,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1200,
											"end": 1216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1200,
											"end": 1216,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1241,
											"end": 1245,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1262,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3483,
											"end": 3497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 9176,
											"end": 9212,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9176,
											"end": 9212,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9164,
											"end": 9166,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9149,
											"end": 9167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6352,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6405,
											"end": 6415,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6352,
											"end": 6416,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1871,
											"end": 1887,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1907,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "D1"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2792,
											"end": 2799,
											"name": "PUSH",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 2027,
											"end": 2035,
											"name": "PUSH",
											"source": 8,
											"value": "D1"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2042,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2055,
											"name": "PUSH",
											"source": 8,
											"value": "D2"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "D1"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "D1"
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2123,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2134,
											"end": 2142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2148,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2150,
											"end": 2161,
											"name": "PUSH",
											"source": 8,
											"value": "D2"
										},
										{
											"begin": 2123,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2123,
											"end": 2162,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2123,
											"end": 2162,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2123,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7024,
											"end": 7028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7024,
											"end": 7028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7129,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7078,
											"end": 7130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7078,
											"end": 7130,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7168,
											"end": 7183,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7183,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16896,
											"end": 16898,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16878,
											"end": 16899,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16935,
											"end": 16937,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 16915,
											"end": 16933,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16915,
											"end": 16933,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16915,
											"end": 16933,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16908,
											"end": 16938,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16974,
											"end": 17008,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 16954,
											"end": 16972,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 16954,
											"end": 16972,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16954,
											"end": 16972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16947,
											"end": 17009,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17025,
											"end": 17043,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 17025,
											"end": 17043,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17025,
											"end": 17043,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17018,
											"end": 17053,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17070,
											"end": 17089,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 17070,
											"end": 17089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 16694,
											"end": 17095,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7268,
											"end": 7273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7275,
											"end": 7282,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7303,
											"end": 7318,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7300,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7259,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2685,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2728,
											"end": 2737,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2745,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2794,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2815,
											"end": 2821,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2797,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2797,
											"end": 2822,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2797,
											"end": 2822,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2797,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2852,
											"end": 2862,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 2871,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2837,
											"end": 2872,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2837,
											"end": 2872,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2837,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2913,
											"end": 2920,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2904,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2904,
											"end": 2920,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 2920,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2904,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2950,
											"end": 2959,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2961,
											"end": 2967,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2997,
											"end": 3001,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1606,
											"name": "PUSH",
											"source": 8,
											"value": "CD"
										},
										{
											"begin": 1596,
											"end": 1616,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1800,
											"name": "PUSH",
											"source": 8,
											"value": "CF"
										},
										{
											"begin": 1793,
											"end": 1813,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4402,
											"end": 4409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4439,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4017,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3990,
											"end": 3998,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3990,
											"end": 4017,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3990,
											"end": 4017,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14572,
											"end": 14574,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14554,
											"end": 14575,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14611,
											"end": 14613,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 14591,
											"end": 14609,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14591,
											"end": 14609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14591,
											"end": 14609,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14584,
											"end": 14614,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4578706972656420646561646C696E65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14630,
											"end": 14648,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14630,
											"end": 14648,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14630,
											"end": 14648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14623,
											"end": 14669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14686,
											"end": 14704,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14686,
											"end": 14704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 14370,
											"end": 14710,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4072,
											"name": "PUSH",
											"source": 8,
											"value": "D3"
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4082,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11186,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11166,
											"end": 11187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11223,
											"end": 11225,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 11203,
											"end": 11221,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11203,
											"end": 11221,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11203,
											"end": 11221,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11196,
											"end": 11226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "556E6971756520696420657869737473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11281,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11298,
											"end": 11316,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11298,
											"end": 11316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 10982,
											"end": 11322,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4134,
											"end": 4144,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4116,
											"end": 4131,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4184,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 4171,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6937,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4197,
											"end": 4217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6964,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 6953,
											"end": 6964,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6953,
											"end": 6964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 6982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 6982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 6982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7069,
											"end": 7071,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7065,
											"end": 7080,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7065,
											"end": 7080,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7065,
											"end": 7080,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7048,
											"end": 7059,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 7048,
											"end": 7059,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7048,
											"end": 7059,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7086,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7135,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7135,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7140,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7140,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7114,
											"name": "PUSH",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 7102,
											"end": 7114,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7114,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7095,
											"end": 7141,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7175,
											"end": 7190,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 7175,
											"end": 7190,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7175,
											"end": 7190,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7195,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "PUSH",
											"source": 9,
											"value": "4A"
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7196,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7212,
											"end": 7224,
											"name": "PUSH",
											"source": 9,
											"value": "5E"
										},
										{
											"begin": 7212,
											"end": 7224,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7212,
											"end": 7224,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7205,
											"end": 7233,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 7205,
											"end": 7233,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7205,
											"end": 7233,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7249,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "7E"
										},
										{
											"begin": 7249,
											"end": 7261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7249,
											"end": 7261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7270,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7270,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7270,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7286,
											"end": 7299,
											"name": "PUSH",
											"source": 9,
											"value": "9E"
										},
										{
											"begin": 7286,
											"end": 7299,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7286,
											"end": 7299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7308,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7308,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4184,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4155,
											"end": 4184,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7324,
											"end": 7337,
											"name": "PUSH",
											"source": 9,
											"value": "BE"
										},
										{
											"begin": 7324,
											"end": 7337,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4502,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4502,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4502,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4220,
											"end": 4502,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4502,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4502,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4531,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4555,
											"end": 4576,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4604,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4614,
											"end": 4615,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4614,
											"end": 4622,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4611,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4661,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4674,
											"end": 4686,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4689,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 4690,
											"end": 4691,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4695,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 4696,
											"end": 4697,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4703,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8848,
											"end": 8873,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8848,
											"end": 8873,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8848,
											"end": 8873,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8921,
											"end": 8925,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8909,
											"end": 8926,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8909,
											"end": 8926,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8909,
											"end": 8926,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8909,
											"end": 8926,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8904,
											"end": 8906,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8889,
											"end": 8907,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8889,
											"end": 8907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8882,
											"end": 8927,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8958,
											"end": 8960,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8943,
											"end": 8961,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8943,
											"end": 8961,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8936,
											"end": 8970,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9001,
											"end": 9003,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8979,
											"end": 9013,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8838,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8820,
											"end": 8839,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8839,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8621,
											"end": 9019,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4736,
											"end": 4744,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4733,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4759,
											"name": "PUSH",
											"source": 8,
											"value": "D2"
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4806,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 4720,
											"end": 4806,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4806,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 4720,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4832,
											"end": 4841,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4873,
											"end": 4888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 4893,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4873,
											"end": 4893,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 4893,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 4893,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13452,
											"end": 13454,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13434,
											"end": 13455,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13491,
											"end": 13493,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 13471,
											"end": 13489,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13471,
											"end": 13489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13471,
											"end": 13489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13464,
											"end": 13494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964207369676E657273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13510,
											"end": 13528,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13510,
											"end": 13528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13510,
											"end": 13528,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13503,
											"end": 13548,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13565,
											"end": 13583,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13565,
											"end": 13583,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 13250,
											"end": 13589,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4938,
											"name": "PUSH",
											"source": 8,
											"value": "D3"
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4955,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5009,
											"end": 5019,
											"name": "PUSH",
											"source": 8,
											"value": "CD"
										},
										{
											"begin": 5009,
											"end": 5019,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4987,
											"end": 5001,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5001,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 5033,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5052,
											"end": 5059,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13104,
											"end": 13106,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13086,
											"end": 13107,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13143,
											"end": 13145,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 13123,
											"end": 13141,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13123,
											"end": 13141,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13123,
											"end": 13141,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8CC2D2D8CAC840E8DE40E6CADCC8409ACAC6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13155,
											"end": 13204,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13221,
											"end": 13239,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13221,
											"end": 13239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 12902,
											"end": 13245,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 5106,
											"end": 5115,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 5117,
											"end": 5123,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 5094,
											"end": 5124,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5094,
											"end": 5124,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 5094,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11529,
											"end": 11531,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11532,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11568,
											"end": 11570,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 11548,
											"end": 11566,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11548,
											"end": 11566,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11548,
											"end": 11566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11541,
											"end": 11571,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11607,
											"end": 11641,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11587,
											"end": 11605,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11587,
											"end": 11605,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11587,
											"end": 11605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11642,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11658,
											"end": 11676,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11658,
											"end": 11676,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11658,
											"end": 11676,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11651,
											"end": 11687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11704,
											"end": 11723,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 11704,
											"end": 11723,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 11327,
											"end": 11729,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2503,
											"end": 2511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10578,
											"end": 10597,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10578,
											"end": 10597,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16079,
											"end": 16081,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16061,
											"end": 16082,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16118,
											"end": 16120,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16098,
											"end": 16116,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16098,
											"end": 16116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16098,
											"end": 16116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16091,
											"end": 16121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16157,
											"end": 16191,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 16137,
											"end": 16155,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 16137,
											"end": 16155,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16137,
											"end": 16155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16130,
											"end": 16192,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16208,
											"end": 16226,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 16208,
											"end": 16226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16208,
											"end": 16226,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16201,
											"end": 16235,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16252,
											"end": 16271,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 16252,
											"end": 16271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 15877,
											"end": 16277,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10656,
											"end": 10677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10677,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11936,
											"end": 11938,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11918,
											"end": 11939,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 11977,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 11955,
											"end": 11973,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11955,
											"end": 11973,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11955,
											"end": 11973,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11948,
											"end": 11978,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12014,
											"end": 12048,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 11994,
											"end": 12012,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11994,
											"end": 12012,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11994,
											"end": 12012,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11987,
											"end": 12049,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12065,
											"end": 12083,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12065,
											"end": 12083,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12065,
											"end": 12083,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12058,
											"end": 12090,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12126,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 12107,
											"end": 12126,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 11734,
											"end": 12132,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10738,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10763,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10763,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17606,
											"end": 17631,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17606,
											"end": 17631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17606,
											"end": 17631,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17579,
											"end": 17597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3331,
											"end": 3491,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 3331,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3403,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3431,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3455,
											"end": 3458,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "PUSH",
											"source": 8,
											"value": "CF"
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3441,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 3435,
											"end": 3451,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3451,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3435,
											"end": 3451,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3435,
											"end": 3451,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 3435,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3416,
											"end": 3458,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3331,
											"end": 3491,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3331,
											"end": 3491,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3499,
											"end": 3721,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3499,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3575,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 3581,
											"end": 3588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3590,
											"end": 3596,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3575,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 3575,
											"end": 3597,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3575,
											"end": 3597,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 3575,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3642,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "D0"
										},
										{
											"begin": 3622,
											"end": 3633,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3608,
											"end": 3619,
											"name": "PUSH",
											"source": 8,
											"value": "D0"
										},
										{
											"begin": 3608,
											"end": 3642,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3695,
											"name": "PUSH",
											"source": 8,
											"value": "D4"
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3707,
											"end": 3713,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3707,
											"end": 3713,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3668,
											"name": "PUSH",
											"source": 8,
											"value": "D4"
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3713,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3713,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3713,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3713,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3721,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 5728,
											"end": 5732,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5749,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5712,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 5770,
											"end": 5774,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5778,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5760,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 2241,
											"end": 2246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 567,
											"end": 686,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 567,
											"end": 686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 645,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 674,
											"end": 678,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 645,
											"end": 679,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1278,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 1063,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1003,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 999,
											"end": 1003,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "PUSH",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1185,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 1155,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 1155,
											"end": 1194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 1155,
											"end": 1194,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1155,
											"end": 1194,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 1155,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15725,
											"end": 15727,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15707,
											"end": 15728,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15764,
											"end": 15766,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 15744,
											"end": 15762,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15744,
											"end": 15762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15744,
											"end": 15762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15737,
											"end": 15767,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15803,
											"end": 15830,
											"name": "PUSH",
											"source": 9,
											"value": "45524332304361707065643A2063617020657863656564656400000000000000"
										},
										{
											"begin": 15783,
											"end": 15801,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 15783,
											"end": 15801,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15783,
											"end": 15801,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15776,
											"end": 15831,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15848,
											"end": 15866,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 15848,
											"end": 15866,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 15523,
											"end": 15872,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "tag",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 1255,
											"end": 1262,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1264,
											"end": 1270,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 1243,
											"end": 1271,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14211,
											"end": 14213,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14193,
											"end": 14214,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14193,
											"end": 14214,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14193,
											"end": 14214,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14230,
											"end": 14248,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14230,
											"end": 14248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14230,
											"end": 14248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14223,
											"end": 14253,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14289,
											"end": 14323,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14269,
											"end": 14287,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14269,
											"end": 14287,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14269,
											"end": 14287,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14262,
											"end": 14324,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14341,
											"end": 14359,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14341,
											"end": 14359,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 14009,
											"end": 14365,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2295,
											"end": 2536,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2295,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2468,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2475,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2461,
											"end": 2462,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2461,
											"end": 2475,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2461,
											"end": 2475,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2500,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2504,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2505,
											"end": 2506,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2536,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4145,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4220,
											"end": 4226,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4199,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 4199,
											"end": 4227,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9448,
											"end": 10024,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 9448,
											"end": 10024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9531,
											"end": 9552,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9552,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14917,
											"end": 14919,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14899,
											"end": 14920,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14956,
											"end": 14958,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 14936,
											"end": 14954,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14936,
											"end": 14954,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14936,
											"end": 14954,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14929,
											"end": 14959,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14995,
											"end": 15029,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 14975,
											"end": 14993,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14975,
											"end": 14993,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14975,
											"end": 14993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14968,
											"end": 15030,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15046,
											"end": 15064,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 15046,
											"end": 15064,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15046,
											"end": 15064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15039,
											"end": 15070,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15087,
											"end": 15106,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 15087,
											"end": 15106,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 14715,
											"end": 15112,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "tag",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9661,
											"end": 9683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9695,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9722,
											"end": 9746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9722,
											"end": 9746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9722,
											"end": 9746,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9722,
											"end": 9746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10781,
											"end": 10783,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10763,
											"end": 10784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10820,
											"end": 10822,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 10800,
											"end": 10818,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10800,
											"end": 10818,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10793,
											"end": 10823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10859,
											"end": 10893,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 10839,
											"end": 10857,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10839,
											"end": 10857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10839,
											"end": 10857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10832,
											"end": 10894,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10952,
											"end": 10971,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10952,
											"end": 10971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 10579,
											"end": 10977,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "tag",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9828,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9840,
											"end": 9863,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9840,
											"end": 9863,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9840,
											"end": 9863,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9863,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9895,
											"name": "PUSH",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9857,
											"end": 9863,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9857,
											"end": 9863,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9857,
											"end": 9863,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9857,
											"end": 9863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "tag",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17606,
											"end": 17631,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17606,
											"end": 17631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17606,
											"end": 17631,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9947,
											"end": 9948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9947,
											"end": 9948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17594,
											"end": 17596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17579,
											"end": 17597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 17460,
											"end": 17637,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10017,
											"name": "tag",
											"source": 2,
											"value": "421"
										},
										{
											"begin": 9969,
											"end": 10017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9513,
											"end": 10024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 10024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 10024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 10024,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11228,
											"end": 11252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 11265,
											"end": 11270,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11272,
											"end": 11279,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11255,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "tag",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11228,
											"end": 11280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11228,
											"end": 11280,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11294,
											"end": 11310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11331,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11290,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 11290,
											"end": 11533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11375,
											"end": 11381,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11355,
											"end": 11371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11355,
											"end": 11381,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11355,
											"end": 11381,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12339,
											"end": 12341,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12342,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12378,
											"end": 12380,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 12358,
											"end": 12376,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12358,
											"end": 12376,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12358,
											"end": 12376,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12351,
											"end": 12381,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12417,
											"end": 12448,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 12397,
											"end": 12415,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12397,
											"end": 12415,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12397,
											"end": 12415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12390,
											"end": 12449,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12466,
											"end": 12484,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12466,
											"end": 12484,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 12137,
											"end": 12490,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "tag",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11457,
											"end": 11508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 11466,
											"end": 11471,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11473,
											"end": 11480,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11501,
											"end": 11507,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11482,
											"end": 11498,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11482,
											"end": 11507,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11457,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 11457,
											"end": 11508,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7812,
											"end": 8463,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 7812,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15319,
											"end": 15321,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15301,
											"end": 15322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15358,
											"end": 15360,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 15338,
											"end": 15356,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15338,
											"end": 15356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15338,
											"end": 15356,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15331,
											"end": 15361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15397,
											"end": 15431,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 15377,
											"end": 15395,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 15377,
											"end": 15395,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15377,
											"end": 15395,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15370,
											"end": 15432,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15448,
											"end": 15466,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 15448,
											"end": 15466,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15448,
											"end": 15466,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15441,
											"end": 15476,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15493,
											"end": 15512,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 15493,
											"end": 15512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 15117,
											"end": 15518,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "tag",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8016,
											"end": 8032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8016,
											"end": 8032,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10027,
											"end": 10029,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10009,
											"end": 10030,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10066,
											"end": 10068,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 10046,
											"end": 10064,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10046,
											"end": 10064,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10046,
											"end": 10064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10039,
											"end": 10069,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10105,
											"end": 10139,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 10085,
											"end": 10103,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10085,
											"end": 10103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10085,
											"end": 10103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10078,
											"end": 10140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10156,
											"end": 10174,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10156,
											"end": 10174,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10156,
											"end": 10174,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10149,
											"end": 10182,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10199,
											"end": 10218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 9825,
											"end": 10224,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "tag",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8132,
											"end": 8151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8163,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12697,
											"end": 12699,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12679,
											"end": 12700,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12736,
											"end": 12738,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12709,
											"end": 12739,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12775,
											"end": 12809,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12755,
											"end": 12773,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12755,
											"end": 12773,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12755,
											"end": 12773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12748,
											"end": 12810,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12826,
											"end": 12844,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12826,
											"end": 12844,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12826,
											"end": 12844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12819,
											"end": 12855,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12872,
											"end": 12891,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 12872,
											"end": 12891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 12495,
											"end": 12897,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "tag",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8294,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8303,
											"end": 8323,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8303,
											"end": 8323,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8303,
											"end": 8323,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8323,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "tag",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8397,
											"end": 8399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8395,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17606,
											"end": 17631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17606,
											"end": 17631,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17594,
											"end": 17596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17579,
											"end": 17597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17579,
											"end": 17597,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17460,
											"end": 17637,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "tag",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8419,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 9448,
											"end": 10024,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2269,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 2269,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "454"
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2386,
											"name": "PUSH",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2381,
											"end": 2386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "454"
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "421"
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2411,
											"name": "PUSH",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2404,
											"end": 2411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 692,
											"end": 850,
											"name": "tag",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 692,
											"end": 850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 795,
											"end": 796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 792,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 788,
											"end": 796,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 780,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 780,
											"end": 822,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 780,
											"end": 822,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 822,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 780,
											"end": 822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 780,
											"end": 822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10431,
											"end": 10433,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 780,
											"end": 822,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 822,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 780,
											"end": 822,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10413,
											"end": 10434,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10470,
											"end": 10472,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 10450,
											"end": 10468,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10450,
											"end": 10468,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10450,
											"end": 10468,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10443,
											"end": 10473,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45524332304361707065643A20636170206973203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10489,
											"end": 10507,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10489,
											"end": 10507,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10489,
											"end": 10507,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10482,
											"end": 10533,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10568,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10550,
											"end": 10568,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 780,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 10229,
											"end": 10574,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 780,
											"end": 822,
											"name": "tag",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 780,
											"end": 822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 832,
											"end": 836,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 832,
											"end": 843,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 692,
											"end": 850,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8739,
											"end": 9128,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 8739,
											"end": 9128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8822,
											"end": 8843,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8822,
											"end": 8843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "464"
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17302,
											"end": 17304,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17284,
											"end": 17305,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17341,
											"end": 17343,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 17321,
											"end": 17339,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 17321,
											"end": 17339,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17321,
											"end": 17339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17314,
											"end": 17344,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17380,
											"end": 17413,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 17360,
											"end": 17378,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 17360,
											"end": 17378,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17360,
											"end": 17378,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17353,
											"end": 17414,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17431,
											"end": 17449,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 17431,
											"end": 17449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 17100,
											"end": 17455,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "tag",
											"source": 2,
											"value": "464"
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8962,
											"name": "PUSH",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 8950,
											"end": 8962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "tag",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 8991,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9004,
											"end": 9010,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9004,
											"end": 9010,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "469"
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9004,
											"end": 9010,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9004,
											"end": 9010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "tag",
											"source": 2,
											"value": "469"
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17606,
											"end": 17631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17606,
											"end": 17631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17606,
											"end": 17631,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9042,
											"end": 9043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17594,
											"end": 17596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17579,
											"end": 17597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "219"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "474"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "178"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "474"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "476"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "476"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "477"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "477"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "478"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "478"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "480"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "480"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "259"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "262"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "261"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "485"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "485"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "488"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "480"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "488"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 687,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 14,
											"end": 687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 68,
											"end": 73,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 114,
											"end": 118,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 106,
											"end": 112,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 102,
											"end": 119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 98,
											"end": 125,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 88,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 88,
											"end": 143,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 129,
											"end": 141,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 88,
											"end": 143,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 88,
											"end": 143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 175,
											"end": 181,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 162,
											"end": 182,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 281,
											"end": 283,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 241,
											"end": 284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 225,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 310,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 333,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 326,
											"end": 329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 319,
											"end": 334,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 359,
											"end": 361,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 354,
											"end": 357,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 350,
											"end": 362,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 343,
											"end": 362,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 343,
											"end": 362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 394,
											"end": 396,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 386,
											"end": 392,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 382,
											"end": 397,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 446,
											"end": 449,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 441,
											"end": 443,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 435,
											"end": 437,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 432,
											"end": 433,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 438,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 420,
											"end": 426,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 416,
											"end": 439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 412,
											"end": 444,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 409,
											"end": 450,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 406,
											"end": 467,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 406,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 463,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 461,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 453,
											"end": 465,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 406,
											"end": 467,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 485,
											"end": 486,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 658,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 495,
											"end": 658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 509,
											"end": 511,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 506,
											"end": 507,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 503,
											"end": 512,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 495,
											"end": 658,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 495,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 495,
											"end": 658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 566,
											"end": 583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 566,
											"end": 583,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 554,
											"end": 584,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 554,
											"end": 584,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 604,
											"end": 616,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 604,
											"end": 616,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 604,
											"end": 616,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 604,
											"end": 616,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 636,
											"end": 648,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 636,
											"end": 648,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 636,
											"end": 648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 636,
											"end": 648,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 527,
											"end": 528,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 520,
											"end": 529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 495,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 495,
											"end": 658,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 495,
											"end": 658,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 495,
											"end": 658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 14,
											"end": 687,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 687,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 692,
											"end": 1223,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 692,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 735,
											"end": 740,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 791,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 781,
											"end": 785,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 773,
											"end": 779,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 769,
											"end": 786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 765,
											"end": 792,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 755,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 755,
											"end": 810,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 806,
											"end": 807,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 796,
											"end": 808,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 755,
											"end": 810,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 755,
											"end": 810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 848,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 829,
											"end": 849,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 864,
											"end": 866,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 861,
											"end": 887,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 858,
											"end": 910,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 858,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 858,
											"end": 910,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 890,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 890,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 890,
											"end": 908,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 908,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 890,
											"end": 908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 934,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 977,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 958,
											"end": 971,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 958,
											"end": 971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 954,
											"end": 981,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 983,
											"end": 987,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 950,
											"end": 988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 934,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 934,
											"end": 989,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 989,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 934,
											"end": 989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1012,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1063,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1053,
											"end": 1057,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1046,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1029,
											"end": 1064,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1081,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 1026,
											"end": 1081,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1075,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1079,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1081,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 1026,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1139,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1133,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1120,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1114,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1103,
											"end": 1121,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1145,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1191,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1165,
											"end": 1181,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1165,
											"end": 1181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1183,
											"end": 1187,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1188,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1192,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1192,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1192,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1176,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 692,
											"end": 1223,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 692,
											"end": 1223,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1228,
											"end": 1384,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 1228,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1314,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1314,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1354,
											"end": 1358,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1343,
											"end": 1359,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1359,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1333,
											"end": 1360,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1333,
											"end": 1360,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 1323,
											"end": 1378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1375,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1364,
											"end": 1376,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1378,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 1323,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1384,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1384,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1384,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1389,
											"end": 1636,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1389,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1480,
											"end": 1487,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1504,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1515,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1507,
											"end": 1519,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1543,
											"end": 1566,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 1575,
											"end": 1606,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1641,
											"end": 3369,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1641,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1849,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1851,
											"end": 1857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1881,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1883,
											"end": 1889,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1939,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1924,
											"end": 1933,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1922,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1934,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1907,
											"end": 1940,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1992,
											"end": 2001,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1979,
											"end": 2002,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 2036,
											"end": 2041,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2061,
											"end": 2066,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2087,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2138,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2138,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2185,
											"end": 2187,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2189,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2189,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2221,
											"end": 2239,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2276,
											"end": 2295,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2295,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2263,
											"end": 2296,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2345,
											"end": 2359,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2359,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2359,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2342,
											"end": 2376,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2342,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 2342,
											"end": 2376,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2370,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2342,
											"end": 2376,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 2342,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2410,
											"end": 2416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2408,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 2395,
											"end": 2417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2385,
											"end": 2417,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2385,
											"end": 2417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2444,
											"end": 2446,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2463,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 2426,
											"end": 2481,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2478,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2475,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2479,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2481,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 2426,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2513,
											"end": 2515,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 2552,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 2592,
											"end": 2594,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 2552,
											"end": 2595,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2536,
											"end": 2596,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 2536,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2637,
											"end": 2640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2630,
											"end": 2645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2672,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2665,
											"end": 2668,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2673,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2673,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2703,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2699,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2693,
											"end": 2704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 2756,
											"name": "DUP16",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2746,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2740,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2735,
											"end": 2736,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2731,
											"end": 2741,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2727,
											"end": 2729,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2742,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2719,
											"end": 2747,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 2757,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2774,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 2713,
											"end": 2774,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2771,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2774,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 2713,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2793,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2802,
											"end": 2969,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 2802,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2816,
											"end": 2818,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2813,
											"end": 2814,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2802,
											"end": 2969,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2802,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 2802,
											"end": 2969,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 2890,
											"end": 2893,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2895,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2834,
											"end": 2835,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2827,
											"end": 2836,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 2836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 2836,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 2836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 2836,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2927,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2927,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2927,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2927,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2802,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 2802,
											"end": 2969,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2802,
											"end": 2969,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 2802,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2988,
											"end": 2993,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3031,
											"end": 3050,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3051,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3051,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3063,
											"end": 3079,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3063,
											"end": 3079,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3063,
											"end": 3079,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3096,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 3060,
											"end": 3096,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3092,
											"end": 3093,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3090,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3096,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 3060,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 3170,
											"end": 3177,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 3159,
											"end": 3167,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3157,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3168,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 3115,
											"end": 3178,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3115,
											"end": 3178,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 3115,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3178,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3234,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 3220,
											"end": 3229,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3236,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3236,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3251,
											"end": 3259,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3248,
											"end": 3264,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 3281,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 3245,
											"end": 3281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3275,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3267,
											"end": 3279,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 3281,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 3245,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 3281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 3281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 3355,
											"end": 3362,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3342,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3329,
											"end": 3353,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 3300,
											"end": 3363,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3300,
											"end": 3363,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 3300,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3290,
											"end": 3363,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3290,
											"end": 3363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3290,
											"end": 3363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 3369,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 3369,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 3369,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 3369,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 3369,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 3369,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 3369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 3369,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 3369,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 3369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 3369,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3374,
											"end": 3762,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3374,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3442,
											"end": 3448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3505,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3491,
											"end": 3500,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3506,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3517,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3558,
											"end": 3567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 3602,
											"end": 3607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 3577,
											"end": 3608,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3577,
											"end": 3608,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 3577,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3627,
											"end": 3632,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3684,
											"end": 3686,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3688,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 3656,
											"end": 3688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 3697,
											"end": 3730,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3697,
											"end": 3730,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 3697,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3749,
											"end": 3756,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3756,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3756,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3756,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3762,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3762,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3762,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3767,
											"end": 4223,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 3767,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3844,
											"end": 3850,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3858,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3913,
											"end": 3915,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3901,
											"end": 3910,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3899,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 3911,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3884,
											"end": 3916,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3881,
											"end": 3933,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3881,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 3881,
											"end": 3933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3927,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3881,
											"end": 3933,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 3881,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 3977,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3955,
											"end": 3978,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 3987,
											"end": 4018,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4018,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 3987,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4042,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4094,
											"end": 4096,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4098,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4107,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 4066,
											"end": 4098,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4107,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 4107,
											"end": 4140,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4107,
											"end": 4140,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 4107,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 4223,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 4223,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4213,
											"end": 4215,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4217,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 4223,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4228,
											"end": 4543,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4228,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4296,
											"end": 4302,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4310,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4359,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4345,
											"end": 4354,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4336,
											"end": 4343,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4332,
											"end": 4355,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4328,
											"end": 4360,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4377,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 4325,
											"end": 4377,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4373,
											"end": 4374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4371,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4377,
											"name": "tag",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 4325,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4412,
											"end": 4421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4422,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 4456,
											"end": 4461,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 4431,
											"end": 4462,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4462,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 4431,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4486,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4535,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4518,
											"end": 4536,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4518,
											"end": 4536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4518,
											"end": 4536,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4518,
											"end": 4536,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4228,
											"end": 4543,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4548,
											"end": 5525,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4548,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4663,
											"end": 4665,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4706,
											"end": 4708,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4703,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4685,
											"end": 4692,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4704,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4709,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4726,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 4674,
											"end": 4726,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4723,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4720,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4724,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4726,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 4674,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4771,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4772,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4787,
											"end": 4793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4814,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4831,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 4781,
											"end": 4831,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4827,
											"end": 4828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4824,
											"end": 4825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4829,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4831,
											"name": "tag",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 4781,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4872,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4872,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4907,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4895,
											"end": 4908,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4908,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4891,
											"end": 4918,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4881,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 4881,
											"end": 4936,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4929,
											"end": 4930,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4936,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 4881,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4968,
											"end": 4970,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4955,
											"end": 4971,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4991,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 5007,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 5047,
											"end": 5049,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5007,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 5007,
											"end": 5050,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4991,
											"end": 5051,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 4991,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5073,
											"end": 5076,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5097,
											"end": 5099,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5092,
											"end": 5095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5085,
											"end": 5100,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5127,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5120,
											"end": 5123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5116,
											"end": 5128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5109,
											"end": 5128,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5109,
											"end": 5128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5156,
											"end": 5158,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5201,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5193,
											"end": 5195,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5191,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5186,
											"end": 5196,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5184,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5174,
											"end": 5202,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5212,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5229,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 5168,
											"end": 5229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5225,
											"end": 5226,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5222,
											"end": 5223,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5215,
											"end": 5227,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5229,
											"name": "tag",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 5168,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5248,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5238,
											"end": 5248,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5238,
											"end": 5248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5257,
											"end": 5495,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 5257,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5271,
											"end": 5273,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5265,
											"end": 5274,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5257,
											"end": 5495,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5257,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 5257,
											"end": 5495,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5329,
											"end": 5346,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 5384,
											"end": 5389,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 5359,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5421,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5421,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5290,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5282,
											"end": 5291,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5291,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5291,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5291,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5453,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5453,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5453,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5453,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5473,
											"end": 5485,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5473,
											"end": 5485,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5257,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 5257,
											"end": 5495,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5257,
											"end": 5495,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 5257,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5514,
											"end": 5519,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 4548,
											"end": 5525,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4548,
											"end": 5525,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5530,
											"end": 6350,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 5530,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5652,
											"end": 5658,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5666,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5676,
											"end": 5682,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5698,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5745,
											"end": 5748,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 5733,
											"end": 5742,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5724,
											"end": 5731,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5743,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5749,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5713,
											"end": 5766,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5713,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 5713,
											"end": 5766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5752,
											"end": 5764,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5713,
											"end": 5766,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 5713,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5802,
											"end": 5811,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5812,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5872,
											"end": 5874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5864,
											"end": 5870,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5858,
											"end": 5892,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5858,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 5858,
											"end": 5892,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 5889,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5886,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5878,
											"end": 5890,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5858,
											"end": 5892,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 5858,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5911,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5933,
											"end": 5942,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5951,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5911,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 5911,
											"end": 5961,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5911,
											"end": 5961,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 5911,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5961,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5961,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6014,
											"end": 6016,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6003,
											"end": 6012,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5986,
											"end": 6018,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5970,
											"end": 6018,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5970,
											"end": 6018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6043,
											"end": 6045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6033,
											"end": 6041,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6030,
											"end": 6046,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6059,
											"end": 6060,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6056,
											"end": 6057,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6049,
											"end": 6061,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "tag",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 6126,
											"end": 6133,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6113,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 6100,
											"end": 6124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 6082,
											"end": 6134,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6082,
											"end": 6134,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 6082,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6134,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6153,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 6185,
											"end": 6187,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6174,
											"end": 6183,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6170,
											"end": 6188,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6153,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 6153,
											"end": 6189,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6153,
											"end": 6189,
											"name": "tag",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 6153,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6189,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6189,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6236,
											"end": 6238,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6225,
											"end": 6234,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6221,
											"end": 6239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6240,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6198,
											"end": 6240,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6198,
											"end": 6240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6287,
											"end": 6290,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6276,
											"end": 6285,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6291,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6259,
											"end": 6292,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6292,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6292,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6339,
											"end": 6342,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 6328,
											"end": 6337,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6344,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6344,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6344,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 6350,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 6350,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 6350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 6350,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 6350,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 6350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 6350,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 6350,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 6350,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6420,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6469,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6455,
											"end": 6464,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6446,
											"end": 6453,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6442,
											"end": 6465,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6470,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6435,
											"end": 6487,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6435,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 6435,
											"end": 6487,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6480,
											"end": 6481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6473,
											"end": 6485,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6435,
											"end": 6487,
											"name": "tag",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 6435,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6506,
											"end": 6529,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6529,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7766,
											"end": 8424,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 7766,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7937,
											"end": 7939,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7989,
											"end": 8010,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7989,
											"end": 8010,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7989,
											"end": 8010,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8059,
											"end": 8072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8059,
											"end": 8072,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8081,
											"end": 8103,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8081,
											"end": 8103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8081,
											"end": 8103,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7908,
											"end": 7912,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7937,
											"end": 7939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8175,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8175,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8134,
											"end": 8136,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8119,
											"end": 8137,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7912,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8203,
											"end": 8398,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 8203,
											"end": 8398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8217,
											"end": 8223,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8215,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8224,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8203,
											"end": 8398,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8203,
											"end": 8398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 8203,
											"end": 8398,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8282,
											"end": 8295,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8282,
											"end": 8295,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8278,
											"end": 8317,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8266,
											"end": 8318,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8266,
											"end": 8318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8373,
											"end": 8388,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8373,
											"end": 8388,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8373,
											"end": 8388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8373,
											"end": 8388,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8338,
											"end": 8350,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8338,
											"end": 8350,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8338,
											"end": 8350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8338,
											"end": 8350,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8315,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8232,
											"end": 8241,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8203,
											"end": 8398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 8203,
											"end": 8398,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8203,
											"end": 8398,
											"name": "tag",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 8203,
											"end": 8398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8415,
											"end": 8418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8418,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 8424,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7766,
											"end": 8424,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9223,
											"end": 9820,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9223,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9335,
											"end": 9339,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9364,
											"end": 9366,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9393,
											"end": 9395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9382,
											"end": 9391,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9375,
											"end": 9396,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9425,
											"end": 9431,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9419,
											"end": 9432,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9468,
											"end": 9474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9463,
											"end": 9465,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9461,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9448,
											"end": 9466,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9441,
											"end": 9475,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9494,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9503,
											"end": 9643,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 9503,
											"end": 9643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9517,
											"end": 9523,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9514,
											"end": 9515,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9511,
											"end": 9524,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9643,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 9503,
											"end": 9643,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9612,
											"end": 9626,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9612,
											"end": 9626,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9612,
											"end": 9626,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9608,
											"end": 9631,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9608,
											"end": 9631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9602,
											"end": 9632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9595,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9595,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9595,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9597,
											"end": 9599,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9574,
											"end": 9600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9567,
											"end": 9633,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9532,
											"end": 9542,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9532,
											"end": 9542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 9503,
											"end": 9643,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9643,
											"name": "tag",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 9503,
											"end": 9643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9661,
											"end": 9667,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9658,
											"end": 9659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9655,
											"end": 9668,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9652,
											"end": 9743,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9652,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 9652,
											"end": 9743,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9731,
											"end": 9732,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9726,
											"end": 9728,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9717,
											"end": 9723,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9706,
											"end": 9715,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9724,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9698,
											"end": 9729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9691,
											"end": 9733,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9652,
											"end": 9743,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 9652,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9804,
											"end": 9806,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9783,
											"end": 9798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9779,
											"end": 9808,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9764,
											"end": 9809,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9764,
											"end": 9809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9764,
											"end": 9809,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9764,
											"end": 9809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9811,
											"end": 9813,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9760,
											"end": 9814,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9814,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9820,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9223,
											"end": 9820,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16282,
											"end": 16689,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 16282,
											"end": 16689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16484,
											"end": 16486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16466,
											"end": 16487,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16466,
											"end": 16487,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16466,
											"end": 16487,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16523,
											"end": 16525,
											"name": "PUSH",
											"source": 9,
											"value": "2B"
										},
										{
											"begin": 16503,
											"end": 16521,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16503,
											"end": 16521,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16503,
											"end": 16521,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16496,
											"end": 16526,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16562,
											"end": 16596,
											"name": "PUSH",
											"source": 9,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 16557,
											"end": 16559,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16542,
											"end": 16560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16542,
											"end": 16560,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16535,
											"end": 16597,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16628,
											"end": 16630,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 16613,
											"end": 16631,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16613,
											"end": 16631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16606,
											"end": 16647,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16679,
											"end": 16682,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 16664,
											"end": 16683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16664,
											"end": 16683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16282,
											"end": 16689,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17831,
											"end": 18106,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 17831,
											"end": 18106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17902,
											"end": 17904,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17896,
											"end": 17905,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17967,
											"end": 17969,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 17948,
											"end": 17961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17948,
											"end": 17961,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17944,
											"end": 17971,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17932,
											"end": 17972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17932,
											"end": 17972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17987,
											"end": 18021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17987,
											"end": 18021,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 18023,
											"end": 18045,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18023,
											"end": 18045,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18023,
											"end": 18045,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17984,
											"end": 18046,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 17981,
											"end": 18069,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17981,
											"end": 18069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 17981,
											"end": 18069,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "tag",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18085,
											"end": 18087,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18078,
											"end": 18100,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17831,
											"end": 18106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17831,
											"end": 18106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17831,
											"end": 18106,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18111,
											"end": 18294,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 18111,
											"end": 18294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18171,
											"end": 18175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18196,
											"end": 18202,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18193,
											"end": 18223,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 18190,
											"end": 18246,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18190,
											"end": 18246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 18190,
											"end": 18246,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18226,
											"end": 18244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 18226,
											"end": 18244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 18226,
											"end": 18244,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18226,
											"end": 18244,
											"name": "tag",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 18226,
											"end": 18244,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18271,
											"end": 18272,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 18267,
											"end": 18281,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 18283,
											"end": 18287,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18263,
											"end": 18288,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18263,
											"end": 18288,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18111,
											"end": 18294,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18299,
											"end": 18427,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 18299,
											"end": 18427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18339,
											"end": 18342,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18370,
											"end": 18371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18366,
											"end": 18372,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 18363,
											"end": 18364,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18360,
											"end": 18373,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 18357,
											"end": 18396,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18357,
											"end": 18396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 18357,
											"end": 18396,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18376,
											"end": 18394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 18376,
											"end": 18394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 18376,
											"end": 18394,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18376,
											"end": 18394,
											"name": "tag",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 18376,
											"end": 18394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18412,
											"end": 18421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18412,
											"end": 18421,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18299,
											"end": 18427,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18432,
											"end": 18649,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 18432,
											"end": 18649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18472,
											"end": 18473,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18498,
											"end": 18499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18488,
											"end": 18620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 18488,
											"end": 18620,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18542,
											"end": 18552,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 18537,
											"end": 18540,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 18533,
											"end": 18553,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 18530,
											"end": 18531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18523,
											"end": 18554,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18577,
											"end": 18581,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 18574,
											"end": 18575,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 18567,
											"end": 18582,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18605,
											"end": 18609,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 18602,
											"end": 18603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18595,
											"end": 18610,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 18488,
											"end": 18620,
											"name": "tag",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 18488,
											"end": 18620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18634,
											"end": 18643,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 18634,
											"end": 18643,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18432,
											"end": 18649,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18654,
											"end": 19076,
											"name": "tag",
											"source": 9,
											"value": "613"
										},
										{
											"begin": 18654,
											"end": 19076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18743,
											"end": 18744,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 18786,
											"end": 18791,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18743,
											"end": 18744,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18800,
											"end": 19070,
											"name": "tag",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 18800,
											"end": 19070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18821,
											"end": 18828,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18811,
											"end": 18819,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18808,
											"end": 18829,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 18800,
											"end": 19070,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18800,
											"end": 19070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 18800,
											"end": 19070,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18880,
											"end": 18884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18876,
											"end": 18877,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18872,
											"end": 18878,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 18868,
											"end": 18885,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 18862,
											"end": 18866,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18859,
											"end": 18886,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 18856,
											"end": 18909,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18856,
											"end": 18909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "619"
										},
										{
											"begin": 18856,
											"end": 18909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18889,
											"end": 18907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "619"
										},
										{
											"begin": 18889,
											"end": 18907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 18889,
											"end": 18907,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18889,
											"end": 18907,
											"name": "tag",
											"source": 9,
											"value": "619"
										},
										{
											"begin": 18889,
											"end": 18907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18939,
											"end": 18946,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18929,
											"end": 18937,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18925,
											"end": 18947,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18922,
											"end": 18977,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18922,
											"end": 18977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "620"
										},
										{
											"begin": 18922,
											"end": 18977,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18959,
											"end": 18975,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18959,
											"end": 18975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18959,
											"end": 18975,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18959,
											"end": 18975,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18922,
											"end": 18977,
											"name": "tag",
											"source": 9,
											"value": "620"
										},
										{
											"begin": 18922,
											"end": 18977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19038,
											"end": 19060,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 19038,
											"end": 19060,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19038,
											"end": 19060,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 19038,
											"end": 19060,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 18998,
											"end": 19013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18998,
											"end": 19013,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18998,
											"end": 19013,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18998,
											"end": 19013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18800,
											"end": 19070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 18800,
											"end": 19070,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18800,
											"end": 19070,
											"name": "tag",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 18800,
											"end": 19070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18804,
											"end": 18807,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18654,
											"end": 19076,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18654,
											"end": 19076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18654,
											"end": 19076,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18654,
											"end": 19076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18654,
											"end": 19076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18654,
											"end": 19076,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19081,
											"end": 19221,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 19081,
											"end": 19221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19139,
											"end": 19144,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19168,
											"end": 19215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 19209,
											"end": 19213,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 19199,
											"end": 19207,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19195,
											"end": 19214,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19189,
											"end": 19193,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19275,
											"end": 19280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19305,
											"end": 19313,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19295,
											"end": 19375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "625"
										},
										{
											"begin": 19295,
											"end": 19375,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19346,
											"end": 19347,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 19360,
											"end": 19365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 19360,
											"end": 19365,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19295,
											"end": 19375,
											"name": "tag",
											"source": 9,
											"value": "625"
										},
										{
											"begin": 19295,
											"end": 19375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19394,
											"end": 19398,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19384,
											"end": 19460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "626"
										},
										{
											"begin": 19384,
											"end": 19460,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19431,
											"end": 19432,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19445,
											"end": 19450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 19445,
											"end": 19450,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19384,
											"end": 19460,
											"name": "tag",
											"source": 9,
											"value": "626"
										},
										{
											"begin": 19384,
											"end": 19460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19476,
											"end": 19480,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19494,
											"end": 19495,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 19489,
											"end": 19548,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19489,
											"end": 19548,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 19489,
											"end": 19548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "628"
										},
										{
											"begin": 19489,
											"end": 19548,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19562,
											"end": 19563,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 19557,
											"end": 19687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19557,
											"end": 19687,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 19557,
											"end": 19687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "629"
										},
										{
											"begin": 19557,
											"end": 19687,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19469,
											"end": 19687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "627"
										},
										{
											"begin": 19469,
											"end": 19687,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19489,
											"end": 19548,
											"name": "tag",
											"source": 9,
											"value": "628"
										},
										{
											"begin": 19489,
											"end": 19548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19519,
											"end": 19520,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 19510,
											"end": 19520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19510,
											"end": 19520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19533,
											"end": 19538,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19533,
											"end": 19538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 19533,
											"end": 19538,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19557,
											"end": 19687,
											"name": "tag",
											"source": 9,
											"value": "629"
										},
										{
											"begin": 19557,
											"end": 19687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19594,
											"end": 19597,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 19584,
											"end": 19592,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19581,
											"end": 19598,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 19578,
											"end": 19621,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19578,
											"end": 19621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "631"
										},
										{
											"begin": 19578,
											"end": 19621,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "631"
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "tag",
											"source": 9,
											"value": "631"
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19657,
											"end": 19658,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 19643,
											"end": 19659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19643,
											"end": 19659,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 19672,
											"end": 19677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 19672,
											"end": 19677,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19469,
											"end": 19687,
											"name": "tag",
											"source": 9,
											"value": "627"
										},
										{
											"begin": 19469,
											"end": 19687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19469,
											"end": 19687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19771,
											"end": 19773,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19761,
											"end": 19769,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19758,
											"end": 19774,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 19752,
											"end": 19755,
											"name": "PUSH",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 19746,
											"end": 19750,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19743,
											"end": 19756,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 19739,
											"end": 19775,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19733,
											"end": 19735,
											"name": "PUSH",
											"source": 9,
											"value": "4E"
										},
										{
											"begin": 19723,
											"end": 19731,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19720,
											"end": 19736,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 19715,
											"end": 19717,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 19709,
											"end": 19713,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19706,
											"end": 19718,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 19702,
											"end": 19737,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19699,
											"end": 19776,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 19696,
											"end": 19855,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19696,
											"end": 19855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 19696,
											"end": 19855,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19808,
											"end": 19827,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19808,
											"end": 19827,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19808,
											"end": 19827,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 19840,
											"end": 19845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 19840,
											"end": 19845,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19696,
											"end": 19855,
											"name": "tag",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 19696,
											"end": 19855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19887,
											"end": 19921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "633"
										},
										{
											"begin": 19912,
											"end": 19920,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19906,
											"end": 19910,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19887,
											"end": 19921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "613"
										},
										{
											"begin": 19887,
											"end": 19921,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19887,
											"end": 19921,
											"name": "tag",
											"source": 9,
											"value": "633"
										},
										{
											"begin": 19887,
											"end": 19921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19957,
											"end": 19963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19953,
											"end": 19954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19949,
											"end": 19955,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 19945,
											"end": 19964,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 19936,
											"end": 19943,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19933,
											"end": 19965,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 19930,
											"end": 19988,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19930,
											"end": 19988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "635"
										},
										{
											"begin": 19930,
											"end": 19988,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19968,
											"end": 19986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "635"
										},
										{
											"begin": 19968,
											"end": 19986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 19968,
											"end": 19986,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19968,
											"end": 19986,
											"name": "tag",
											"source": 9,
											"value": "635"
										},
										{
											"begin": 19968,
											"end": 19986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20006,
											"end": 20026,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 20006,
											"end": 20026,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 19226,
											"end": 20032,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19226,
											"end": 20032,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20037,
											"end": 20205,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 20037,
											"end": 20205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20077,
											"end": 20084,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20143,
											"end": 20144,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20139,
											"end": 20140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20135,
											"end": 20141,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 20131,
											"end": 20145,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 20128,
											"end": 20129,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 20120,
											"end": 20121,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20113,
											"end": 20122,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20106,
											"end": 20123,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20102,
											"end": 20147,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20099,
											"end": 20170,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20099,
											"end": 20170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "638"
										},
										{
											"begin": 20099,
											"end": 20170,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20150,
											"end": 20168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "638"
										},
										{
											"begin": 20150,
											"end": 20168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 20150,
											"end": 20168,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20150,
											"end": 20168,
											"name": "tag",
											"source": 9,
											"value": "638"
										},
										{
											"begin": 20150,
											"end": 20168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20190,
											"end": 20199,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 20190,
											"end": 20199,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20037,
											"end": 20205,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20210,
											"end": 20335,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 20210,
											"end": 20335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20250,
											"end": 20254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20278,
											"end": 20279,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20275,
											"end": 20276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20272,
											"end": 20280,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 20269,
											"end": 20303,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20269,
											"end": 20303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 20269,
											"end": 20303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20283,
											"end": 20301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 20283,
											"end": 20301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 20283,
											"end": 20301,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20283,
											"end": 20301,
											"name": "tag",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 20283,
											"end": 20301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20320,
											"end": 20329,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20320,
											"end": 20329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20210,
											"end": 20335,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20340,
											"end": 20720,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 20340,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20419,
											"end": 20420,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 20415,
											"end": 20427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20415,
											"end": 20427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20415,
											"end": 20427,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 20415,
											"end": 20427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20462,
											"end": 20474,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20462,
											"end": 20474,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20462,
											"end": 20474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20483,
											"end": 20544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "643"
										},
										{
											"begin": 20483,
											"end": 20544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20537,
											"end": 20541,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 20529,
											"end": 20535,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20525,
											"end": 20542,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20515,
											"end": 20542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20515,
											"end": 20542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20483,
											"end": 20544,
											"name": "tag",
											"source": 9,
											"value": "643"
										},
										{
											"begin": 20483,
											"end": 20544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20590,
											"end": 20592,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20582,
											"end": 20588,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20579,
											"end": 20593,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 20559,
											"end": 20577,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20556,
											"end": 20594,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 20553,
											"end": 20714,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20553,
											"end": 20714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "644"
										},
										{
											"begin": 20553,
											"end": 20714,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20636,
											"end": 20646,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 20631,
											"end": 20634,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 20627,
											"end": 20647,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 20624,
											"end": 20625,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20617,
											"end": 20648,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20671,
											"end": 20675,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 20668,
											"end": 20669,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20661,
											"end": 20676,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20699,
											"end": 20703,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 20696,
											"end": 20697,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20689,
											"end": 20704,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20553,
											"end": 20714,
											"name": "tag",
											"source": 9,
											"value": "644"
										},
										{
											"begin": 20553,
											"end": 20714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20553,
											"end": 20714,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20340,
											"end": 20720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20340,
											"end": 20720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20340,
											"end": 20720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20340,
											"end": 20720,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20725,
											"end": 20934,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 20725,
											"end": 20934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20763,
											"end": 20766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20844,
											"end": 20846,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20837,
											"end": 20842,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20833,
											"end": 20847,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20871,
											"end": 20873,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20862,
											"end": 20869,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20859,
											"end": 20874,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 20856,
											"end": 20897,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20856,
											"end": 20897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "647"
										},
										{
											"begin": 20856,
											"end": 20897,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20877,
											"end": 20895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "647"
										},
										{
											"begin": 20877,
											"end": 20895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 20877,
											"end": 20895,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20877,
											"end": 20895,
											"name": "tag",
											"source": 9,
											"value": "647"
										},
										{
											"begin": 20877,
											"end": 20895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20926,
											"end": 20927,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 20913,
											"end": 20928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20913,
											"end": 20928,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 20725,
											"end": 20934,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20725,
											"end": 20934,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20939,
											"end": 21114,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 20939,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20976,
											"end": 20979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21020,
											"end": 21024,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 21013,
											"end": 21018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21009,
											"end": 21025,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 21049,
											"end": 21053,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 21040,
											"end": 21047,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21037,
											"end": 21054,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 21034,
											"end": 21077,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 21034,
											"end": 21077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "650"
										},
										{
											"begin": 21034,
											"end": 21077,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 21057,
											"end": 21075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "650"
										},
										{
											"begin": 21057,
											"end": 21075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 21057,
											"end": 21075,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21057,
											"end": 21075,
											"name": "tag",
											"source": 9,
											"value": "650"
										},
										{
											"begin": 21057,
											"end": 21075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21106,
											"end": 21107,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 21093,
											"end": 21108,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21093,
											"end": 21108,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 20939,
											"end": 21114,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20939,
											"end": 21114,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21119,
											"end": 21246,
											"name": "tag",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 21119,
											"end": 21246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21180,
											"end": 21190,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 21175,
											"end": 21178,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 21171,
											"end": 21191,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 21168,
											"end": 21169,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21161,
											"end": 21192,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21211,
											"end": 21215,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 21208,
											"end": 21209,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 21201,
											"end": 21216,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21235,
											"end": 21239,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 21232,
											"end": 21233,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21225,
											"end": 21240,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 21251,
											"end": 21378,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 21251,
											"end": 21378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21312,
											"end": 21322,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 21307,
											"end": 21310,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 21303,
											"end": 21323,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 21300,
											"end": 21301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21293,
											"end": 21324,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21343,
											"end": 21347,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 21340,
											"end": 21341,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 21333,
											"end": 21348,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21367,
											"end": 21371,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 21364,
											"end": 21365,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21357,
											"end": 21372,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 21383,
											"end": 21510,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 21383,
											"end": 21510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21444,
											"end": 21454,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 21439,
											"end": 21442,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 21435,
											"end": 21455,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 21432,
											"end": 21433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21425,
											"end": 21456,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21475,
											"end": 21479,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 21472,
											"end": 21473,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 21465,
											"end": 21480,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21499,
											"end": 21503,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 21496,
											"end": 21497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21489,
											"end": 21504,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 21515,
											"end": 21646,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 21515,
											"end": 21646,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21590,
											"end": 21621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21590,
											"end": 21621,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 21580,
											"end": 21622,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21580,
											"end": 21622,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 21570,
											"end": 21640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 21570,
											"end": 21640,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 21636,
											"end": 21637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21633,
											"end": 21634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 21626,
											"end": 21638,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_mapSigners(address)": "3de47e32",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getRewardAmt()": "ac7fa3c6",
							"getTaxFee()": "f66608fe",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize(string,string,uint8,uint256,uint256,uint256)": "2b9a1d3c",
							"mapSigner(address)": "07c351dd",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"permitMint(address,uint256,uint256,uint256,uint8[],bytes32[],bytes32[])": "e4c97e6a",
							"renounceOwnership()": "715018a6",
							"setRewardAmtInWei(uint256)": "b24a0893",
							"setSigners(address[])": "a3772662",
							"setTaxFee(uint256)": "c4081a4c",
							"signers()": "46f0975a",
							"symbol()": "95d89b41",
							"totalBurned()": "d89135cd",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniqueIdExists(uint256)": "f9342285",
							"userTotalBurned(address)": "1e0d4ce9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_mapSigners\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardAmt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_NAME\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_SYMBOL\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_DECIMALS\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"taxFee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"mapSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"uniqueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8[]\",\"name\":\"v\",\"type\":\"uint8[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"r\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"s\",\"type\":\"bytes32[]\"}],\"name\":\"permitMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newAmt\",\"type\":\"uint256\"}],\"name\":\"setRewardAmtInWei\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"signers_\",\"type\":\"address[]\"}],\"name\":\"setSigners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTaxFee\",\"type\":\"uint256\"}],\"name\":\"setTaxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uniqueIdExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userTotalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DeAnt3Token.sol\":\"DeAnt3Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":{\"keccak256\":\"0xc707bc7f15de49a0c4da261822a3075d8c171b3c08543fc8f0d0021b8d227b92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3c294a8ff16f223772b520a7b823dff54458ba98e6da4ffe9a3a427a16a47c6\",\"dweb:/ipfs/QmRbZ5hdJzUMVAai2Zpc8YdSuPWxeNPV1aiosRySrEuQpu\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"contracts/DeAnt3Token.sol\":{\"keccak256\":\"0x50920807cc65763947bdd512f9cf8d03d194caed8c4a92f9e7664f8cca9deafc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27728a1236a0b9b689ca1df2ce266c6ab4c6dce99af23a538bdd491edf16d39\",\"dweb:/ipfs/Qme3QWhr9FDj5rM9dunMCkrDsrnkmh58VgLDwxVaHFoWQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1367,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 301,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 307,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 309,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 311,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 313,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 892,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							},
							{
								"astId": 982,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_cap",
								"offset": 0,
								"slot": "101",
								"type": "t_uint256"
							},
							{
								"astId": 1057,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_owner",
								"offset": 0,
								"slot": "152",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "__gap",
								"offset": 0,
								"slot": "153",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1378,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_name",
								"offset": 0,
								"slot": "202",
								"type": "t_string_storage"
							},
							{
								"astId": 1380,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "203",
								"type": "t_string_storage"
							},
							{
								"astId": 1382,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "204",
								"type": "t_uint8"
							},
							{
								"astId": 1384,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_rewardAmt",
								"offset": 0,
								"slot": "205",
								"type": "t_uint256"
							},
							{
								"astId": 1386,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_cap",
								"offset": 0,
								"slot": "206",
								"type": "t_uint256"
							},
							{
								"astId": 1388,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_taxFee",
								"offset": 0,
								"slot": "207",
								"type": "t_uint256"
							},
							{
								"astId": 1390,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "totalBurned",
								"offset": 0,
								"slot": "208",
								"type": "t_uint256"
							},
							{
								"astId": 1393,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_signers",
								"offset": 0,
								"slot": "209",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1397,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_mapSigners",
								"offset": 0,
								"slot": "210",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1401,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "uniqueIdExists",
								"offset": 0,
								"slot": "211",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 1405,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "userTotalBurned",
								"offset": 0,
								"slot": "212",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1326
						],
						"ContextUpgradeable": [
							1368
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 1369,
							"src": "127:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 283,
							"src": "169:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "748:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1368,
										"src": "763:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								1368,
								282
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "788:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 16,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "844:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "875:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:0"
									},
									"src": "817:84:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1055:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1065:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 19,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1038:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:0"
									},
									"scope": 131,
									"src": "1003:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1166:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 32,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "1195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "1176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1149:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:0"
									},
									"scope": 131,
									"src": "1104:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 45,
									"name": "onlyOwner",
									"nameLocation": "1312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:0"
									},
									"src": "1303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1496:30:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "1506:13:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:0"
									},
									"scope": 131,
									"src": "1441:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1644:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 61,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "1673:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:0"
									},
									"scope": 131,
									"src": "1599:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "2125:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2154:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 75,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2154:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2135:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "2135:30:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1735:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2115:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2115:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2080:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:0"
									},
									"scope": 131,
									"src": "2071:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2391:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 91,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2409:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2429:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2421:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2421:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2421:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2409:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2433:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2401:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2503:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2484:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2484:28:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2178:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2381:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2381:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2330:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2356:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2348:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:18:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:0"
									},
									"scope": 131,
									"src": "2321:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2736:124:0",
										"statements": [
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2754:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "2746:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2746:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"id": 113,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2746:25:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2781:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2790:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2781:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2781:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 120,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2834:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2844:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 119,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2813:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2813:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "2808:45:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2525:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2682:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:18:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:0"
									},
									"scope": 131,
									"src": "2673:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2866:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 130,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3145:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "3125:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 127,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3125:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 129,
										"length": {
											"hexValue": "3439",
											"id": 128,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3133:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3125:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 132,
							"src": "708:2445:0",
							"usedErrors": []
						}
					],
					"src": "102:3052:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1326
						],
						"Initializable": [
							282
						]
					},
					"id": 283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 1327,
							"src": "138:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 135,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282
							],
							"name": "Initializable",
							"nameLocation": "2401:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:1",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 138,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2535:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 137,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 141,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2664:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 140,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"id": 146,
									"name": "Initialized",
									"nameLocation": "2798:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2810:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 143,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:1"
									},
									"src": "2792:33:1"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3101:483:1",
										"statements": [
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3116:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "3111:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3133:14:1",
													"subExpression": {
														"id": 151,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3134:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 155,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "3179:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 156,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3197:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3212:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3197:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3179:34:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3178:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3219:45:1",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 165,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3258:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 164,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3250:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 163,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3250:7:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3250:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 161,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1326,
																						"src": "3220:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1326_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1101,
																					"src": "3220:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3220:44:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 169,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3268:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3284:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3268:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3219:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3218:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3178:108:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3300:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3157:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:201:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3157:201:1"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 178,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "3368:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3383:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3368:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "3368:16:1"
											},
											{
												"condition": {
													"id": 182,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3398:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "IfStatement",
												"src": "3394:65:1",
												"trueBody": {
													"id": 187,
													"nodeType": "Block",
													"src": "3414:45:1",
													"statements": [
														{
															"expression": {
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 183,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3428:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3444:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3428:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "3428:20:1"
														}
													]
												}
											},
											{
												"id": 189,
												"nodeType": "PlaceholderStatement",
												"src": "3468:1:1"
											},
											{
												"condition": {
													"id": 190,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3483:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 200,
												"nodeType": "IfStatement",
												"src": "3479:99:1",
												"trueBody": {
													"id": 199,
													"nodeType": "Block",
													"src": "3499:79:1",
													"statements": [
														{
															"expression": {
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 191,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3513:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3529:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3513:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 194,
															"nodeType": "ExpressionStatement",
															"src": "3513:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3565:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 195,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "3553:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3553:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 198,
															"nodeType": "EmitStatement",
															"src": "3548:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "2831:242:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 202,
									"name": "initializer",
									"nameLocation": "3087:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:2:1"
									},
									"src": "3078:506:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4399:255:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4417:14:1",
																"subExpression": {
																	"id": 208,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "4418:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "4435:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 211,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4450:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4435:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4417:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4459:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4409:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4409:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "4409:99:1"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "4518:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "4533:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4518:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "4518:22:1"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4550:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4566:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4550:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "4550:20:1"
											},
											{
												"id": 225,
												"nodeType": "PlaceholderStatement",
												"src": "4580:1:1"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4607:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4591:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "4591:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 231,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "4639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 230,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4627:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4627:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "EmitStatement",
												"src": "4622:25:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3590:766:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 235,
									"name": "reinitializer",
									"nameLocation": "4370:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4390:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4384:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4384:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4383:15:1"
									},
									"src": "4361:293:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "4892:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "4910:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4925:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4902:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4902:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "4902:69:1"
											},
											{
												"id": 243,
												"nodeType": "PlaceholderStatement",
												"src": "4981:1:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4660:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 245,
									"name": "onlyInitializing",
									"nameLocation": "4873:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4889:2:1"
									},
									"src": "4864:125:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "5437:230:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5455:14:1",
															"subExpression": {
																"id": 250,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "5456:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5471:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5447:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5447:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "5447:66:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 255,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "5527:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5547:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 257,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5547:5:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 256,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5542:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5542:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5542:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5527:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "5523:138:1",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "5559:102:1",
													"statements": [
														{
															"expression": {
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 262,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "5573:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5593:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 264,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "5593:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 263,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5588:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5588:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5588:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5573:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "5573:30:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5639:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 272,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "5639:5:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 271,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "5634:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5634:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "5634:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 270,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5622:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5622:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 277,
															"nodeType": "EmitStatement",
															"src": "5617:33:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "4995:388:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5397:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5417:2:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5437:0:1"
									},
									"scope": 282,
									"src": "5388:279:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 283,
							"src": "2383:3286:1",
							"usedErrors": []
						}
					],
					"src": "113:5557:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1326
						],
						"ContextUpgradeable": [
							1368
						],
						"ERC20Upgradeable": [
							893
						],
						"IERC20MetadataUpgradeable": [
							1083
						],
						"IERC20Upgradeable": [
							971
						],
						"Initializable": [
							282
						]
					},
					"id": 894,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "./IERC20Upgradeable.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 894,
							"sourceUnit": 972,
							"src": "130:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
							"file": "./extensions/IERC20MetadataUpgradeable.sol",
							"id": 286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 894,
							"sourceUnit": 1084,
							"src": "164:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 894,
							"sourceUnit": 1369,
							"src": "217:44:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 894,
							"sourceUnit": 283,
							"src": "262:45:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 290,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "1511:13:2"
									},
									"id": 291,
									"nodeType": "InheritanceSpecifier",
									"src": "1511:13:2"
								},
								{
									"baseName": {
										"id": 292,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1368,
										"src": "1526:18:2"
									},
									"id": 293,
									"nodeType": "InheritanceSpecifier",
									"src": "1526:18:2"
								},
								{
									"baseName": {
										"id": 294,
										"name": "IERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 971,
										"src": "1546:17:2"
									},
									"id": 295,
									"nodeType": "InheritanceSpecifier",
									"src": "1546:17:2"
								},
								{
									"baseName": {
										"id": 296,
										"name": "IERC20MetadataUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1083,
										"src": "1565:25:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1565:25:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 289,
								"nodeType": "StructuredDocumentation",
								"src": "309:1172:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 893,
							"linearizedBaseContracts": [
								893,
								1083,
								971,
								1368,
								282
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1491:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 301,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1633:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "1597:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 300,
										"keyType": {
											"id": 298,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1605:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1597:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 299,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1616:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1705:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "1649:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 306,
										"keyType": {
											"id": 302,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1657:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1649:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 305,
											"keyType": {
												"id": 303,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1676:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1668:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 304,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1687:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 309,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1739:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "1723:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 308,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 311,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1773:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "1758:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 310,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1758:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1799:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "1784:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 312,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1784:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2208:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 324,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "2241:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 325,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "2248:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 323,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "2218:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2218:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2218:38:2"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "1813:298:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 321,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 320,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "2191:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2191:16:2"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2125:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2152:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2138:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 315,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2138:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2173:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2159:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 317,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2159:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:44:2"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2208:0:2"
									},
									"scope": 893,
									"src": "2116:147:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "2371:57:2",
										"statements": [
											{
												"expression": {
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 338,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2381:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 339,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "2389:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2381:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "2381:13:2"
											},
											{
												"expression": {
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 342,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "2404:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 343,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "2414:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2404:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "2404:17:2"
											}
										]
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 336,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 335,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "2354:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2354:16:2"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2278:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2315:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2301:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 330,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2301:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2336:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2322:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2322:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2300:44:2"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2371:0:2"
									},
									"scope": 893,
									"src": "2269:159:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1070
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "2562:29:2",
										"statements": [
											{
												"expression": {
													"id": 354,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 311,
													"src": "2579:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 353,
												"id": 355,
												"nodeType": "Return",
												"src": "2572:12:2"
											}
										]
									},
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "2434:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2502:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 350,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2529:8:2"
									},
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2506:2:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "2547:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 351,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2547:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2546:15:2"
									},
									"scope": 893,
									"src": "2493:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1076
									],
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "2775:31:2",
										"statements": [
											{
												"expression": {
													"id": 364,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 313,
													"src": "2792:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 363,
												"id": 365,
												"nodeType": "Return",
												"src": "2785:14:2"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "2597:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2713:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 360,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2742:8:2"
									},
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2719:2:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2760:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2760:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2759:15:2"
									},
									"scope": 893,
									"src": "2704:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1082
									],
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "3495:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3512:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 373,
												"id": 375,
												"nodeType": "Return",
												"src": "3505:9:2"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2812:613:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3439:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 370,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3470:8:2"
									},
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3447:2:2"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3488:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 371,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3488:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:7:2"
									},
									"scope": 893,
									"src": "3430:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										920
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "3651:36:2",
										"statements": [
											{
												"expression": {
													"id": 384,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 309,
													"src": "3668:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 383,
												"id": 385,
												"nodeType": "Return",
												"src": "3661:19:2"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "3527:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3590:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 380,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3624:8:2"
									},
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3601:2:2"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3642:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3642:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3641:9:2"
									},
									"scope": 893,
									"src": "3581:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										928
									],
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "3828:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 396,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "3845:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 398,
													"indexExpression": {
														"id": 397,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "3855:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3845:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 395,
												"id": 399,
												"nodeType": "Return",
												"src": "3838:25:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "3693:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3754:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 392,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:2"
									},
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3772:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "3764:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3763:17:2"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "3819:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:9:2"
									},
									"scope": 893,
									"src": "3745:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										938
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "4151:104:2",
										"statements": [
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4169:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 425,
														"src": "4161:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 412,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4161:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 416,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 414,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "4177:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4177:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4161:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "4209:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "4216:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4220:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "4199:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4199:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "4199:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4244:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 411,
												"id": 424,
												"nodeType": "Return",
												"src": "4237:11:2"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "3876:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4075:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 408,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4127:8:2"
									},
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4092:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4084:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4104:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4096:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4096:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4083:28:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4145:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4145:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4144:6:2"
									},
									"scope": 893,
									"src": "4066:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "4411:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 437,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4428:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 439,
														"indexExpression": {
															"id": 438,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4428:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 441,
													"indexExpression": {
														"id": 440,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "4447:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4428:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 436,
												"id": 442,
												"nodeType": "Return",
												"src": "4421:34:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "4261:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4322:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 433,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4384:8:2"
									},
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4340:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "4332:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4355:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "4347:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4347:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4331:32:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "4402:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4402:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4401:9:2"
									},
									"scope": 893,
									"src": "4313:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										958
									],
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "4859:108:2",
										"statements": [
											{
												"assignments": [
													456
												],
												"declarations": [
													{
														"constant": false,
														"id": 456,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4877:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 468,
														"src": "4869:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 455,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4869:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 459,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 457,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "4885:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4885:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4869:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "4923:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "4932:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 460,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "4907:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4907:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "4907:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4956:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 454,
												"id": 467,
												"nodeType": "Return",
												"src": "4949:11:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "4468:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4779:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 451,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4835:8:2"
									},
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4795:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4787:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4787:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4812:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4804:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4804:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4786:33:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4853:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4853:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4852:6:2"
									},
									"scope": 893,
									"src": "4770:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										970
									],
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "5662:153:2",
										"statements": [
											{
												"assignments": [
													483
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5680:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "5672:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 482,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5672:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 484,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "5690:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5690:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5672:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "5728:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5734:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5743:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 487,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "5712:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5712:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "5712:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "5770:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5776:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5780:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 493,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "5760:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5760:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "5760:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5804:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 481,
												"id": 500,
												"nodeType": "Return",
												"src": "5797:11:2"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4973:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5538:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 478,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5638:8:2"
									},
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5568:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5560:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5560:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5590:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5582:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5610:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5602:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5602:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5550:72:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5656:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5656:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5655:6:2"
									},
									"scope": 893,
									"src": "5529:286:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "6304:140:2",
										"statements": [
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6322:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 530,
														"src": "6314:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 512,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6314:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 516,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 514,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "6330:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6330:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6314:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "6361:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 521,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "6387:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 522,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "6394:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 520,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "6377:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6377:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 524,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "6405:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6377:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "6352:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6352:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "6352:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6433:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 511,
												"id": 529,
												"nodeType": "Return",
												"src": "6426:11:2"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5821:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6219:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6245:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "6237:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6262:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "6254:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6254:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:37:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "6298:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6298:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:6:2"
									},
									"scope": 893,
									"src": "6210:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "7030:328:2",
										"statements": [
											{
												"assignments": [
													542
												],
												"declarations": [
													{
														"constant": false,
														"id": 542,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7048:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "7040:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 541,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7040:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 543,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "7056:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7056:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7040:28:2"
											},
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "7086:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "7078:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7078:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 552,
												"initialValue": {
													"arguments": [
														{
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "7115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 550,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 548,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "7105:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7105:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7078:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 554,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "7148:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 555,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "7168:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7148:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7185:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7140:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7140:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "7140:85:2"
											},
											{
												"id": 568,
												"nodeType": "UncheckedBlock",
												"src": "7235:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 561,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "7268:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 562,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "7275:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 563,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "7284:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 564,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "7303:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7284:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 560,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "7259:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7259:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 567,
														"nodeType": "ExpressionStatement",
														"src": "7259:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7347:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 540,
												"id": 570,
												"nodeType": "Return",
												"src": "7340:11:2"
											}
										]
									},
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "6450:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6940:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6966:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "6958:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6958:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6983:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "6975:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6975:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6957:42:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "7024:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7024:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7023:6:2"
									},
									"scope": 893,
									"src": "6931:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "7920:543:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 583,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "7938:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7954:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7946:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 584,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7946:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7946:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7938:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7958:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7930:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7930:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "7930:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 593,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "8016:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8030:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8022:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 594,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8022:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8022:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8016:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8034:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8008:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8008:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "8008:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 603,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "8104:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 604,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "8110:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "8114:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 602,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "8083:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8083:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "8083:38:2"
											},
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "8140:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "8132:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8132:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 613,
												"initialValue": {
													"baseExpression": {
														"id": 610,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "8154:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 612,
													"indexExpression": {
														"id": 611,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "8164:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8154:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8132:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 615,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "8187:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 616,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "8202:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8187:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8210:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8179:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8179:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "8179:72:2"
											},
											{
												"id": 629,
												"nodeType": "UncheckedBlock",
												"src": "8261:73:2",
												"statements": [
													{
														"expression": {
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 621,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "8285:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 623,
																"indexExpression": {
																	"id": 622,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "8295:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8285:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 624,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "8303:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 625,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "8317:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8303:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8285:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 628,
														"nodeType": "ExpressionStatement",
														"src": "8285:38:2"
													}
												]
											},
											{
												"expression": {
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 630,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "8343:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 632,
														"indexExpression": {
															"id": 631,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "8353:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8343:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 633,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "8360:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8343:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "8343:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 637,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "8391:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "8397:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "8401:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 636,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "8382:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8382:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "EmitStatement",
												"src": "8377:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "8439:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "8445:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "8449:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 642,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "8419:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8419:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "8419:37:2"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "7364:443:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7821:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7848:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "7840:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7840:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7870:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "7862:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7862:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7890:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "7882:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7830:72:2"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7920:0:2"
									},
									"scope": 893,
									"src": "7812:651:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "8804:324:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 658,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "8822:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8841:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8833:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 659,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8833:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8833:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8822:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8845:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 657,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8814:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8814:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "8814:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8919:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8911:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 668,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8911:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8911:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "8923:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 673,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "8932:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 667,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "8890:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8890:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "8890:49:2"
											},
											{
												"expression": {
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 676,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "8950:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 677,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "8966:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8950:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "8950:22:2"
											},
											{
												"expression": {
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 680,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "8982:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 682,
														"indexExpression": {
															"id": 681,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "8992:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8982:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 683,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "9004:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8982:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "8982:28:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9042:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9034:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 687,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9034:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9034:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "9046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "9055:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 686,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "9025:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9025:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "EmitStatement",
												"src": "9020:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9101:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9093:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9093:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9093:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "9105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "9114:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 695,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "9073:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "9073:48:2"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "8469:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8748:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8762:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "8754:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8779:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "8771:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8771:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8753:33:2"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8804:0:2"
									},
									"scope": 893,
									"src": "8739:389:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "9513:511:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 714,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "9531:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9550:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9542:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 715,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9542:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9542:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9531:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9554:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9523:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9523:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "9523:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 724,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "9622:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9639:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9631:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 725,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9631:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9631:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "9643:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 723,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "9601:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9601:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "9601:49:2"
											},
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9669:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "9661:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9661:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 737,
												"initialValue": {
													"baseExpression": {
														"id": 734,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "9686:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 736,
													"indexExpression": {
														"id": 735,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "9696:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9686:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9661:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 739,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "9722:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 740,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "9740:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9722:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9748:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9714:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9714:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "9714:71:2"
											},
											{
												"id": 753,
												"nodeType": "UncheckedBlock",
												"src": "9795:79:2",
												"statements": [
													{
														"expression": {
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 745,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "9819:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 747,
																"indexExpression": {
																	"id": 746,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "9829:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9819:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 748,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "9840:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 749,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "9857:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9840:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9819:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 752,
														"nodeType": "ExpressionStatement",
														"src": "9819:44:2"
													}
												]
											},
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 754,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "9883:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 755,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "9899:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9883:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "9883:22:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 759,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "9930:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9947:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9939:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 760,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9939:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9939:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "9951:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 758,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "9921:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9921:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "EmitStatement",
												"src": "9916:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 768,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "9989:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10006:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9998:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9998:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9998:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 773,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "10010:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 767,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "9969:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9969:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "9969:48:2"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "9134:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9457:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9471:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "9463:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9463:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9488:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "9480:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9462:33:2"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9513:0:2"
									},
									"scope": 893,
									"src": "9448:576:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "10560:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 788,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "10578:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10595:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10587:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 789,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10587:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10587:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10578:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10599:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10570:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10570:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "10570:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 798,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "10656:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10675:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10667:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10667:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10667:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10656:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10679:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10648:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10648:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "10648:68:2"
											},
											{
												"expression": {
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 807,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "10727:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 810,
															"indexExpression": {
																"id": 808,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "10739:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10727:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 811,
														"indexExpression": {
															"id": 809,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "10746:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10727:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 812,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "10757:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10727:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "10727:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 816,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "10787:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "10794:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "10803:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 815,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "10778:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10778:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "EmitStatement",
												"src": "10773:37:2"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "10030:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10456:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10482:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "10474:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10505:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "10497:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10497:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10530:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "10522:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10522:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10464:78:2"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10560:0:2"
									},
									"scope": 893,
									"src": "10447:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "11218:321:2",
										"statements": [
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11236:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 864,
														"src": "11228:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11228:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 838,
												"initialValue": {
													"arguments": [
														{
															"id": 835,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "11265:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "11272:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 834,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "11255:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11255:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11228:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 839,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "11294:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11319:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 841,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11319:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 840,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11314:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11314:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11314:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11294:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 863,
												"nodeType": "IfStatement",
												"src": "11290:243:2",
												"trueBody": {
													"id": 862,
													"nodeType": "Block",
													"src": "11333:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 847,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "11355:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 848,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "11375:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11355:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11383:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 846,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11347:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11347:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 852,
															"nodeType": "ExpressionStatement",
															"src": "11347:68:2"
														},
														{
															"id": 861,
															"nodeType": "UncheckedBlock",
															"src": "11429:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 854,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 825,
																				"src": "11466:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 855,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 827,
																				"src": "11473:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 856,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 833,
																					"src": "11482:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 857,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 829,
																					"src": "11501:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11482:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 853,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "11457:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11457:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 860,
																	"nodeType": "ExpressionStatement",
																	"src": "11457:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "10823:270:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11107:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11140:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "11132:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11132:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11163:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "11155:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11155:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11188:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "11180:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11122:78:2"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11218:0:2"
									},
									"scope": 893,
									"src": "11098:441:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "12242:2:2",
										"statements": []
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "11545:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12132:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12170:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "12162:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12162:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12192:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "12184:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12184:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12212:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "12204:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12152:72:2"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12242:0:2"
									},
									"scope": 893,
									"src": "12123:121:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "12950:2:2",
										"statements": []
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "12250:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12841:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12878:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "12870:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12870:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12900:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "12892:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12920:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "12912:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12912:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12860:72:2"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12950:0:2"
									},
									"scope": 893,
									"src": "12832:120:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "12958:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 892,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "13237:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "13217:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$45_storage",
										"typeString": "uint256[45]"
									},
									"typeName": {
										"baseType": {
											"id": 889,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "13217:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 891,
										"length": {
											"hexValue": "3435",
											"id": 890,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "13225:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_45_by_1",
												"typeString": "int_const 45"
											},
											"value": "45"
										},
										"nodeType": "ArrayTypeName",
										"src": "13217:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$45_storage_ptr",
											"typeString": "uint256[45]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 894,
							"src": "1482:11763:2",
							"usedErrors": []
						}
					],
					"src": "105:13141:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							971
						]
					},
					"id": 972,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 895,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 896,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 971,
							"linearizedBaseContracts": [
								971
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 905,
									"name": "Transfer",
									"nameLocation": "405:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "414:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "436:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "456:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:3"
									},
									"src": "399:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 914,
									"name": "Approval",
									"nameLocation": "636:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "645:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "668:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:3"
									},
									"src": "630:78:3"
								},
								{
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 920,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:3"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "831:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:3"
									},
									"scope": 971,
									"src": "785:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 928,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "942:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:3"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "982:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:3"
									},
									"scope": 971,
									"src": "923:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1234:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:3"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 971,
									"src": "1204:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 971,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "2302:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "2319:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:3"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "2353:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 955,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:3"
									},
									"scope": 971,
									"src": "2285:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2696:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "2688:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2718:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "2710:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2738:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "2730:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:72:3"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "2769:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2769:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:6:3"
									},
									"scope": 971,
									"src": "2657:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 972,
							"src": "202:2575:3",
							"usedErrors": []
						}
					],
					"src": "106:2672:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1326
						],
						"ContextUpgradeable": [
							1368
						],
						"ERC20CappedUpgradeable": [
							1058
						],
						"ERC20Upgradeable": [
							893
						],
						"IERC20MetadataUpgradeable": [
							1083
						],
						"IERC20Upgradeable": [
							971
						],
						"Initializable": [
							282
						]
					},
					"id": 1059,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 973,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "../ERC20Upgradeable.sol",
							"id": 974,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1059,
							"sourceUnit": 894,
							"src": "132:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../../proxy/utils/Initializable.sol",
							"id": 975,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1059,
							"sourceUnit": 283,
							"src": "166:48:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 977,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "368:13:4"
									},
									"id": 978,
									"nodeType": "InheritanceSpecifier",
									"src": "368:13:4"
								},
								{
									"baseName": {
										"id": 979,
										"name": "ERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 893,
										"src": "383:16:4"
									},
									"id": 980,
									"nodeType": "InheritanceSpecifier",
									"src": "383:16:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 976,
								"nodeType": "StructuredDocumentation",
								"src": "216:107:4",
								"text": " @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n @custom:storage-size 51"
							},
							"fullyImplemented": true,
							"id": 1058,
							"linearizedBaseContracts": [
								1058,
								893,
								1083,
								971,
								1368,
								282
							],
							"name": "ERC20CappedUpgradeable",
							"nameLocation": "342:22:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 982,
									"mutability": "mutable",
									"name": "_cap",
									"nameLocation": "422:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1058,
									"src": "406:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 981,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "406:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "635:51:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 991,
															"name": "cap_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "674:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 990,
														"name": "__ERC20Capped_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "645:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "645:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "645:34:4"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "433:129:4",
										"text": " @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 988,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 987,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "618:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "618:16:4"
										}
									],
									"name": "__ERC20Capped_init",
									"nameLocation": "576:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "603:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "595:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "594:14:4"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:0:4"
									},
									"scope": 1058,
									"src": "567:119:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "770:80:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1003,
																"name": "cap_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "788:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "795:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "788:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332304361707065643a206361702069732030",
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "798:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828",
																"typeString": "literal_string \"ERC20Capped: cap is 0\""
															},
															"value": "ERC20Capped: cap is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828",
																"typeString": "literal_string \"ERC20Capped: cap is 0\""
															}
														],
														"id": 1002,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "780:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "780:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "780:42:4"
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1009,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "832:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1010,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "839:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "832:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "832:11:4"
											}
										]
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1000,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 999,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "753:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "753:16:4"
										}
									],
									"name": "__ERC20Capped_init_unchained",
									"nameLocation": "701:28:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "738:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "730:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "729:14:4"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:0:4"
									},
									"scope": 1058,
									"src": "692:158:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "982:28:4",
										"statements": [
											{
												"expression": {
													"id": 1020,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 982,
													"src": "999:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1019,
												"id": 1021,
												"nodeType": "Return",
												"src": "992:11:4"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "856:68:4",
										"text": " @dev Returns the cap on the token's total supply."
									},
									"functionSelector": "355274ea",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "938:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "941:2:4"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "973:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:9:4"
									},
									"scope": 1058,
									"src": "929:81:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										705
									],
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "1137:141:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1033,
																			"name": "ERC20Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "1155:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20Upgradeable_$893_$",
																				"typeString": "type(contract ERC20Upgradeable)"
																			}
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 387,
																		"src": "1155:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1155:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1036,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "1188:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1155:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1038,
																	"name": "cap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "1198:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1198:5:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1155:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332304361707065643a20636170206578636565646564",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1205:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																"typeString": "literal_string \"ERC20Capped: cap exceeded\""
															},
															"value": "ERC20Capped: cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																"typeString": "literal_string \"ERC20Capped: cap exceeded\""
															}
														],
														"id": 1032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1147:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "1147:86:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1047,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "1255:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1048,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "1264:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1044,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1243:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20CappedUpgradeable_$1058_$",
																"typeString": "type(contract super ERC20CappedUpgradeable)"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 705,
														"src": "1243:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1243:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "1243:28:4"
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "1016:42:4",
										"text": " @dev See {ERC20-_mint}."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "1072:5:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1030,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1128:8:4"
									},
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1086:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1078:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1103:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1095:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:33:4"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:4"
									},
									"scope": 1058,
									"src": "1063:215:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "1284:254:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1057,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1563:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1058,
									"src": "1543:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1054,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1543:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1056,
										"length": {
											"hexValue": "3530",
											"id": 1055,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1551:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1543:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1059,
							"src": "324:1247:4",
							"usedErrors": []
						}
					],
					"src": "107:1465:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
					"exportedSymbols": {
						"IERC20MetadataUpgradeable": [
							1083
						],
						"IERC20Upgradeable": [
							971
						]
					},
					"id": 1084,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1060,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 1061,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1084,
							"sourceUnit": 972,
							"src": "135:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1063,
										"name": "IERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 971,
										"src": "327:17:5"
									},
									"id": 1064,
									"nodeType": "InheritanceSpecifier",
									"src": "327:17:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1062,
								"nodeType": "StructuredDocumentation",
								"src": "171:116:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1083,
							"linearizedBaseContracts": [
								1083,
								971
							],
							"name": "IERC20MetadataUpgradeable",
							"nameLocation": "298:25:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "351:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "419:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:5"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "449:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1067,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "449:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:15:5"
									},
									"scope": 1083,
									"src": "410:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "470:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "540:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "546:2:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "572:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1073,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "572:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:15:5"
									},
									"scope": 1083,
									"src": "531:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "593:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "672:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "680:2:5"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "706:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1079,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "706:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:7:5"
									},
									"scope": 1083,
									"src": "663:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1084,
							"src": "288:427:5",
							"usedErrors": []
						}
					],
					"src": "110:606:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1326
						]
					},
					"id": 1327,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1085,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1086,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1326,
							"linearizedBaseContracts": [
								1326
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "1252:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1094,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "1476:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1093,
												"id": 1099,
												"nodeType": "Return",
												"src": "1469:30:6"
											}
										]
									},
									"documentation": {
										"id": 1087,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1206:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:6"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1246:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:6"
									},
									"scope": 1326,
									"src": "1186:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "2494:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1112,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1326",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1326",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1110,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1115,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "2537:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:6"
											},
											{
												"assignments": [
													1121,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1134,
														"src": "2589:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1120,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1128,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1122,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "2607:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1124,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "2629:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "2658:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:6"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "2442:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "2469:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:6"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:6"
									},
									"scope": 1326,
									"src": "2423:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "3566:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1146,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "3596:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1147,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "3604:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1145,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1152,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "3583:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1144,
												"id": 1150,
												"nodeType": "Return",
												"src": "3576:67:6"
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "3499:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "3515:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:6"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "3552:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:6"
									},
									"scope": 1326,
									"src": "3477:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "4019:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1165,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "4058:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1166,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "4066:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1168,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "4075:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1164,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1192,
															1242
														],
														"referencedDeclaration": 1242,
														"src": "4036:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1163,
												"id": 1170,
												"nodeType": "Return",
												"src": "4029:59:6"
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "3656:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3881:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3911:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "3903:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3940:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "3927:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3927:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3968:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "3954:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3954:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:93:6"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "4005:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4005:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:14:6"
									},
									"scope": 1326,
									"src": "3872:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "4600:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1185,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "4639:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1186,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "4647:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1187,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4653:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1184,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1192,
															1242
														],
														"referencedDeclaration": 1242,
														"src": "4617:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1190,
												"nodeType": "Return",
												"src": "4610:94:6"
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "4101:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4466:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4505:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "4497:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4534:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "4521:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4521:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4556:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "4548:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:80:6"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "4586:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4586:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:14:6"
									},
									"scope": 1326,
									"src": "4457:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "5138:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1209,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5164:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1326",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1326",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5156:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1207,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5156:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5156:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5156:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1212,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "5181:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5188:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5148:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "5148:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1219,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "5258:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1218,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "5247:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5247:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5267:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5239:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5239:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "5239:60:6"
											},
											{
												"assignments": [
													1225,
													1227
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5316:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1241,
														"src": "5311:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1224,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5311:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1227,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5338:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1241,
														"src": "5325:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1226,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5325:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1234,
												"initialValue": {
													"arguments": [
														{
															"id": 1232,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "5378:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1228,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "5352:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5352:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1230,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "5371:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5352:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5352:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5310:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1236,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "5417:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1237,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "5426:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1238,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "5438:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1235,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "5400:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5400:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1205,
												"id": 1240,
												"nodeType": "Return",
												"src": "5393:58:6"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "4717:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4968:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5007:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4999:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5036:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "5023:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5023:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "5050:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5087:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "5073:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5073:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:116:6"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "5124:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5124:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:14:6"
									},
									"scope": 1326,
									"src": "4959:499:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "5735:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1253,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "5771:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "5779:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5785:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1252,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1259,
															1294
														],
														"referencedDeclaration": 1294,
														"src": "5752:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5752:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1251,
												"id": 1257,
												"nodeType": "Return",
												"src": "5745:80:6"
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "5464:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5644:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5671:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5663:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5692:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5679:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5679:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5662:35:6"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5721:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5721:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:14:6"
									},
									"scope": 1326,
									"src": "5635:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "6174:228:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1273,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "6203:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1272,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "6192:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6192:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6212:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6184:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "6184:67:6"
											},
											{
												"assignments": [
													1279,
													1281
												],
												"declarations": [
													{
														"constant": false,
														"id": 1279,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6268:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1293,
														"src": "6263:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1278,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6263:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1281,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6290:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1293,
														"src": "6277:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1280,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6277:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1286,
												"initialValue": {
													"arguments": [
														{
															"id": 1284,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "6322:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1282,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "6304:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6304:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6262:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1288,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "6361:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1289,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "6370:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1290,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "6382:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1287,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "6344:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6344:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1270,
												"id": 1292,
												"nodeType": "Return",
												"src": "6337:58:6"
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "5838:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6025:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6061:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "6053:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6053:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6090:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "6077:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1263,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6077:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6118:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "6104:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6104:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:93:6"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "6160:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6160:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:14:6"
									},
									"scope": 1326,
									"src": "6016:386:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "6782:582:6",
										"statements": [
											{
												"condition": {
													"id": 1306,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1297,
													"src": "6796:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1322,
													"nodeType": "Block",
													"src": "6853:505:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1310,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "6937:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6937:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6957:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6937:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1320,
																"nodeType": "Block",
																"src": "7295:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1317,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1301,
																					"src": "7320:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1316,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7313:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7313:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1319,
																		"nodeType": "ExpressionStatement",
																		"src": "7313:20:6"
																	}
																]
															},
															"id": 1321,
															"nodeType": "IfStatement",
															"src": "6933:415:6",
															"trueBody": {
																"id": 1315,
																"nodeType": "Block",
																"src": "6960:329:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7130:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7152:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7181:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7175:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7175:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7156:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7224:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7228:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7220:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7220:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7241:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7213:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7213:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7213:44:6"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1299,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7181:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1299,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7228:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1314,
																		"nodeType": "InlineAssembly",
																		"src": "7121:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 1323,
												"nodeType": "IfStatement",
												"src": "6792:566:6",
												"trueBody": {
													"id": 1309,
													"nodeType": "Block",
													"src": "6805:42:6",
													"statements": [
														{
															"expression": {
																"id": 1307,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "6826:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1305,
															"id": 1308,
															"nodeType": "Return",
															"src": "6819:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "6408:209:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "6631:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6662:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6657:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1296,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6657:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6692:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6679:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1298,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6679:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6726:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6712:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1300,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6712:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6647:97:6"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6768:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:6"
									},
									"scope": 1326,
									"src": "6622:742:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1327,
							"src": "194:7172:6",
							"usedErrors": []
						}
					],
					"src": "101:7266:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1326
						],
						"ContextUpgradeable": [
							1368
						],
						"Initializable": [
							282
						]
					},
					"id": 1369,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1328,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1369,
							"sourceUnit": 283,
							"src": "110:42:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1331,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "691:13:7"
									},
									"id": 1332,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1368,
							"linearizedBaseContracts": [
								1368,
								282
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "763:7:7",
										"statements": []
									},
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1335,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1334,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "746:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:7"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:7"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:7"
									},
									"scope": 1368,
									"src": "711:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "838:7:7",
										"statements": []
									},
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1340,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "821:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:7"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:7"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:7"
									},
									"scope": 1368,
									"src": "776:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "912:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1349,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1348,
												"id": 1351,
												"nodeType": "Return",
												"src": "922:17:7"
											}
										]
									},
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:7"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "903:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:7"
									},
									"scope": 1368,
									"src": "850:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "1019:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1358,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1357,
												"id": 1360,
												"nodeType": "Return",
												"src": "1029:15:7"
											}
										]
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:7"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "1003:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:7"
									},
									"scope": 1368,
									"src": "952:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:7",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1367,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1368,
									"src": "1316:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1364,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1366,
										"length": {
											"hexValue": "3530",
											"id": 1365,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1369,
							"src": "651:693:7",
							"usedErrors": []
						}
					],
					"src": "86:1259:7"
				},
				"id": 7
			},
			"contracts/DeAnt3Token.sol": {
				"ast": {
					"absolutePath": "contracts/DeAnt3Token.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1326
						],
						"ContextUpgradeable": [
							1368
						],
						"DeAnt3Token": [
							1903
						],
						"ERC20CappedUpgradeable": [
							1058
						],
						"ERC20Upgradeable": [
							893
						],
						"IERC20MetadataUpgradeable": [
							1083
						],
						"IERC20Upgradeable": [
							971
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 1904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1370,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol",
							"id": 1371,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1904,
							"sourceUnit": 1059,
							"src": "67:95:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1904,
							"sourceUnit": 132,
							"src": "164:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1373,
										"name": "ERC20CappedUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1058,
										"src": "267:22:8"
									},
									"id": 1374,
									"nodeType": "InheritanceSpecifier",
									"src": "267:22:8"
								},
								{
									"baseName": {
										"id": 1375,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "291:18:8"
									},
									"id": 1376,
									"nodeType": "InheritanceSpecifier",
									"src": "291:18:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1903,
							"linearizedBaseContracts": [
								1903,
								131,
								1058,
								893,
								1083,
								971,
								1368,
								282
							],
							"name": "DeAnt3Token",
							"nameLocation": "252:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1378,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "332:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "317:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1377,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "317:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1380,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "359:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "344:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1379,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "344:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1382,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "387:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "373:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1381,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "373:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1384,
									"mutability": "mutable",
									"name": "_rewardAmt",
									"nameLocation": "419:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "403:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1383,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "403:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1386,
									"mutability": "mutable",
									"name": "_cap",
									"nameLocation": "452:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "436:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "436:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1388,
									"mutability": "mutable",
									"name": "_taxFee",
									"nameLocation": "479:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "463:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1387,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "463:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d89135cd",
									"id": 1390,
									"mutability": "mutable",
									"name": "totalBurned",
									"nameLocation": "508:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "493:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1389,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "493:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1393,
									"mutability": "mutable",
									"name": "_signers",
									"nameLocation": "544:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "526:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1391,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "526:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1392,
										"nodeType": "ArrayTypeName",
										"src": "526:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3de47e32",
									"id": 1397,
									"mutability": "mutable",
									"name": "_mapSigners",
									"nameLocation": "591:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "559:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1396,
										"keyType": {
											"id": 1394,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "567:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "559:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1395,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "578:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f9342285",
									"id": 1401,
									"mutability": "mutable",
									"name": "uniqueIdExists",
									"nameLocation": "641:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "609:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 1400,
										"keyType": {
											"id": 1398,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "617:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "609:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueType": {
											"id": 1399,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "628:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1e0d4ce9",
									"id": 1405,
									"mutability": "mutable",
									"name": "userTotalBurned",
									"nameLocation": "697:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "662:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1404,
										"keyType": {
											"id": 1402,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "670:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "662:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1403,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "681:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "935:336:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1422,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "946:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "946:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "946:16:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1426,
															"name": "_NAME",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "986:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1427,
															"name": "_SYMBOL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "993:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1425,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "973:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "973:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "973:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1431,
																"name": "cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "1031:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1037:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1433,
																	"name": "_DECIMALS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1411,
																	"src": "1041:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1037:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1031:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1430,
														"name": "__ERC20Capped_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "1012:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1012:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "1012:39:8"
											},
											{
												"expression": {
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1438,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "1062:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1439,
														"name": "_NAME",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "1070:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1062:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "1062:13:8"
											},
											{
												"expression": {
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1442,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "1086:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1443,
														"name": "_SYMBOL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "1096:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1086:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "1086:17:8"
											},
											{
												"expression": {
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1446,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "1114:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1447,
														"name": "_DECIMALS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "1126:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1114:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "1114:21:8"
											},
											{
												"expression": {
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1450,
														"name": "_rewardAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "1146:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "302e31",
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1159:9:8",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000_by_1",
															"typeString": "int_const 100000000000000000"
														},
														"value": "0.1"
													},
													"src": "1146:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "1146:22:8"
											},
											{
												"expression": {
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1454,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "1179:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1455,
														"name": "cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "1186:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1179:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "1179:10:8"
											},
											{
												"expression": {
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1458,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "1200:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1459,
														"name": "taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "1210:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1200:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "1200:16:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1465,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1241:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DeAnt3Token_$1903",
																		"typeString": "contract DeAnt3Token"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DeAnt3Token_$1903",
																		"typeString": "contract DeAnt3Token"
																	}
																],
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1233:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1463,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1233:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1233:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1467,
															"name": "initialBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "1248:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1462,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1052
														],
														"referencedDeclaration": 1052,
														"src": "1227:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1227:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "1227:36:8"
											}
										]
									},
									"functionSelector": "2b9a1d3c",
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1420,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1419,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 202,
												"src": "923:11:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "923:11:8"
										}
									],
									"name": "initialize",
									"nameLocation": "730:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "_NAME",
												"nameLocation": "765:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "751:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1406,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "751:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "_SYMBOL",
												"nameLocation": "795:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "781:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1408,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "781:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "_DECIMALS",
												"nameLocation": "819:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "813:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1410,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "847:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "839:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "initialBalance",
												"nameLocation": "869:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "861:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "taxFee",
												"nameLocation": "902:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "894:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "740:175:8"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:0:8"
									},
									"scope": 1903,
									"src": "721:550:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "1306:2:8",
										"statements": []
									},
									"id": 1475,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:2:8"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:0:8"
									},
									"scope": 1903,
									"src": "1279:29:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "1381:35:8",
										"statements": [
											{
												"expression": {
													"id": 1481,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1382,
													"src": "1399:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1480,
												"id": 1482,
												"nodeType": "Return",
												"src": "1392:16:8"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1325:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1477,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1356:8:8"
									},
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1333:2:8"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "1374:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1374:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:7:8"
									},
									"scope": 1903,
									"src": "1316:100:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "1478:36:8",
										"statements": [
											{
												"expression": {
													"id": 1489,
													"name": "_rewardAmt",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1384,
													"src": "1496:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1488,
												"id": 1490,
												"nodeType": "Return",
												"src": "1489:17:8"
											}
										]
									},
									"functionSelector": "ac7fa3c6",
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardAmt",
									"nameLocation": "1433:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:2:8"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1469:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:9:8"
									},
									"scope": 1903,
									"src": "1424:90:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "1585:39:8",
										"statements": [
											{
												"expression": {
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1499,
														"name": "_rewardAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "1596:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1500,
														"name": "_newAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "1609:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1596:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "1596:20:8"
											}
										]
									},
									"functionSelector": "b24a0893",
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1497,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1496,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "1575:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1575:9:8"
										}
									],
									"name": "setRewardAmtInWei",
									"nameLocation": "1531:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "_newAmt",
												"nameLocation": "1557:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1549:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:17:8"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1585:0:8"
									},
									"scope": 1903,
									"src": "1522:102:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "1683:33:8",
										"statements": [
											{
												"expression": {
													"id": 1509,
													"name": "_taxFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1388,
													"src": "1701:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1508,
												"id": 1510,
												"nodeType": "Return",
												"src": "1694:14:8"
											}
										]
									},
									"functionSelector": "f66608fe",
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaxFee",
									"nameLocation": "1641:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1650:2:8"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1674:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:9:8"
									},
									"scope": 1903,
									"src": "1632:84:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "1782:39:8",
										"statements": [
											{
												"expression": {
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1519,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "1793:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1520,
														"name": "_newTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "1803:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1793:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "1793:20:8"
											}
										]
									},
									"functionSelector": "c4081a4c",
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1517,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1516,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "1772:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1772:9:8"
										}
									],
									"name": "setTaxFee",
									"nameLocation": "1733:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "_newTaxFee",
												"nameLocation": "1751:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1743:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:20:8"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1782:0:8"
									},
									"scope": 1903,
									"src": "1724:97:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "1889:34:8",
										"statements": [
											{
												"expression": {
													"id": 1530,
													"name": "_signers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1393,
													"src": "1907:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1529,
												"id": 1531,
												"nodeType": "Return",
												"src": "1900:15:8"
											}
										]
									},
									"functionSelector": "46f0975a",
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "signers",
									"nameLocation": "1838:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1845:2:8"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1871:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1526,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1871:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1527,
													"nodeType": "ArrayTypeName",
													"src": "1871:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:18:8"
									},
									"scope": 1903,
									"src": "1829:94:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "2005:165:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1542,
															"name": "_signers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "2027:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2037:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"id": 1544,
															"name": "_mapSigners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "2044:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														],
														"id": 1541,
														"name": "_updateMap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "2016:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$_t_mapping$_t_address_$_t_bool_$_$returns$__$",
															"typeString": "function (address[] memory,bool,mapping(address => bool))"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2016:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "2016:40:8"
											},
											{
												"expression": {
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2067:15:8",
													"subExpression": {
														"id": 1547,
														"name": "_signers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "2074:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "2067:15:8"
											},
											{
												"expression": {
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1550,
														"name": "_signers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "2093:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1551,
														"name": "signers_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "2104:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "2093:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "2093:19:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1555,
															"name": "signers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "2134:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2144:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 1557,
															"name": "_mapSigners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "2150:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														],
														"id": 1554,
														"name": "_updateMap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "2123:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$_t_mapping$_t_address_$_t_bool_$_$returns$__$",
															"typeString": "function (address[] memory,bool,mapping(address => bool))"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "2123:39:8"
											}
										]
									},
									"functionSelector": "a3772662",
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1539,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1538,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "1995:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1995:9:8"
										}
									],
									"name": "setSigners",
									"nameLocation": "1940:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "signers_",
												"nameLocation": "1968:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "1951:25:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1534,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1951:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1535,
													"nodeType": "ArrayTypeName",
													"src": "1951:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1950:27:8"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2005:0:8"
									},
									"scope": 1903,
									"src": "1931:239:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "2242:45:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1568,
														"name": "_mapSigners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "2260:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1570,
													"indexExpression": {
														"id": 1569,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "2272:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2260:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1567,
												"id": 1571,
												"nodeType": "Return",
												"src": "2253:26:8"
											}
										]
									},
									"functionSelector": "07c351dd",
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mapSigner",
									"nameLocation": "2187:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "2205:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "2197:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:16:8"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "2236:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2236:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2235:6:8"
									},
									"scope": 1903,
									"src": "2178:109:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "2431:105:8",
										"statements": [
											{
												"body": {
													"id": 1604,
													"nodeType": "Block",
													"src": "2482:47:8",
													"statements": [
														{
															"expression": {
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1596,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1582,
																		"src": "2497:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1600,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1597,
																			"name": "arr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1576,
																			"src": "2501:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1599,
																		"indexExpression": {
																			"id": 1598,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "2505:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2501:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2497:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1601,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1578,
																	"src": "2511:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2497:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1603,
															"nodeType": "ExpressionStatement",
															"src": "2497:20:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1589,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "2461:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1590,
															"name": "arr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "2465:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2465:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2461:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1605,
												"initializationExpression": {
													"assignments": [
														1586
													],
													"declarations": [
														{
															"constant": false,
															"id": 1586,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2454:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1605,
															"src": "2447:8:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"typeName": {
																"id": 1585,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "2447:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1588,
													"initialValue": {
														"hexValue": "30",
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2458:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2447:12:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2477:3:8",
														"subExpression": {
															"id": 1593,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "2477:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1595,
													"nodeType": "ExpressionStatement",
													"src": "2477:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2442:87:8"
											}
										]
									},
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateMap",
									"nameLocation": "2304:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2342:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "2325:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1574,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2325:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1575,
													"nodeType": "ArrayTypeName",
													"src": "2325:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "2361:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "2356:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2356:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "2411:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "2378:36:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"typeName": {
													"id": 1581,
													"keyType": {
														"id": 1579,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2386:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "2378:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
														"typeString": "mapping(address => bool)"
													},
													"valueType": {
														"id": 1580,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "2397:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2314:107:8"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:8"
									},
									"scope": 1903,
									"src": "2295:241:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										426
									],
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "2660:349:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1617,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2675:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2675:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1619,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2689:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2689:7:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2675:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1655,
													"nodeType": "Block",
													"src": "2764:216:8",
													"statements": [
														{
															"assignments": [
																1631
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1631,
																	"mutability": "mutable",
																	"name": "burnAmt",
																	"nameLocation": "2787:7:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1655,
																	"src": "2779:15:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1630,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2779:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1635,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1633,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "2815:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1632,
																	"name": "_calculateBurnAmt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "2797:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2797:25:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2779:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1637,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2852:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2852:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1639,
																		"name": "burnAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "2864:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1636,
																	"name": "_burnAndUpdate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "2837:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2837:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1641,
															"nodeType": "ExpressionStatement",
															"src": "2837:35:8"
														},
														{
															"assignments": [
																1643
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1643,
																	"mutability": "mutable",
																	"name": "newAmt",
																	"nameLocation": "2895:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1655,
																	"src": "2887:14:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1642,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2887:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1647,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1644,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "2904:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1645,
																	"name": "burnAmt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "2913:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2904:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2887:33:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1651,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1609,
																		"src": "2950:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1652,
																		"name": "newAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "2961:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1648,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2935:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1903_$",
																			"typeString": "type(contract super DeAnt3Token)"
																		}
																	},
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 426,
																	"src": "2935:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2935:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1654,
															"nodeType": "ExpressionStatement",
															"src": "2935:33:8"
														}
													]
												},
												"id": 1656,
												"nodeType": "IfStatement",
												"src": "2671:309:8",
												"trueBody": {
													"id": 1629,
													"nodeType": "Block",
													"src": "2698:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1625,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1609,
																		"src": "2728:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1626,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "2739:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1622,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2713:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1903_$",
																			"typeString": "type(contract super DeAnt3Token)"
																		}
																	},
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 426,
																	"src": "2713:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2713:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1628,
															"nodeType": "ExpressionStatement",
															"src": "2713:33:8"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2997:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1616,
												"id": 1658,
												"nodeType": "Return",
												"src": "2990:11:8"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2553:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1613,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2622:8:8"
									},
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2570:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "2562:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2562:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2589:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "2581:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2561:35:8"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "2649:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2649:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2648:6:8"
									},
									"scope": 1903,
									"src": "2544:465:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										502
									],
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "3154:169:8",
										"statements": [
											{
												"assignments": [
													1673
												],
												"declarations": [
													{
														"constant": false,
														"id": 1673,
														"mutability": "mutable",
														"name": "newAmt",
														"nameLocation": "3173:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1693,
														"src": "3165:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3165:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1677,
												"initialValue": {
													"arguments": [
														{
															"id": 1675,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "3200:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1674,
														"name": "_calculateBurnAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "3182:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3182:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3165:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1679,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "3233:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1680,
															"name": "newAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "3239:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1678,
														"name": "_burnAndUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "3218:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3218:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "3218:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1686,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "3276:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1687,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3282:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1688,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "3286:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1683,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3257:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1903_$",
																"typeString": "type(contract super DeAnt3Token)"
															}
														},
														"id": 1685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 502,
														"src": "3257:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3257:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "3257:36:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3311:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1671,
												"id": 1692,
												"nodeType": "Return",
												"src": "3304:11:8"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3026:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1668,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3130:8:8"
									},
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3057:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "3049:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3049:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3080:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "3072:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3072:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3101:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "3093:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3038:76:8"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "3148:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3148:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3147:6:8"
									},
									"scope": 1903,
									"src": "3017:306:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "3405:86:8",
										"statements": [
											{
												"assignments": [
													1702
												],
												"declarations": [
													{
														"constant": false,
														"id": 1702,
														"mutability": "mutable",
														"name": "burnAmt",
														"nameLocation": "3424:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "3416:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3416:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1709,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1703,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1696,
																	"src": "3435:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1704,
																	"name": "_taxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "3444:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3435:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1706,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3434:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3455:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3434:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3416:42:8"
											},
											{
												"expression": {
													"id": 1710,
													"name": "burnAmt",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1702,
													"src": "3476:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1700,
												"id": 1711,
												"nodeType": "Return",
												"src": "3469:14:8"
											}
										]
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateBurnAmt",
									"nameLocation": "3340:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3366:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "3358:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3358:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3357:16:8"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "3396:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3396:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3395:9:8"
									},
									"scope": 1903,
									"src": "3331:160:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "3564:157:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1721,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "3581:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1722,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "3590:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1720,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "3575:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3575:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "3575:22:8"
											},
											{
												"expression": {
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1725,
														"name": "totalBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "3608:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1726,
															"name": "totalBurned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "3622:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1727,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "3636:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3622:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3608:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "3608:34:8"
											},
											{
												"expression": {
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1731,
															"name": "userTotalBurned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "3653:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1733,
														"indexExpression": {
															"id": 1732,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "3669:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3653:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1734,
																"name": "userTotalBurned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "3680:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1736,
															"indexExpression": {
																"id": 1735,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "3696:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3680:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1737,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "3707:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3680:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3653:60:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1740,
												"nodeType": "ExpressionStatement",
												"src": "3653:60:8"
											}
										]
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnAndUpdate",
									"nameLocation": "3508:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3531:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "3523:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3548:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "3540:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3540:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:33:8"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3564:0:8"
									},
									"scope": 1903,
									"src": "3499:222:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1901,
										"nodeType": "Block",
										"src": "3971:1161:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1763,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "3990:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1764,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4002:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4002:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3990:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578706972656420646561646c696e65",
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4019:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d",
																"typeString": "literal_string \"Expired deadline\""
															},
															"value": "Expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d",
																"typeString": "literal_string \"Expired deadline\""
															}
														],
														"id": 1762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3982:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3982:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1769,
												"nodeType": "ExpressionStatement",
												"src": "3982:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4057:25:8",
															"subExpression": {
																"baseExpression": {
																	"id": 1771,
																	"name": "uniqueIdExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "4058:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1773,
																"indexExpression": {
																	"id": 1772,
																	"name": "uniqueId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "4073:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4058:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e6971756520696420657869737473",
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4084:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b",
																"typeString": "literal_string \"Unique id exists\""
															},
															"value": "Unique id exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b",
																"typeString": "literal_string \"Unique id exists\""
															}
														],
														"id": 1770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4049:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1777,
												"nodeType": "ExpressionStatement",
												"src": "4049:54:8"
											},
											{
												"assignments": [
													1779
												],
												"declarations": [
													{
														"constant": false,
														"id": 1779,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4124:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "4116:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1778,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4116:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1782,
												"initialValue": {
													"expression": {
														"id": 1780,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4134:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4134:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4116:28:8"
											},
											{
												"assignments": [
													1784
												],
												"declarations": [
													{
														"constant": false,
														"id": 1784,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4163:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "4155:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1783,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4155:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1788,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1785,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4171:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1903_$",
																"typeString": "type(contract super DeAnt3Token)"
															}
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "4171:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4171:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4155:29:8"
											},
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "permitTxHash",
														"nameLocation": "4205:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "4197:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1789,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4197:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1810,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30783139",
																			"id": 1796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4286:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_25_by_1",
																				"typeString": "int_const 25"
																			},
																			"value": "0x19"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_25_by_1",
																				"typeString": "int_const 25"
																			}
																		],
																		"id": 1795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4279:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1794,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "4279:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4279:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4317:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4310:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1798,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "4310:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4310:9:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																{
																	"id": 1802,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "4338:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1803,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "4362:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1804,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "4388:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"id": 1805,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "4416:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1806,
																	"name": "uniqueId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "4441:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1807,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1750,
																	"src": "4468:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	{
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1792,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4244:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4244:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4244:247:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1791,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4220:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4220:282:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4197:305:8"
											},
											{
												"assignments": [
													1812
												],
												"declarations": [
													{
														"constant": false,
														"id": 1812,
														"mutability": "mutable",
														"name": "lastAddr",
														"nameLocation": "4523:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "4515:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1811,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4515:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1817,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4542:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4534:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1813,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4534:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4534:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4515:29:8"
											},
											{
												"assignments": [
													1819
												],
												"declarations": [
													{
														"constant": false,
														"id": 1819,
														"mutability": "mutable",
														"name": "verifiedSigners",
														"nameLocation": "4561:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "4555:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1818,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4555:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1821,
												"initialValue": {
													"hexValue": "30",
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4579:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4555:25:8"
											},
											{
												"body": {
													"id": 1863,
													"nodeType": "Block",
													"src": "4629:224:8",
													"statements": [
														{
															"assignments": [
																1834
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1834,
																	"mutability": "mutable",
																	"name": "recovered",
																	"nameLocation": "4652:9:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1863,
																	"src": "4644:17:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1833,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4644:7:8",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1847,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1836,
																		"name": "permitTxHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "4674:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1837,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1753,
																			"src": "4688:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																				"typeString": "uint8[] memory"
																			}
																		},
																		"id": 1839,
																		"indexExpression": {
																			"id": 1838,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "4690:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4688:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1840,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "4694:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1842,
																		"indexExpression": {
																			"id": 1841,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "4696:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4694:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1843,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1759,
																			"src": "4700:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1845,
																		"indexExpression": {
																			"id": 1844,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "4702:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4700:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1835,
																	"name": "ecrecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967290,
																	"src": "4664:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																	}
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4664:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4644:61:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1848,
																		"name": "recovered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "4724:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1849,
																		"name": "lastAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "4736:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "4724:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1851,
																		"name": "_mapSigners",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1397,
																		"src": "4748:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1853,
																	"indexExpression": {
																		"id": 1852,
																		"name": "recovered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "4760:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4748:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4724:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1858,
															"nodeType": "IfStatement",
															"src": "4720:86:8",
															"trueBody": {
																"expression": {
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4789:17:8",
																	"subExpression": {
																		"id": 1855,
																		"name": "verifiedSigners",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1819,
																		"src": "4789:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 1857,
																"nodeType": "ExpressionStatement",
																"src": "4789:17:8"
															}
														},
														{
															"expression": {
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1859,
																	"name": "lastAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1812,
																	"src": "4821:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1860,
																	"name": "recovered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "4832:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4821:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1862,
															"nodeType": "ExpressionStatement",
															"src": "4821:20:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1826,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "4610:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1827,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "4614:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																"typeString": "uint8[] memory"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4614:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4610:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1864,
												"initializationExpression": {
													"assignments": [
														1823
													],
													"declarations": [
														{
															"constant": false,
															"id": 1823,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4603:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1864,
															"src": "4596:8:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"typeName": {
																"id": 1822,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "4596:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1825,
													"initialValue": {
														"hexValue": "30",
														"id": 1824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4607:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4596:12:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4624:3:8",
														"subExpression": {
															"id": 1830,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "4624:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1832,
													"nodeType": "ExpressionStatement",
													"src": "4624:3:8"
												},
												"nodeType": "ForStatement",
												"src": "4591:262:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1866,
																"name": "verifiedSigners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "4873:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "32",
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4892:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4873:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207369676e657273",
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4895:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67",
																"typeString": "literal_string \"Invalid signers\""
															},
															"value": "Invalid signers"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67",
																"typeString": "literal_string \"Invalid signers\""
															}
														],
														"id": 1865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4865:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4865:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1871,
												"nodeType": "ExpressionStatement",
												"src": "4865:48:8"
											},
											{
												"expression": {
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1872,
															"name": "uniqueIdExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "4924:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1874,
														"indexExpression": {
															"id": 1873,
															"name": "uniqueId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "4939:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4924:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4951:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4924:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "4924:31:8"
											},
											{
												"assignments": [
													1879,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4974:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "4969:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1878,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4969:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1888,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5030:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1880,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "4987:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4987:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1882,
																	"name": "_rewardAmt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "5009:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1883,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "5022:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5009:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4987:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4987:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4968:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1890,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "5052:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e64204d656368",
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5061:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf",
																"typeString": "literal_string \"Failed to send Mech\""
															},
															"value": "Failed to send Mech"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf",
																"typeString": "literal_string \"Failed to send Mech\""
															}
														],
														"id": 1889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5044:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5044:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1893,
												"nodeType": "ExpressionStatement",
												"src": "5044:39:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1897,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "5106:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1898,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "5117:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1894,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5094:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1903_$",
																"typeString": "type(contract super DeAnt3Token)"
															}
														},
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1052,
														"src": "5094:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5094:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "5094:30:8"
											}
										]
									},
									"functionSelector": "e4c97e6a",
									"id": 1902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permitMint",
									"nameLocation": "3738:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3775:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3759:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3759:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "uniqueId",
												"nameLocation": "3803:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3795:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3795:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3830:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3822:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3855:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3847:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3847:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3889:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3874:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 1751,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "3874:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1752,
													"nodeType": "ArrayTypeName",
													"src": "3874:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3918:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3901:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1754,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3901:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1755,
													"nodeType": "ArrayTypeName",
													"src": "3901:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3947:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3930:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1757,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3930:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1758,
													"nodeType": "ArrayTypeName",
													"src": "3930:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:207:8"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3971:0:8"
									},
									"scope": 1903,
									"src": "3729:1403:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1904,
							"src": "243:5370:8",
							"usedErrors": []
						}
					],
					"src": "33:5582:8"
				},
				"id": 8
			}
		}
	}
}