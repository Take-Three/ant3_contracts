{
	"id": "057504784238c0492beaab3577d11d7b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.12",
	"solcLongVersion": "0.8.12+commit.f00d7308",
	"input": {
		"language": "Solidity",
		"sources": {
			"DeAnt3Token_flat.sol": {
				"content": "\n// File: token/interfaces/IDeAnt3.sol\n\n\npragma solidity ^0.8.7;\n\ninterface IDeAnt3 {\n    function nodeControllerBurn(address account, uint256 amount) external;\n}\n\n// File: @openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n\n// File: @openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n\n// File: @openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n\n// File: @openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\n// File: @openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n\n// File: @openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/ERC20Capped.sol)\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n *\n * @custom:storage-size 51\n */\nabstract contract ERC20CappedUpgradeable is Initializable, ERC20Upgradeable {\n    uint256 private _cap;\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    function __ERC20Capped_init(uint256 cap_) internal onlyInitializing {\n        __ERC20Capped_init_unchained(cap_);\n    }\n\n    function __ERC20Capped_init_unchained(uint256 cap_) internal onlyInitializing {\n        require(cap_ > 0, \"ERC20Capped: cap is 0\");\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {ERC20-_mint}.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\");\n        super._mint(account, amount);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n\n// File: token/DeAnt3Token.sol\n\n\npragma solidity ^0.8.7;\n\n\n\n\ncontract DeAnt3Token is ERC20CappedUpgradeable, OwnableUpgradeable, IDeAnt3 {\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n    uint256 private _rewardAmt;\n    uint256 private _cap;\n    uint256 private _taxFee;\n    uint256 public totalBurned;\n    address[] private _signers;\n    mapping(address => bool) public _mapSigners;\n    mapping(uint256 => bool) public uniqueIdExists;\n    mapping(address => uint256) public userTotalBurned;\n\n    address nodeControllerContract;\n\n    modifier onlyController() {\n        require(\n            msg.sender == nodeControllerContract,\n            \"Only callable from nodeControllerContract\"\n        );\n        _;\n    }\n\n    function initialize(\n        string memory _NAME,\n        string memory _SYMBOL,\n        uint8 _DECIMALS,\n        uint256 cap,\n        uint256 initialBalance,\n        uint256 taxFee\n    ) public initializer {\n        __Ownable_init();\n        __ERC20_init(_NAME, _SYMBOL);\n        __ERC20Capped_init(cap * 10**_DECIMALS);\n        _name = _NAME;\n        _symbol = _SYMBOL;\n        _decimals = _DECIMALS;\n        _rewardAmt = 0.1 ether;\n        _cap = cap;\n        _taxFee = taxFee;\n        _mint(address(this), initialBalance);\n    }\n\n    receive() external payable {}\n\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n\n    function getRewardAmt() public view returns (uint256) {\n        return _rewardAmt;\n    }\n\n    function setRewardAmtInWei(uint256 _newAmt) external onlyOwner {\n        _rewardAmt = _newAmt;\n    }\n\n    function getTaxFee() public view returns (uint256) {\n        return _taxFee;\n    }\n\n    function setTaxFee(uint256 _newTaxFee) external onlyOwner {\n        _taxFee = _newTaxFee;\n    }\n\n    function getSigners() external view returns (address[] memory) {\n        return _signers;\n    }\n\n    function setSigners(address[] memory signers_) external virtual onlyOwner {\n        _updateMap(_signers, false, _mapSigners);\n        delete _signers;\n        _signers = signers_;\n        _updateMap(signers_, true, _mapSigners);\n    }\n\n    function mapSigner(address signer) external view returns (bool) {\n        return _mapSigners[signer];\n    }\n\n    function _updateMap(\n        address[] memory arr,\n        bool status,\n        mapping(address => bool) storage map\n    ) internal {\n        for (uint64 i = 0; i < arr.length; i++) {\n            map[arr[i]] = status;\n        }\n    }\n\n    function transfer(address recipient, uint256 amount)\n        public\n        override\n        returns (bool)\n    {\n        if (msg.sender == owner()) {\n            super.transfer(recipient, amount);\n        } else {\n            uint256 burnAmt = _calculateBurnAmt(amount);\n            _burnAndUpdate(msg.sender, burnAmt);\n            uint256 newAmt = amount - burnAmt;\n            super.transfer(recipient, newAmt);\n        }\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        uint256 burnAmt = _calculateBurnAmt(amount);\n        _burnAndUpdate(from, burnAmt);\n        uint256 newAmt = amount - burnAmt;\n        super.transferFrom(from, to, newAmt);\n        return true;\n    }\n\n    function _calculateBurnAmt(uint256 amount) private view returns (uint256) {\n        uint256 burnAmt = (amount * _taxFee) / 100;\n        return burnAmt;\n    }\n\n    function _burnAndUpdate(address account, uint256 amount) private {\n        _burn(account, amount);\n        totalBurned = totalBurned + amount;\n        userTotalBurned[account] = userTotalBurned[account] + amount;\n    }\n\n    function setNodeControllerContract(address _contractAddress)\n        external\n        onlyOwner\n    {\n        nodeControllerContract = _contractAddress;\n    }\n\n    function nodeControllerBurn(address account, uint256 amount)\n        public\n        onlyController\n    {\n        _burnAndUpdate(account, amount);\n    }\n\n    function permitMint(\n        address payable recipient,\n        uint256 uniqueId,\n        uint256 amount,\n        uint256 deadline,\n        uint8[] memory v,\n        bytes32[] memory r,\n        bytes32[] memory s\n    ) public virtual {\n        require(deadline >= block.timestamp, \"Expired deadline\");\n        require(!uniqueIdExists[uniqueId], \"Unique id exists\");\n\n        address spender = msg.sender;\n        address owner = super.owner();\n\n        bytes32 permitTxHash = keccak256(\n            abi.encodePacked(\n                bytes1(0x19),\n                bytes1(0),\n                owner,\n                spender,\n                recipient,\n                amount,\n                uniqueId,\n                deadline\n            )\n        );\n\n        address lastAddr = address(0);\n        uint8 verifiedSigners = 0;\n        for (uint64 i = 0; i < v.length; i++) {\n            address recovered = ecrecover(permitTxHash, v[i], r[i], s[i]);\n            if (recovered > lastAddr && _mapSigners[recovered])\n                verifiedSigners++;\n            lastAddr = recovered;\n        }\n        require(verifiedSigners == _signers.length, \"Invalid signers\");\n        uniqueIdExists[uniqueId] = true;\n\n        (bool success, ) = recipient.call{value: _rewardAmt}(\"\");\n        require(success, \"Failed to send Mech\");\n        super._mint(recipient, amount);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"DeAnt3Token_flat.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DeAnt3Token_flat.sol\":402:8489  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"DeAnt3Token_flat.sol\":402:8489  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201afc9a9063763d2e949f7dffafcf9591484b2bc7ab991283df2e47d126f2955c64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201afc9a9063763d2e949f7dffafcf9591484b2bc7ab991283df2e47d126f2955c64736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xFC SWAP11 SWAP1 PUSH4 0x763D2E94 SWAP16 PUSH30 0xFFAFCF9591484B2BC7AB991283DF2E47D126F2955C64736F6C634300080C STOP CALLER ",
							"sourceMap": "402:8087:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;402:8087:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201afc9a9063763d2e949f7dffafcf9591484b2bc7ab991283df2e47d126f2955c64736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xFC SWAP11 SWAP1 PUSH4 0x763D2E94 SWAP16 PUSH30 0xFFAFCF9591484B2BC7AB991283DF2E47D126F2955C64736F6C634300080C STOP CALLER ",
							"sourceMap": "402:8087:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 402,
									"end": 8489,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 402,
									"end": 8489,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201afc9a9063763d2e949f7dffafcf9591484b2bc7ab991283df2e47d126f2955c64736f6c634300080c0033",
									".code": [
										{
											"begin": 402,
											"end": 8489,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 402,
											"end": 8489,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 402,
											"end": 8489,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 402,
											"end": 8489,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 402,
											"end": 8489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 8489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 402,
											"end": 8489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 8489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 8489,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DeAnt3Token_flat.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DeAnt3Token_flat.sol\":{\"keccak256\":\"0x41414b265c0e7d535f9e85b03f38beabcfcb262d94d9dc9e148844d9bb1fa10c\",\"urls\":[\"bzz-raw://40373f60f94c46bac577ed29841a36ecdc28ea8e794fd17653ce68069a35ebe4\",\"dweb:/ipfs/QmXrHruRFEyPiwPaM5weES4G43xEqrXT5WsCBb27HgzX3p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DeAnt3Token_flat.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DeAnt3Token_flat.sol\":{\"keccak256\":\"0x41414b265c0e7d535f9e85b03f38beabcfcb262d94d9dc9e148844d9bb1fa10c\",\"urls\":[\"bzz-raw://40373f60f94c46bac577ed29841a36ecdc28ea8e794fd17653ce68069a35ebe4\",\"dweb:/ipfs/QmXrHruRFEyPiwPaM5weES4G43xEqrXT5WsCBb27HgzX3p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 297,
								"contract": "DeAnt3Token_flat.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 300,
								"contract": "DeAnt3Token_flat.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 498,
								"contract": "DeAnt3Token_flat.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DeAnt3Token": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_mapSigners",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardAmt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSigners",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTaxFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_NAME",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_SYMBOL",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "_DECIMALS",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "initialBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "taxFee",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "mapSigner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "nodeControllerBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "uniqueId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8[]",
									"name": "v",
									"type": "uint8[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "r",
									"type": "bytes32[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "s",
									"type": "bytes32[]"
								}
							],
							"name": "permitMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractAddress",
									"type": "address"
								}
							],
							"name": "setNodeControllerContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newAmt",
									"type": "uint256"
								}
							],
							"name": "setRewardAmtInWei",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "signers_",
									"type": "address[]"
								}
							],
							"name": "setSigners",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newTaxFee",
									"type": "uint256"
								}
							],
							"name": "setTaxFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uniqueIdExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userTotalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DeAnt3Token_flat.sol\":38295:43628  contract DeAnt3Token is ERC20CappedUpgradeable, OwnableUpgradeable, IDeAnt3 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DeAnt3Token_flat.sol\":38295:43628  contract DeAnt3Token is ERC20CappedUpgradeable, OwnableUpgradeable, IDeAnt3 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xb24a0893\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe4c97e6a\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xe4c97e6a\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf66608fe\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf9342285\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xb24a0893\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc4081a4c\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd89135cd\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xa3772662\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xa3772662\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xac7fa3c6\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x94cf795e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x2b9a1d3c\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x3de47e32\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x3de47e32\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4cdbab5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x2b9a1d3c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x18160ddd\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1e0d4ce9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1e71e435\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x07c351dd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DeAnt3Token_flat.sol\":25528:25626  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DeAnt3Token_flat.sol\":40397:40504  function mapSigner(address signer) external view returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":40478:40497  _mapSigners[signer] */\n      and\n        /* \"DeAnt3Token_flat.sol\":40455:40459  bool */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":40478:40497  _mapSigners[signer] */\n      swap1\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":40478:40489  _mapSigners */\n      0xd2\n        /* \"DeAnt3Token_flat.sol\":40478:40497  _mapSigners[signer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"DeAnt3Token_flat.sol\":40397:40504  function mapSigner(address signer) external view returns (bool) {... */\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"DeAnt3Token_flat.sol\":40397:40504  function mapSigner(address signer) external view returns (bool) {... */\n      tag_45\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":27805:28002  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_48\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":26616:26722  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n        /* \"DeAnt3Token_flat.sol\":26703:26715  _totalSupply */\n      sload(0x35)\n        /* \"DeAnt3Token_flat.sol\":26616:26722  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_61:\n      mload(0x40)\n        /* \"#utility.yul\":1662:1687   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1650:1652   */\n      0x20\n        /* \"#utility.yul\":1635:1653   */\n      add\n        /* \"DeAnt3Token_flat.sol\":26616:26722  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_45\n        /* \"#utility.yul\":1516:1693   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":38712:38762  mapping(address => uint256) public userTotalBurned */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_61\n      tag_67\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_67:\n      mstore(0x20, 0xd4)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"DeAnt3Token_flat.sol\":42105:42256  function nodeControllerBurn(address account, uint256 amount)... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"DeAnt3Token_flat.sol\":41206:41548  function transferFrom(... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_48\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":38990:39522  function initialize(... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_71\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":39563:39661  function decimals() public view virtual override returns (uint8) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n        /* \"DeAnt3Token_flat.sol\":39645:39654  _decimals */\n      sload(0xcc)\n        /* \"DeAnt3Token_flat.sol\":39563:39661  function decimals() public view virtual override returns (uint8) {... */\n      mload(0x40)\n        /* \"DeAnt3Token_flat.sol\":39645:39654  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4235:4271   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4223:4225   */\n      0x20\n        /* \"#utility.yul\":4208:4226   */\n      add\n        /* \"DeAnt3Token_flat.sol\":39563:39661  function decimals() public view virtual override returns (uint8) {... */\n      tag_45\n        /* \"#utility.yul\":4093:4277   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":37590:37671  function cap() public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n        /* \"DeAnt3Token_flat.sol\":37660:37664  _cap */\n      sload(0x65)\n        /* \"DeAnt3Token_flat.sol\":37590:37671  function cap() public view virtual returns (uint256) {... */\n      jump(tag_61)\n        /* \"DeAnt3Token_flat.sol\":29245:29479  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_48\n      tag_96\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":38611:38654  mapping(address => bool) public _mapSigners */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_48\n      tag_101\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_101:\n      mstore(0x20, 0xd2)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"DeAnt3Token_flat.sol\":41941:42099  function setNodeControllerContract(address _contractAddress)... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_71\n      tag_106\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":26780:26905  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_61\n      tag_110\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":26880:26898  _balances[account] */\n      and\n        /* \"DeAnt3Token_flat.sol\":26854:26861  uint256 */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":26880:26898  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":26880:26889  _balances */\n      0x33\n        /* \"DeAnt3Token_flat.sol\":26880:26898  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"DeAnt3Token_flat.sol\":26780:26905  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"DeAnt3Token_flat.sol\":18502:18603  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_71\n      tag_115\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":17872:17957  function owner() public view virtual returns (address) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n        /* \"DeAnt3Token_flat.sol\":17944:17950  _owner */\n      sload(0x98)\n        /* \"DeAnt3Token_flat.sol\":17872:17957  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":17944:17950  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4428:4479   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4416:4418   */\n      0x20\n        /* \"#utility.yul\":4401:4419   */\n      add\n        /* \"DeAnt3Token_flat.sol\":17872:17957  function owner() public view virtual returns (address) {... */\n      tag_45\n        /* \"#utility.yul\":4282:4485   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":40056:40151  function getSigners() external view returns (address[] memory) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":25739:25841  function symbol() public view virtual override returns (string memory) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_43\n      tag_128\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":40157:40391  function setSigners(address[] memory signers_) external virtual onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_71\n      tag_132\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_132:\n      tag_134\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":29966:30393  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_48\n      tag_137\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":40749:41200  function transfer(address recipient, uint256 amount)... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_48\n      tag_142\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":39667:39755  function getRewardAmt() public view returns (uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n        /* \"DeAnt3Token_flat.sol\":39738:39748  _rewardAmt */\n      sload(0xcd)\n        /* \"DeAnt3Token_flat.sol\":39667:39755  function getRewardAmt() public view returns (uint256) {... */\n      jump(tag_61)\n        /* \"DeAnt3Token_flat.sol\":39761:39861  function setRewardAmtInWei(uint256 _newAmt) external onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_71\n      tag_151\n      calldatasize\n      0x04\n      tag_152\n      jump\t// in\n    tag_151:\n      tag_153\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":39955:40050  function setTaxFee(uint256 _newTaxFee) external onlyOwner {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_71\n      tag_156\n      calldatasize\n      0x04\n      tag_152\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":38547:38573  uint256 public totalBurned */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_61\n      sload(0xd0)\n      dup2\n      jump\n        /* \"DeAnt3Token_flat.sol\":27348:27497  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      tag_61\n      tag_164\n      calldatasize\n      0x04\n      tag_165\n      jump\t// in\n    tag_164:\n      tag_166\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":42262:43626  function permitMint(... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      tag_71\n      tag_170\n      calldatasize\n      0x04\n      tag_171\n      jump\t// in\n    tag_170:\n      tag_172\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":18752:18950  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      tag_71\n      tag_175\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_175:\n      tag_176\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":39867:39949  function getTaxFee() public view returns (uint256) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n        /* \"DeAnt3Token_flat.sol\":39935:39942  _taxFee */\n      sload(0xcf)\n        /* \"DeAnt3Token_flat.sol\":39867:39949  function getTaxFee() public view returns (uint256) {... */\n      jump(tag_61)\n        /* \"DeAnt3Token_flat.sol\":38660:38706  mapping(uint256 => bool) public uniqueIdExists */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      tag_48\n      tag_183\n      calldatasize\n      0x04\n      tag_152\n      jump\t// in\n    tag_183:\n      mstore(0x20, 0xd3)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"DeAnt3Token_flat.sol\":25528:25626  function name() public view virtual override returns (string memory) {... */\n    tag_44:\n        /* \"DeAnt3Token_flat.sol\":25582:25595  string memory */\n      0x60\n        /* \"DeAnt3Token_flat.sol\":25614:25619  _name */\n      0x36\n        /* \"DeAnt3Token_flat.sol\":25607:25619  return _name */\n      dup1\n      sload\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_189\n      swap1\n      tag_188\n      jump\t// in\n    tag_189:\n      dup1\n      iszero\n      tag_190\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_191\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_190)\n    tag_191:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_192:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_192\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DeAnt3Token_flat.sol\":25528:25626  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":27805:28002  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_58:\n        /* \"DeAnt3Token_flat.sol\":27888:27892  bool */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":27942:27974  _approve(owner, spender, amount) */\n      tag_197\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":27958:27965  spender */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":27967:27973  amount */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":27942:27950  _approve */\n      tag_198\n        /* \"DeAnt3Token_flat.sol\":27942:27974  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_197:\n        /* \"DeAnt3Token_flat.sol\":27991:27995  true */\n      0x01\n        /* \"DeAnt3Token_flat.sol\":27984:27995  return true */\n      swap2\n      pop\n      pop\n        /* \"DeAnt3Token_flat.sol\":27805:28002  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_194:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":42105:42256  function nodeControllerBurn(address account, uint256 amount)... */\n    tag_73:\n        /* \"DeAnt3Token_flat.sol\":38877:38899  nodeControllerContract */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xd5))\n        /* \"DeAnt3Token_flat.sol\":38863:38873  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":38863:38899  msg.sender == nodeControllerContract */\n      eq\n        /* \"DeAnt3Token_flat.sol\":38842:38966  require(... */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9866:9868   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":38842:38966  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9848:9869   */\n      mstore\n        /* \"#utility.yul\":9905:9907   */\n      0x29\n        /* \"#utility.yul\":9885:9903   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9878:9908   */\n      mstore\n        /* \"#utility.yul\":9944:9978   */\n      0x4f6e6c792063616c6c61626c652066726f6d206e6f6465436f6e74726f6c6c65\n        /* \"#utility.yul\":9924:9942   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9917:9979   */\n      mstore\n      shl(0xba, 0x1c90dbdb9d1c9858dd)\n        /* \"#utility.yul\":9995:10013   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9988:10027   */\n      mstore\n        /* \"#utility.yul\":10044:10063   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":38842:38966  require(... */\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"DeAnt3Token_flat.sol\":42218:42249  _burnAndUpdate(account, amount) */\n      tag_205\n        /* \"DeAnt3Token_flat.sol\":42233:42240  account */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":42242:42248  amount */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":42218:42232  _burnAndUpdate */\n      tag_206\n        /* \"DeAnt3Token_flat.sol\":42218:42249  _burnAndUpdate(account, amount) */\n      jump\t// in\n    tag_205:\n        /* \"DeAnt3Token_flat.sol\":42105:42256  function nodeControllerBurn(address account, uint256 amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":41206:41548  function transferFrom(... */\n    tag_78:\n        /* \"DeAnt3Token_flat.sol\":41333:41337  bool */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":41349:41364  uint256 burnAmt */\n      dup1\n        /* \"DeAnt3Token_flat.sol\":41367:41392  _calculateBurnAmt(amount) */\n      tag_208\n        /* \"DeAnt3Token_flat.sol\":41385:41391  amount */\n      dup4\n        /* \"DeAnt3Token_flat.sol\":41367:41384  _calculateBurnAmt */\n      tag_209\n        /* \"DeAnt3Token_flat.sol\":41367:41392  _calculateBurnAmt(amount) */\n      jump\t// in\n    tag_208:\n        /* \"DeAnt3Token_flat.sol\":41349:41392  uint256 burnAmt = _calculateBurnAmt(amount) */\n      swap1\n      pop\n        /* \"DeAnt3Token_flat.sol\":41402:41431  _burnAndUpdate(from, burnAmt) */\n      tag_210\n        /* \"DeAnt3Token_flat.sol\":41417:41421  from */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":41423:41430  burnAmt */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":41402:41416  _burnAndUpdate */\n      tag_206\n        /* \"DeAnt3Token_flat.sol\":41402:41431  _burnAndUpdate(from, burnAmt) */\n      jump\t// in\n    tag_210:\n        /* \"DeAnt3Token_flat.sol\":41441:41455  uint256 newAmt */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":41458:41474  amount - burnAmt */\n      tag_211\n        /* \"DeAnt3Token_flat.sol\":41467:41474  burnAmt */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":41458:41464  amount */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":41458:41474  amount - burnAmt */\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"DeAnt3Token_flat.sol\":41441:41474  uint256 newAmt = amount - burnAmt */\n      swap1\n      pop\n        /* \"DeAnt3Token_flat.sol\":41484:41520  super.transferFrom(from, to, newAmt) */\n      tag_213\n        /* \"DeAnt3Token_flat.sol\":41503:41507  from */\n      dup7\n        /* \"DeAnt3Token_flat.sol\":41509:41511  to */\n      dup7\n        /* \"DeAnt3Token_flat.sol\":41513:41519  newAmt */\n      dup4\n        /* \"DeAnt3Token_flat.sol\":41484:41502  super.transferFrom */\n      tag_214\n        /* \"DeAnt3Token_flat.sol\":41484:41520  super.transferFrom(from, to, newAmt) */\n      jump\t// in\n    tag_213:\n      pop\n        /* \"DeAnt3Token_flat.sol\":41537:41541  true */\n      0x01\n      swap7\n        /* \"DeAnt3Token_flat.sol\":41206:41548  function transferFrom(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":38990:39522  function initialize(... */\n    tag_84:\n        /* \"DeAnt3Token_flat.sol\":11759:11778  bool isTopLevelCall */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":11782:11795  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"DeAnt3Token_flat.sol\":11781:11795  !_initializing */\n      iszero\n      dup1\n        /* \"DeAnt3Token_flat.sol\":11827:11861  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_216\n      jumpi\n      pop\n        /* \"DeAnt3Token_flat.sol\":11845:11857  _initialized */\n      sload(0x00)\n        /* \"DeAnt3Token_flat.sol\":11860:11861  1 */\n      0x01\n        /* \"DeAnt3Token_flat.sol\":11845:11857  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"DeAnt3Token_flat.sol\":11845:11861  _initialized < 1 */\n      lt\n        /* \"DeAnt3Token_flat.sol\":11827:11861  isTopLevelCall && _initialized < 1 */\n    tag_216:\n        /* \"DeAnt3Token_flat.sol\":11826:11934  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_220\n      jumpi\n      pop\n        /* \"DeAnt3Token_flat.sol\":11906:11910  this */\n      address\n        /* \"DeAnt3Token_flat.sol\":1684:1703  account.code.length */\n      extcodesize\n        /* \"DeAnt3Token_flat.sol\":1684:1707  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"DeAnt3Token_flat.sol\":11867:11933  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_220\n      jumpi\n      pop\n        /* \"DeAnt3Token_flat.sol\":11916:11928  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"DeAnt3Token_flat.sol\":11916:11933  _initialized == 1 */\n      eq\n        /* \"DeAnt3Token_flat.sol\":11867:11933  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_220:\n        /* \"DeAnt3Token_flat.sol\":11805:12006  require(... */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10538:10540   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":11805:12006  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10520:10541   */\n      mstore\n        /* \"#utility.yul\":10577:10579   */\n      0x2e\n        /* \"#utility.yul\":10557:10575   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10550:10580   */\n      mstore\n        /* \"#utility.yul\":10616:10650   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":10596:10614   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10589:10651   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":10667:10685   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10660:10704   */\n      mstore\n        /* \"#utility.yul\":10721:10740   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":11805:12006  require(... */\n      tag_202\n        /* \"#utility.yul\":10336:10746   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":11805:12006  require(... */\n    tag_221:\n        /* \"DeAnt3Token_flat.sol\":12016:12028  _initialized */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":12016:12032  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"DeAnt3Token_flat.sol\":12031:12032  1 */\n      0x01\n        /* \"DeAnt3Token_flat.sol\":12016:12032  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":12042:12107  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_224\n      jumpi\n        /* \"DeAnt3Token_flat.sol\":12076:12089  _initializing */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":12076:12096  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":12042:12107  if (isTopLevelCall) {... */\n    tag_224:\n        /* \"DeAnt3Token_flat.sol\":39207:39223  __Ownable_init() */\n      tag_226\n        /* \"DeAnt3Token_flat.sol\":39207:39221  __Ownable_init */\n      tag_227\n        /* \"DeAnt3Token_flat.sol\":39207:39223  __Ownable_init() */\n      jump\t// in\n    tag_226:\n        /* \"DeAnt3Token_flat.sol\":39233:39261  __ERC20_init(_NAME, _SYMBOL) */\n      tag_228\n        /* \"DeAnt3Token_flat.sol\":39246:39251  _NAME */\n      dup8\n        /* \"DeAnt3Token_flat.sol\":39253:39260  _SYMBOL */\n      dup8\n        /* \"DeAnt3Token_flat.sol\":39233:39245  __ERC20_init */\n      tag_229\n        /* \"DeAnt3Token_flat.sol\":39233:39261  __ERC20_init(_NAME, _SYMBOL) */\n      jump\t// in\n    tag_228:\n        /* \"DeAnt3Token_flat.sol\":39271:39310  __ERC20Capped_init(cap * 10**_DECIMALS) */\n      tag_230\n        /* \"DeAnt3Token_flat.sol\":39296:39309  10**_DECIMALS */\n      tag_231\n        /* \"DeAnt3Token_flat.sol\":39300:39309  _DECIMALS */\n      dup7\n        /* \"DeAnt3Token_flat.sol\":39296:39298  10 */\n      0x0a\n        /* \"DeAnt3Token_flat.sol\":39296:39309  10**_DECIMALS */\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"DeAnt3Token_flat.sol\":39290:39309  cap * 10**_DECIMALS */\n      tag_233\n      swap1\n        /* \"DeAnt3Token_flat.sol\":39290:39293  cap */\n      dup7\n        /* \"DeAnt3Token_flat.sol\":39290:39309  cap * 10**_DECIMALS */\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"DeAnt3Token_flat.sol\":39271:39289  __ERC20Capped_init */\n      tag_235\n        /* \"DeAnt3Token_flat.sol\":39271:39310  __ERC20Capped_init(cap * 10**_DECIMALS) */\n      jump\t// in\n    tag_230:\n        /* \"DeAnt3Token_flat.sol\":39320:39333  _name = _NAME */\n      dup7\n      mload\n      tag_236\n      swap1\n        /* \"DeAnt3Token_flat.sol\":39320:39325  _name */\n      0xca\n      swap1\n        /* \"DeAnt3Token_flat.sol\":39320:39333  _name = _NAME */\n      0x20\n      dup11\n      add\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      pop\n        /* \"DeAnt3Token_flat.sol\":39343:39360  _symbol = _SYMBOL */\n      dup6\n      mload\n      tag_238\n      swap1\n        /* \"DeAnt3Token_flat.sol\":39343:39350  _symbol */\n      0xcb\n      swap1\n        /* \"DeAnt3Token_flat.sol\":39343:39360  _symbol = _SYMBOL */\n      0x20\n      dup10\n      add\n      swap1\n      tag_237\n      jump\t// in\n    tag_238:\n      pop\n        /* \"DeAnt3Token_flat.sol\":39370:39379  _decimals */\n      0xcc\n        /* \"DeAnt3Token_flat.sol\":39370:39391  _decimals = _DECIMALS */\n      dup1\n      sload\n      not(0xff)\n      and\n      0xff\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":39414:39423  0.1 ether */\n      0x016345785d8a0000\n        /* \"DeAnt3Token_flat.sol\":39401:39411  _rewardAmt */\n      0xcd\n        /* \"DeAnt3Token_flat.sol\":39401:39423  _rewardAmt = 0.1 ether */\n      sstore\n        /* \"DeAnt3Token_flat.sol\":39433:39437  _cap */\n      0xce\n        /* \"DeAnt3Token_flat.sol\":39433:39443  _cap = cap */\n      dup5\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":39453:39460  _taxFee */\n      0xcf\n        /* \"DeAnt3Token_flat.sol\":39453:39469  _taxFee = taxFee */\n      dup3\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":39479:39515  _mint(address(this), initialBalance) */\n      tag_239\n        /* \"DeAnt3Token_flat.sol\":39493:39497  this */\n      address\n        /* \"DeAnt3Token_flat.sol\":39500:39514  initialBalance */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":39479:39484  _mint */\n      tag_240\n        /* \"DeAnt3Token_flat.sol\":39479:39515  _mint(address(this), initialBalance) */\n      jump\t// in\n    tag_239:\n        /* \"DeAnt3Token_flat.sol\":12131:12145  isTopLevelCall */\n      dup1\n        /* \"DeAnt3Token_flat.sol\":12127:12226  if (isTopLevelCall) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"DeAnt3Token_flat.sol\":12177:12182  false */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":12161:12182  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":12201:12215  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":4235:4271   */\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":12201:12215  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":4223:4225   */\n      0x20\n        /* \"#utility.yul\":4208:4226   */\n      add\n        /* \"DeAnt3Token_flat.sol\":12201:12215  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DeAnt3Token_flat.sol\":12127:12226  if (isTopLevelCall) {... */\n    tag_241:\n        /* \"DeAnt3Token_flat.sol\":11749:12232  {... */\n      pop\n        /* \"DeAnt3Token_flat.sol\":38990:39522  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":29245:29479  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_97:\n        /* \"DeAnt3Token_flat.sol\":29333:29337  bool */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":29387:29451  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_197\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":29403:29410  spender */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":29440:29450  addedValue */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":29412:29437  allowance(owner, spender) */\n      tag_249\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      dup4\n        /* \"DeAnt3Token_flat.sol\":29403:29410  spender */\n      dup4\n        /* \"DeAnt3Token_flat.sol\":29412:29421  allowance */\n      tag_166\n        /* \"DeAnt3Token_flat.sol\":29412:29437  allowance(owner, spender) */\n      jump\t// in\n    tag_249:\n        /* \"DeAnt3Token_flat.sol\":29412:29450  allowance(owner, spender) + addedValue */\n      tag_250\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"DeAnt3Token_flat.sol\":29387:29395  _approve */\n      tag_198\n        /* \"DeAnt3Token_flat.sol\":29387:29451  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":41941:42099  function setNodeControllerContract(address _contractAddress)... */\n    tag_107:\n        /* \"DeAnt3Token_flat.sol\":17765:17778  _checkOwner() */\n      tag_253\n        /* \"DeAnt3Token_flat.sol\":17765:17776  _checkOwner */\n      tag_254\n        /* \"DeAnt3Token_flat.sol\":17765:17778  _checkOwner() */\n      jump\t// in\n    tag_253:\n        /* \"DeAnt3Token_flat.sol\":42051:42073  nodeControllerContract */\n      0xd5\n        /* \"DeAnt3Token_flat.sol\":42051:42092  nodeControllerContract = _contractAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":41941:42099  function setNodeControllerContract(address _contractAddress)... */\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":18502:18603  function renounceOwnership() public virtual onlyOwner {... */\n    tag_115:\n        /* \"DeAnt3Token_flat.sol\":17765:17778  _checkOwner() */\n      tag_258\n        /* \"DeAnt3Token_flat.sol\":17765:17776  _checkOwner */\n      tag_254\n        /* \"DeAnt3Token_flat.sol\":17765:17778  _checkOwner() */\n      jump\t// in\n    tag_258:\n        /* \"DeAnt3Token_flat.sol\":18566:18596  _transferOwnership(address(0)) */\n      tag_260\n        /* \"DeAnt3Token_flat.sol\":18593:18594  0 */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":18566:18584  _transferOwnership */\n      tag_261\n        /* \"DeAnt3Token_flat.sol\":18566:18596  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_260:\n        /* \"DeAnt3Token_flat.sol\":18502:18603  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":40056:40151  function getSigners() external view returns (address[] memory) {... */\n    tag_123:\n        /* \"DeAnt3Token_flat.sol\":40101:40117  address[] memory */\n      0x60\n        /* \"DeAnt3Token_flat.sol\":40136:40144  _signers */\n      0xd1\n        /* \"DeAnt3Token_flat.sol\":40129:40144  return _signers */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_190\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_265:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_265\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DeAnt3Token_flat.sol\":40056:40151  function getSigners() external view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":25739:25841  function symbol() public view virtual override returns (string memory) {... */\n    tag_128:\n        /* \"DeAnt3Token_flat.sol\":25795:25808  string memory */\n      0x60\n        /* \"DeAnt3Token_flat.sol\":25827:25834  _symbol */\n      0x37\n        /* \"DeAnt3Token_flat.sol\":25820:25834  return _symbol */\n      dup1\n      sload\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":40157:40391  function setSigners(address[] memory signers_) external virtual onlyOwner {... */\n    tag_134:\n        /* \"DeAnt3Token_flat.sol\":17765:17778  _checkOwner() */\n      tag_273\n        /* \"DeAnt3Token_flat.sol\":17765:17776  _checkOwner */\n      tag_254\n        /* \"DeAnt3Token_flat.sol\":17765:17778  _checkOwner() */\n      jump\t// in\n    tag_273:\n        /* \"DeAnt3Token_flat.sol\":40241:40281  _updateMap(_signers, false, _mapSigners) */\n      tag_275\n        /* \"DeAnt3Token_flat.sol\":40252:40260  _signers */\n      0xd1\n        /* \"DeAnt3Token_flat.sol\":40241:40281  _updateMap(_signers, false, _mapSigners) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_276\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_277:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_277\n      jumpi\n    tag_276:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DeAnt3Token_flat.sol\":40262:40267  false */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":40269:40280  _mapSigners */\n      0xd2\n        /* \"DeAnt3Token_flat.sol\":40241:40251  _updateMap */\n      tag_278\n        /* \"DeAnt3Token_flat.sol\":40241:40281  _updateMap(_signers, false, _mapSigners) */\n      jump\t// in\n    tag_275:\n        /* \"DeAnt3Token_flat.sol\":40291:40306  delete _signers */\n      tag_279\n        /* \"DeAnt3Token_flat.sol\":40298:40306  _signers */\n      0xd1\n      0x00\n        /* \"DeAnt3Token_flat.sol\":40291:40306  delete _signers */\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"DeAnt3Token_flat.sol\":40316:40335  _signers = signers_ */\n      dup1\n      mload\n      tag_281\n      swap1\n        /* \"DeAnt3Token_flat.sol\":40316:40324  _signers */\n      0xd1\n      swap1\n        /* \"DeAnt3Token_flat.sol\":40316:40335  _signers = signers_ */\n      0x20\n      dup5\n      add\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      pop\n        /* \"DeAnt3Token_flat.sol\":40345:40384  _updateMap(signers_, true, _mapSigners) */\n      tag_283\n        /* \"DeAnt3Token_flat.sol\":40356:40364  signers_ */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":40366:40370  true */\n      0x01\n        /* \"DeAnt3Token_flat.sol\":40372:40383  _mapSigners */\n      0xd2\n        /* \"DeAnt3Token_flat.sol\":40345:40355  _updateMap */\n      tag_278\n        /* \"DeAnt3Token_flat.sol\":40345:40384  _updateMap(signers_, true, _mapSigners) */\n      jump\t// in\n    tag_283:\n        /* \"DeAnt3Token_flat.sol\":40157:40391  function setSigners(address[] memory signers_) external virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":29966:30393  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_138:\n        /* \"DeAnt3Token_flat.sol\":30059:30063  bool */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":30059:30063  bool */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":30140:30165  allowance(owner, spender) */\n      tag_286\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":30157:30164  spender */\n      dup7\n        /* \"DeAnt3Token_flat.sol\":30140:30149  allowance */\n      tag_166\n        /* \"DeAnt3Token_flat.sol\":30140:30165  allowance(owner, spender) */\n      jump\t// in\n    tag_286:\n        /* \"DeAnt3Token_flat.sol\":30113:30165  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"DeAnt3Token_flat.sol\":30203:30218  subtractedValue */\n      dup4\n        /* \"DeAnt3Token_flat.sol\":30183:30199  currentAllowance */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":30183:30218  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"DeAnt3Token_flat.sol\":30175:30260  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12841:12843   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":30175:30260  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12823:12844   */\n      mstore\n        /* \"#utility.yul\":12880:12882   */\n      0x25\n        /* \"#utility.yul\":12860:12878   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12853:12883   */\n      mstore\n        /* \"#utility.yul\":12919:12953   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":12899:12917   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12892:12954   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":12970:12988   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12963:12998   */\n      mstore\n        /* \"#utility.yul\":13015:13034   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":30175:30260  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_202\n        /* \"#utility.yul\":12639:13040   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":30175:30260  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_287:\n        /* \"DeAnt3Token_flat.sol\":30294:30354  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_290\n        /* \"DeAnt3Token_flat.sol\":30303:30308  owner */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":30310:30317  spender */\n      dup7\n        /* \"DeAnt3Token_flat.sol\":30338:30353  subtractedValue */\n      dup7\n        /* \"DeAnt3Token_flat.sol\":30319:30335  currentAllowance */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":30319:30353  currentAllowance - subtractedValue */\n      sub\n        /* \"DeAnt3Token_flat.sol\":30294:30302  _approve */\n      tag_198\n        /* \"DeAnt3Token_flat.sol\":30294:30354  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_290:\n      pop\n        /* \"DeAnt3Token_flat.sol\":30382:30386  true */\n      0x01\n      swap5\n        /* \"DeAnt3Token_flat.sol\":29966:30393  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":40749:41200  function transfer(address recipient, uint256 amount)... */\n    tag_143:\n        /* \"DeAnt3Token_flat.sol\":40851:40855  bool */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":40889:40896  owner() */\n      tag_292\n        /* \"DeAnt3Token_flat.sol\":17944:17950  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x98))\n      swap1\n        /* \"DeAnt3Token_flat.sol\":17872:17957  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"DeAnt3Token_flat.sol\":40889:40896  owner() */\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":40875:40896  msg.sender == owner() */\n      and\n        /* \"DeAnt3Token_flat.sol\":40875:40885  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":40875:40896  msg.sender == owner() */\n      and\n      eq\n        /* \"DeAnt3Token_flat.sol\":40871:41173  if (msg.sender == owner()) {... */\n      iszero\n      tag_293\n      jumpi\n        /* \"DeAnt3Token_flat.sol\":40912:40945  super.transfer(recipient, amount) */\n      tag_294\n        /* \"DeAnt3Token_flat.sol\":40927:40936  recipient */\n      dup4\n        /* \"DeAnt3Token_flat.sol\":40938:40944  amount */\n      dup4\n        /* \"DeAnt3Token_flat.sol\":40912:40926  super.transfer */\n      tag_295\n        /* \"DeAnt3Token_flat.sol\":40912:40945  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_294:\n      pop\n        /* \"DeAnt3Token_flat.sol\":40871:41173  if (msg.sender == owner()) {... */\n      jump(tag_296)\n    tag_293:\n        /* \"DeAnt3Token_flat.sol\":40976:40991  uint256 burnAmt */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":40994:41019  _calculateBurnAmt(amount) */\n      tag_297\n        /* \"DeAnt3Token_flat.sol\":41012:41018  amount */\n      dup4\n        /* \"DeAnt3Token_flat.sol\":40994:41011  _calculateBurnAmt */\n      tag_209\n        /* \"DeAnt3Token_flat.sol\":40994:41019  _calculateBurnAmt(amount) */\n      jump\t// in\n    tag_297:\n        /* \"DeAnt3Token_flat.sol\":40976:41019  uint256 burnAmt = _calculateBurnAmt(amount) */\n      swap1\n      pop\n        /* \"DeAnt3Token_flat.sol\":41033:41068  _burnAndUpdate(msg.sender, burnAmt) */\n      tag_298\n        /* \"DeAnt3Token_flat.sol\":41048:41058  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":41060:41067  burnAmt */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":41033:41047  _burnAndUpdate */\n      tag_206\n        /* \"DeAnt3Token_flat.sol\":41033:41068  _burnAndUpdate(msg.sender, burnAmt) */\n      jump\t// in\n    tag_298:\n        /* \"DeAnt3Token_flat.sol\":41082:41096  uint256 newAmt */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":41099:41115  amount - burnAmt */\n      tag_299\n        /* \"DeAnt3Token_flat.sol\":41108:41115  burnAmt */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":41099:41105  amount */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":41099:41115  amount - burnAmt */\n      tag_212\n      jump\t// in\n    tag_299:\n        /* \"DeAnt3Token_flat.sol\":41082:41115  uint256 newAmt = amount - burnAmt */\n      swap1\n      pop\n        /* \"DeAnt3Token_flat.sol\":41129:41162  super.transfer(recipient, newAmt) */\n      tag_300\n        /* \"DeAnt3Token_flat.sol\":41144:41153  recipient */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":41155:41161  newAmt */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":41129:41143  super.transfer */\n      tag_295\n        /* \"DeAnt3Token_flat.sol\":41129:41162  super.transfer(recipient, newAmt) */\n      jump\t// in\n    tag_300:\n      pop\n        /* \"DeAnt3Token_flat.sol\":40962:41173  {... */\n      pop\n      pop\n        /* \"DeAnt3Token_flat.sol\":40871:41173  if (msg.sender == owner()) {... */\n    tag_296:\n      pop\n        /* \"DeAnt3Token_flat.sol\":41189:41193  true */\n      0x01\n        /* \"DeAnt3Token_flat.sol\":40749:41200  function transfer(address recipient, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":39761:39861  function setRewardAmtInWei(uint256 _newAmt) external onlyOwner {... */\n    tag_153:\n        /* \"DeAnt3Token_flat.sol\":17765:17778  _checkOwner() */\n      tag_303\n        /* \"DeAnt3Token_flat.sol\":17765:17776  _checkOwner */\n      tag_254\n        /* \"DeAnt3Token_flat.sol\":17765:17778  _checkOwner() */\n      jump\t// in\n    tag_303:\n        /* \"DeAnt3Token_flat.sol\":39834:39844  _rewardAmt */\n      0xcd\n        /* \"DeAnt3Token_flat.sol\":39834:39854  _rewardAmt = _newAmt */\n      sstore\n        /* \"DeAnt3Token_flat.sol\":39761:39861  function setRewardAmtInWei(uint256 _newAmt) external onlyOwner {... */\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":39955:40050  function setTaxFee(uint256 _newTaxFee) external onlyOwner {... */\n    tag_157:\n        /* \"DeAnt3Token_flat.sol\":17765:17778  _checkOwner() */\n      tag_306\n        /* \"DeAnt3Token_flat.sol\":17765:17776  _checkOwner */\n      tag_254\n        /* \"DeAnt3Token_flat.sol\":17765:17778  _checkOwner() */\n      jump\t// in\n    tag_306:\n        /* \"DeAnt3Token_flat.sol\":40023:40030  _taxFee */\n      0xcf\n        /* \"DeAnt3Token_flat.sol\":40023:40043  _taxFee = _newTaxFee */\n      sstore\n        /* \"DeAnt3Token_flat.sol\":39955:40050  function setTaxFee(uint256 _newTaxFee) external onlyOwner {... */\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":27348:27497  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":27463:27481  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"DeAnt3Token_flat.sol\":27437:27444  uint256 */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":27463:27481  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":27463:27474  _allowances */\n      0x34\n        /* \"DeAnt3Token_flat.sol\":27463:27481  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":27463:27490  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"DeAnt3Token_flat.sol\":27348:27497  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":42262:43626  function permitMint(... */\n    tag_172:\n        /* \"DeAnt3Token_flat.sol\":42526:42541  block.timestamp */\n      timestamp\n        /* \"DeAnt3Token_flat.sol\":42514:42522  deadline */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":42514:42541  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"DeAnt3Token_flat.sol\":42506:42562  require(deadline >= block.timestamp, \"Expired deadline\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13247:13249   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":42506:42562  require(deadline >= block.timestamp, \"Expired deadline\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13229:13250   */\n      mstore\n        /* \"#utility.yul\":13286:13288   */\n      0x10\n        /* \"#utility.yul\":13266:13284   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13259:13289   */\n      mstore\n      shl(0x80, 0x4578706972656420646561646c696e65)\n        /* \"#utility.yul\":13305:13323   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13298:13344   */\n      mstore\n        /* \"#utility.yul\":13361:13379   */\n      0x64\n      add\n        /* \"DeAnt3Token_flat.sol\":42506:42562  require(deadline >= block.timestamp, \"Expired deadline\") */\n      tag_202\n        /* \"#utility.yul\":13045:13385   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":42506:42562  require(deadline >= block.timestamp, \"Expired deadline\") */\n    tag_310:\n        /* \"DeAnt3Token_flat.sol\":42581:42605  uniqueIdExists[uniqueId] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":42581:42595  uniqueIdExists */\n      0xd3\n        /* \"DeAnt3Token_flat.sol\":42581:42605  uniqueIdExists[uniqueId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"DeAnt3Token_flat.sol\":42580:42605  !uniqueIdExists[uniqueId] */\n      iszero\n        /* \"DeAnt3Token_flat.sol\":42572:42626  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13592:13594   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":42572:42626  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13574:13595   */\n      mstore\n        /* \"#utility.yul\":13631:13633   */\n      0x10\n        /* \"#utility.yul\":13611:13629   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13604:13634   */\n      mstore\n      shl(0x80, 0x556e6971756520696420657869737473)\n        /* \"#utility.yul\":13650:13668   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13643:13689   */\n      mstore\n        /* \"#utility.yul\":13706:13724   */\n      0x64\n      add\n        /* \"DeAnt3Token_flat.sol\":42572:42626  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n      tag_202\n        /* \"#utility.yul\":13390:13730   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":42572:42626  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n    tag_313:\n        /* \"DeAnt3Token_flat.sol\":42655:42665  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":42637:42652  address spender */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":42691:42704  super.owner() */\n      tag_316\n        /* \"DeAnt3Token_flat.sol\":17944:17950  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x98))\n      swap1\n        /* \"DeAnt3Token_flat.sol\":17872:17957  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"DeAnt3Token_flat.sol\":42691:42704  super.owner() */\n    tag_316:\n        /* \"DeAnt3Token_flat.sol\":42761:42999  abi.encodePacked(... */\n      mload(0x40)\n      shl(0xf8, 0x19)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":14104:14132   */\n      mstore\n        /* \"DeAnt3Token_flat.sol\":42715:42735  bytes32 permitTxHash */\n      0x00\n        /* \"#utility.yul\":14148:14159   */\n      0x21\n      dup3\n      add\n        /* \"#utility.yul\":14141:14177   */\n      dup2\n      swap1\n      mstore\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":14264:14266   */\n      0x60\n        /* \"#utility.yul\":14260:14275   */\n      dup5\n      dup2\n      shl\n        /* \"#utility.yul\":14256:14280   */\n      dup3\n      and\n        /* \"#utility.yul\":14243:14254   */\n      0x22\n      dup6\n      add\n        /* \"#utility.yul\":14236:14281   */\n      mstore\n        /* \"#utility.yul\":14315:14330   */\n      dup7\n      dup2\n      shl\n        /* \"#utility.yul\":14311:14335   */\n      dup3\n      and\n        /* \"#utility.yul\":14297:14309   */\n      0x36\n      dup6\n      add\n        /* \"#utility.yul\":14290:14336   */\n      mstore\n        /* \"#utility.yul\":14370:14385   */\n      dup14\n      swap1\n      shl\n        /* \"#utility.yul\":14366:14390   */\n      and\n        /* \"#utility.yul\":14352:14364   */\n      0x4a\n      dup4\n      add\n        /* \"#utility.yul\":14345:14391   */\n      mstore\n        /* \"#utility.yul\":14407:14419   */\n      0x5e\n      dup3\n      add\n        /* \"#utility.yul\":14400:14428   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":14444:14456   */\n      0x7e\n      dup3\n      add\n        /* \"#utility.yul\":14437:14465   */\n      dup12\n      swap1\n      mstore\n        /* \"#utility.yul\":14481:14494   */\n      0x9e\n      dup3\n      add\n        /* \"#utility.yul\":14474:14503   */\n      dup10\n      swap1\n      mstore\n        /* \"DeAnt3Token_flat.sol\":42675:42704  address owner = super.owner() */\n      swap2\n      swap3\n      pop\n        /* \"#utility.yul\":14519:14532   */\n      0xbe\n      add\n        /* \"DeAnt3Token_flat.sol\":42761:42999  abi.encodePacked(... */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"DeAnt3Token_flat.sol\":42738:43009  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":42715:43009  bytes32 permitTxHash = keccak256(... */\n      swap1\n      pop\n        /* \"DeAnt3Token_flat.sol\":43020:43036  address lastAddr */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":43059:43080  uint8 verifiedSigners */\n      dup1\n        /* \"DeAnt3Token_flat.sol\":43099:43107  uint64 i */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":43094:43351  for (uint64 i = 0; i < v.length; i++) {... */\n    tag_319:\n        /* \"DeAnt3Token_flat.sol\":43117:43118  v */\n      dup9\n        /* \"DeAnt3Token_flat.sol\":43117:43125  v.length */\n      mload\n        /* \"DeAnt3Token_flat.sol\":43113:43114  i */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":43113:43125  i < v.length */\n      and\n      lt\n        /* \"DeAnt3Token_flat.sol\":43094:43351  for (uint64 i = 0; i < v.length; i++) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"DeAnt3Token_flat.sol\":43146:43163  address recovered */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":43166:43207  ecrecover(permitTxHash, v[i], r[i], s[i]) */\n      0x01\n        /* \"DeAnt3Token_flat.sol\":43176:43188  permitTxHash */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":43190:43191  v */\n      dup12\n        /* \"DeAnt3Token_flat.sol\":43192:43193  i */\n      dup5\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":43190:43194  v[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_323\n      jumpi\n      tag_323\n      tag_324\n      jump\t// in\n    tag_323:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DeAnt3Token_flat.sol\":43196:43197  r */\n      dup12\n        /* \"DeAnt3Token_flat.sol\":43198:43199  i */\n      dup6\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":43196:43200  r[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_326\n      jumpi\n      tag_326\n      tag_324\n      jump\t// in\n    tag_326:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DeAnt3Token_flat.sol\":43202:43203  s */\n      dup12\n        /* \"DeAnt3Token_flat.sol\":43204:43205  i */\n      dup7\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":43202:43206  s[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_328\n      jumpi\n      tag_328\n      tag_324\n      jump\t// in\n    tag_328:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DeAnt3Token_flat.sol\":43166:43207  ecrecover(permitTxHash, v[i], r[i], s[i]) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_329\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":14902:14927   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":14975:14979   */\n      0xff\n        /* \"#utility.yul\":14963:14980   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":14958:14960   */\n      0x20\n        /* \"#utility.yul\":14943:14961   */\n      dup5\n      add\n        /* \"#utility.yul\":14936:14981   */\n      mstore\n        /* \"#utility.yul\":15012:15014   */\n      0x40\n        /* \"#utility.yul\":14997:15015   */\n      dup4\n      add\n        /* \"#utility.yul\":14990:15024   */\n      mstore\n        /* \"#utility.yul\":15055:15057   */\n      0x60\n        /* \"#utility.yul\":15040:15058   */\n      dup3\n      add\n        /* \"#utility.yul\":15033:15067   */\n      mstore\n        /* \"#utility.yul\":14889:14892   */\n      0x80\n        /* \"#utility.yul\":14874:14893   */\n      add\n      swap1\n        /* \"#utility.yul\":14675:15073   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":43166:43207  ecrecover(permitTxHash, v[i], r[i], s[i]) */\n    tag_329:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_332\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_332:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"DeAnt3Token_flat.sol\":43146:43207  address recovered = ecrecover(permitTxHash, v[i], r[i], s[i]) */\n      swap1\n      pop\n        /* \"DeAnt3Token_flat.sol\":43237:43245  lastAddr */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":43225:43245  recovered > lastAddr */\n      and\n        /* \"DeAnt3Token_flat.sol\":43225:43234  recovered */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":43225:43245  recovered > lastAddr */\n      and\n      gt\n        /* \"DeAnt3Token_flat.sol\":43225:43271  recovered > lastAddr && _mapSigners[recovered] */\n      dup1\n      iszero\n      tag_333\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":43249:43271  _mapSigners[recovered] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":43249:43260  _mapSigners */\n      0xd2\n        /* \"DeAnt3Token_flat.sol\":43249:43271  _mapSigners[recovered] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"DeAnt3Token_flat.sol\":43225:43271  recovered > lastAddr && _mapSigners[recovered] */\n    tag_333:\n        /* \"DeAnt3Token_flat.sol\":43221:43306  if (recovered > lastAddr && _mapSigners[recovered])... */\n      iszero\n      tag_334\n      jumpi\n        /* \"DeAnt3Token_flat.sol\":43289:43306  verifiedSigners++ */\n      dup3\n      tag_335\n      dup2\n      tag_336\n      jump\t// in\n    tag_335:\n      swap4\n      pop\n      pop\n        /* \"DeAnt3Token_flat.sol\":43221:43306  if (recovered > lastAddr && _mapSigners[recovered])... */\n    tag_334:\n        /* \"DeAnt3Token_flat.sol\":43331:43340  recovered */\n      swap3\n      pop\n        /* \"DeAnt3Token_flat.sol\":43127:43130  i++ */\n      dup1\n      tag_337\n      dup2\n      tag_338\n      jump\t// in\n    tag_337:\n      swap2\n      pop\n      pop\n        /* \"DeAnt3Token_flat.sol\":43094:43351  for (uint64 i = 0; i < v.length; i++) {... */\n      jump(tag_319)\n    tag_320:\n      pop\n        /* \"DeAnt3Token_flat.sol\":43387:43395  _signers */\n      0xd1\n        /* \"DeAnt3Token_flat.sol\":43387:43402  _signers.length */\n      sload\n        /* \"DeAnt3Token_flat.sol\":43368:43402  verifiedSigners == _signers.length */\n      0xff\n      dup3\n      and\n      eq\n        /* \"DeAnt3Token_flat.sol\":43360:43422  require(verifiedSigners == _signers.length, \"Invalid signers\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15674:15676   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":43360:43422  require(verifiedSigners == _signers.length, \"Invalid signers\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15656:15677   */\n      mstore\n        /* \"#utility.yul\":15713:15715   */\n      0x0f\n        /* \"#utility.yul\":15693:15711   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15686:15716   */\n      mstore\n      shl(0x88, 0x496e76616c6964207369676e657273)\n        /* \"#utility.yul\":15732:15750   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15725:15770   */\n      mstore\n        /* \"#utility.yul\":15787:15805   */\n      0x64\n      add\n        /* \"DeAnt3Token_flat.sol\":43360:43422  require(verifiedSigners == _signers.length, \"Invalid signers\") */\n      tag_202\n        /* \"#utility.yul\":15472:15811   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":43360:43422  require(verifiedSigners == _signers.length, \"Invalid signers\") */\n    tag_339:\n        /* \"DeAnt3Token_flat.sol\":43432:43456  uniqueIdExists[uniqueId] */\n      0x00\n      dup12\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":43432:43446  uniqueIdExists */\n      0xd3\n        /* \"DeAnt3Token_flat.sol\":43432:43456  uniqueIdExists[uniqueId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":43432:43463  uniqueIdExists[uniqueId] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"DeAnt3Token_flat.sol\":43459:43463  true */\n      0x01\n        /* \"DeAnt3Token_flat.sol\":43432:43463  uniqueIdExists[uniqueId] = true */\n      or\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":43515:43525  _rewardAmt */\n      sload(0xcd)\n        /* \"DeAnt3Token_flat.sol\":43493:43530  recipient.call{value: _rewardAmt}(\"\") */\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":43493:43507  recipient.call */\n      dup16\n      and\n      swap2\n        /* \"DeAnt3Token_flat.sol\":43515:43525  _rewardAmt */\n      swap1\n        /* \"DeAnt3Token_flat.sol\":43432:43456  uniqueIdExists[uniqueId] */\n      dup4\n        /* \"DeAnt3Token_flat.sol\":43493:43530  recipient.call{value: _rewardAmt}(\"\") */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":43432:43456  uniqueIdExists[uniqueId] */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":43493:43530  recipient.call{value: _rewardAmt}(\"\") */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":43515:43525  _rewardAmt */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":43493:43507  recipient.call */\n      dup8\n        /* \"DeAnt3Token_flat.sol\":43493:43530  recipient.call{value: _rewardAmt}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_346\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_345)\n    tag_346:\n      0x60\n      swap2\n      pop\n    tag_345:\n      pop\n        /* \"DeAnt3Token_flat.sol\":43474:43530  (bool success, ) = recipient.call{value: _rewardAmt}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"DeAnt3Token_flat.sol\":43548:43555  success */\n      dup1\n        /* \"DeAnt3Token_flat.sol\":43540:43579  require(success, \"Failed to send Mech\") */\n      tag_347\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16228:16230   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":43540:43579  require(success, \"Failed to send Mech\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16210:16231   */\n      mstore\n        /* \"#utility.yul\":16267:16269   */\n      0x13\n        /* \"#utility.yul\":16247:16265   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16240:16270   */\n      mstore\n      shl(0x6b, 0x08cc2d2d8cac840e8de40e6cadcc8409acac6d)\n        /* \"#utility.yul\":16286:16304   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16279:16328   */\n      mstore\n        /* \"#utility.yul\":16345:16363   */\n      0x64\n      add\n        /* \"DeAnt3Token_flat.sol\":43540:43579  require(success, \"Failed to send Mech\") */\n      tag_202\n        /* \"#utility.yul\":16026:16369   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":43540:43579  require(success, \"Failed to send Mech\") */\n    tag_347:\n        /* \"DeAnt3Token_flat.sol\":43589:43619  super._mint(recipient, amount) */\n      tag_350\n        /* \"DeAnt3Token_flat.sol\":43601:43610  recipient */\n      dup14\n        /* \"DeAnt3Token_flat.sol\":43612:43618  amount */\n      dup13\n        /* \"DeAnt3Token_flat.sol\":43589:43600  super._mint */\n      tag_240\n        /* \"DeAnt3Token_flat.sol\":43589:43619  super._mint(recipient, amount) */\n      jump\t// in\n    tag_350:\n        /* \"DeAnt3Token_flat.sol\":42496:43626  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DeAnt3Token_flat.sol\":42262:43626  function permitMint(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":18752:18950  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_176:\n        /* \"DeAnt3Token_flat.sol\":17765:17778  _checkOwner() */\n      tag_352\n        /* \"DeAnt3Token_flat.sol\":17765:17776  _checkOwner */\n      tag_254\n        /* \"DeAnt3Token_flat.sol\":17765:17778  _checkOwner() */\n      jump\t// in\n    tag_352:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":18840:18862  newOwner != address(0) */\n      dup2\n      and\n        /* \"DeAnt3Token_flat.sol\":18832:18905  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16576:16578   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":18832:18905  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16558:16579   */\n      mstore\n        /* \"#utility.yul\":16615:16617   */\n      0x26\n        /* \"#utility.yul\":16595:16613   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16588:16618   */\n      mstore\n        /* \"#utility.yul\":16654:16688   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":16634:16652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16627:16689   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":16705:16723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16698:16734   */\n      mstore\n        /* \"#utility.yul\":16751:16770   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":18832:18905  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_202\n        /* \"#utility.yul\":16374:16776   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":18832:18905  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_354:\n        /* \"DeAnt3Token_flat.sol\":18915:18943  _transferOwnership(newOwner) */\n      tag_283\n        /* \"DeAnt3Token_flat.sol\":18934:18942  newOwner */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":18915:18933  _transferOwnership */\n      tag_261\n        /* \"DeAnt3Token_flat.sol\":18915:18943  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":33878:34248  function _approve(... */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":34009:34028  owner != address(0) */\n      dup4\n      and\n        /* \"DeAnt3Token_flat.sol\":34001:34069  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_361\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16983:16985   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":34001:34069  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16965:16986   */\n      mstore\n        /* \"#utility.yul\":17022:17024   */\n      0x24\n        /* \"#utility.yul\":17002:17020   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":16995:17025   */\n      mstore\n        /* \"#utility.yul\":17061:17095   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":17041:17059   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17034:17096   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":17112:17130   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17105:17139   */\n      mstore\n        /* \"#utility.yul\":17156:17175   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":34001:34069  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_202\n        /* \"#utility.yul\":16781:17181   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":34001:34069  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_361:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":34087:34108  spender != address(0) */\n      dup3\n      and\n        /* \"DeAnt3Token_flat.sol\":34079:34147  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_364\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17388:17390   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":34079:34147  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17370:17391   */\n      mstore\n        /* \"#utility.yul\":17427:17429   */\n      0x22\n        /* \"#utility.yul\":17407:17425   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17400:17430   */\n      mstore\n        /* \"#utility.yul\":17466:17500   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":17446:17464   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17439:17501   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":17517:17535   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17510:17542   */\n      mstore\n        /* \"#utility.yul\":17559:17578   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":34079:34147  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_202\n        /* \"#utility.yul\":17186:17584   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":34079:34147  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_364:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":34158:34176  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":34158:34169  _allowances */\n      0x34\n        /* \"DeAnt3Token_flat.sol\":34158:34176  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":34158:34185  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":34158:34194  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":34209:34241  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1662:1687   */\n      dup5\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":34209:34241  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1635:1653   */\n      add\n        /* \"DeAnt3Token_flat.sol\":34209:34241  Approval(owner, spender, amount) */\n    tag_367:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DeAnt3Token_flat.sol\":33878:34248  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":41717:41935  function _burnAndUpdate(address account, uint256 amount) private {... */\n    tag_206:\n        /* \"DeAnt3Token_flat.sol\":41792:41814  _burn(account, amount) */\n      tag_369\n        /* \"DeAnt3Token_flat.sol\":41798:41805  account */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":41807:41813  amount */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":41792:41797  _burn */\n      tag_370\n        /* \"DeAnt3Token_flat.sol\":41792:41814  _burn(account, amount) */\n      jump\t// in\n    tag_369:\n        /* \"DeAnt3Token_flat.sol\":41852:41858  amount */\n      dup1\n        /* \"DeAnt3Token_flat.sol\":41838:41849  totalBurned */\n      sload(0xd0)\n        /* \"DeAnt3Token_flat.sol\":41838:41858  totalBurned + amount */\n      tag_371\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_371:\n        /* \"DeAnt3Token_flat.sol\":41824:41835  totalBurned */\n      0xd0\n        /* \"DeAnt3Token_flat.sol\":41824:41858  totalBurned = totalBurned + amount */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":41895:41919  userTotalBurned[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":41895:41910  userTotalBurned */\n      0xd4\n        /* \"DeAnt3Token_flat.sol\":41895:41919  userTotalBurned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DeAnt3Token_flat.sol\":41895:41928  userTotalBurned[account] + amount */\n      tag_372\n      swap1\n        /* \"DeAnt3Token_flat.sol\":41922:41928  amount */\n      dup3\n      swap1\n        /* \"DeAnt3Token_flat.sol\":41895:41928  userTotalBurned[account] + amount */\n      tag_251\n      jump\t// in\n    tag_372:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":41868:41892  userTotalBurned[account] */\n      swap1\n      swap3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":41868:41883  userTotalBurned */\n      0xd4\n        /* \"DeAnt3Token_flat.sol\":41868:41892  userTotalBurned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":41868:41928  userTotalBurned[account] = userTotalBurned[account] + amount */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"DeAnt3Token_flat.sol\":41717:41935  function _burnAndUpdate(address account, uint256 amount) private {... */\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":41554:41711  function _calculateBurnAmt(uint256 amount) private view returns (uint256) {... */\n    tag_209:\n        /* \"DeAnt3Token_flat.sol\":41619:41626  uint256 */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":41638:41653  uint256 burnAmt */\n      dup1\n        /* \"DeAnt3Token_flat.sol\":41677:41680  100 */\n      0x64\n        /* \"DeAnt3Token_flat.sol\":41666:41673  _taxFee */\n      sload(0xcf)\n        /* \"DeAnt3Token_flat.sol\":41657:41663  amount */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":41657:41673  amount * _taxFee */\n      tag_374\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_374:\n        /* \"DeAnt3Token_flat.sol\":41656:41680  (amount * _taxFee) / 100 */\n      tag_375\n      swap2\n      swap1\n      tag_376\n      jump\t// in\n    tag_375:\n        /* \"DeAnt3Token_flat.sol\":41638:41680  uint256 burnAmt = (amount * _taxFee) / 100 */\n      swap4\n        /* \"DeAnt3Token_flat.sol\":41554:41711  function _calculateBurnAmt(uint256 amount) private view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":28564:28850  function transferFrom(... */\n    tag_214:\n        /* \"DeAnt3Token_flat.sol\":28691:28695  bool */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":28747:28785  _spendAllowance(from, spender, amount) */\n      tag_379\n        /* \"DeAnt3Token_flat.sol\":28763:28767  from */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":28778:28784  amount */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":28747:28762  _spendAllowance */\n      tag_380\n        /* \"DeAnt3Token_flat.sol\":28747:28785  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_379:\n        /* \"DeAnt3Token_flat.sol\":28795:28822  _transfer(from, to, amount) */\n      tag_290\n        /* \"DeAnt3Token_flat.sol\":28805:28809  from */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":28811:28813  to */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":28815:28821  amount */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":28795:28804  _transfer */\n      tag_382\n        /* \"DeAnt3Token_flat.sol\":28795:28822  _transfer(from, to, amount) */\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":17434:17529  function __Ownable_init() internal onlyInitializing {... */\n    tag_227:\n        /* \"DeAnt3Token_flat.sol\":13854:13867  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"DeAnt3Token_flat.sol\":13846:13915  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_387\n      jump\t// in\n    tag_385:\n        /* \"DeAnt3Token_flat.sol\":17496:17522  __Ownable_init_unchained() */\n      tag_260\n        /* \"DeAnt3Token_flat.sol\":17496:17520  __Ownable_init_unchained */\n      tag_390\n        /* \"DeAnt3Token_flat.sol\":17496:17522  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":25151:25298  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_229:\n        /* \"DeAnt3Token_flat.sol\":13854:13867  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"DeAnt3Token_flat.sol\":13846:13915  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_392\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_387\n      jump\t// in\n    tag_392:\n        /* \"DeAnt3Token_flat.sol\":25253:25291  __ERC20_init_unchained(name_, symbol_) */\n      tag_205\n        /* \"DeAnt3Token_flat.sol\":25276:25281  name_ */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":25283:25290  symbol_ */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":25253:25275  __ERC20_init_unchained */\n      tag_396\n        /* \"DeAnt3Token_flat.sol\":25253:25291  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":37228:37347  function __ERC20Capped_init(uint256 cap_) internal onlyInitializing {... */\n    tag_235:\n        /* \"DeAnt3Token_flat.sol\":13854:13867  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"DeAnt3Token_flat.sol\":13846:13915  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_398\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_387\n      jump\t// in\n    tag_398:\n        /* \"DeAnt3Token_flat.sol\":37306:37340  __ERC20Capped_init_unchained(cap_) */\n      tag_283\n        /* \"DeAnt3Token_flat.sol\":37335:37339  cap_ */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":37306:37334  __ERC20Capped_init_unchained */\n      tag_402\n        /* \"DeAnt3Token_flat.sol\":37306:37340  __ERC20Capped_init_unchained(cap_) */\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":37724:37939  function _mint(address account, uint256 amount) internal virtual override {... */\n    tag_240:\n        /* \"DeAnt3Token_flat.sol\":37660:37664  _cap */\n      sload(0x65)\n        /* \"DeAnt3Token_flat.sol\":37849:37855  amount */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":37816:37846  ERC20Upgradeable.totalSupply() */\n      tag_405\n        /* \"DeAnt3Token_flat.sol\":26703:26715  _totalSupply */\n      sload(0x35)\n      swap1\n        /* \"DeAnt3Token_flat.sol\":26616:26722  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"DeAnt3Token_flat.sol\":37816:37846  ERC20Upgradeable.totalSupply() */\n    tag_405:\n        /* \"DeAnt3Token_flat.sol\":37816:37855  ERC20Upgradeable.totalSupply() + amount */\n      tag_406\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_406:\n        /* \"DeAnt3Token_flat.sol\":37816:37864  ERC20Upgradeable.totalSupply() + amount <= cap() */\n      gt\n      iszero\n        /* \"DeAnt3Token_flat.sol\":37808:37894  require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      tag_407\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18425:18427   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":37808:37894  require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18407:18428   */\n      mstore\n        /* \"#utility.yul\":18464:18466   */\n      0x19\n        /* \"#utility.yul\":18444:18462   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18437:18467   */\n      mstore\n        /* \"#utility.yul\":18503:18530   */\n      0x45524332304361707065643a2063617020657863656564656400000000000000\n        /* \"#utility.yul\":18483:18501   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18476:18531   */\n      mstore\n        /* \"#utility.yul\":18548:18566   */\n      0x64\n      add\n        /* \"DeAnt3Token_flat.sol\":37808:37894  require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      tag_202\n        /* \"#utility.yul\":18223:18572   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":37808:37894  require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n    tag_407:\n        /* \"DeAnt3Token_flat.sol\":37904:37932  super._mint(account, amount) */\n      tag_205\n        /* \"DeAnt3Token_flat.sol\":37916:37923  account */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":37925:37931  amount */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":37904:37915  super._mint */\n      tag_411\n        /* \"DeAnt3Token_flat.sol\":37904:37932  super._mint(account, amount) */\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":18030:18160  function _checkOwner() internal view virtual {... */\n    tag_254:\n        /* \"DeAnt3Token_flat.sol\":17944:17950  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x98))\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":18093:18116  owner() == _msgSender() */\n      eq\n        /* \"DeAnt3Token_flat.sol\":18085:18153  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18779:18781   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":18085:18153  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18761:18782   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":18798:18816   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18791:18821   */\n      mstore\n        /* \"#utility.yul\":18857:18891   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":18837:18855   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18830:18892   */\n      mstore\n        /* \"#utility.yul\":18909:18927   */\n      0x64\n      add\n        /* \"DeAnt3Token_flat.sol\":18085:18153  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_202\n        /* \"#utility.yul\":18577:18933   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":19104:19291  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_261:\n        /* \"DeAnt3Token_flat.sol\":19196:19202  _owner */\n      0x98\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":19212:19229  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"DeAnt3Token_flat.sol\":19244:19284  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"DeAnt3Token_flat.sol\":19196:19202  _owner */\n      swap2\n      and\n      swap2\n        /* \"DeAnt3Token_flat.sol\":19212:19229  _owner = newOwner */\n      swap1\n        /* \"DeAnt3Token_flat.sol\":19196:19202  _owner */\n      dup3\n      swap1\n        /* \"DeAnt3Token_flat.sol\":19244:19284  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"DeAnt3Token_flat.sol\":19177:19193  address oldOwner */\n      0x00\n      swap1\n        /* \"DeAnt3Token_flat.sol\":19244:19284  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"DeAnt3Token_flat.sol\":19167:19291  {... */\n      pop\n        /* \"DeAnt3Token_flat.sol\":19104:19291  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":40510:40743  function _updateMap(... */\n    tag_278:\n        /* \"DeAnt3Token_flat.sol\":40657:40665  uint64 i */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":40652:40737  for (uint64 i = 0; i < arr.length; i++) {... */\n    tag_420:\n        /* \"DeAnt3Token_flat.sol\":40675:40678  arr */\n      dup4\n        /* \"DeAnt3Token_flat.sol\":40675:40685  arr.length */\n      mload\n        /* \"DeAnt3Token_flat.sol\":40671:40672  i */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":40671:40685  i < arr.length */\n      and\n      lt\n        /* \"DeAnt3Token_flat.sol\":40652:40737  for (uint64 i = 0; i < arr.length; i++) {... */\n      iszero\n      tag_421\n      jumpi\n        /* \"DeAnt3Token_flat.sol\":40720:40726  status */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":40706:40709  map */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":40706:40717  map[arr[i]] */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":40710:40713  arr */\n      dup7\n        /* \"DeAnt3Token_flat.sol\":40714:40715  i */\n      dup5\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":40710:40716  arr[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_424\n      jumpi\n      tag_424\n      tag_324\n      jump\t// in\n    tag_424:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":40706:40717  map[arr[i]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":40706:40726  map[arr[i]] = status */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":40687:40690  i++ */\n      dup1\n      tag_425\n      dup2\n      tag_338\n      jump\t// in\n    tag_425:\n      swap2\n      pop\n      pop\n        /* \"DeAnt3Token_flat.sol\":40652:40737  for (uint64 i = 0; i < arr.length; i++) {... */\n      jump(tag_420)\n    tag_421:\n      pop\n        /* \"DeAnt3Token_flat.sol\":40510:40743  function _updateMap(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":27101:27290  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_295:\n        /* \"DeAnt3Token_flat.sol\":27180:27184  bool */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":27234:27262  _transfer(owner, to, amount) */\n      tag_197\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":27251:27253  to */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":27255:27261  amount */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":27234:27243  _transfer */\n      tag_382\n        /* \"DeAnt3Token_flat.sol\":27234:27262  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":32796:33455  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_370:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":32879:32900  account != address(0) */\n      dup3\n      and\n        /* \"DeAnt3Token_flat.sol\":32871:32938  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_430\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19140:19142   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":32871:32938  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19122:19143   */\n      mstore\n        /* \"#utility.yul\":19179:19181   */\n      0x21\n        /* \"#utility.yul\":19159:19177   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19152:19182   */\n      mstore\n        /* \"#utility.yul\":19218:19252   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":19198:19216   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19191:19253   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":19269:19287   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":19262:19293   */\n      mstore\n        /* \"#utility.yul\":19310:19329   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":32871:32938  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_202\n        /* \"#utility.yul\":18938:19335   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":32871:32938  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_430:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":33034:33052  _balances[account] */\n      dup3\n      and\n        /* \"DeAnt3Token_flat.sol\":33009:33031  uint256 accountBalance */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":33034:33052  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":33034:33043  _balances */\n      0x33\n        /* \"DeAnt3Token_flat.sol\":33034:33052  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DeAnt3Token_flat.sol\":33070:33094  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"DeAnt3Token_flat.sol\":33062:33133  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_435\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19542:19544   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":33062:33133  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19524:19545   */\n      mstore\n        /* \"#utility.yul\":19581:19583   */\n      0x22\n        /* \"#utility.yul\":19561:19579   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19554:19584   */\n      mstore\n        /* \"#utility.yul\":19620:19654   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":19600:19618   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19593:19655   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":19671:19689   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":19664:19696   */\n      mstore\n        /* \"#utility.yul\":19713:19732   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":33062:33133  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_202\n        /* \"#utility.yul\":19340:19738   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":33062:33133  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_435:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":33167:33185  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":33167:33176  _balances */\n      0x33\n        /* \"DeAnt3Token_flat.sol\":33167:33185  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":33188:33211  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"DeAnt3Token_flat.sol\":33167:33211  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":33304:33316  _totalSupply */\n      0x35\n        /* \"DeAnt3Token_flat.sol\":33304:33326  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":33352:33389  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":1662:1687   */\n      dup6\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":33167:33185  _balances[account] */\n      swap2\n      swap3\n      swap2\n        /* \"DeAnt3Token_flat.sol\":33352:33389  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1635:1653   */\n      add\n        /* \"DeAnt3Token_flat.sol\":33352:33389  Transfer(account, address(0), amount) */\n      tag_367\n        /* \"#utility.yul\":1516:1693   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":33400:33448  _afterTokenTransfer(account, address(0), amount) */\n    tag_439:\n        /* \"DeAnt3Token_flat.sol\":32861:33455  {... */\n      pop\n        /* \"DeAnt3Token_flat.sol\":32796:33455  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":34529:34970  function _spendAllowance(... */\n    tag_380:\n        /* \"DeAnt3Token_flat.sol\":34659:34683  uint256 currentAllowance */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":34686:34711  allowance(owner, spender) */\n      tag_442\n        /* \"DeAnt3Token_flat.sol\":34696:34701  owner */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":34703:34710  spender */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":34686:34695  allowance */\n      tag_166\n        /* \"DeAnt3Token_flat.sol\":34686:34711  allowance(owner, spender) */\n      jump\t// in\n    tag_442:\n        /* \"DeAnt3Token_flat.sol\":34659:34711  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"DeAnt3Token_flat.sol\":34725:34741  currentAllowance */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":34725:34762  currentAllowance != type(uint256).max */\n      eq\n        /* \"DeAnt3Token_flat.sol\":34721:34964  if (currentAllowance != type(uint256).max) {... */\n      tag_421\n      jumpi\n        /* \"DeAnt3Token_flat.sol\":34806:34812  amount */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":34786:34802  currentAllowance */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":34786:34812  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"DeAnt3Token_flat.sol\":34778:34846  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_444\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19945:19947   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":34778:34846  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19927:19948   */\n      mstore\n        /* \"#utility.yul\":19984:19986   */\n      0x1d\n        /* \"#utility.yul\":19964:19982   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19957:19987   */\n      mstore\n        /* \"#utility.yul\":20023:20054   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":20003:20021   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19996:20055   */\n      mstore\n        /* \"#utility.yul\":20072:20090   */\n      0x64\n      add\n        /* \"DeAnt3Token_flat.sol\":34778:34846  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_202\n        /* \"#utility.yul\":19743:20096   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":34778:34846  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_444:\n        /* \"DeAnt3Token_flat.sol\":34888:34939  _approve(owner, spender, currentAllowance - amount) */\n      tag_421\n        /* \"DeAnt3Token_flat.sol\":34897:34902  owner */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":34904:34911  spender */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":34932:34938  amount */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":34913:34929  currentAllowance */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":34913:34938  currentAllowance - amount */\n      sub\n        /* \"DeAnt3Token_flat.sol\":34888:34896  _approve */\n      tag_198\n        /* \"DeAnt3Token_flat.sol\":34888:34939  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":30847:31665  function _transfer(... */\n    tag_382:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":30973:30991  from != address(0) */\n      dup4\n      and\n        /* \"DeAnt3Token_flat.sol\":30965:31033  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_449\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20303:20305   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":30965:31033  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20285:20306   */\n      mstore\n        /* \"#utility.yul\":20342:20344   */\n      0x25\n        /* \"#utility.yul\":20322:20340   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20315:20345   */\n      mstore\n        /* \"#utility.yul\":20381:20415   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":20361:20379   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20354:20416   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":20432:20450   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":20425:20460   */\n      mstore\n        /* \"#utility.yul\":20477:20496   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":30965:31033  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_202\n        /* \"#utility.yul\":20101:20502   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":30965:31033  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_449:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":31051:31067  to != address(0) */\n      dup3\n      and\n        /* \"DeAnt3Token_flat.sol\":31043:31107  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_452\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20709:20711   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":31043:31107  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20691:20712   */\n      mstore\n        /* \"#utility.yul\":20748:20750   */\n      0x23\n        /* \"#utility.yul\":20728:20746   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20721:20751   */\n      mstore\n        /* \"#utility.yul\":20787:20821   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":20767:20785   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20760:20822   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":20838:20856   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":20831:20864   */\n      mstore\n        /* \"#utility.yul\":20881:20900   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":31043:31107  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_202\n        /* \"#utility.yul\":20507:20906   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":31043:31107  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_452:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":31189:31204  _balances[from] */\n      dup4\n      and\n        /* \"DeAnt3Token_flat.sol\":31167:31186  uint256 fromBalance */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":31189:31204  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":31189:31198  _balances */\n      0x33\n        /* \"DeAnt3Token_flat.sol\":31189:31204  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DeAnt3Token_flat.sol\":31222:31243  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"DeAnt3Token_flat.sol\":31214:31286  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_456\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21113:21115   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":31214:31286  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21095:21116   */\n      mstore\n        /* \"#utility.yul\":21152:21154   */\n      0x26\n        /* \"#utility.yul\":21132:21150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21125:21155   */\n      mstore\n        /* \"#utility.yul\":21191:21225   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":21171:21189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21164:21226   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":21242:21260   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":21235:21271   */\n      mstore\n        /* \"#utility.yul\":21288:21307   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":31214:31286  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_202\n        /* \"#utility.yul\":20911:21313   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":31214:31286  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_456:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":31320:31335  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":31320:31329  _balances */\n      0x33\n        /* \"DeAnt3Token_flat.sol\":31320:31335  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":31338:31358  fromBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"DeAnt3Token_flat.sol\":31320:31358  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":31535:31548  _balances[to] */\n      swap3\n      dup7\n      and\n      dup1\n      dup3\n      mstore\n      swap1\n      dup4\n      swap1\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":31535:31558  _balances[to] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":31584:31610  Transfer(from, to, amount) */\n      swap2\n      mload\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_459\n      swap1\n        /* \"DeAnt3Token_flat.sol\":31352:31358  amount */\n      dup7\n        /* \"#utility.yul\":1662:1687   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1650:1652   */\n      0x20\n        /* \"#utility.yul\":1635:1653   */\n      add\n      swap1\n        /* \"#utility.yul\":1516:1693   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":31584:31610  Transfer(from, to, amount) */\n    tag_459:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DeAnt3Token_flat.sol\":31621:31658  _afterTokenTransfer(from, to, amount) */\n      tag_421\n        /* \"DeAnt3Token_flat.sol\":32796:33455  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n        /* \"DeAnt3Token_flat.sol\":17535:17646  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_390:\n        /* \"DeAnt3Token_flat.sol\":13854:13867  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"DeAnt3Token_flat.sol\":13846:13915  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_462\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_387\n      jump\t// in\n    tag_462:\n        /* \"DeAnt3Token_flat.sol\":17607:17639  _transferOwnership(_msgSender()) */\n      tag_260\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":17607:17625  _transferOwnership */\n      tag_261\n        /* \"DeAnt3Token_flat.sol\":17607:17639  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":25304:25463  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_396:\n        /* \"DeAnt3Token_flat.sol\":13854:13867  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"DeAnt3Token_flat.sol\":13846:13915  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_468\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_387\n      jump\t// in\n    tag_468:\n        /* \"DeAnt3Token_flat.sol\":25416:25429  _name = name_ */\n      dup2\n      mload\n      tag_471\n      swap1\n        /* \"DeAnt3Token_flat.sol\":25416:25421  _name */\n      0x36\n      swap1\n        /* \"DeAnt3Token_flat.sol\":25416:25429  _name = name_ */\n      0x20\n      dup6\n      add\n      swap1\n      tag_237\n      jump\t// in\n    tag_471:\n      pop\n        /* \"DeAnt3Token_flat.sol\":25439:25456  _symbol = symbol_ */\n      dup1\n      mload\n      tag_439\n      swap1\n        /* \"DeAnt3Token_flat.sol\":25439:25446  _symbol */\n      0x37\n      swap1\n        /* \"DeAnt3Token_flat.sol\":25439:25456  _symbol = symbol_ */\n      0x20\n      dup5\n      add\n      swap1\n      tag_237\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":37353:37511  function __ERC20Capped_init_unchained(uint256 cap_) internal onlyInitializing {... */\n    tag_402:\n        /* \"DeAnt3Token_flat.sol\":13854:13867  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"DeAnt3Token_flat.sol\":13846:13915  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_474\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_387\n      jump\t// in\n    tag_474:\n        /* \"DeAnt3Token_flat.sol\":37456:37457  0 */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":37449:37453  cap_ */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":37449:37457  cap_ > 0 */\n      gt\n        /* \"DeAnt3Token_flat.sol\":37441:37483  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n      tag_477\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21520:21522   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":37441:37483  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21502:21523   */\n      mstore\n        /* \"#utility.yul\":21559:21561   */\n      0x15\n        /* \"#utility.yul\":21539:21557   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21532:21562   */\n      mstore\n      shl(0x5c, 0x045524332304361707065643a20636170206973203)\n        /* \"#utility.yul\":21578:21596   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21571:21622   */\n      mstore\n        /* \"#utility.yul\":21639:21657   */\n      0x64\n      add\n        /* \"DeAnt3Token_flat.sol\":37441:37483  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n      tag_202\n        /* \"#utility.yul\":21318:21663   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":37441:37483  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n    tag_477:\n        /* \"DeAnt3Token_flat.sol\":37493:37497  _cap */\n      0x65\n        /* \"DeAnt3Token_flat.sol\":37493:37504  _cap = cap_ */\n      sstore\n        /* \"DeAnt3Token_flat.sol\":37353:37511  function __ERC20Capped_init_unchained(uint256 cap_) internal onlyInitializing {... */\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":31941:32476  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_411:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":32024:32045  account != address(0) */\n      dup3\n      and\n        /* \"DeAnt3Token_flat.sol\":32016:32081  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_481\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21870:21872   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":32016:32081  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21852:21873   */\n      mstore\n        /* \"#utility.yul\":21909:21911   */\n      0x1f\n        /* \"#utility.yul\":21889:21907   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21882:21912   */\n      mstore\n        /* \"#utility.yul\":21948:21981   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":21928:21946   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21921:21982   */\n      mstore\n        /* \"#utility.yul\":21999:22017   */\n      0x64\n      add\n        /* \"DeAnt3Token_flat.sol\":32016:32081  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_202\n        /* \"#utility.yul\":21668:22023   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":32016:32081  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_481:\n        /* \"DeAnt3Token_flat.sol\":32168:32174  amount */\n      dup1\n        /* \"DeAnt3Token_flat.sol\":32152:32164  _totalSupply */\n      0x35\n      0x00\n        /* \"DeAnt3Token_flat.sol\":32152:32174  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_485\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_485:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":32320:32338  _balances[account] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":32320:32329  _balances */\n      0x33\n        /* \"DeAnt3Token_flat.sol\":32320:32338  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":32320:32348  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":32373:32410  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1662:1687   */\n      dup5\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":32373:32410  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1635:1653   */\n      add\n        /* \"DeAnt3Token_flat.sol\":32373:32410  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DeAnt3Token_flat.sol\":42105:42256  function nodeControllerBurn(address account, uint256 amount)... */\n      pop\n      pop\n      jump\t// out\n    tag_237:\n      dup3\n      dup1\n      sload\n      tag_490\n      swap1\n      tag_188\n      jump\t// in\n    tag_490:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_492\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_495)\n    tag_492:\n      dup3\n      0x1f\n      lt\n      tag_493\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_495)\n    tag_493:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_495\n      jumpi\n      swap2\n      dup3\n      add\n    tag_494:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_495\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_494)\n    tag_495:\n      pop\n      tag_496\n      swap3\n      swap2\n      pop\n      tag_497\n      jump\t// in\n    tag_496:\n      pop\n      swap1\n      jump\t// out\n    tag_280:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_283\n      swap2\n      swap1\n      tag_497\n      jump\t// in\n    tag_282:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_495\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_501:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_495\n      jumpi\n      dup3\n      mload\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_501)\n    tag_497:\n    tag_504:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_496\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_504)\n        /* \"#utility.yul\":14:611   */\n    tag_46:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_518:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_518)\n    tag_520:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_521:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:747   */\n    tag_506:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":691:722   */\n      dup2\n      and\n        /* \"#utility.yul\":681:723   */\n      dup2\n      eq\n        /* \"#utility.yul\":671:741   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":737:738   */\n      0x00\n        /* \"#utility.yul\":734:735   */\n      dup1\n        /* \"#utility.yul\":727:739   */\n      revert\n        /* \"#utility.yul\":752:999   */\n    tag_50:\n        /* \"#utility.yul\":811:817   */\n      0x00\n        /* \"#utility.yul\":864:866   */\n      0x20\n        /* \"#utility.yul\":852:861   */\n      dup3\n        /* \"#utility.yul\":843:850   */\n      dup5\n        /* \"#utility.yul\":839:862   */\n      sub\n        /* \"#utility.yul\":835:867   */\n      slt\n        /* \"#utility.yul\":832:884   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":880:881   */\n      0x00\n        /* \"#utility.yul\":877:878   */\n      dup1\n        /* \"#utility.yul\":870:882   */\n      revert\n        /* \"#utility.yul\":832:884   */\n    tag_525:\n        /* \"#utility.yul\":919:928   */\n      dup2\n        /* \"#utility.yul\":906:929   */\n      calldataload\n        /* \"#utility.yul\":938:969   */\n      tag_375\n        /* \"#utility.yul\":963:968   */\n      dup2\n        /* \"#utility.yul\":938:969   */\n      tag_506\n      jump\t// in\n        /* \"#utility.yul\":1196:1511   */\n    tag_57:\n        /* \"#utility.yul\":1264:1270   */\n      0x00\n        /* \"#utility.yul\":1272:1278   */\n      dup1\n        /* \"#utility.yul\":1325:1327   */\n      0x40\n        /* \"#utility.yul\":1313:1322   */\n      dup4\n        /* \"#utility.yul\":1304:1311   */\n      dup6\n        /* \"#utility.yul\":1300:1323   */\n      sub\n        /* \"#utility.yul\":1296:1328   */\n      slt\n        /* \"#utility.yul\":1293:1345   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":1341:1342   */\n      0x00\n        /* \"#utility.yul\":1338:1339   */\n      dup1\n        /* \"#utility.yul\":1331:1343   */\n      revert\n        /* \"#utility.yul\":1293:1345   */\n    tag_529:\n        /* \"#utility.yul\":1380:1389   */\n      dup3\n        /* \"#utility.yul\":1367:1390   */\n      calldataload\n        /* \"#utility.yul\":1399:1430   */\n      tag_530\n        /* \"#utility.yul\":1424:1429   */\n      dup2\n        /* \"#utility.yul\":1399:1430   */\n      tag_506\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":1449:1454   */\n      swap5\n        /* \"#utility.yul\":1501:1503   */\n      0x20\n        /* \"#utility.yul\":1486:1504   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1473:1505   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1196:1511   */\n      jump\t// out\n        /* \"#utility.yul\":1698:2154   */\n    tag_77:\n        /* \"#utility.yul\":1775:1781   */\n      0x00\n        /* \"#utility.yul\":1783:1789   */\n      dup1\n        /* \"#utility.yul\":1791:1797   */\n      0x00\n        /* \"#utility.yul\":1844:1846   */\n      0x60\n        /* \"#utility.yul\":1832:1841   */\n      dup5\n        /* \"#utility.yul\":1823:1830   */\n      dup7\n        /* \"#utility.yul\":1819:1842   */\n      sub\n        /* \"#utility.yul\":1815:1847   */\n      slt\n        /* \"#utility.yul\":1812:1864   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":1860:1861   */\n      0x00\n        /* \"#utility.yul\":1857:1858   */\n      dup1\n        /* \"#utility.yul\":1850:1862   */\n      revert\n        /* \"#utility.yul\":1812:1864   */\n    tag_533:\n        /* \"#utility.yul\":1899:1908   */\n      dup4\n        /* \"#utility.yul\":1886:1909   */\n      calldataload\n        /* \"#utility.yul\":1918:1949   */\n      tag_534\n        /* \"#utility.yul\":1943:1948   */\n      dup2\n        /* \"#utility.yul\":1918:1949   */\n      tag_506\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":1968:1973   */\n      swap3\n      pop\n        /* \"#utility.yul\":2025:2027   */\n      0x20\n        /* \"#utility.yul\":2010:2028   */\n      dup5\n      add\n        /* \"#utility.yul\":1997:2029   */\n      calldataload\n        /* \"#utility.yul\":2038:2071   */\n      tag_535\n        /* \"#utility.yul\":1997:2029   */\n      dup2\n        /* \"#utility.yul\":2038:2071   */\n      tag_506\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":1698:2154   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2090:2097   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2144:2146   */\n      0x40\n        /* \"#utility.yul\":2129:2147   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2116:2148   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1698:2154   */\n      jump\t// out\n        /* \"#utility.yul\":2159:2286   */\n    tag_507:\n        /* \"#utility.yul\":2220:2230   */\n      0x4e487b71\n        /* \"#utility.yul\":2215:2218   */\n      0xe0\n        /* \"#utility.yul\":2211:2231   */\n      shl\n        /* \"#utility.yul\":2208:2209   */\n      0x00\n        /* \"#utility.yul\":2201:2232   */\n      mstore\n        /* \"#utility.yul\":2251:2255   */\n      0x41\n        /* \"#utility.yul\":2248:2249   */\n      0x04\n        /* \"#utility.yul\":2241:2256   */\n      mstore\n        /* \"#utility.yul\":2275:2279   */\n      0x24\n        /* \"#utility.yul\":2272:2273   */\n      0x00\n        /* \"#utility.yul\":2265:2280   */\n      revert\n        /* \"#utility.yul\":2291:2566   */\n    tag_508:\n        /* \"#utility.yul\":2362:2364   */\n      0x40\n        /* \"#utility.yul\":2356:2365   */\n      mload\n        /* \"#utility.yul\":2427:2429   */\n      0x1f\n        /* \"#utility.yul\":2408:2421   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2404:2431   */\n      and\n        /* \"#utility.yul\":2392:2432   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2447:2481   */\n      dup2\n      gt\n        /* \"#utility.yul\":2483:2505   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2444:2506   */\n      or\n        /* \"#utility.yul\":2441:2529   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":2509:2527   */\n      tag_539\n      tag_507\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":2545:2547   */\n      0x40\n        /* \"#utility.yul\":2538:2560   */\n      mstore\n        /* \"#utility.yul\":2291:2566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:3102   */\n    tag_509:\n        /* \"#utility.yul\":2614:2619   */\n      0x00\n        /* \"#utility.yul\":2667:2670   */\n      dup3\n        /* \"#utility.yul\":2660:2664   */\n      0x1f\n        /* \"#utility.yul\":2652:2658   */\n      dup4\n        /* \"#utility.yul\":2648:2665   */\n      add\n        /* \"#utility.yul\":2644:2671   */\n      slt\n        /* \"#utility.yul\":2634:2689   */\n      tag_541\n      jumpi\n        /* \"#utility.yul\":2685:2686   */\n      0x00\n        /* \"#utility.yul\":2682:2683   */\n      dup1\n        /* \"#utility.yul\":2675:2687   */\n      revert\n        /* \"#utility.yul\":2634:2689   */\n    tag_541:\n        /* \"#utility.yul\":2721:2727   */\n      dup2\n        /* \"#utility.yul\":2708:2728   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2743:2745   */\n      dup2\n        /* \"#utility.yul\":2740:2766   */\n      gt\n        /* \"#utility.yul\":2737:2789   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":2769:2787   */\n      tag_543\n      tag_507\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":2813:2868   */\n      tag_544\n        /* \"#utility.yul\":2856:2858   */\n      0x1f\n        /* \"#utility.yul\":2837:2850   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2833:2860   */\n      and\n        /* \"#utility.yul\":2862:2866   */\n      0x20\n        /* \"#utility.yul\":2829:2867   */\n      add\n        /* \"#utility.yul\":2813:2868   */\n      tag_508\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":2893:2895   */\n      dup2\n        /* \"#utility.yul\":2884:2891   */\n      dup2\n        /* \"#utility.yul\":2877:2896   */\n      mstore\n        /* \"#utility.yul\":2939:2942   */\n      dup5\n        /* \"#utility.yul\":2932:2936   */\n      0x20\n        /* \"#utility.yul\":2927:2929   */\n      dup4\n        /* \"#utility.yul\":2919:2925   */\n      dup7\n        /* \"#utility.yul\":2915:2930   */\n      add\n        /* \"#utility.yul\":2911:2937   */\n      add\n        /* \"#utility.yul\":2908:2943   */\n      gt\n        /* \"#utility.yul\":2905:2960   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":2956:2957   */\n      0x00\n        /* \"#utility.yul\":2953:2954   */\n      dup1\n        /* \"#utility.yul\":2946:2958   */\n      revert\n        /* \"#utility.yul\":2905:2960   */\n    tag_545:\n        /* \"#utility.yul\":3021:3023   */\n      dup2\n        /* \"#utility.yul\":3014:3018   */\n      0x20\n        /* \"#utility.yul\":3006:3012   */\n      dup6\n        /* \"#utility.yul\":3002:3019   */\n      add\n        /* \"#utility.yul\":2995:2999   */\n      0x20\n        /* \"#utility.yul\":2986:2993   */\n      dup4\n        /* \"#utility.yul\":2982:3000   */\n      add\n        /* \"#utility.yul\":2969:3024   */\n      calldatacopy\n        /* \"#utility.yul\":3069:3070   */\n      0x00\n        /* \"#utility.yul\":3044:3060   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3062:3066   */\n      0x20\n        /* \"#utility.yul\":3040:3067   */\n      add\n        /* \"#utility.yul\":3033:3071   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3048:3055   */\n      swap4\n        /* \"#utility.yul\":2571:3102   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3107:3263   */\n    tag_510:\n        /* \"#utility.yul\":3173:3193   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3233:3237   */\n      0xff\n        /* \"#utility.yul\":3222:3238   */\n      dup2\n      and\n        /* \"#utility.yul\":3212:3239   */\n      dup2\n      eq\n        /* \"#utility.yul\":3202:3257   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":3253:3254   */\n      0x00\n        /* \"#utility.yul\":3250:3251   */\n      dup1\n        /* \"#utility.yul\":3243:3255   */\n      revert\n        /* \"#utility.yul\":3202:3257   */\n    tag_547:\n        /* \"#utility.yul\":3107:3263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3268:4088   */\n    tag_83:\n        /* \"#utility.yul\":3390:3396   */\n      0x00\n        /* \"#utility.yul\":3398:3404   */\n      dup1\n        /* \"#utility.yul\":3406:3412   */\n      0x00\n        /* \"#utility.yul\":3414:3420   */\n      dup1\n        /* \"#utility.yul\":3422:3428   */\n      0x00\n        /* \"#utility.yul\":3430:3436   */\n      dup1\n        /* \"#utility.yul\":3483:3486   */\n      0xc0\n        /* \"#utility.yul\":3471:3480   */\n      dup8\n        /* \"#utility.yul\":3462:3469   */\n      dup10\n        /* \"#utility.yul\":3458:3481   */\n      sub\n        /* \"#utility.yul\":3454:3487   */\n      slt\n        /* \"#utility.yul\":3451:3504   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":3500:3501   */\n      0x00\n        /* \"#utility.yul\":3497:3498   */\n      dup1\n        /* \"#utility.yul\":3490:3502   */\n      revert\n        /* \"#utility.yul\":3451:3504   */\n    tag_549:\n        /* \"#utility.yul\":3540:3549   */\n      dup7\n        /* \"#utility.yul\":3527:3550   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3610:3612   */\n      dup1\n        /* \"#utility.yul\":3602:3608   */\n      dup3\n        /* \"#utility.yul\":3599:3613   */\n      gt\n        /* \"#utility.yul\":3596:3630   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":3626:3627   */\n      0x00\n        /* \"#utility.yul\":3623:3624   */\n      dup1\n        /* \"#utility.yul\":3616:3628   */\n      revert\n        /* \"#utility.yul\":3596:3630   */\n    tag_550:\n        /* \"#utility.yul\":3649:3699   */\n      tag_551\n        /* \"#utility.yul\":3691:3698   */\n      dup11\n        /* \"#utility.yul\":3682:3688   */\n      dup4\n        /* \"#utility.yul\":3671:3680   */\n      dup12\n        /* \"#utility.yul\":3667:3689   */\n      add\n        /* \"#utility.yul\":3649:3699   */\n      tag_509\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":3639:3699   */\n      swap8\n      pop\n        /* \"#utility.yul\":3752:3754   */\n      0x20\n        /* \"#utility.yul\":3741:3750   */\n      dup10\n        /* \"#utility.yul\":3737:3755   */\n      add\n        /* \"#utility.yul\":3724:3756   */\n      calldataload\n        /* \"#utility.yul\":3708:3756   */\n      swap2\n      pop\n        /* \"#utility.yul\":3781:3783   */\n      dup1\n        /* \"#utility.yul\":3771:3779   */\n      dup3\n        /* \"#utility.yul\":3768:3784   */\n      gt\n        /* \"#utility.yul\":3765:3801   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":3797:3798   */\n      0x00\n        /* \"#utility.yul\":3794:3795   */\n      dup1\n        /* \"#utility.yul\":3787:3799   */\n      revert\n        /* \"#utility.yul\":3765:3801   */\n    tag_552:\n      pop\n        /* \"#utility.yul\":3820:3872   */\n      tag_553\n        /* \"#utility.yul\":3864:3871   */\n      dup10\n        /* \"#utility.yul\":3853:3861   */\n      dup3\n        /* \"#utility.yul\":3842:3851   */\n      dup11\n        /* \"#utility.yul\":3838:3862   */\n      add\n        /* \"#utility.yul\":3820:3872   */\n      tag_509\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":3810:3872   */\n      swap6\n      pop\n      pop\n        /* \"#utility.yul\":3891:3927   */\n      tag_554\n        /* \"#utility.yul\":3923:3925   */\n      0x40\n        /* \"#utility.yul\":3912:3921   */\n      dup9\n        /* \"#utility.yul\":3908:3926   */\n      add\n        /* \"#utility.yul\":3891:3927   */\n      tag_510\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":3881:3927   */\n      swap4\n      pop\n        /* \"#utility.yul\":3974:3976   */\n      0x60\n        /* \"#utility.yul\":3963:3972   */\n      dup8\n        /* \"#utility.yul\":3959:3977   */\n      add\n        /* \"#utility.yul\":3946:3978   */\n      calldataload\n        /* \"#utility.yul\":3936:3978   */\n      swap3\n      pop\n        /* \"#utility.yul\":4025:4028   */\n      0x80\n        /* \"#utility.yul\":4014:4023   */\n      dup8\n        /* \"#utility.yul\":4010:4029   */\n      add\n        /* \"#utility.yul\":3997:4030   */\n      calldataload\n        /* \"#utility.yul\":3987:4030   */\n      swap2\n      pop\n        /* \"#utility.yul\":4077:4080   */\n      0xa0\n        /* \"#utility.yul\":4066:4075   */\n      dup8\n        /* \"#utility.yul\":4062:4081   */\n      add\n        /* \"#utility.yul\":4049:4082   */\n      calldataload\n        /* \"#utility.yul\":4039:4082   */\n      swap1\n      pop\n        /* \"#utility.yul\":3268:4088   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":4490:5148   */\n    tag_125:\n        /* \"#utility.yul\":4661:4663   */\n      0x20\n        /* \"#utility.yul\":4713:4734   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4783:4796   */\n      dup3\n      mload\n        /* \"#utility.yul\":4686:4704   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4805:4827   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4632:4636   */\n      0x00\n      swap2\n        /* \"#utility.yul\":4661:4663   */\n      swap1\n        /* \"#utility.yul\":4884:4899   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":4858:4860   */\n      0x40\n        /* \"#utility.yul\":4843:4861   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":4632:4636   */\n      dup5\n        /* \"#utility.yul\":4927:5122   */\n    tag_558:\n        /* \"#utility.yul\":4941:4947   */\n      dup2\n        /* \"#utility.yul\":4938:4939   */\n      dup2\n        /* \"#utility.yul\":4935:4948   */\n      lt\n        /* \"#utility.yul\":4927:5122   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":5006:5019   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5002:5041   */\n      and\n        /* \"#utility.yul\":4990:5042   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5097:5112   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":5062:5074   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":5038:5039   */\n      0x01\n        /* \"#utility.yul\":4956:4965   */\n      add\n        /* \"#utility.yul\":4927:5122   */\n      jump(tag_558)\n    tag_560:\n      pop\n        /* \"#utility.yul\":5139:5142   */\n      swap1\n      swap7\n        /* \"#utility.yul\":4490:5148   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5153:5336   */\n    tag_511:\n        /* \"#utility.yul\":5213:5217   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5238:5244   */\n      dup3\n        /* \"#utility.yul\":5235:5265   */\n      gt\n        /* \"#utility.yul\":5232:5288   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":5268:5286   */\n      tag_563\n      tag_507\n      jump\t// in\n    tag_563:\n      pop\n        /* \"#utility.yul\":5313:5314   */\n      0x05\n        /* \"#utility.yul\":5309:5323   */\n      shl\n        /* \"#utility.yul\":5325:5329   */\n      0x20\n        /* \"#utility.yul\":5305:5330   */\n      add\n      swap1\n        /* \"#utility.yul\":5153:5336   */\n      jump\t// out\n        /* \"#utility.yul\":5341:6307   */\n    tag_133:\n        /* \"#utility.yul\":5425:5431   */\n      0x00\n        /* \"#utility.yul\":5456:5458   */\n      0x20\n        /* \"#utility.yul\":5499:5501   */\n      dup1\n        /* \"#utility.yul\":5487:5496   */\n      dup4\n        /* \"#utility.yul\":5478:5485   */\n      dup6\n        /* \"#utility.yul\":5474:5497   */\n      sub\n        /* \"#utility.yul\":5470:5502   */\n      slt\n        /* \"#utility.yul\":5467:5519   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":5515:5516   */\n      0x00\n        /* \"#utility.yul\":5512:5513   */\n      dup1\n        /* \"#utility.yul\":5505:5517   */\n      revert\n        /* \"#utility.yul\":5467:5519   */\n    tag_565:\n        /* \"#utility.yul\":5555:5564   */\n      dup3\n        /* \"#utility.yul\":5542:5565   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5580:5586   */\n      dup2\n        /* \"#utility.yul\":5577:5607   */\n      gt\n        /* \"#utility.yul\":5574:5624   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":5620:5621   */\n      0x00\n        /* \"#utility.yul\":5617:5618   */\n      dup1\n        /* \"#utility.yul\":5610:5622   */\n      revert\n        /* \"#utility.yul\":5574:5624   */\n    tag_566:\n        /* \"#utility.yul\":5643:5665   */\n      dup4\n      add\n        /* \"#utility.yul\":5696:5700   */\n      0x1f\n        /* \"#utility.yul\":5688:5701   */\n      dup2\n      add\n        /* \"#utility.yul\":5684:5711   */\n      dup6\n      sgt\n        /* \"#utility.yul\":5674:5729   */\n      tag_567\n      jumpi\n        /* \"#utility.yul\":5725:5726   */\n      0x00\n        /* \"#utility.yul\":5722:5723   */\n      dup1\n        /* \"#utility.yul\":5715:5727   */\n      revert\n        /* \"#utility.yul\":5674:5729   */\n    tag_567:\n        /* \"#utility.yul\":5761:5763   */\n      dup1\n        /* \"#utility.yul\":5748:5764   */\n      calldataload\n        /* \"#utility.yul\":5784:5844   */\n      tag_568\n        /* \"#utility.yul\":5800:5843   */\n      tag_569\n        /* \"#utility.yul\":5840:5842   */\n      dup3\n        /* \"#utility.yul\":5800:5843   */\n      tag_511\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":5784:5844   */\n      tag_508\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":5878:5893   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":5960:5961   */\n      0x05\n        /* \"#utility.yul\":5956:5966   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":5948:5967   */\n      dup3\n      add\n        /* \"#utility.yul\":5944:5972   */\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":5909:5921   */\n      dup4\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":5984:6003   */\n      dup8\n      dup4\n      gt\n        /* \"#utility.yul\":5981:6020   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":6016:6017   */\n      0x00\n        /* \"#utility.yul\":6013:6014   */\n      dup1\n        /* \"#utility.yul\":6006:6018   */\n      revert\n        /* \"#utility.yul\":5981:6020   */\n    tag_570:\n        /* \"#utility.yul\":6040:6051   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":6060:6277   */\n    tag_571:\n        /* \"#utility.yul\":6076:6082   */\n      dup3\n        /* \"#utility.yul\":6071:6074   */\n      dup5\n        /* \"#utility.yul\":6068:6083   */\n      lt\n        /* \"#utility.yul\":6060:6277   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":6156:6159   */\n      dup4\n        /* \"#utility.yul\":6143:6160   */\n      calldataload\n        /* \"#utility.yul\":6173:6204   */\n      tag_574\n        /* \"#utility.yul\":6198:6203   */\n      dup2\n        /* \"#utility.yul\":6173:6204   */\n      tag_506\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":6217:6235   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6093:6105   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":6255:6267   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":6060:6277   */\n      jump(tag_571)\n    tag_573:\n        /* \"#utility.yul\":6296:6301   */\n      swap8\n        /* \"#utility.yul\":5341:6307   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6312:6492   */\n    tag_152:\n        /* \"#utility.yul\":6371:6377   */\n      0x00\n        /* \"#utility.yul\":6424:6426   */\n      0x20\n        /* \"#utility.yul\":6412:6421   */\n      dup3\n        /* \"#utility.yul\":6403:6410   */\n      dup5\n        /* \"#utility.yul\":6399:6422   */\n      sub\n        /* \"#utility.yul\":6395:6427   */\n      slt\n        /* \"#utility.yul\":6392:6444   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":6440:6441   */\n      0x00\n        /* \"#utility.yul\":6437:6438   */\n      dup1\n        /* \"#utility.yul\":6430:6442   */\n      revert\n        /* \"#utility.yul\":6392:6444   */\n    tag_576:\n      pop\n        /* \"#utility.yul\":6463:6486   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":6312:6492   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6497:6885   */\n    tag_165:\n        /* \"#utility.yul\":6565:6571   */\n      0x00\n        /* \"#utility.yul\":6573:6579   */\n      dup1\n        /* \"#utility.yul\":6626:6628   */\n      0x40\n        /* \"#utility.yul\":6614:6623   */\n      dup4\n        /* \"#utility.yul\":6605:6612   */\n      dup6\n        /* \"#utility.yul\":6601:6624   */\n      sub\n        /* \"#utility.yul\":6597:6629   */\n      slt\n        /* \"#utility.yul\":6594:6646   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":6642:6643   */\n      0x00\n        /* \"#utility.yul\":6639:6640   */\n      dup1\n        /* \"#utility.yul\":6632:6644   */\n      revert\n        /* \"#utility.yul\":6594:6646   */\n    tag_578:\n        /* \"#utility.yul\":6681:6690   */\n      dup3\n        /* \"#utility.yul\":6668:6691   */\n      calldataload\n        /* \"#utility.yul\":6700:6731   */\n      tag_579\n        /* \"#utility.yul\":6725:6730   */\n      dup2\n        /* \"#utility.yul\":6700:6731   */\n      tag_506\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":6750:6755   */\n      swap2\n      pop\n        /* \"#utility.yul\":6807:6809   */\n      0x20\n        /* \"#utility.yul\":6792:6810   */\n      dup4\n      add\n        /* \"#utility.yul\":6779:6811   */\n      calldataload\n        /* \"#utility.yul\":6820:6853   */\n      tag_580\n        /* \"#utility.yul\":6779:6811   */\n      dup2\n        /* \"#utility.yul\":6820:6853   */\n      tag_506\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":6872:6879   */\n      dup1\n        /* \"#utility.yul\":6862:6879   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6497:6885   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6890:7552   */\n    tag_512:\n        /* \"#utility.yul\":6944:6949   */\n      0x00\n        /* \"#utility.yul\":6997:7000   */\n      dup3\n        /* \"#utility.yul\":6990:6994   */\n      0x1f\n        /* \"#utility.yul\":6982:6988   */\n      dup4\n        /* \"#utility.yul\":6978:6995   */\n      add\n        /* \"#utility.yul\":6974:7001   */\n      slt\n        /* \"#utility.yul\":6964:7019   */\n      tag_582\n      jumpi\n        /* \"#utility.yul\":7015:7016   */\n      0x00\n        /* \"#utility.yul\":7012:7013   */\n      dup1\n        /* \"#utility.yul\":7005:7017   */\n      revert\n        /* \"#utility.yul\":6964:7019   */\n    tag_582:\n        /* \"#utility.yul\":7051:7057   */\n      dup2\n        /* \"#utility.yul\":7038:7058   */\n      calldataload\n        /* \"#utility.yul\":7077:7081   */\n      0x20\n        /* \"#utility.yul\":7101:7161   */\n      tag_583\n        /* \"#utility.yul\":7117:7160   */\n      tag_569\n        /* \"#utility.yul\":7157:7159   */\n      dup4\n        /* \"#utility.yul\":7117:7160   */\n      tag_511\n      jump\t// in\n        /* \"#utility.yul\":7101:7161   */\n    tag_583:\n        /* \"#utility.yul\":7195:7210   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":7281:7282   */\n      0x05\n        /* \"#utility.yul\":7277:7287   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":7265:7288   */\n      dup5\n      add\n        /* \"#utility.yul\":7261:7293   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":7226:7238   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":7305:7320   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":7302:7337   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":7333:7334   */\n      0x00\n        /* \"#utility.yul\":7330:7331   */\n      dup1\n        /* \"#utility.yul\":7323:7335   */\n      revert\n        /* \"#utility.yul\":7302:7337   */\n    tag_585:\n        /* \"#utility.yul\":7369:7371   */\n      dup3\n        /* \"#utility.yul\":7361:7367   */\n      dup7\n        /* \"#utility.yul\":7357:7372   */\n      add\n        /* \"#utility.yul\":7381:7523   */\n    tag_586:\n        /* \"#utility.yul\":7397:7403   */\n      dup5\n        /* \"#utility.yul\":7392:7395   */\n      dup2\n        /* \"#utility.yul\":7389:7404   */\n      lt\n        /* \"#utility.yul\":7381:7523   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":7463:7480   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":7451:7481   */\n      dup4\n      mstore\n        /* \"#utility.yul\":7501:7513   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":7414:7426   */\n      dup4\n      add\n        /* \"#utility.yul\":7381:7523   */\n      jump(tag_586)\n    tag_588:\n      pop\n        /* \"#utility.yul\":7541:7546   */\n      swap7\n        /* \"#utility.yul\":6890:7552   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7557:9274   */\n    tag_171:\n        /* \"#utility.yul\":7751:7757   */\n      0x00\n        /* \"#utility.yul\":7759:7765   */\n      dup1\n        /* \"#utility.yul\":7767:7773   */\n      0x00\n        /* \"#utility.yul\":7775:7781   */\n      dup1\n        /* \"#utility.yul\":7783:7789   */\n      0x00\n        /* \"#utility.yul\":7791:7797   */\n      dup1\n        /* \"#utility.yul\":7799:7805   */\n      0x00\n        /* \"#utility.yul\":7852:7855   */\n      0xe0\n        /* \"#utility.yul\":7840:7849   */\n      dup9\n        /* \"#utility.yul\":7831:7838   */\n      dup11\n        /* \"#utility.yul\":7827:7850   */\n      sub\n        /* \"#utility.yul\":7823:7856   */\n      slt\n        /* \"#utility.yul\":7820:7873   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":7869:7870   */\n      0x00\n        /* \"#utility.yul\":7866:7867   */\n      dup1\n        /* \"#utility.yul\":7859:7871   */\n      revert\n        /* \"#utility.yul\":7820:7873   */\n    tag_590:\n        /* \"#utility.yul\":7908:7917   */\n      dup8\n        /* \"#utility.yul\":7895:7918   */\n      calldataload\n        /* \"#utility.yul\":7927:7958   */\n      tag_591\n        /* \"#utility.yul\":7952:7957   */\n      dup2\n        /* \"#utility.yul\":7927:7958   */\n      tag_506\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":7977:7982   */\n      swap7\n      pop\n        /* \"#utility.yul\":8001:8003   */\n      0x20\n        /* \"#utility.yul\":8035:8053   */\n      dup9\n      dup2\n      add\n        /* \"#utility.yul\":8022:8054   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":8101:8103   */\n      0x40\n        /* \"#utility.yul\":8086:8104   */\n      dup10\n      add\n        /* \"#utility.yul\":8073:8105   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":8152:8154   */\n      0x60\n        /* \"#utility.yul\":8137:8155   */\n      dup10\n      add\n        /* \"#utility.yul\":8124:8156   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":8207:8210   */\n      0x80\n        /* \"#utility.yul\":8192:8211   */\n      dup10\n      add\n        /* \"#utility.yul\":8179:8212   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":8261:8275   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8258:8292   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":8288:8289   */\n      0x00\n        /* \"#utility.yul\":8285:8286   */\n      dup1\n        /* \"#utility.yul\":8278:8290   */\n      revert\n        /* \"#utility.yul\":8258:8292   */\n    tag_592:\n        /* \"#utility.yul\":8326:8332   */\n      dup2\n        /* \"#utility.yul\":8315:8324   */\n      dup12\n        /* \"#utility.yul\":8311:8333   */\n      add\n        /* \"#utility.yul\":8301:8333   */\n      swap2\n      pop\n        /* \"#utility.yul\":8371:8378   */\n      dup12\n        /* \"#utility.yul\":8364:8368   */\n      0x1f\n        /* \"#utility.yul\":8360:8362   */\n      dup4\n        /* \"#utility.yul\":8356:8369   */\n      add\n        /* \"#utility.yul\":8352:8379   */\n      slt\n        /* \"#utility.yul\":8342:8397   */\n      tag_593\n      jumpi\n        /* \"#utility.yul\":8393:8394   */\n      0x00\n        /* \"#utility.yul\":8390:8391   */\n      dup1\n        /* \"#utility.yul\":8383:8395   */\n      revert\n        /* \"#utility.yul\":8342:8397   */\n    tag_593:\n        /* \"#utility.yul\":8429:8431   */\n      dup2\n        /* \"#utility.yul\":8416:8432   */\n      calldataload\n        /* \"#utility.yul\":8452:8512   */\n      tag_594\n        /* \"#utility.yul\":8468:8511   */\n      tag_569\n        /* \"#utility.yul\":8508:8510   */\n      dup3\n        /* \"#utility.yul\":8468:8511   */\n      tag_511\n      jump\t// in\n        /* \"#utility.yul\":8452:8512   */\n    tag_594:\n        /* \"#utility.yul\":8546:8561   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":8628:8629   */\n      0x05\n        /* \"#utility.yul\":8624:8634   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":8616:8635   */\n      dup4\n      add\n        /* \"#utility.yul\":8612:8640   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":8577:8589   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":8652:8671   */\n      dup15\n      dup4\n      gt\n        /* \"#utility.yul\":8649:8688   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":8684:8685   */\n      0x00\n        /* \"#utility.yul\":8681:8682   */\n      dup1\n        /* \"#utility.yul\":8674:8686   */\n      revert\n        /* \"#utility.yul\":8649:8688   */\n    tag_596:\n        /* \"#utility.yul\":8708:8719   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":8728:8874   */\n    tag_597:\n        /* \"#utility.yul\":8744:8750   */\n      dup3\n        /* \"#utility.yul\":8739:8742   */\n      dup6\n        /* \"#utility.yul\":8736:8751   */\n      lt\n        /* \"#utility.yul\":8728:8874   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":8810:8831   */\n      tag_600\n        /* \"#utility.yul\":8827:8830   */\n      dup6\n        /* \"#utility.yul\":8810:8831   */\n      tag_510\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":8798:8832   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8761:8773   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":8852:8864   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":8728:8874   */\n      jump(tag_597)\n    tag_599:\n        /* \"#utility.yul\":8893:8898   */\n      swap8\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8951:8954   */\n      0xa0\n        /* \"#utility.yul\":8936:8955   */\n      dup12\n      add\n        /* \"#utility.yul\":8923:8956   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":8968:8984   */\n      dup1\n      dup4\n      gt\n        /* \"#utility.yul\":8965:9001   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":8997:8998   */\n      0x00\n        /* \"#utility.yul\":8994:8995   */\n      dup1\n        /* \"#utility.yul\":8987:8999   */\n      revert\n        /* \"#utility.yul\":8965:9001   */\n    tag_601:\n        /* \"#utility.yul\":9020:9083   */\n      tag_602\n        /* \"#utility.yul\":9075:9082   */\n      dup13\n        /* \"#utility.yul\":9064:9072   */\n      dup5\n        /* \"#utility.yul\":9053:9062   */\n      dup14\n        /* \"#utility.yul\":9049:9073   */\n      add\n        /* \"#utility.yul\":9020:9083   */\n      tag_512\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":9010:9083   */\n      swap5\n      pop\n        /* \"#utility.yul\":9136:9139   */\n      0xc0\n        /* \"#utility.yul\":9125:9134   */\n      dup12\n        /* \"#utility.yul\":9121:9140   */\n      add\n        /* \"#utility.yul\":9108:9141   */\n      calldataload\n        /* \"#utility.yul\":9092:9141   */\n      swap3\n      pop\n        /* \"#utility.yul\":9166:9168   */\n      dup1\n        /* \"#utility.yul\":9156:9164   */\n      dup4\n        /* \"#utility.yul\":9153:9169   */\n      gt\n        /* \"#utility.yul\":9150:9186   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":9182:9183   */\n      0x00\n        /* \"#utility.yul\":9179:9180   */\n      dup1\n        /* \"#utility.yul\":9172:9184   */\n      revert\n        /* \"#utility.yul\":9150:9186   */\n    tag_603:\n      pop\n      pop\n        /* \"#utility.yul\":9205:9268   */\n      tag_604\n        /* \"#utility.yul\":9260:9267   */\n      dup11\n        /* \"#utility.yul\":9249:9257   */\n      dup3\n        /* \"#utility.yul\":9238:9247   */\n      dup12\n        /* \"#utility.yul\":9234:9258   */\n      add\n        /* \"#utility.yul\":9205:9268   */\n      tag_512\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":9195:9268   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7557:9274   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9279:9659   */\n    tag_188:\n        /* \"#utility.yul\":9358:9359   */\n      0x01\n        /* \"#utility.yul\":9354:9366   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9401:9413   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9422:9483   */\n      tag_606\n      jumpi\n        /* \"#utility.yul\":9476:9480   */\n      0x7f\n        /* \"#utility.yul\":9468:9474   */\n      dup3\n        /* \"#utility.yul\":9464:9481   */\n      and\n        /* \"#utility.yul\":9454:9481   */\n      swap2\n      pop\n        /* \"#utility.yul\":9422:9483   */\n    tag_606:\n        /* \"#utility.yul\":9529:9531   */\n      0x20\n        /* \"#utility.yul\":9521:9527   */\n      dup3\n        /* \"#utility.yul\":9518:9532   */\n      lt\n        /* \"#utility.yul\":9498:9516   */\n      dup2\n        /* \"#utility.yul\":9495:9533   */\n      eq\n        /* \"#utility.yul\":9492:9653   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":9575:9585   */\n      0x4e487b71\n        /* \"#utility.yul\":9570:9573   */\n      0xe0\n        /* \"#utility.yul\":9566:9586   */\n      shl\n        /* \"#utility.yul\":9563:9564   */\n      0x00\n        /* \"#utility.yul\":9556:9587   */\n      mstore\n        /* \"#utility.yul\":9610:9614   */\n      0x22\n        /* \"#utility.yul\":9607:9608   */\n      0x04\n        /* \"#utility.yul\":9600:9615   */\n      mstore\n        /* \"#utility.yul\":9638:9642   */\n      0x24\n        /* \"#utility.yul\":9635:9636   */\n      0x00\n        /* \"#utility.yul\":9628:9643   */\n      revert\n        /* \"#utility.yul\":9492:9653   */\n    tag_607:\n      pop\n        /* \"#utility.yul\":9279:9659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10074:10201   */\n    tag_513:\n        /* \"#utility.yul\":10135:10145   */\n      0x4e487b71\n        /* \"#utility.yul\":10130:10133   */\n      0xe0\n        /* \"#utility.yul\":10126:10146   */\n      shl\n        /* \"#utility.yul\":10123:10124   */\n      0x00\n        /* \"#utility.yul\":10116:10147   */\n      mstore\n        /* \"#utility.yul\":10166:10170   */\n      0x11\n        /* \"#utility.yul\":10163:10164   */\n      0x04\n        /* \"#utility.yul\":10156:10171   */\n      mstore\n        /* \"#utility.yul\":10190:10194   */\n      0x24\n        /* \"#utility.yul\":10187:10188   */\n      0x00\n        /* \"#utility.yul\":10180:10195   */\n      revert\n        /* \"#utility.yul\":10206:10331   */\n    tag_212:\n        /* \"#utility.yul\":10246:10250   */\n      0x00\n        /* \"#utility.yul\":10274:10275   */\n      dup3\n        /* \"#utility.yul\":10271:10272   */\n      dup3\n        /* \"#utility.yul\":10268:10276   */\n      lt\n        /* \"#utility.yul\":10265:10299   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":10279:10297   */\n      tag_612\n      tag_513\n      jump\t// in\n    tag_612:\n      pop\n        /* \"#utility.yul\":10316:10325   */\n      sub\n      swap1\n        /* \"#utility.yul\":10206:10331   */\n      jump\t// out\n        /* \"#utility.yul\":10751:11173   */\n    tag_514:\n        /* \"#utility.yul\":10840:10841   */\n      0x01\n        /* \"#utility.yul\":10883:10888   */\n      dup2\n        /* \"#utility.yul\":10840:10841   */\n      dup2\n        /* \"#utility.yul\":10897:11167   */\n    tag_615:\n        /* \"#utility.yul\":10918:10925   */\n      dup1\n        /* \"#utility.yul\":10908:10916   */\n      dup6\n        /* \"#utility.yul\":10905:10926   */\n      gt\n        /* \"#utility.yul\":10897:11167   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":10977:10981   */\n      dup2\n        /* \"#utility.yul\":10973:10974   */\n      0x00\n        /* \"#utility.yul\":10969:10975   */\n      not\n        /* \"#utility.yul\":10965:10982   */\n      div\n        /* \"#utility.yul\":10959:10963   */\n      dup3\n        /* \"#utility.yul\":10956:10983   */\n      gt\n        /* \"#utility.yul\":10953:11006   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":10986:11004   */\n      tag_619\n      tag_513\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":11036:11043   */\n      dup1\n        /* \"#utility.yul\":11026:11034   */\n      dup6\n        /* \"#utility.yul\":11022:11044   */\n      and\n        /* \"#utility.yul\":11019:11074   */\n      iszero\n      tag_620\n      jumpi\n        /* \"#utility.yul\":11056:11072   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":11019:11074   */\n    tag_620:\n        /* \"#utility.yul\":11135:11157   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":11095:11110   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":10897:11167   */\n      jump(tag_615)\n    tag_617:\n        /* \"#utility.yul\":10901:10904   */\n      pop\n        /* \"#utility.yul\":10751:11173   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11178:11984   */\n    tag_515:\n        /* \"#utility.yul\":11227:11232   */\n      0x00\n        /* \"#utility.yul\":11257:11265   */\n      dup3\n        /* \"#utility.yul\":11247:11327   */\n      tag_622\n      jumpi\n      pop\n        /* \"#utility.yul\":11298:11299   */\n      0x01\n        /* \"#utility.yul\":11312:11317   */\n      jump(tag_194)\n        /* \"#utility.yul\":11247:11327   */\n    tag_622:\n        /* \"#utility.yul\":11346:11350   */\n      dup2\n        /* \"#utility.yul\":11336:11412   */\n      tag_623\n      jumpi\n      pop\n        /* \"#utility.yul\":11383:11384   */\n      0x00\n        /* \"#utility.yul\":11397:11402   */\n      jump(tag_194)\n        /* \"#utility.yul\":11336:11412   */\n    tag_623:\n        /* \"#utility.yul\":11428:11432   */\n      dup2\n        /* \"#utility.yul\":11446:11447   */\n      0x01\n        /* \"#utility.yul\":11441:11500   */\n      dup2\n      eq\n      tag_625\n      jumpi\n        /* \"#utility.yul\":11514:11515   */\n      0x02\n        /* \"#utility.yul\":11509:11639   */\n      dup2\n      eq\n      tag_626\n      jumpi\n        /* \"#utility.yul\":11421:11639   */\n      jump(tag_624)\n        /* \"#utility.yul\":11441:11500   */\n    tag_625:\n        /* \"#utility.yul\":11471:11472   */\n      0x01\n        /* \"#utility.yul\":11462:11472   */\n      swap2\n      pop\n        /* \"#utility.yul\":11485:11490   */\n      pop\n      jump(tag_194)\n        /* \"#utility.yul\":11509:11639   */\n    tag_626:\n        /* \"#utility.yul\":11546:11549   */\n      0xff\n        /* \"#utility.yul\":11536:11544   */\n      dup5\n        /* \"#utility.yul\":11533:11550   */\n      gt\n        /* \"#utility.yul\":11530:11573   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":11553:11571   */\n      tag_628\n      tag_513\n      jump\t// in\n    tag_628:\n      pop\n      pop\n        /* \"#utility.yul\":11609:11610   */\n      0x01\n        /* \"#utility.yul\":11595:11611   */\n      dup3\n      shl\n        /* \"#utility.yul\":11624:11629   */\n      jump(tag_194)\n        /* \"#utility.yul\":11421:11639   */\n    tag_624:\n      pop\n        /* \"#utility.yul\":11723:11725   */\n      0x20\n        /* \"#utility.yul\":11713:11721   */\n      dup4\n        /* \"#utility.yul\":11710:11726   */\n      lt\n        /* \"#utility.yul\":11704:11707   */\n      0x0133\n        /* \"#utility.yul\":11698:11702   */\n      dup4\n        /* \"#utility.yul\":11695:11708   */\n      lt\n        /* \"#utility.yul\":11691:11727   */\n      and\n        /* \"#utility.yul\":11685:11687   */\n      0x4e\n        /* \"#utility.yul\":11675:11683   */\n      dup5\n        /* \"#utility.yul\":11672:11688   */\n      lt\n        /* \"#utility.yul\":11667:11669   */\n      0x0b\n        /* \"#utility.yul\":11661:11665   */\n      dup5\n        /* \"#utility.yul\":11658:11670   */\n      lt\n        /* \"#utility.yul\":11654:11689   */\n      and\n        /* \"#utility.yul\":11651:11728   */\n      or\n        /* \"#utility.yul\":11648:11807   */\n      iszero\n      tag_629\n      jumpi\n      pop\n        /* \"#utility.yul\":11760:11779   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":11792:11797   */\n      jump(tag_194)\n        /* \"#utility.yul\":11648:11807   */\n    tag_629:\n        /* \"#utility.yul\":11839:11873   */\n      tag_630\n        /* \"#utility.yul\":11864:11872   */\n      dup4\n        /* \"#utility.yul\":11858:11862   */\n      dup4\n        /* \"#utility.yul\":11839:11873   */\n      tag_514\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":11909:11915   */\n      dup1\n        /* \"#utility.yul\":11905:11906   */\n      0x00\n        /* \"#utility.yul\":11901:11907   */\n      not\n        /* \"#utility.yul\":11897:11916   */\n      div\n        /* \"#utility.yul\":11888:11895   */\n      dup3\n        /* \"#utility.yul\":11885:11917   */\n      gt\n        /* \"#utility.yul\":11882:11940   */\n      iszero\n      tag_632\n      jumpi\n        /* \"#utility.yul\":11920:11938   */\n      tag_632\n      tag_513\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":11958:11978   */\n      mul\n      swap4\n        /* \"#utility.yul\":11178:11984   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11989:12129   */\n    tag_232:\n        /* \"#utility.yul\":12047:12052   */\n      0x00\n        /* \"#utility.yul\":12076:12123   */\n      tag_375\n        /* \"#utility.yul\":12117:12121   */\n      0xff\n        /* \"#utility.yul\":12107:12115   */\n      dup5\n        /* \"#utility.yul\":12103:12122   */\n      and\n        /* \"#utility.yul\":12097:12101   */\n      dup4\n        /* \"#utility.yul\":12076:12123   */\n      tag_515\n      jump\t// in\n        /* \"#utility.yul\":12134:12302   */\n    tag_234:\n        /* \"#utility.yul\":12174:12181   */\n      0x00\n        /* \"#utility.yul\":12240:12241   */\n      dup2\n        /* \"#utility.yul\":12236:12237   */\n      0x00\n        /* \"#utility.yul\":12232:12238   */\n      not\n        /* \"#utility.yul\":12228:12242   */\n      div\n        /* \"#utility.yul\":12225:12226   */\n      dup4\n        /* \"#utility.yul\":12222:12243   */\n      gt\n        /* \"#utility.yul\":12217:12218   */\n      dup3\n        /* \"#utility.yul\":12210:12219   */\n      iszero\n        /* \"#utility.yul\":12203:12220   */\n      iszero\n        /* \"#utility.yul\":12199:12244   */\n      and\n        /* \"#utility.yul\":12196:12267   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":12247:12265   */\n      tag_637\n      tag_513\n      jump\t// in\n    tag_637:\n      pop\n        /* \"#utility.yul\":12287:12296   */\n      mul\n      swap1\n        /* \"#utility.yul\":12134:12302   */\n      jump\t// out\n        /* \"#utility.yul\":12506:12634   */\n    tag_251:\n        /* \"#utility.yul\":12546:12549   */\n      0x00\n        /* \"#utility.yul\":12577:12578   */\n      dup3\n        /* \"#utility.yul\":12573:12579   */\n      not\n        /* \"#utility.yul\":12570:12571   */\n      dup3\n        /* \"#utility.yul\":12567:12580   */\n      gt\n        /* \"#utility.yul\":12564:12603   */\n      iszero\n      tag_641\n      jumpi\n        /* \"#utility.yul\":12583:12601   */\n      tag_641\n      tag_513\n      jump\t// in\n    tag_641:\n      pop\n        /* \"#utility.yul\":12619:12628   */\n      add\n      swap1\n        /* \"#utility.yul\":12506:12634   */\n      jump\t// out\n        /* \"#utility.yul\":14543:14670   */\n    tag_324:\n        /* \"#utility.yul\":14604:14614   */\n      0x4e487b71\n        /* \"#utility.yul\":14599:14602   */\n      0xe0\n        /* \"#utility.yul\":14595:14615   */\n      shl\n        /* \"#utility.yul\":14592:14593   */\n      0x00\n        /* \"#utility.yul\":14585:14616   */\n      mstore\n        /* \"#utility.yul\":14635:14639   */\n      0x32\n        /* \"#utility.yul\":14632:14633   */\n      0x04\n        /* \"#utility.yul\":14625:14640   */\n      mstore\n        /* \"#utility.yul\":14659:14663   */\n      0x24\n        /* \"#utility.yul\":14656:14657   */\n      0x00\n        /* \"#utility.yul\":14649:14664   */\n      revert\n        /* \"#utility.yul\":15078:15253   */\n    tag_336:\n        /* \"#utility.yul\":15115:15118   */\n      0x00\n        /* \"#utility.yul\":15159:15163   */\n      0xff\n        /* \"#utility.yul\":15152:15157   */\n      dup3\n        /* \"#utility.yul\":15148:15164   */\n      and\n        /* \"#utility.yul\":15188:15192   */\n      0xff\n        /* \"#utility.yul\":15179:15186   */\n      dup2\n        /* \"#utility.yul\":15176:15193   */\n      eq\n        /* \"#utility.yul\":15173:15216   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":15196:15214   */\n      tag_650\n      tag_513\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":15245:15246   */\n      0x01\n        /* \"#utility.yul\":15232:15247   */\n      add\n      swap3\n        /* \"#utility.yul\":15078:15253   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15258:15467   */\n    tag_338:\n        /* \"#utility.yul\":15296:15299   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":15377:15379   */\n      dup1\n        /* \"#utility.yul\":15370:15375   */\n      dup4\n        /* \"#utility.yul\":15366:15380   */\n      and\n        /* \"#utility.yul\":15404:15406   */\n      dup2\n        /* \"#utility.yul\":15395:15402   */\n      dup2\n        /* \"#utility.yul\":15392:15407   */\n      eq\n        /* \"#utility.yul\":15389:15430   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":15410:15428   */\n      tag_653\n      tag_513\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":15459:15460   */\n      0x01\n        /* \"#utility.yul\":15446:15461   */\n      add\n      swap4\n        /* \"#utility.yul\":15258:15467   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17589:17806   */\n    tag_376:\n        /* \"#utility.yul\":17629:17630   */\n      0x00\n        /* \"#utility.yul\":17655:17656   */\n      dup3\n        /* \"#utility.yul\":17645:17777   */\n      tag_661\n      jumpi\n        /* \"#utility.yul\":17699:17709   */\n      0x4e487b71\n        /* \"#utility.yul\":17694:17697   */\n      0xe0\n        /* \"#utility.yul\":17690:17710   */\n      shl\n        /* \"#utility.yul\":17687:17688   */\n      0x00\n        /* \"#utility.yul\":17680:17711   */\n      mstore\n        /* \"#utility.yul\":17734:17738   */\n      0x12\n        /* \"#utility.yul\":17731:17732   */\n      0x04\n        /* \"#utility.yul\":17724:17739   */\n      mstore\n        /* \"#utility.yul\":17762:17766   */\n      0x24\n        /* \"#utility.yul\":17759:17760   */\n      0x00\n        /* \"#utility.yul\":17752:17767   */\n      revert\n        /* \"#utility.yul\":17645:17777   */\n    tag_661:\n      pop\n        /* \"#utility.yul\":17791:17800   */\n      div\n      swap1\n        /* \"#utility.yul\":17589:17806   */\n      jump\t// out\n        /* \"#utility.yul\":17811:18218   */\n    tag_387:\n        /* \"#utility.yul\":18013:18015   */\n      0x20\n        /* \"#utility.yul\":17995:18016   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":18052:18054   */\n      0x2b\n        /* \"#utility.yul\":18032:18050   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":18025:18055   */\n      mstore\n        /* \"#utility.yul\":18091:18125   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":18086:18088   */\n      0x40\n        /* \"#utility.yul\":18071:18089   */\n      dup3\n      add\n        /* \"#utility.yul\":18064:18126   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":18157:18159   */\n      0x60\n        /* \"#utility.yul\":18142:18160   */\n      dup3\n      add\n        /* \"#utility.yul\":18135:18176   */\n      mstore\n        /* \"#utility.yul\":18208:18211   */\n      0x80\n        /* \"#utility.yul\":18193:18212   */\n      add\n      swap1\n        /* \"#utility.yul\":17811:18218   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202571d74ca8ad0dcbccfcb1a364320574301c7155b19f997bac11a461f77e6a2d64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50612142806100206000396000f3fe6080604052600436106101d15760003560e01c80638da5cb5b116100f7578063b24a089311610095578063e4c97e6a11610064578063e4c97e6a1461055b578063f2fde38b1461057b578063f66608fe1461059b578063f9342285146105b057600080fd5b8063b24a0893146104e5578063c4081a4c14610505578063d89135cd14610525578063dd62ed3e1461053b57600080fd5b8063a3772662116100d1578063a377266214610470578063a457c2d714610490578063a9059cbb146104b0578063ac7fa3c6146104d057600080fd5b80638da5cb5b1461041157806394cf795e1461043957806395d89b411461045b57600080fd5b80632b9a1d3c1161016f5780633de47e321161013e5780633de47e32146103765780634cdbab5b146103a657806370a08231146103c6578063715018a6146103fc57600080fd5b80632b9a1d3c146102ff578063313ce5671461031f578063355274ea14610341578063395093511461035657600080fd5b806318160ddd116101ab57806318160ddd146102715780631e0d4ce9146102905780631e71e435146102bd57806323b872dd146102df57600080fd5b806306fdde03146101dd57806307c351dd14610208578063095ea7b31461025157600080fd5b366101d857005b600080fd5b3480156101e957600080fd5b506101f26105e0565b6040516101ff9190611987565b60405180910390f35b34801561021457600080fd5b506102416102233660046119f1565b6001600160a01b0316600090815260d2602052604090205460ff1690565b60405190151581526020016101ff565b34801561025d57600080fd5b5061024161026c366004611a0e565b610672565b34801561027d57600080fd5b506035545b6040519081526020016101ff565b34801561029c57600080fd5b506102826102ab3660046119f1565b60d46020526000908152604090205481565b3480156102c957600080fd5b506102dd6102d8366004611a0e565b61068c565b005b3480156102eb57600080fd5b506102416102fa366004611a3a565b61070b565b34801561030b57600080fd5b506102dd61031a366004611b46565b610749565b34801561032b57600080fd5b5060cc5460405160ff90911681526020016101ff565b34801561034d57600080fd5b50606554610282565b34801561036257600080fd5b50610241610371366004611a0e565b6108de565b34801561038257600080fd5b506102416103913660046119f1565b60d26020526000908152604090205460ff1681565b3480156103b257600080fd5b506102dd6103c13660046119f1565b610900565b3480156103d257600080fd5b506102826103e13660046119f1565b6001600160a01b031660009081526033602052604090205490565b34801561040857600080fd5b506102dd61092a565b34801561041d57600080fd5b506098546040516001600160a01b0390911681526020016101ff565b34801561044557600080fd5b5061044e61093e565b6040516101ff9190611bd5565b34801561046757600080fd5b506101f261099f565b34801561047c57600080fd5b506102dd61048b366004611c45565b6109ae565b34801561049c57600080fd5b506102416104ab366004611a0e565b610a4d565b3480156104bc57600080fd5b506102416104cb366004611a0e565b610ad3565b3480156104dc57600080fd5b5060cd54610282565b3480156104f157600080fd5b506102dd610500366004611ce3565b610b4c565b34801561051157600080fd5b506102dd610520366004611ce3565b610b59565b34801561053157600080fd5b5061028260d05481565b34801561054757600080fd5b50610282610556366004611cfc565b610b66565b34801561056757600080fd5b506102dd610576366004611d9b565b610b91565b34801561058757600080fd5b506102dd6105963660046119f1565b610f0a565b3480156105a757600080fd5b5060cf54610282565b3480156105bc57600080fd5b506102416105cb366004611ce3565b60d36020526000908152604090205460ff1681565b6060603680546105ef90611eb0565b80601f016020809104026020016040519081016040528092919081815260200182805461061b90611eb0565b80156106685780601f1061063d57610100808354040283529160200191610668565b820191906000526020600020905b81548152906001019060200180831161064b57829003601f168201915b5050505050905090565b600033610680818585610f80565b60019150505b92915050565b60d5546001600160a01b031633146106fd5760405162461bcd60e51b815260206004820152602960248201527f4f6e6c792063616c6c61626c652066726f6d206e6f6465436f6e74726f6c6c656044820152681c90dbdb9d1c9858dd60ba1b60648201526084015b60405180910390fd5b61070782826110a5565b5050565b60008061071783611104565b905061072385826110a5565b600061072f8285611f01565b905061073c868683611128565b5060019695505050505050565b600054610100900460ff16158080156107695750600054600160ff909116105b806107835750303b158015610783575060005460ff166001145b6107e65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106f4565b6000805460ff191660011790558015610809576000805461ff0019166101001790555b610811611141565b61081b8787611170565b61083861082986600a611ffc565b610833908661200b565b6111a1565b865161084b9060ca9060208a019061187b565b50855161085f9060cb90602089019061187b565b5060cc805460ff191660ff871617905567016345785d8a000060cd5560ce84905560cf82905561088f30846111d1565b80156108d5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6000336106808185856108f18383610b66565b6108fb919061202a565b610f80565b610908611240565b60d580546001600160a01b0319166001600160a01b0392909216919091179055565b610932611240565b61093c600061129a565b565b606060d180548060200260200160405190810160405280929190818152602001828054801561066857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610978575050505050905090565b6060603780546105ef90611eb0565b6109b6611240565b610a1d60d1805480602002602001604051908101604052809291908181526020018280548015610a0f57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109f1575b5050505050600060d26112ec565b610a2960d160006118ff565b8051610a3c9060d190602084019061191d565b50610a4a81600160d26112ec565b50565b60003381610a5b8286610b66565b905083811015610abb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106f4565b610ac88286868403610f80565b506001949350505050565b6000610ae76098546001600160a01b031690565b6001600160a01b0316336001600160a01b03161415610b1057610b0a838361136a565b50610b43565b6000610b1b83611104565b9050610b2733826110a5565b6000610b338285611f01565b9050610b3f858261136a565b5050505b50600192915050565b610b54611240565b60cd55565b610b61611240565b60cf55565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b42841015610bd45760405162461bcd60e51b815260206004820152601060248201526f4578706972656420646561646c696e6560801b60448201526064016106f4565b600086815260d3602052604090205460ff1615610c265760405162461bcd60e51b815260206004820152601060248201526f556e697175652069642065786973747360801b60448201526064016106f4565b336000610c3b6098546001600160a01b031690565b604051601960f81b60208201526000602182018190526bffffffffffffffffffffffff19606084811b8216602285015286811b821660368501528d901b16604a830152605e82018a9052607e82018b9052609e820189905291925060be0160405160208183030381529060405280519060200120905060008060005b8851816001600160401b03161015610dfb5760006001858b846001600160401b031681518110610ce957610ce9612042565b60200260200101518b856001600160401b031681518110610d0c57610d0c612042565b60200260200101518b866001600160401b031681518110610d2f57610d2f612042565b602002602001015160405160008152602001604052604051610d6d949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610d8f573d6000803e3d6000fd5b505050602060405103519050836001600160a01b0316816001600160a01b0316118015610dd457506001600160a01b038116600090815260d2602052604090205460ff165b15610de75782610de381612058565b9350505b925080610df381612078565b915050610cb7565b5060d15460ff821614610e425760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207369676e65727360881b60448201526064016106f4565b60008b815260d36020526040808220805460ff1916600117905560cd5490516001600160a01b038f1691908381818185875af1925050503d8060008114610ea5576040519150601f19603f3d011682016040523d82523d6000602084013e610eaa565b606091505b5050905080610ef15760405162461bcd60e51b815260206004820152601360248201527208cc2d2d8cac840e8de40e6cadcc8409acac6d606b1b60448201526064016106f4565b610efb8d8c6111d1565b50505050505050505050505050565b610f12611240565b6001600160a01b038116610f775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f4565b610a4a8161129a565b6001600160a01b038316610fe25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106f4565b6001600160a01b0382166110435760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106f4565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6110af8282611378565b8060d0546110bd919061202a565b60d0556001600160a01b038216600090815260d460205260409020546110e490829061202a565b6001600160a01b03909216600090815260d4602052604090209190915550565b600080606460cf5484611117919061200b565b611121919061209f565b9392505050565b6000336111368582856114a9565b610ac885858561151d565b600054610100900460ff166111685760405162461bcd60e51b81526004016106f4906120c1565b61093c6116c8565b600054610100900460ff166111975760405162461bcd60e51b81526004016106f4906120c1565b61070782826116f8565b600054610100900460ff166111c85760405162461bcd60e51b81526004016106f4906120c1565b610a4a81611746565b606554816111de60355490565b6111e8919061202a565b11156112365760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a206361702065786365656465640000000000000060448201526064016106f4565b61070782826117ba565b6098546001600160a01b0316331461093c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106f4565b609880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005b8351816001600160401b03161015611364578282600086846001600160401b03168151811061132057611320612042565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061135c81612078565b9150506112ef565b50505050565b60003361068081858561151d565b6001600160a01b0382166113d85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106f4565b6001600160a01b0382166000908152603360205260409020548181101561144c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106f4565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101611098565b505050565b60006114b58484610b66565b9050600019811461136457818110156115105760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106f4565b6113648484848403610f80565b6001600160a01b0383166115815760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106f4565b6001600160a01b0382166115e35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106f4565b6001600160a01b0383166000908152603360205260409020548181101561165b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106f4565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906116bb9086815260200190565b60405180910390a3611364565b600054610100900460ff166116ef5760405162461bcd60e51b81526004016106f4906120c1565b61093c3361129a565b600054610100900460ff1661171f5760405162461bcd60e51b81526004016106f4906120c1565b815161173290603690602085019061187b565b5080516114a490603790602084019061187b565b600054610100900460ff1661176d5760405162461bcd60e51b81526004016106f4906120c1565b600081116117b55760405162461bcd60e51b8152602060048201526015602482015274045524332304361707065643a20636170206973203605c1b60448201526064016106f4565b606555565b6001600160a01b0382166118105760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106f4565b8060356000828254611822919061202a565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b82805461188790611eb0565b90600052602060002090601f0160209004810192826118a957600085556118ef565b82601f106118c257805160ff19168380011785556118ef565b828001600101855582156118ef579182015b828111156118ef5782518255916020019190600101906118d4565b506118fb929150611972565b5090565b5080546000825590600052602060002090810190610a4a9190611972565b8280548282559060005260206000209081019282156118ef579160200282015b828111156118ef57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061193d565b5b808211156118fb5760008155600101611973565b600060208083528351808285015260005b818110156119b457858101830151858201604001528201611998565b818111156119c6576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610a4a57600080fd5b600060208284031215611a0357600080fd5b8135611121816119dc565b60008060408385031215611a2157600080fd5b8235611a2c816119dc565b946020939093013593505050565b600080600060608486031215611a4f57600080fd5b8335611a5a816119dc565b92506020840135611a6a816119dc565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611ab957611ab9611a7b565b604052919050565b600082601f830112611ad257600080fd5b81356001600160401b03811115611aeb57611aeb611a7b565b611afe601f8201601f1916602001611a91565b818152846020838601011115611b1357600080fd5b816020850160208301376000918101602001919091529392505050565b803560ff81168114611b4157600080fd5b919050565b60008060008060008060c08789031215611b5f57600080fd5b86356001600160401b0380821115611b7657600080fd5b611b828a838b01611ac1565b97506020890135915080821115611b9857600080fd5b50611ba589828a01611ac1565b955050611bb460408801611b30565b9350606087013592506080870135915060a087013590509295509295509295565b6020808252825182820181905260009190848201906040850190845b81811015611c165783516001600160a01b031683529284019291840191600101611bf1565b50909695505050505050565b60006001600160401b03821115611c3b57611c3b611a7b565b5060051b60200190565b60006020808385031215611c5857600080fd5b82356001600160401b03811115611c6e57600080fd5b8301601f81018513611c7f57600080fd5b8035611c92611c8d82611c22565b611a91565b81815260059190911b82018301908381019087831115611cb157600080fd5b928401925b82841015611cd8578335611cc9816119dc565b82529284019290840190611cb6565b979650505050505050565b600060208284031215611cf557600080fd5b5035919050565b60008060408385031215611d0f57600080fd5b8235611d1a816119dc565b91506020830135611d2a816119dc565b809150509250929050565b600082601f830112611d4657600080fd5b81356020611d56611c8d83611c22565b82815260059290921b84018101918181019086841115611d7557600080fd5b8286015b84811015611d905780358352918301918301611d79565b509695505050505050565b600080600080600080600060e0888a031215611db657600080fd5b8735611dc1816119dc565b96506020888101359650604089013595506060890135945060808901356001600160401b0380821115611df357600080fd5b818b0191508b601f830112611e0757600080fd5b8135611e15611c8d82611c22565b81815260059190911b8301840190848101908e831115611e3457600080fd5b938501935b82851015611e5957611e4a85611b30565b82529385019390850190611e39565b9750505060a08b0135925080831115611e7157600080fd5b611e7d8c848d01611d35565b945060c08b0135925080831115611e9357600080fd5b5050611ea18a828b01611d35565b91505092959891949750929550565b600181811c90821680611ec457607f821691505b60208210811415611ee557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611f1357611f13611eeb565b500390565b600181815b80851115611f53578160001904821115611f3957611f39611eeb565b80851615611f4657918102915b93841c9390800290611f1d565b509250929050565b600082611f6a57506001610686565b81611f7757506000610686565b8160018114611f8d5760028114611f9757611fb3565b6001915050610686565b60ff841115611fa857611fa8611eeb565b50506001821b610686565b5060208310610133831016604e8410600b8410161715611fd6575081810a610686565b611fe08383611f18565b8060001904821115611ff457611ff4611eeb565b029392505050565b600061112160ff841683611f5b565b600081600019048311821515161561202557612025611eeb565b500290565b6000821982111561203d5761203d611eeb565b500190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81141561206f5761206f611eeb565b60010192915050565b60006001600160401b038083168181141561209557612095611eeb565b6001019392505050565b6000826120bc57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212202571d74ca8ad0dcbccfcb1a364320574301c7155b19f997bac11a461f77e6a2d64736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2142 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xB24A0893 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE4C97E6A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE4C97E6A EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0xF66608FE EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0xF9342285 EQ PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB24A0893 EQ PUSH2 0x4E5 JUMPI DUP1 PUSH4 0xC4081A4C EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3772662 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA3772662 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0xAC7FA3C6 EQ PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x94CF795E EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B9A1D3C GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x3DE47E32 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x3DE47E32 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x4CDBAB5B EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B9A1D3C EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x1E0D4CE9 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x1E71E435 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x7C351DD EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1D8 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x31A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH2 0x282 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x8DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x92A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x99F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x48B CALLDATASIZE PUSH1 0x4 PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x9AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0xAD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCD SLOAD PUSH2 0x282 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x500 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE3 JUMP JUMPDEST PUSH2 0xB4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x520 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE3 JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH1 0xD0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CFC JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0xB91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x596 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0xF0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCF SLOAD PUSH2 0x282 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x5CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x5EF SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x61B SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x668 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x63D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x668 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x64B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x680 DUP2 DUP6 DUP6 PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C652066726F6D206E6F6465436F6E74726F6C6C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1C90DBDB9D1C9858DD PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x707 DUP3 DUP3 PUSH2 0x10A5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x717 DUP4 PUSH2 0x1104 JUMP JUMPDEST SWAP1 POP PUSH2 0x723 DUP6 DUP3 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72F DUP3 DUP6 PUSH2 0x1F01 JUMP JUMPDEST SWAP1 POP PUSH2 0x73C DUP7 DUP7 DUP4 PUSH2 0x1128 JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x769 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x783 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x783 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x7E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x809 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x811 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x81B DUP8 DUP8 PUSH2 0x1170 JUMP JUMPDEST PUSH2 0x838 PUSH2 0x829 DUP7 PUSH1 0xA PUSH2 0x1FFC JUMP JUMPDEST PUSH2 0x833 SWAP1 DUP7 PUSH2 0x200B JUMP JUMPDEST PUSH2 0x11A1 JUMP JUMPDEST DUP7 MLOAD PUSH2 0x84B SWAP1 PUSH1 0xCA SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x187B JUMP JUMPDEST POP DUP6 MLOAD PUSH2 0x85F SWAP1 PUSH1 0xCB SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x187B JUMP JUMPDEST POP PUSH1 0xCC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 AND OR SWAP1 SSTORE PUSH8 0x16345785D8A0000 PUSH1 0xCD SSTORE PUSH1 0xCE DUP5 SWAP1 SSTORE PUSH1 0xCF DUP3 SWAP1 SSTORE PUSH2 0x88F ADDRESS DUP5 PUSH2 0x11D1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x680 DUP2 DUP6 DUP6 PUSH2 0x8F1 DUP4 DUP4 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0x8FB SWAP2 SWAP1 PUSH2 0x202A JUMP JUMPDEST PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x908 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0xD5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x932 PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x93C PUSH1 0x0 PUSH2 0x129A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x668 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x978 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x5EF SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x9B6 PUSH2 0x1240 JUMP JUMPDEST PUSH2 0xA1D PUSH1 0xD1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA0F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9F1 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH1 0xD2 PUSH2 0x12EC JUMP JUMPDEST PUSH2 0xA29 PUSH1 0xD1 PUSH1 0x0 PUSH2 0x18FF JUMP JUMPDEST DUP1 MLOAD PUSH2 0xA3C SWAP1 PUSH1 0xD1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x191D JUMP JUMPDEST POP PUSH2 0xA4A DUP2 PUSH1 0x1 PUSH1 0xD2 PUSH2 0x12EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xA5B DUP3 DUP7 PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0xAC8 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xF80 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE7 PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB10 JUMPI PUSH2 0xB0A DUP4 DUP4 PUSH2 0x136A JUMP JUMPDEST POP PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1B DUP4 PUSH2 0x1104 JUMP JUMPDEST SWAP1 POP PUSH2 0xB27 CALLER DUP3 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB33 DUP3 DUP6 PUSH2 0x1F01 JUMP JUMPDEST SWAP1 POP PUSH2 0xB3F DUP6 DUP3 PUSH2 0x136A JUMP JUMPDEST POP POP POP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB54 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0xCD SSTORE JUMP JUMPDEST PUSH2 0xB61 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0xCF SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4578706972656420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x556E6971756520696420657869737473 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xC3B PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x21 DUP3 ADD DUP2 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x22 DUP6 ADD MSTORE DUP7 DUP2 SHL DUP3 AND PUSH1 0x36 DUP6 ADD MSTORE DUP14 SWAP1 SHL AND PUSH1 0x4A DUP4 ADD MSTORE PUSH1 0x5E DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x7E DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0x9E DUP3 ADD DUP10 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0xBE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP9 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0xDFB JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 DUP12 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xCE9 JUMPI PUSH2 0xCE9 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xD0C JUMPI PUSH2 0xD0C PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xD2F JUMPI PUSH2 0xD2F PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xD6D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT DUP1 ISZERO PUSH2 0xDD4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xDE7 JUMPI DUP3 PUSH2 0xDE3 DUP2 PUSH2 0x2058 JUMP JUMPDEST SWAP4 POP POP JUMPDEST SWAP3 POP DUP1 PUSH2 0xDF3 DUP2 PUSH2 0x2078 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCB7 JUMP JUMPDEST POP PUSH1 0xD1 SLOAD PUSH1 0xFF DUP3 AND EQ PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C6964207369676E657273 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xCD SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP2 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEA5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xEF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x8CC2D2D8CAC840E8DE40E6CADCC8409ACAC6D PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0xEFB DUP14 DUP13 PUSH2 0x11D1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF12 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0xA4A DUP2 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1043 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10AF DUP3 DUP3 PUSH2 0x1378 JUMP JUMPDEST DUP1 PUSH1 0xD0 SLOAD PUSH2 0x10BD SWAP2 SWAP1 PUSH2 0x202A JUMP JUMPDEST PUSH1 0xD0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x10E4 SWAP1 DUP3 SWAP1 PUSH2 0x202A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0xCF SLOAD DUP5 PUSH2 0x1117 SWAP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH2 0x1121 SWAP2 SWAP1 PUSH2 0x209F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x1136 DUP6 DUP3 DUP6 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0xAC8 DUP6 DUP6 DUP6 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x93C PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1197 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x707 DUP3 DUP3 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0xA4A DUP2 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x65 SLOAD DUP2 PUSH2 0x11DE PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x11E8 SWAP2 SWAP1 PUSH2 0x202A JUMP JUMPDEST GT ISZERO PUSH2 0x1236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0x707 DUP3 DUP3 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x93C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x98 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0x1364 JUMPI DUP3 DUP3 PUSH1 0x0 DUP7 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0x1320 JUMPI PUSH2 0x1320 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x135C DUP2 PUSH2 0x2078 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12EF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x680 DUP2 DUP6 DUP6 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x13D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x144C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x1098 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B5 DUP5 DUP5 PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1364 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0x1364 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x165B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x16BB SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x93C CALLER PUSH2 0x129A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x171F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1732 SWAP1 PUSH1 0x36 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x187B JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x14A4 SWAP1 PUSH1 0x37 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x176D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x17B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x45524332304361707065643A20636170206973203 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1822 SWAP2 SWAP1 PUSH2 0x202A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1887 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x18A9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x18EF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x18C2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x18EF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x18EF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x18EF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x18D4 JUMP JUMPDEST POP PUSH2 0x18FB SWAP3 SWAP2 POP PUSH2 0x1972 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xA4A SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x18EF JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x18EF JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x193D JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x18FB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19B4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1998 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x19C6 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1121 DUP2 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1A2C DUP2 PUSH2 0x19DC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1A5A DUP2 PUSH2 0x19DC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1A6A DUP2 PUSH2 0x19DC JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1AB9 JUMPI PUSH2 0x1AB9 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AEB JUMPI PUSH2 0x1AEB PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0x1AFE PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1A91 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1B13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1B41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1B5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1B76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B82 DUP11 DUP4 DUP12 ADD PUSH2 0x1AC1 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA5 DUP10 DUP3 DUP11 ADD PUSH2 0x1AC1 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x1BB4 PUSH1 0x40 DUP9 ADD PUSH2 0x1B30 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C16 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1BF1 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1C3B JUMPI PUSH2 0x1C3B PUSH2 0x1A7B JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1C7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1C92 PUSH2 0x1C8D DUP3 PUSH2 0x1C22 JUMP JUMPDEST PUSH2 0x1A91 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1CB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1CD8 JUMPI DUP4 CALLDATALOAD PUSH2 0x1CC9 DUP2 PUSH2 0x19DC JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1CB6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1D1A DUP2 PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1D2A DUP2 PUSH2 0x19DC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1D56 PUSH2 0x1C8D DUP4 PUSH2 0x1C22 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1D75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1D90 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1D79 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1DB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1DC1 DUP2 PUSH2 0x19DC JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1DF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E15 PUSH2 0x1C8D DUP3 PUSH2 0x1C22 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP15 DUP4 GT ISZERO PUSH2 0x1E34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x1E59 JUMPI PUSH2 0x1E4A DUP6 PUSH2 0x1B30 JUMP JUMPDEST DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x1E39 JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1E71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7D DUP13 DUP5 DUP14 ADD PUSH2 0x1D35 JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1E93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x1EA1 DUP11 DUP3 DUP12 ADD PUSH2 0x1D35 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1EC4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1EE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1F13 JUMPI PUSH2 0x1F13 PUSH2 0x1EEB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1F53 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1F39 JUMPI PUSH2 0x1F39 PUSH2 0x1EEB JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1F46 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1F1D JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F6A JUMPI POP PUSH1 0x1 PUSH2 0x686 JUMP JUMPDEST DUP2 PUSH2 0x1F77 JUMPI POP PUSH1 0x0 PUSH2 0x686 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1F8D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1F97 JUMPI PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x686 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1FA8 JUMPI PUSH2 0x1FA8 PUSH2 0x1EEB JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x686 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1FD6 JUMPI POP DUP2 DUP2 EXP PUSH2 0x686 JUMP JUMPDEST PUSH2 0x1FE0 DUP4 DUP4 PUSH2 0x1F18 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1FF4 JUMPI PUSH2 0x1FF4 PUSH2 0x1EEB JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1121 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1F5B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2025 JUMPI PUSH2 0x2025 PUSH2 0x1EEB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x203D JUMPI PUSH2 0x203D PUSH2 0x1EEB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x206F JUMPI PUSH2 0x206F PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x2095 JUMPI PUSH2 0x2095 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20BC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH18 0xD74CA8AD0DCBCCFCB1A364320574301C7155 0xB1 SWAP16 SWAP10 PUSH28 0xAC11A461F77E6A2D64736F6C634300080C0033000000000000000000 ",
							"sourceMap": "38295:5333:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1539": {
									"entryPoint": null,
									"id": 1539,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20Capped_init_1356": {
									"entryPoint": 4513,
									"id": 1356,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__ERC20Capped_init_unchained_1375": {
									"entryPoint": 5958,
									"id": 1375,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__ERC20_init_770": {
									"entryPoint": 4464,
									"id": 770,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_788": {
									"entryPoint": 5880,
									"id": 788,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_523": {
									"entryPoint": 4417,
									"id": 523,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_534": {
									"entryPoint": 5832,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1329": {
									"entryPoint": null,
									"id": 1329,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1264": {
									"entryPoint": 3968,
									"id": 1264,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1318": {
									"entryPoint": null,
									"id": 1318,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burnAndUpdate_1812": {
									"entryPoint": 4261,
									"id": 1812,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_burn_1219": {
									"entryPoint": 4984,
									"id": 1219,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_calculateBurnAmt_1783": {
									"entryPoint": 4356,
									"id": 1783,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_checkOwner_565": {
									"entryPoint": 4672,
									"id": 565,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mapSigners_1447": {
									"entryPoint": null,
									"id": 1447,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1147": {
									"entryPoint": 6074,
									"id": 1147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_1413": {
									"entryPoint": 4561,
									"id": 1413,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_484": {
									"entryPoint": null,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1307": {
									"entryPoint": 5289,
									"id": 1307,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_622": {
									"entryPoint": 4762,
									"id": 622,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1090": {
									"entryPoint": 5405,
									"id": 1090,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateMap_1671": {
									"entryPoint": 4844,
									"id": 1671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_885": {
									"entryPoint": 2918,
									"id": 885,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_910": {
									"entryPoint": 1650,
									"id": 910,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_842": {
									"entryPoint": null,
									"id": 842,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@cap_1384": {
									"entryPoint": null,
									"id": 1384,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_1548": {
									"entryPoint": null,
									"id": 1548,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1013": {
									"entryPoint": 2637,
									"id": 1013,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRewardAmt_1556": {
									"entryPoint": null,
									"id": 1556,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSigners_1597": {
									"entryPoint": 2366,
									"id": 1597,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTaxFee_1576": {
									"entryPoint": null,
									"id": 1576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_972": {
									"entryPoint": 2270,
									"id": 972,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_1535": {
									"entryPoint": 1865,
									"id": 1535,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@isContract_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mapSigner_1637": {
									"entryPoint": null,
									"id": 1637,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_798": {
									"entryPoint": 1504,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nodeControllerBurn_1839": {
									"entryPoint": 1676,
									"id": 1839,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_551": {
									"entryPoint": null,
									"id": 551,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@permitMint_1998": {
									"entryPoint": 2961,
									"id": 1998,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@renounceOwnership_579": {
									"entryPoint": 2346,
									"id": 579,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setNodeControllerContract_1824": {
									"entryPoint": 2304,
									"id": 1824,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardAmtInWei_1568": {
									"entryPoint": 2892,
									"id": 1568,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSigners_1625": {
									"entryPoint": 2478,
									"id": 1625,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTaxFee_1588": {
									"entryPoint": 2905,
									"id": 1588,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_808": {
									"entryPoint": 2463,
									"id": 808,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalBurned_1440": {
									"entryPoint": null,
									"id": 1440,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_828": {
									"entryPoint": null,
									"id": 828,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1764": {
									"entryPoint": 1803,
									"id": 1764,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_943": {
									"entryPoint": 4392,
									"id": 943,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_602": {
									"entryPoint": 3850,
									"id": 602,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1724": {
									"entryPoint": 2771,
									"id": 1724,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_867": {
									"entryPoint": 4970,
									"id": 867,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniqueIdExists_1451": {
									"entryPoint": null,
									"id": 1451,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userTotalBurned_1455": {
									"entryPoint": null,
									"id": 1455,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_array_bytes32_dyn": {
									"entryPoint": 7477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 6849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256t_uint256t_uint256t_array$_t_uint8_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr": {
									"entryPoint": 7579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_uint256": {
									"entryPoint": 6982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint8": {
									"entryPoint": 6960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e52c60fcbda90554d26f5b0e903bdffb1cb3f4010d793a15617dcee694694e3a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 7202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 8188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 8027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint64": {
									"entryPoint": 8312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 8280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7915,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8258,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6779,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:22025:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:1"
															},
															"nodeType": "YulIf",
															"src": "443:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "661:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "725:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "734:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "737:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "727:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "727:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "727:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "684:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "695:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "710:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "715:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "706:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "706:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "719:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "702:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "702:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "691:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "691:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "681:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "681:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "674:50:1"
															},
															"nodeType": "YulIf",
															"src": "671:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "650:5:1",
														"type": ""
													}
												],
												"src": "616:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "822:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "868:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "877:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "880:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "870:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "870:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "870:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "843:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "852:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "839:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "864:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:32:1"
															},
															"nodeType": "YulIf",
															"src": "832:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "893:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "919:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "906:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "897:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "963:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "938:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "938:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "978:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "988:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "978:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "788:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "799:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "811:6:1",
														"type": ""
													}
												],
												"src": "752:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1283:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1329:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1338:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1341:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1331:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1331:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1331:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1304:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1313:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1300:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1300:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1325:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1296:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:32:1"
															},
															"nodeType": "YulIf",
															"src": "1293:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1354:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1380:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1367:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1367:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1358:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1424:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1399:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1399:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1439:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1449:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1439:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1463:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1490:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1501:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1486:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1473:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1473:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1241:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1252:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1264:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1272:6:1",
														"type": ""
													}
												],
												"src": "1196:315:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1617:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1627:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1639:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1650:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1627:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1669:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1680:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1662:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1662:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1586:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1597:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1608:4:1",
														"type": ""
													}
												],
												"src": "1516:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1802:352:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1848:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1857:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1860:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1850:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1850:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1850:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1823:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1832:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1819:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1819:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1844:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1815:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1815:32:1"
															},
															"nodeType": "YulIf",
															"src": "1812:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1873:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1899:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1886:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1886:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1877:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1943:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1918:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1918:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1918:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1958:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1968:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1982:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2014:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2025:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2010:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2010:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1997:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1986:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2063:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2038:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2038:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2038:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2080:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2090:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2080:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2106:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2133:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2144:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2129:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2116:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2106:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1752:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1763:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1775:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1783:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1791:6:1",
														"type": ""
													}
												],
												"src": "1698:456:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2191:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2208:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2215:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2220:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2211:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2211:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2201:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2248:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2251:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2241:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2241:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2272:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2265:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2265:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2159:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2336:230:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2346:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2362:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2356:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2374:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2396:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2412:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2418:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2408:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2408:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2427:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2423:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2423:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2404:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2404:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2392:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2392:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2378:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2507:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2509:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2509:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2509:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2450:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2462:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2447:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2447:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2486:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2498:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2483:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2483:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2444:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:62:1"
															},
															"nodeType": "YulIf",
															"src": "2441:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2545:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2549:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2538:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2538:22:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2316:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2325:6:1",
														"type": ""
													}
												],
												"src": "2291:275:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2624:478:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2673:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2682:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2685:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2675:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2675:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2675:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2652:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2660:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2648:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2648:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2667:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2637:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2637:35:1"
															},
															"nodeType": "YulIf",
															"src": "2634:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2698:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2721:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2708:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2708:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2702:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2767:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2769:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2769:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2769:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2743:2:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2747:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2740:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2740:26:1"
															},
															"nodeType": "YulIf",
															"src": "2737:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2798:70:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2841:2:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2845:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2837:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2837:13:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2856:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2852:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2852:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2833:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2833:27:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2862:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:38:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2813:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2813:55:1"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "2802:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "2884:7:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2893:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2877:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2877:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2877:19:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2944:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2953:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2956:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2946:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2946:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2946:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2919:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2927:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2915:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2915:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2932:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2911:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2911:26:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2939:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2908:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:35:1"
															},
															"nodeType": "YulIf",
															"src": "2905:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "2986:7:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2995:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2982:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2982:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3006:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3002:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3002:17:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3021:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2969:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2969:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2969:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "3048:7:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3057:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3044:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3044:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3062:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3040:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3040:27:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3069:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3033:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3033:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3033:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3080:16:1",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "3089:7:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3080:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2598:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2606:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2614:5:1",
														"type": ""
													}
												],
												"src": "2571:531:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3154:109:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3164:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3186:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3173:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3164:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3241:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3250:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3253:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3243:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3243:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3243:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3226:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3233:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3222:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:16:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3212:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3205:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3205:35:1"
															},
															"nodeType": "YulIf",
															"src": "3202:55:1"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3133:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3144:5:1",
														"type": ""
													}
												],
												"src": "3107:156:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3441:647:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3488:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3497:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3500:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3490:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3490:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3490:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3462:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3471:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3458:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3458:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3483:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3454:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3454:33:1"
															},
															"nodeType": "YulIf",
															"src": "3451:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3513:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3540:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3527:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3527:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3517:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3559:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3569:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3563:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3614:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3623:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3626:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3616:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3616:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3616:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3602:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3610:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3599:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:14:1"
															},
															"nodeType": "YulIf",
															"src": "3596:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3639:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3671:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3682:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3667:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3667:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3691:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3649:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3649:50:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3639:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3708:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3741:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3752:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3737:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3737:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3724:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3724:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3712:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3785:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3797:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3787:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3787:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3787:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3771:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3781:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3768:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3768:16:1"
															},
															"nodeType": "YulIf",
															"src": "3765:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3810:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3842:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3853:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3838:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3838:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3864:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3820:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:52:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3810:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3881:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3912:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3923:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3908:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "3891:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3891:36:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3881:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3936:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3963:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3974:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3959:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3959:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3946:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3946:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3936:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3987:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4014:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4025:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4010:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4010:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3997:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3997:33:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3987:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4039:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4066:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4077:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4062:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4062:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4049:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:33:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "4039:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3367:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3378:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3390:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3398:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3406:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3414:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3422:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3430:6:1",
														"type": ""
													}
												],
												"src": "3268:820:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4190:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4200:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4212:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4223:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4208:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4208:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4200:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4242:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4257:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4265:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4253:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4253:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4235:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4235:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4235:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4159:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4170:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4181:4:1",
														"type": ""
													}
												],
												"src": "4093:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4383:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4393:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4405:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4401:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4401:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4393:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4435:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4450:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4466:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4471:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4462:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4462:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4475:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4458:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4458:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4446:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4446:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4428:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4428:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4428:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4352:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4363:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4374:4:1",
														"type": ""
													}
												],
												"src": "4282:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4641:507:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4651:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4661:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4655:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4672:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4690:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4701:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4686:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4686:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "4676:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4720:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4731:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4713:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4713:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4713:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4743:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "4754:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "4747:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4769:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4789:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4783:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4783:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4773:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "4812:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4820:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4805:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4805:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4805:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4836:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4847:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4858:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4843:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4843:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4836:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4870:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4888:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4896:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4884:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4884:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4874:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4908:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4917:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4912:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4976:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4997:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5012:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "5006:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5006:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5029:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5034:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "5025:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5025:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5038:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "5021:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5021:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5002:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5002:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4990:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4990:52:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4990:52:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5055:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5066:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5071:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5062:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5062:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5055:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5087:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5101:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5109:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5097:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5097:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5087:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4938:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4941:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4935:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4935:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4949:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4951:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4960:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4963:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4956:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4956:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4951:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4931:3:1",
																"statements": []
															},
															"src": "4927:195:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5131:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5139:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5131:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4610:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4621:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4632:4:1",
														"type": ""
													}
												],
												"src": "4490:658:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5222:114:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5266:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5268:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5268:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5268:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5238:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5246:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5235:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5235:30:1"
															},
															"nodeType": "YulIf",
															"src": "5232:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5297:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5313:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5316:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5309:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5325:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5305:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5305:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5297:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5202:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5213:4:1",
														"type": ""
													}
												],
												"src": "5153:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5436:871:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5446:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5456:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5450:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5503:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5512:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5515:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5505:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5505:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5505:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5478:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5487:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5474:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5474:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5499:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5470:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5470:32:1"
															},
															"nodeType": "YulIf",
															"src": "5467:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5528:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5555:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5542:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5532:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5608:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5617:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5620:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5610:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5610:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5610:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5580:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5588:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5577:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5577:30:1"
															},
															"nodeType": "YulIf",
															"src": "5574:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5633:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5647:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5658:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5643:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5643:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5637:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5713:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5722:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5725:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5715:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5715:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5715:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5692:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5696:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5688:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5688:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5703:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5684:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5684:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5677:35:1"
															},
															"nodeType": "YulIf",
															"src": "5674:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5738:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5761:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5748:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5748:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5742:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5773:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "5840:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "5800:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5800:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5784:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5784:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5777:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5853:16:1",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "5866:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "5857:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5885:3:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5890:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5878:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5878:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5902:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5913:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5918:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5909:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5909:12:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5902:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5930:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5952:2:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5960:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5963:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5956:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5956:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5948:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5948:19:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5969:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5944:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5944:28:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5934:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6004:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6013:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6016:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6006:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6006:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6006:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5987:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5995:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5984:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5984:19:1"
															},
															"nodeType": "YulIf",
															"src": "5981:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6029:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6044:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6048:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6040:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6040:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "6033:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6116:161:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6130:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6156:3:1"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "6143:12:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6143:17:1"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "6134:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "6198:5:1"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "6173:24:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6173:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6173:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6224:3:1"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "6229:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6217:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6217:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6217:18:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6248:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6259:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6264:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6255:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6255:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6248:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6071:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6068:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6068:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6084:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6086:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6097:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6102:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6093:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6093:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6086:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6064:3:1",
																"statements": []
															},
															"src": "6060:217:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6286:15:1",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "6296:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5402:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5413:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5425:6:1",
														"type": ""
													}
												],
												"src": "5341:966:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6382:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6428:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6437:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6440:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6430:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6430:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6430:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6403:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6412:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6399:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6399:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6424:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6395:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6395:32:1"
															},
															"nodeType": "YulIf",
															"src": "6392:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6453:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6476:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6463:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6463:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6453:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6348:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6359:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6371:6:1",
														"type": ""
													}
												],
												"src": "6312:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6584:301:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6630:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6639:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6642:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6632:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6632:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6632:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6605:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6614:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6601:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6601:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6626:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6597:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6597:32:1"
															},
															"nodeType": "YulIf",
															"src": "6594:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6655:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6681:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6668:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6668:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6659:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6725:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "6700:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6700:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6700:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6740:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6750:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6740:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6764:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6796:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6807:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6792:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6792:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6779:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6779:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "6768:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "6845:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "6820:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6820:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6862:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "6872:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6862:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6542:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6553:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6565:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6573:6:1",
														"type": ""
													}
												],
												"src": "6497:388:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6954:598:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7003:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7012:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7015:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7005:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7005:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7005:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6982:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6990:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6978:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6978:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6997:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6974:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6967:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6967:35:1"
															},
															"nodeType": "YulIf",
															"src": "6964:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7028:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7051:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7038:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7038:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7032:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7067:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7077:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "7071:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7090:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7157:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "7117:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7117:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7101:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7101:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7094:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7170:16:1",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "7183:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "7174:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7202:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7207:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7195:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7195:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7219:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7230:3:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "7235:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7226:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7226:12:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "7219:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7247:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7269:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7281:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "7284:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7277:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7277:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7265:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7265:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "7290:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7261:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "7251:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7321:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7330:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7333:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7323:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7323:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7323:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7308:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7316:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7305:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7305:15:1"
															},
															"nodeType": "YulIf",
															"src": "7302:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7346:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7361:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "7369:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7357:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7357:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "7350:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7437:86:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7458:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "7476:3:1"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "7463:12:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7463:17:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7451:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7451:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7451:30:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7494:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7505:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "7510:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7501:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7501:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7494:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7392:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7397:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7389:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7389:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7405:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7407:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "7418:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "7423:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7414:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7414:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7407:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7385:3:1",
																"statements": []
															},
															"src": "7381:142:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7532:14:1",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "7541:5:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7532:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_bytes32_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6928:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6936:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6944:5:1",
														"type": ""
													}
												],
												"src": "6890:662:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7810:1464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7857:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7866:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7869:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7859:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7859:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7859:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7831:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7840:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7827:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7852:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7823:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7823:33:1"
															},
															"nodeType": "YulIf",
															"src": "7820:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7882:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7908:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7895:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7895:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7886:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7952:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "7927:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7927:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7927:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7967:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7977:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7967:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7991:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8001:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7995:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8012:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8039:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8050:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8035:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8035:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8022:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8022:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8012:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8063:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8090:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8101:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8086:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8086:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8073:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8073:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8063:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8114:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8141:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8152:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8137:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8137:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8124:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8114:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8165:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8196:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8207:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8192:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8192:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8179:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8179:33:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8169:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8221:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8231:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "8225:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8276:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8285:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8288:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8278:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8278:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8278:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8264:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "8272:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8261:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8261:14:1"
															},
															"nodeType": "YulIf",
															"src": "8258:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8301:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8315:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8326:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8311:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8311:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "8305:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8381:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8390:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8393:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8383:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8383:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8383:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "8360:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8364:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8356:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8356:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8371:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8352:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8352:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8345:35:1"
															},
															"nodeType": "YulIf",
															"src": "8342:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8406:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "8429:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8416:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8416:16:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "8410:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8441:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "8508:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "8468:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8468:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8452:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8452:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8445:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8521:16:1",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "8534:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "8525:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8553:3:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "8558:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8546:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8546:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8546:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8570:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8581:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8586:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8577:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8577:12:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "8570:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8598:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "8620:2:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8628:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "8631:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "8624:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8624:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8616:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8616:19:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8637:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8612:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8612:28:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "8602:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8672:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8681:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8684:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8674:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8674:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8674:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8655:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8663:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8652:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8652:19:1"
															},
															"nodeType": "YulIf",
															"src": "8649:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8697:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "8712:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8716:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8708:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8708:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "8701:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8784:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "8805:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "8827:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_uint8",
																						"nodeType": "YulIdentifier",
																						"src": "8810:16:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8810:21:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8798:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8798:34:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8798:34:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8845:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "8856:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8861:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8852:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8852:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8845:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8739:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8744:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8736:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8736:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8752:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8754:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "8765:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8770:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8761:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8761:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8754:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8732:3:1",
																"statements": []
															},
															"src": "8728:146:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8883:15:1",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "8893:5:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "8883:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8907:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8940:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8951:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8936:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8936:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8923:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8923:33:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "8911:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8985:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8994:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8997:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8987:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8987:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8987:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "8971:8:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "8981:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8968:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8968:16:1"
															},
															"nodeType": "YulIf",
															"src": "8965:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9010:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9053:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "9064:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9049:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9049:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9075:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_bytes32_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9020:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9020:63:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "9010:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9092:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9125:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9136:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9121:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9121:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9108:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9108:33:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "9096:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9170:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9179:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9182:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9172:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9172:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9172:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "9156:8:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9166:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9153:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:16:1"
															},
															"nodeType": "YulIf",
															"src": "9150:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9195:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9238:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "9249:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9234:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9234:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9260:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_bytes32_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9205:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9205:63:1"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "9195:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256t_uint256t_uint256t_array$_t_uint8_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7728:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7739:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7751:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7759:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7767:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7775:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7783:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "7791:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "7799:6:1",
														"type": ""
													}
												],
												"src": "7557:1717:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9334:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9344:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9358:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9361:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "9354:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9354:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9344:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9375:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9405:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9411:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9401:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9401:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9379:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9452:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9454:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9468:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9476:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9464:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9464:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9454:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9432:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9425:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9425:26:1"
															},
															"nodeType": "YulIf",
															"src": "9422:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9542:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9563:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9570:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9575:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9566:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9566:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9556:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9556:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9556:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9607:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9610:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9600:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9600:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9600:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9635:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9638:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9628:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9628:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9628:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9498:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9521:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9529:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9518:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9518:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9495:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9495:38:1"
															},
															"nodeType": "YulIf",
															"src": "9492:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9314:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9323:6:1",
														"type": ""
													}
												],
												"src": "9279:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9838:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9855:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9866:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9848:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9848:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9848:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9889:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9900:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9885:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9885:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9905:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9878:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9878:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9928:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9939:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9924:18:1"
																	},
																	{
																		"hexValue": "4f6e6c792063616c6c61626c652066726f6d206e6f6465436f6e74726f6c6c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9944:34:1",
																		"type": "",
																		"value": "Only callable from nodeControlle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9917:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9917:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9917:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9999:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10010:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9995:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9995:18:1"
																	},
																	{
																		"hexValue": "72436f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10015:11:1",
																		"type": "",
																		"value": "rContract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9988:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9988:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9988:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10036:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10048:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10059:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10044:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10044:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10036:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e52c60fcbda90554d26f5b0e903bdffb1cb3f4010d793a15617dcee694694e3a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9815:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9829:4:1",
														"type": ""
													}
												],
												"src": "9664:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10106:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10123:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10130:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10135:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10126:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10126:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10116:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10116:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10163:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10166:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10156:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10156:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10156:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10187:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10190:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10180:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10180:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10180:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10074:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10255:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10277:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10279:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10279:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10279:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10271:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10274:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10268:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10268:8:1"
															},
															"nodeType": "YulIf",
															"src": "10265:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10308:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10320:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10323:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10316:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10316:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10308:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10237:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10240:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10246:4:1",
														"type": ""
													}
												],
												"src": "10206:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10510:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10527:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10538:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10520:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10520:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10561:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10572:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10557:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10557:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10577:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10550:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10550:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10550:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10600:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10611:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10596:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10596:18:1"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10616:34:1",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10589:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10589:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10589:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10671:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10682:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10667:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10667:18:1"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10687:16:1",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10660:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10660:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10660:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10713:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10725:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10736:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10721:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10721:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10713:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10487:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10501:4:1",
														"type": ""
													}
												],
												"src": "10336:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10815:358:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10825:16:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10840:1:1",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "10829:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10850:16:1",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "10859:7:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "10850:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10875:13:1",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "10883:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "10875:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10939:228:1",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "10984:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "10986:16:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10986:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "10986:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "10959:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10973:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "10969:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10969:6:1"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "10977:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "10965:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10965:17:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "10956:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10956:27:1"
																		},
																		"nodeType": "YulIf",
																		"src": "10953:53:1"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11045:29:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "11047:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "11060:5:1"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "11067:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "11056:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11056:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "11047:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "11026:8:1"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "11036:7:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11022:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11022:22:1"
																		},
																		"nodeType": "YulIf",
																		"src": "11019:55:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11087:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "11099:4:1"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "11105:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "11095:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11095:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "11087:4:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11123:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "11139:7:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "11148:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "11135:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11135:22:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "11123:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "10908:8:1"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "10918:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10905:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10905:21:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10927:3:1",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10901:3:1",
																"statements": []
															},
															"src": "10897:270:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "10779:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "10786:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "10799:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "10806:4:1",
														"type": ""
													}
												],
												"src": "10751:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11237:747:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11275:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11289:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11298:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "11289:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "11312:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "11257:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11250:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11250:16:1"
															},
															"nodeType": "YulIf",
															"src": "11247:80:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11360:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11374:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11383:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "11374:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "11397:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "11346:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11339:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11339:12:1"
															},
															"nodeType": "YulIf",
															"src": "11336:76:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11448:52:1",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "11462:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11471:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "11462:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "11485:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "11441:59:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11446:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11516:123:1",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "11551:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "11553:16:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11553:18:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "11553:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "11536:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11546:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "11533:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11533:17:1"
																				},
																				"nodeType": "YulIf",
																				"src": "11530:43:1"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "11586:25:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "11599:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11609:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11595:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11595:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "11586:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "11624:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "11509:130:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11514:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "11428:4:1"
															},
															"nodeType": "YulSwitch",
															"src": "11421:218:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11737:70:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11751:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "11764:4:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "11770:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "11760:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11760:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "11751:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "11792:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "11661:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11667:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11658:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11658:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "11675:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11685:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11672:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11672:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11654:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "11698:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11704:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11695:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11695:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "11713:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11723:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11710:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11710:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11691:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11691:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11651:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11651:77:1"
															},
															"nodeType": "YulIf",
															"src": "11648:159:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11816:57:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "11858:4:1"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "11864:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "11839:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11839:34:1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "11820:7:1",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "11829:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11918:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11920:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11920:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11920:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "11888:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11905:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "11901:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11901:6:1"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "11909:6:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "11897:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11897:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11885:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11885:32:1"
															},
															"nodeType": "YulIf",
															"src": "11882:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11949:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "11962:7:1"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "11971:6:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11958:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11958:20:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "11949:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "11208:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "11214:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "11227:5:1",
														"type": ""
													}
												],
												"src": "11178:806:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12057:72:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12067:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "12097:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "12107:8:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12117:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12103:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12103:19:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "12076:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12076:47:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "12067:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "12028:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "12034:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "12047:5:1",
														"type": ""
													}
												],
												"src": "11989:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12186:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12245:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12247:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12247:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12247:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12217:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12210:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12210:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12203:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12203:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12225:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12236:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "12232:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12232:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12240:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12228:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12228:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12222:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12222:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12199:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12199:45:1"
															},
															"nodeType": "YulIf",
															"src": "12196:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12276:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12291:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12294:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12287:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12287:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12276:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12165:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12168:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12174:7:1",
														"type": ""
													}
												],
												"src": "12134:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12414:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12424:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12436:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12447:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12432:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12432:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12424:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12466:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12481:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12489:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12477:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12477:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12459:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12459:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12459:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12383:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12394:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12405:4:1",
														"type": ""
													}
												],
												"src": "12307:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12554:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12581:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12583:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12583:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12583:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12570:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12577:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12573:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12567:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12567:13:1"
															},
															"nodeType": "YulIf",
															"src": "12564:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12612:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12623:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12626:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12619:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12619:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12612:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12537:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12540:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12546:3:1",
														"type": ""
													}
												],
												"src": "12506:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12813:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12830:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12823:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12823:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12864:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12875:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12860:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12860:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12880:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12853:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12853:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12903:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12914:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12899:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12899:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12919:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12892:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12892:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12892:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12974:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12985:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12970:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12970:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12990:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12963:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12963:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12963:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13007:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13019:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13030:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13015:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13015:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13007:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12790:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12804:4:1",
														"type": ""
													}
												],
												"src": "12639:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13219:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13236:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13247:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13229:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13229:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13229:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13270:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13281:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13266:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13266:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13286:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13259:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13259:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13259:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13309:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13320:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13305:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13305:18:1"
																	},
																	{
																		"hexValue": "4578706972656420646561646c696e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13325:18:1",
																		"type": "",
																		"value": "Expired deadline"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13298:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13298:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13298:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13353:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13365:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13376:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13361:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13361:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13353:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13196:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13210:4:1",
														"type": ""
													}
												],
												"src": "13045:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13564:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13581:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13592:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13574:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13574:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13574:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13615:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13626:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13611:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13631:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13604:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13604:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13604:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13654:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13665:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13650:18:1"
																	},
																	{
																		"hexValue": "556e6971756520696420657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13670:18:1",
																		"type": "",
																		"value": "Unique id exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13643:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13643:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13698:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13710:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13721:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13706:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13706:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13698:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13541:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13555:4:1",
														"type": ""
													}
												],
												"src": "13390:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14062:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14072:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14086:3:1",
																		"type": "",
																		"value": "248"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14091:3:1",
																		"type": "",
																		"value": "255"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "14082:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14082:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14076:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14111:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14120:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14128:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14116:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14116:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14104:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14104:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14152:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14157:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14148:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14165:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14173:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14161:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14161:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14141:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14141:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14141:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14186:41:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14200:26:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "14196:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14196:31:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14190:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14247:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14252:1:1",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14243:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14264:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "14268:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "14260:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14260:15:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14277:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14256:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14256:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14236:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14236:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14301:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14306:2:1",
																				"type": "",
																				"value": "22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14297:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14297:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14319:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "14323:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "14315:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14315:15:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14332:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14311:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14311:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14290:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14290:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14290:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14356:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14361:2:1",
																				"type": "",
																				"value": "42"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14352:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14352:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14374:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "14378:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "14370:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14370:15:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14387:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14366:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14345:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14345:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14411:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14416:2:1",
																				"type": "",
																				"value": "62"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14407:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14407:12:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "14421:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14400:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14400:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14400:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14448:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14453:2:1",
																				"type": "",
																				"value": "94"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14444:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14444:12:1"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "14458:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14437:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14437:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14437:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14485:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14490:3:1",
																				"type": "",
																				"value": "126"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14481:13:1"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "14496:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14474:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14474:29:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14512:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14523:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14528:3:1",
																		"type": "",
																		"value": "158"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14519:13:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14512:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13982:3:1",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "13987:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "13995:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "14003:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14011:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14019:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14027:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14035:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14043:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14054:3:1",
														"type": ""
													}
												],
												"src": "13735:803:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14575:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14592:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14599:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14604:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14595:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14595:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14585:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14585:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14585:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14632:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14635:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14625:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14625:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14625:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14656:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14659:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14649:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14649:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14649:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "14543:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14856:217:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14866:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14878:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14889:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14874:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14874:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14866:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14909:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14920:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14902:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14902:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14947:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14958:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14943:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14967:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14975:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14963:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14963:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14936:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14936:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14936:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15001:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15012:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14997:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14997:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15017:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14990:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14990:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14990:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15044:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15055:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15040:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15040:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15060:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15033:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15033:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15033:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14801:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14812:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14820:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14828:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14836:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14847:4:1",
														"type": ""
													}
												],
												"src": "14675:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15123:130:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15133:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15152:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15159:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15148:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15148:16:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "15137:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15194:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15196:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15196:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15196:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "15179:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15188:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15176:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15176:17:1"
															},
															"nodeType": "YulIf",
															"src": "15173:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15225:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "15236:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15245:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15232:15:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15225:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15105:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15115:3:1",
														"type": ""
													}
												],
												"src": "15078:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15304:163:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15314:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15324:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15318:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15351:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15370:5:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "15377:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15366:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15366:14:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "15355:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15408:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15410:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15410:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15410:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "15395:7:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "15404:2:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15392:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15392:15:1"
															},
															"nodeType": "YulIf",
															"src": "15389:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15439:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "15450:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15459:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15446:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15446:15:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15439:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15286:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15296:3:1",
														"type": ""
													}
												],
												"src": "15258:209:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15646:165:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15663:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15674:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15656:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15656:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15656:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15697:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15708:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15693:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15693:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15713:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15686:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15686:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15736:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15747:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15732:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15732:18:1"
																	},
																	{
																		"hexValue": "496e76616c6964207369676e657273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15752:17:1",
																		"type": "",
																		"value": "Invalid signers"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15725:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15725:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15725:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15779:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15791:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15802:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15787:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15787:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15779:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15623:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15637:4:1",
														"type": ""
													}
												],
												"src": "15472:339:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16007:14:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16009:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16016:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16009:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15991:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15999:3:1",
														"type": ""
													}
												],
												"src": "15816:205:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16200:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16217:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16228:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16210:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16210:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16210:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16251:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16262:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16247:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16247:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16267:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16240:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16240:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16240:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16290:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16301:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16286:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16286:18:1"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e64204d656368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16306:21:1",
																		"type": "",
																		"value": "Failed to send Mech"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16279:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16279:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16279:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16337:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16349:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16360:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16345:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16345:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16337:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16177:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16191:4:1",
														"type": ""
													}
												],
												"src": "16026:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16548:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16565:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16576:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16558:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16558:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16558:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16599:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16610:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16595:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16595:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16615:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16588:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16588:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16638:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16649:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16634:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16654:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16627:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16627:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16709:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16720:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16705:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16725:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16698:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16698:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16698:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16743:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16755:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16766:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16751:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16751:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16743:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16525:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16539:4:1",
														"type": ""
													}
												],
												"src": "16374:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16955:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16972:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16983:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16965:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16965:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16965:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17006:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17017:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17002:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17002:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17022:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16995:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16995:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17045:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17056:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17041:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17041:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17061:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17034:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17034:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17116:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17127:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17112:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17132:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17105:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17105:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17105:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17148:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17160:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17171:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17156:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17156:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17148:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16932:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16946:4:1",
														"type": ""
													}
												],
												"src": "16781:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17360:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17377:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17388:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17370:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17370:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17370:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17411:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17422:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17407:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17407:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17427:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17400:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17400:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17400:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17450:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17461:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17446:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17446:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17466:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17439:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17439:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17521:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17532:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17517:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17517:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17537:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17510:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17510:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17510:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17551:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17563:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17574:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17559:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17559:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17551:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17337:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17351:4:1",
														"type": ""
													}
												],
												"src": "17186:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17635:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17666:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17687:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17694:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17699:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "17690:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17690:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17680:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17680:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17680:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17731:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17734:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17724:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17724:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17724:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17759:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17762:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17752:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17752:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17752:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17655:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17648:9:1"
															},
															"nodeType": "YulIf",
															"src": "17645:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17786:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17795:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17798:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "17791:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17791:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17786:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17620:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17623:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17629:1:1",
														"type": ""
													}
												],
												"src": "17589:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17985:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18002:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18013:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17995:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17995:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18036:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18047:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18032:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18032:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18052:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18025:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18025:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18075:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18086:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18071:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18071:18:1"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18091:34:1",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18064:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18064:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18146:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18157:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18142:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18142:18:1"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18162:13:1",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18135:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18135:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18135:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18185:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18197:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18208:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18193:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18193:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18185:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17962:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17976:4:1",
														"type": ""
													}
												],
												"src": "17811:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18397:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18414:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18425:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18407:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18407:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18407:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18448:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18459:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18444:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18444:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18464:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18437:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18437:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18437:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18487:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18498:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18483:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18483:18:1"
																	},
																	{
																		"hexValue": "45524332304361707065643a20636170206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18503:27:1",
																		"type": "",
																		"value": "ERC20Capped: cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18476:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18476:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18476:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18540:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18552:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18563:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18548:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18548:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18540:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18374:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18388:4:1",
														"type": ""
													}
												],
												"src": "18223:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18751:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18768:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18779:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18761:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18761:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18761:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18802:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18813:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18798:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18798:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18818:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18791:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18791:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18791:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18841:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18852:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18837:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18837:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18857:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18830:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18830:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18901:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18913:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18924:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18909:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18909:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18901:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18728:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18742:4:1",
														"type": ""
													}
												],
												"src": "18577:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19112:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19129:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19140:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19122:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19122:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19163:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19174:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19159:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19159:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19179:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19152:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19152:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19152:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19202:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19213:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19198:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19218:34:1",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19191:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19191:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19273:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19284:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19269:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19269:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19289:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19262:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19262:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19262:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19302:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19314:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19325:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19310:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19310:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19302:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19089:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19103:4:1",
														"type": ""
													}
												],
												"src": "18938:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19514:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19531:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19542:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19524:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19524:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19524:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19565:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19576:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19561:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19561:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19581:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19554:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19554:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19604:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19615:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19600:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19600:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19620:34:1",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19593:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19593:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19675:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19686:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19671:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19671:18:1"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19691:4:1",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19664:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19664:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19664:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19705:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19717:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19728:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19713:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19713:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19705:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19491:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19505:4:1",
														"type": ""
													}
												],
												"src": "19340:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19917:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19934:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19945:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19927:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19927:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19968:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19979:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19964:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19984:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19957:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19957:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19957:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20007:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20018:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20003:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20003:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20023:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19996:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19996:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19996:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20064:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20076:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20087:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20072:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20072:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20064:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19894:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19908:4:1",
														"type": ""
													}
												],
												"src": "19743:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20275:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20292:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20303:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20285:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20285:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20285:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20326:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20337:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20322:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20322:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20342:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20315:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20315:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20315:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20365:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20376:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20361:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20361:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20381:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20354:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20354:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20354:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20436:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20447:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20432:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20432:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20452:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20425:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20425:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20425:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20469:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20481:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20492:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20477:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20477:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20469:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20252:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20266:4:1",
														"type": ""
													}
												],
												"src": "20101:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20681:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20698:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20709:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20691:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20691:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20732:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20743:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20728:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20728:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20748:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20721:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20721:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20721:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20771:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20782:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20767:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20787:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20760:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20760:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20760:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20842:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20853:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20838:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20838:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20858:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20831:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20831:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20831:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20873:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20885:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20896:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20881:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20881:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20873:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20658:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20672:4:1",
														"type": ""
													}
												],
												"src": "20507:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21085:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21102:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21113:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21095:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21095:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21095:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21136:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21147:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21132:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21132:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21152:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21125:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21125:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21125:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21175:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21186:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21171:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21171:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21191:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21164:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21164:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21164:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21246:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21257:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21242:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21242:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21262:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21235:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21235:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21235:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21280:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21292:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21303:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21288:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21288:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21280:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21062:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21076:4:1",
														"type": ""
													}
												],
												"src": "20911:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21492:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21509:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21520:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21502:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21502:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21543:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21554:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21539:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21539:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21559:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21532:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21532:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21532:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21582:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21593:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21578:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21578:18:1"
																	},
																	{
																		"hexValue": "45524332304361707065643a206361702069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21598:23:1",
																		"type": "",
																		"value": "ERC20Capped: cap is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21571:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21571:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21571:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21631:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21643:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21654:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21639:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21639:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21631:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21469:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21483:4:1",
														"type": ""
													}
												],
												"src": "21318:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21842:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21859:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21870:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21852:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21852:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21852:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21893:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21904:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21889:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21889:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21909:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21882:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21882:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21882:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21932:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21943:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21928:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21948:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21921:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21921:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21921:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21991:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22003:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22014:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21999:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21999:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21991:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21819:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21833:4:1",
														"type": ""
													}
												],
												"src": "21668:355:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_uint8(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_array_bytes32_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_address_payablet_uint256t_uint256t_uint256t_array$_t_uint8_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        value1 := calldataload(add(headStart, _1))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, shl(5, _4)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_uint8(src))\n            dst := add(dst, _1)\n        }\n        value4 := dst_1\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _2) { revert(0, 0) }\n        value5 := abi_decode_array_bytes32_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 192))\n        if gt(offset_2, _2) { revert(0, 0) }\n        value6 := abi_decode_array_bytes32_dyn(add(headStart, offset_2), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_e52c60fcbda90554d26f5b0e903bdffb1cb3f4010d793a15617dcee694694e3a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Only callable from nodeControlle\")\n        mstore(add(headStart, 96), \"rContract\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Expired deadline\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Unique id exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value7, value6, value5, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := shl(248, 255)\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 1), and(value1, _1))\n        let _2 := not(0xffffffffffffffffffffffff)\n        mstore(add(pos, 2), and(shl(96, value2), _2))\n        mstore(add(pos, 22), and(shl(96, value3), _2))\n        mstore(add(pos, 42), and(shl(96, value4), _2))\n        mstore(add(pos, 62), value5)\n        mstore(add(pos, 94), value6)\n        mstore(add(pos, 126), value7)\n        end := add(pos, 158)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function increment_t_uint64(value) -> ret\n    {\n        let _1 := 0xffffffffffffffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid signers\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Failed to send Mech\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Capped: cap exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ERC20Capped: cap is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101d15760003560e01c80638da5cb5b116100f7578063b24a089311610095578063e4c97e6a11610064578063e4c97e6a1461055b578063f2fde38b1461057b578063f66608fe1461059b578063f9342285146105b057600080fd5b8063b24a0893146104e5578063c4081a4c14610505578063d89135cd14610525578063dd62ed3e1461053b57600080fd5b8063a3772662116100d1578063a377266214610470578063a457c2d714610490578063a9059cbb146104b0578063ac7fa3c6146104d057600080fd5b80638da5cb5b1461041157806394cf795e1461043957806395d89b411461045b57600080fd5b80632b9a1d3c1161016f5780633de47e321161013e5780633de47e32146103765780634cdbab5b146103a657806370a08231146103c6578063715018a6146103fc57600080fd5b80632b9a1d3c146102ff578063313ce5671461031f578063355274ea14610341578063395093511461035657600080fd5b806318160ddd116101ab57806318160ddd146102715780631e0d4ce9146102905780631e71e435146102bd57806323b872dd146102df57600080fd5b806306fdde03146101dd57806307c351dd14610208578063095ea7b31461025157600080fd5b366101d857005b600080fd5b3480156101e957600080fd5b506101f26105e0565b6040516101ff9190611987565b60405180910390f35b34801561021457600080fd5b506102416102233660046119f1565b6001600160a01b0316600090815260d2602052604090205460ff1690565b60405190151581526020016101ff565b34801561025d57600080fd5b5061024161026c366004611a0e565b610672565b34801561027d57600080fd5b506035545b6040519081526020016101ff565b34801561029c57600080fd5b506102826102ab3660046119f1565b60d46020526000908152604090205481565b3480156102c957600080fd5b506102dd6102d8366004611a0e565b61068c565b005b3480156102eb57600080fd5b506102416102fa366004611a3a565b61070b565b34801561030b57600080fd5b506102dd61031a366004611b46565b610749565b34801561032b57600080fd5b5060cc5460405160ff90911681526020016101ff565b34801561034d57600080fd5b50606554610282565b34801561036257600080fd5b50610241610371366004611a0e565b6108de565b34801561038257600080fd5b506102416103913660046119f1565b60d26020526000908152604090205460ff1681565b3480156103b257600080fd5b506102dd6103c13660046119f1565b610900565b3480156103d257600080fd5b506102826103e13660046119f1565b6001600160a01b031660009081526033602052604090205490565b34801561040857600080fd5b506102dd61092a565b34801561041d57600080fd5b506098546040516001600160a01b0390911681526020016101ff565b34801561044557600080fd5b5061044e61093e565b6040516101ff9190611bd5565b34801561046757600080fd5b506101f261099f565b34801561047c57600080fd5b506102dd61048b366004611c45565b6109ae565b34801561049c57600080fd5b506102416104ab366004611a0e565b610a4d565b3480156104bc57600080fd5b506102416104cb366004611a0e565b610ad3565b3480156104dc57600080fd5b5060cd54610282565b3480156104f157600080fd5b506102dd610500366004611ce3565b610b4c565b34801561051157600080fd5b506102dd610520366004611ce3565b610b59565b34801561053157600080fd5b5061028260d05481565b34801561054757600080fd5b50610282610556366004611cfc565b610b66565b34801561056757600080fd5b506102dd610576366004611d9b565b610b91565b34801561058757600080fd5b506102dd6105963660046119f1565b610f0a565b3480156105a757600080fd5b5060cf54610282565b3480156105bc57600080fd5b506102416105cb366004611ce3565b60d36020526000908152604090205460ff1681565b6060603680546105ef90611eb0565b80601f016020809104026020016040519081016040528092919081815260200182805461061b90611eb0565b80156106685780601f1061063d57610100808354040283529160200191610668565b820191906000526020600020905b81548152906001019060200180831161064b57829003601f168201915b5050505050905090565b600033610680818585610f80565b60019150505b92915050565b60d5546001600160a01b031633146106fd5760405162461bcd60e51b815260206004820152602960248201527f4f6e6c792063616c6c61626c652066726f6d206e6f6465436f6e74726f6c6c656044820152681c90dbdb9d1c9858dd60ba1b60648201526084015b60405180910390fd5b61070782826110a5565b5050565b60008061071783611104565b905061072385826110a5565b600061072f8285611f01565b905061073c868683611128565b5060019695505050505050565b600054610100900460ff16158080156107695750600054600160ff909116105b806107835750303b158015610783575060005460ff166001145b6107e65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106f4565b6000805460ff191660011790558015610809576000805461ff0019166101001790555b610811611141565b61081b8787611170565b61083861082986600a611ffc565b610833908661200b565b6111a1565b865161084b9060ca9060208a019061187b565b50855161085f9060cb90602089019061187b565b5060cc805460ff191660ff871617905567016345785d8a000060cd5560ce84905560cf82905561088f30846111d1565b80156108d5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6000336106808185856108f18383610b66565b6108fb919061202a565b610f80565b610908611240565b60d580546001600160a01b0319166001600160a01b0392909216919091179055565b610932611240565b61093c600061129a565b565b606060d180548060200260200160405190810160405280929190818152602001828054801561066857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610978575050505050905090565b6060603780546105ef90611eb0565b6109b6611240565b610a1d60d1805480602002602001604051908101604052809291908181526020018280548015610a0f57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109f1575b5050505050600060d26112ec565b610a2960d160006118ff565b8051610a3c9060d190602084019061191d565b50610a4a81600160d26112ec565b50565b60003381610a5b8286610b66565b905083811015610abb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106f4565b610ac88286868403610f80565b506001949350505050565b6000610ae76098546001600160a01b031690565b6001600160a01b0316336001600160a01b03161415610b1057610b0a838361136a565b50610b43565b6000610b1b83611104565b9050610b2733826110a5565b6000610b338285611f01565b9050610b3f858261136a565b5050505b50600192915050565b610b54611240565b60cd55565b610b61611240565b60cf55565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b42841015610bd45760405162461bcd60e51b815260206004820152601060248201526f4578706972656420646561646c696e6560801b60448201526064016106f4565b600086815260d3602052604090205460ff1615610c265760405162461bcd60e51b815260206004820152601060248201526f556e697175652069642065786973747360801b60448201526064016106f4565b336000610c3b6098546001600160a01b031690565b604051601960f81b60208201526000602182018190526bffffffffffffffffffffffff19606084811b8216602285015286811b821660368501528d901b16604a830152605e82018a9052607e82018b9052609e820189905291925060be0160405160208183030381529060405280519060200120905060008060005b8851816001600160401b03161015610dfb5760006001858b846001600160401b031681518110610ce957610ce9612042565b60200260200101518b856001600160401b031681518110610d0c57610d0c612042565b60200260200101518b866001600160401b031681518110610d2f57610d2f612042565b602002602001015160405160008152602001604052604051610d6d949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610d8f573d6000803e3d6000fd5b505050602060405103519050836001600160a01b0316816001600160a01b0316118015610dd457506001600160a01b038116600090815260d2602052604090205460ff165b15610de75782610de381612058565b9350505b925080610df381612078565b915050610cb7565b5060d15460ff821614610e425760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207369676e65727360881b60448201526064016106f4565b60008b815260d36020526040808220805460ff1916600117905560cd5490516001600160a01b038f1691908381818185875af1925050503d8060008114610ea5576040519150601f19603f3d011682016040523d82523d6000602084013e610eaa565b606091505b5050905080610ef15760405162461bcd60e51b815260206004820152601360248201527208cc2d2d8cac840e8de40e6cadcc8409acac6d606b1b60448201526064016106f4565b610efb8d8c6111d1565b50505050505050505050505050565b610f12611240565b6001600160a01b038116610f775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f4565b610a4a8161129a565b6001600160a01b038316610fe25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106f4565b6001600160a01b0382166110435760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106f4565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6110af8282611378565b8060d0546110bd919061202a565b60d0556001600160a01b038216600090815260d460205260409020546110e490829061202a565b6001600160a01b03909216600090815260d4602052604090209190915550565b600080606460cf5484611117919061200b565b611121919061209f565b9392505050565b6000336111368582856114a9565b610ac885858561151d565b600054610100900460ff166111685760405162461bcd60e51b81526004016106f4906120c1565b61093c6116c8565b600054610100900460ff166111975760405162461bcd60e51b81526004016106f4906120c1565b61070782826116f8565b600054610100900460ff166111c85760405162461bcd60e51b81526004016106f4906120c1565b610a4a81611746565b606554816111de60355490565b6111e8919061202a565b11156112365760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a206361702065786365656465640000000000000060448201526064016106f4565b61070782826117ba565b6098546001600160a01b0316331461093c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106f4565b609880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005b8351816001600160401b03161015611364578282600086846001600160401b03168151811061132057611320612042565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061135c81612078565b9150506112ef565b50505050565b60003361068081858561151d565b6001600160a01b0382166113d85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106f4565b6001600160a01b0382166000908152603360205260409020548181101561144c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106f4565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101611098565b505050565b60006114b58484610b66565b9050600019811461136457818110156115105760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106f4565b6113648484848403610f80565b6001600160a01b0383166115815760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106f4565b6001600160a01b0382166115e35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106f4565b6001600160a01b0383166000908152603360205260409020548181101561165b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106f4565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906116bb9086815260200190565b60405180910390a3611364565b600054610100900460ff166116ef5760405162461bcd60e51b81526004016106f4906120c1565b61093c3361129a565b600054610100900460ff1661171f5760405162461bcd60e51b81526004016106f4906120c1565b815161173290603690602085019061187b565b5080516114a490603790602084019061187b565b600054610100900460ff1661176d5760405162461bcd60e51b81526004016106f4906120c1565b600081116117b55760405162461bcd60e51b8152602060048201526015602482015274045524332304361707065643a20636170206973203605c1b60448201526064016106f4565b606555565b6001600160a01b0382166118105760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106f4565b8060356000828254611822919061202a565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b82805461188790611eb0565b90600052602060002090601f0160209004810192826118a957600085556118ef565b82601f106118c257805160ff19168380011785556118ef565b828001600101855582156118ef579182015b828111156118ef5782518255916020019190600101906118d4565b506118fb929150611972565b5090565b5080546000825590600052602060002090810190610a4a9190611972565b8280548282559060005260206000209081019282156118ef579160200282015b828111156118ef57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061193d565b5b808211156118fb5760008155600101611973565b600060208083528351808285015260005b818110156119b457858101830151858201604001528201611998565b818111156119c6576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610a4a57600080fd5b600060208284031215611a0357600080fd5b8135611121816119dc565b60008060408385031215611a2157600080fd5b8235611a2c816119dc565b946020939093013593505050565b600080600060608486031215611a4f57600080fd5b8335611a5a816119dc565b92506020840135611a6a816119dc565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611ab957611ab9611a7b565b604052919050565b600082601f830112611ad257600080fd5b81356001600160401b03811115611aeb57611aeb611a7b565b611afe601f8201601f1916602001611a91565b818152846020838601011115611b1357600080fd5b816020850160208301376000918101602001919091529392505050565b803560ff81168114611b4157600080fd5b919050565b60008060008060008060c08789031215611b5f57600080fd5b86356001600160401b0380821115611b7657600080fd5b611b828a838b01611ac1565b97506020890135915080821115611b9857600080fd5b50611ba589828a01611ac1565b955050611bb460408801611b30565b9350606087013592506080870135915060a087013590509295509295509295565b6020808252825182820181905260009190848201906040850190845b81811015611c165783516001600160a01b031683529284019291840191600101611bf1565b50909695505050505050565b60006001600160401b03821115611c3b57611c3b611a7b565b5060051b60200190565b60006020808385031215611c5857600080fd5b82356001600160401b03811115611c6e57600080fd5b8301601f81018513611c7f57600080fd5b8035611c92611c8d82611c22565b611a91565b81815260059190911b82018301908381019087831115611cb157600080fd5b928401925b82841015611cd8578335611cc9816119dc565b82529284019290840190611cb6565b979650505050505050565b600060208284031215611cf557600080fd5b5035919050565b60008060408385031215611d0f57600080fd5b8235611d1a816119dc565b91506020830135611d2a816119dc565b809150509250929050565b600082601f830112611d4657600080fd5b81356020611d56611c8d83611c22565b82815260059290921b84018101918181019086841115611d7557600080fd5b8286015b84811015611d905780358352918301918301611d79565b509695505050505050565b600080600080600080600060e0888a031215611db657600080fd5b8735611dc1816119dc565b96506020888101359650604089013595506060890135945060808901356001600160401b0380821115611df357600080fd5b818b0191508b601f830112611e0757600080fd5b8135611e15611c8d82611c22565b81815260059190911b8301840190848101908e831115611e3457600080fd5b938501935b82851015611e5957611e4a85611b30565b82529385019390850190611e39565b9750505060a08b0135925080831115611e7157600080fd5b611e7d8c848d01611d35565b945060c08b0135925080831115611e9357600080fd5b5050611ea18a828b01611d35565b91505092959891949750929550565b600181811c90821680611ec457607f821691505b60208210811415611ee557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611f1357611f13611eeb565b500390565b600181815b80851115611f53578160001904821115611f3957611f39611eeb565b80851615611f4657918102915b93841c9390800290611f1d565b509250929050565b600082611f6a57506001610686565b81611f7757506000610686565b8160018114611f8d5760028114611f9757611fb3565b6001915050610686565b60ff841115611fa857611fa8611eeb565b50506001821b610686565b5060208310610133831016604e8410600b8410161715611fd6575081810a610686565b611fe08383611f18565b8060001904821115611ff457611ff4611eeb565b029392505050565b600061112160ff841683611f5b565b600081600019048311821515161561202557612025611eeb565b500290565b6000821982111561203d5761203d611eeb565b500190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81141561206f5761206f611eeb565b60010192915050565b60006001600160401b038083168181141561209557612095611eeb565b6001019392505050565b6000826120bc57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212202571d74ca8ad0dcbccfcb1a364320574301c7155b19f997bac11a461f77e6a2d64736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xB24A0893 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE4C97E6A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE4C97E6A EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0xF66608FE EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0xF9342285 EQ PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB24A0893 EQ PUSH2 0x4E5 JUMPI DUP1 PUSH4 0xC4081A4C EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3772662 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA3772662 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0xAC7FA3C6 EQ PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x94CF795E EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B9A1D3C GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x3DE47E32 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x3DE47E32 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x4CDBAB5B EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B9A1D3C EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x1E0D4CE9 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x1E71E435 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x7C351DD EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1D8 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x31A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH2 0x282 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x8DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x92A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x99F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x48B CALLDATASIZE PUSH1 0x4 PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x9AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0xAD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCD SLOAD PUSH2 0x282 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x500 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE3 JUMP JUMPDEST PUSH2 0xB4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x520 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE3 JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH1 0xD0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CFC JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0xB91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x596 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0xF0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCF SLOAD PUSH2 0x282 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x5CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x5EF SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x61B SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x668 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x63D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x668 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x64B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x680 DUP2 DUP6 DUP6 PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C652066726F6D206E6F6465436F6E74726F6C6C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1C90DBDB9D1C9858DD PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x707 DUP3 DUP3 PUSH2 0x10A5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x717 DUP4 PUSH2 0x1104 JUMP JUMPDEST SWAP1 POP PUSH2 0x723 DUP6 DUP3 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72F DUP3 DUP6 PUSH2 0x1F01 JUMP JUMPDEST SWAP1 POP PUSH2 0x73C DUP7 DUP7 DUP4 PUSH2 0x1128 JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x769 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x783 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x783 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x7E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x809 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x811 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x81B DUP8 DUP8 PUSH2 0x1170 JUMP JUMPDEST PUSH2 0x838 PUSH2 0x829 DUP7 PUSH1 0xA PUSH2 0x1FFC JUMP JUMPDEST PUSH2 0x833 SWAP1 DUP7 PUSH2 0x200B JUMP JUMPDEST PUSH2 0x11A1 JUMP JUMPDEST DUP7 MLOAD PUSH2 0x84B SWAP1 PUSH1 0xCA SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x187B JUMP JUMPDEST POP DUP6 MLOAD PUSH2 0x85F SWAP1 PUSH1 0xCB SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x187B JUMP JUMPDEST POP PUSH1 0xCC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 AND OR SWAP1 SSTORE PUSH8 0x16345785D8A0000 PUSH1 0xCD SSTORE PUSH1 0xCE DUP5 SWAP1 SSTORE PUSH1 0xCF DUP3 SWAP1 SSTORE PUSH2 0x88F ADDRESS DUP5 PUSH2 0x11D1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x680 DUP2 DUP6 DUP6 PUSH2 0x8F1 DUP4 DUP4 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0x8FB SWAP2 SWAP1 PUSH2 0x202A JUMP JUMPDEST PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x908 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0xD5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x932 PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x93C PUSH1 0x0 PUSH2 0x129A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x668 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x978 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x5EF SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x9B6 PUSH2 0x1240 JUMP JUMPDEST PUSH2 0xA1D PUSH1 0xD1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA0F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9F1 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH1 0xD2 PUSH2 0x12EC JUMP JUMPDEST PUSH2 0xA29 PUSH1 0xD1 PUSH1 0x0 PUSH2 0x18FF JUMP JUMPDEST DUP1 MLOAD PUSH2 0xA3C SWAP1 PUSH1 0xD1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x191D JUMP JUMPDEST POP PUSH2 0xA4A DUP2 PUSH1 0x1 PUSH1 0xD2 PUSH2 0x12EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xA5B DUP3 DUP7 PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0xAC8 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xF80 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE7 PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB10 JUMPI PUSH2 0xB0A DUP4 DUP4 PUSH2 0x136A JUMP JUMPDEST POP PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1B DUP4 PUSH2 0x1104 JUMP JUMPDEST SWAP1 POP PUSH2 0xB27 CALLER DUP3 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB33 DUP3 DUP6 PUSH2 0x1F01 JUMP JUMPDEST SWAP1 POP PUSH2 0xB3F DUP6 DUP3 PUSH2 0x136A JUMP JUMPDEST POP POP POP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB54 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0xCD SSTORE JUMP JUMPDEST PUSH2 0xB61 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0xCF SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4578706972656420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x556E6971756520696420657869737473 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xC3B PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x21 DUP3 ADD DUP2 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x22 DUP6 ADD MSTORE DUP7 DUP2 SHL DUP3 AND PUSH1 0x36 DUP6 ADD MSTORE DUP14 SWAP1 SHL AND PUSH1 0x4A DUP4 ADD MSTORE PUSH1 0x5E DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x7E DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0x9E DUP3 ADD DUP10 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0xBE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP9 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0xDFB JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 DUP12 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xCE9 JUMPI PUSH2 0xCE9 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xD0C JUMPI PUSH2 0xD0C PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xD2F JUMPI PUSH2 0xD2F PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xD6D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT DUP1 ISZERO PUSH2 0xDD4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xDE7 JUMPI DUP3 PUSH2 0xDE3 DUP2 PUSH2 0x2058 JUMP JUMPDEST SWAP4 POP POP JUMPDEST SWAP3 POP DUP1 PUSH2 0xDF3 DUP2 PUSH2 0x2078 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCB7 JUMP JUMPDEST POP PUSH1 0xD1 SLOAD PUSH1 0xFF DUP3 AND EQ PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C6964207369676E657273 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xCD SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP2 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEA5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xEF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x8CC2D2D8CAC840E8DE40E6CADCC8409ACAC6D PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0xEFB DUP14 DUP13 PUSH2 0x11D1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF12 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0xA4A DUP2 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1043 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10AF DUP3 DUP3 PUSH2 0x1378 JUMP JUMPDEST DUP1 PUSH1 0xD0 SLOAD PUSH2 0x10BD SWAP2 SWAP1 PUSH2 0x202A JUMP JUMPDEST PUSH1 0xD0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x10E4 SWAP1 DUP3 SWAP1 PUSH2 0x202A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0xCF SLOAD DUP5 PUSH2 0x1117 SWAP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH2 0x1121 SWAP2 SWAP1 PUSH2 0x209F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x1136 DUP6 DUP3 DUP6 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0xAC8 DUP6 DUP6 DUP6 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x93C PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1197 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x707 DUP3 DUP3 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0xA4A DUP2 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x65 SLOAD DUP2 PUSH2 0x11DE PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x11E8 SWAP2 SWAP1 PUSH2 0x202A JUMP JUMPDEST GT ISZERO PUSH2 0x1236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0x707 DUP3 DUP3 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x93C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x98 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0x1364 JUMPI DUP3 DUP3 PUSH1 0x0 DUP7 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0x1320 JUMPI PUSH2 0x1320 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x135C DUP2 PUSH2 0x2078 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12EF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x680 DUP2 DUP6 DUP6 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x13D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x144C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x1098 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B5 DUP5 DUP5 PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1364 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0x1364 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x165B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x16BB SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x93C CALLER PUSH2 0x129A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x171F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1732 SWAP1 PUSH1 0x36 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x187B JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x14A4 SWAP1 PUSH1 0x37 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x176D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x17B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x45524332304361707065643A20636170206973203 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F4 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1822 SWAP2 SWAP1 PUSH2 0x202A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1887 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x18A9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x18EF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x18C2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x18EF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x18EF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x18EF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x18D4 JUMP JUMPDEST POP PUSH2 0x18FB SWAP3 SWAP2 POP PUSH2 0x1972 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xA4A SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x18EF JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x18EF JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x193D JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x18FB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19B4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1998 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x19C6 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1121 DUP2 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1A2C DUP2 PUSH2 0x19DC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1A5A DUP2 PUSH2 0x19DC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1A6A DUP2 PUSH2 0x19DC JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1AB9 JUMPI PUSH2 0x1AB9 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AEB JUMPI PUSH2 0x1AEB PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0x1AFE PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1A91 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1B13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1B41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1B5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1B76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B82 DUP11 DUP4 DUP12 ADD PUSH2 0x1AC1 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA5 DUP10 DUP3 DUP11 ADD PUSH2 0x1AC1 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x1BB4 PUSH1 0x40 DUP9 ADD PUSH2 0x1B30 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C16 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1BF1 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1C3B JUMPI PUSH2 0x1C3B PUSH2 0x1A7B JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1C7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1C92 PUSH2 0x1C8D DUP3 PUSH2 0x1C22 JUMP JUMPDEST PUSH2 0x1A91 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1CB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1CD8 JUMPI DUP4 CALLDATALOAD PUSH2 0x1CC9 DUP2 PUSH2 0x19DC JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1CB6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1D1A DUP2 PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1D2A DUP2 PUSH2 0x19DC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1D56 PUSH2 0x1C8D DUP4 PUSH2 0x1C22 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1D75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1D90 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1D79 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1DB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1DC1 DUP2 PUSH2 0x19DC JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1DF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E15 PUSH2 0x1C8D DUP3 PUSH2 0x1C22 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP15 DUP4 GT ISZERO PUSH2 0x1E34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x1E59 JUMPI PUSH2 0x1E4A DUP6 PUSH2 0x1B30 JUMP JUMPDEST DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x1E39 JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1E71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7D DUP13 DUP5 DUP14 ADD PUSH2 0x1D35 JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1E93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x1EA1 DUP11 DUP3 DUP12 ADD PUSH2 0x1D35 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1EC4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1EE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1F13 JUMPI PUSH2 0x1F13 PUSH2 0x1EEB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1F53 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1F39 JUMPI PUSH2 0x1F39 PUSH2 0x1EEB JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1F46 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1F1D JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F6A JUMPI POP PUSH1 0x1 PUSH2 0x686 JUMP JUMPDEST DUP2 PUSH2 0x1F77 JUMPI POP PUSH1 0x0 PUSH2 0x686 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1F8D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1F97 JUMPI PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x686 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1FA8 JUMPI PUSH2 0x1FA8 PUSH2 0x1EEB JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x686 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1FD6 JUMPI POP DUP2 DUP2 EXP PUSH2 0x686 JUMP JUMPDEST PUSH2 0x1FE0 DUP4 DUP4 PUSH2 0x1F18 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1FF4 JUMPI PUSH2 0x1FF4 PUSH2 0x1EEB JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1121 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1F5B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2025 JUMPI PUSH2 0x2025 PUSH2 0x1EEB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x203D JUMPI PUSH2 0x203D PUSH2 0x1EEB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x206F JUMPI PUSH2 0x206F PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x2095 JUMPI PUSH2 0x2095 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20BC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH18 0xD74CA8AD0DCBCCFCB1A364320574301C7155 0xB1 SWAP16 SWAP10 PUSH28 0xAC11A461F77E6A2D64736F6C634300080C0033000000000000000000 ",
							"sourceMap": "38295:5333:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25528:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;40397:107;;;;;;;;;;-1:-1:-1;40397:107:0;;;;;:::i;:::-;-1:-1:-1;;;;;40478:19:0;40455:4;40478:19;;;:11;:19;;;;;;;;;40397:107;;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;40397:107:0;1004:187:1;27805:197:0;;;;;;;;;;-1:-1:-1;27805:197:0;;;;;:::i;:::-;;:::i;26616:106::-;;;;;;;;;;-1:-1:-1;26703:12:0;;26616:106;;;1662:25:1;;;1650:2;1635:18;26616:106:0;1516:177:1;38712:50:0;;;;;;;;;;-1:-1:-1;38712:50:0;;;;;:::i;:::-;;;;;;;;;;;;;;42105:151;;;;;;;;;;-1:-1:-1;42105:151:0;;;;;:::i;:::-;;:::i;:::-;;41206:342;;;;;;;;;;-1:-1:-1;41206:342:0;;;;;:::i;:::-;;:::i;38990:532::-;;;;;;;;;;-1:-1:-1;38990:532:0;;;;;:::i;:::-;;:::i;39563:98::-;;;;;;;;;;-1:-1:-1;39645:9:0;;39563:98;;39645:9;;;;4235:36:1;;4223:2;4208:18;39563:98:0;4093:184:1;37590:81:0;;;;;;;;;;-1:-1:-1;37660:4:0;;37590:81;;29245:234;;;;;;;;;;-1:-1:-1;29245:234:0;;;;;:::i;:::-;;:::i;38611:43::-;;;;;;;;;;-1:-1:-1;38611:43:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;41941:158;;;;;;;;;;-1:-1:-1;41941:158:0;;;;;:::i;:::-;;:::i;26780:125::-;;;;;;;;;;-1:-1:-1;26780:125:0;;;;;:::i;:::-;-1:-1:-1;;;;;26880:18:0;26854:7;26880:18;;;:9;:18;;;;;;;26780:125;18502:101;;;;;;;;;;;;;:::i;17872:85::-;;;;;;;;;;-1:-1:-1;17944:6:0;;17872:85;;-1:-1:-1;;;;;17944:6:0;;;4428:51:1;;4416:2;4401:18;17872:85:0;4282:203:1;40056:95:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;25739:102::-;;;;;;;;;;;;;:::i;40157:234::-;;;;;;;;;;-1:-1:-1;40157:234:0;;;;;:::i;:::-;;:::i;29966:427::-;;;;;;;;;;-1:-1:-1;29966:427:0;;;;;:::i;:::-;;:::i;40749:451::-;;;;;;;;;;-1:-1:-1;40749:451:0;;;;;:::i;:::-;;:::i;39667:88::-;;;;;;;;;;-1:-1:-1;39738:10:0;;39667:88;;39761:100;;;;;;;;;;-1:-1:-1;39761:100:0;;;;;:::i;:::-;;:::i;39955:95::-;;;;;;;;;;-1:-1:-1;39955:95:0;;;;;:::i;:::-;;:::i;38547:26::-;;;;;;;;;;;;;;;;27348:149;;;;;;;;;;-1:-1:-1;27348:149:0;;;;;:::i;:::-;;:::i;42262:1364::-;;;;;;;;;;-1:-1:-1;42262:1364:0;;;;;:::i;:::-;;:::i;18752:198::-;;;;;;;;;;-1:-1:-1;18752:198:0;;;;;:::i;:::-;;:::i;39867:82::-;;;;;;;;;;-1:-1:-1;39935:7:0;;39867:82;;38660:46;;;;;;;;;;-1:-1:-1;38660:46:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;25528:98;25582:13;25614:5;25607:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25528:98;:::o;27805:197::-;27888:4;16053:10;27942:32;16053:10;27958:7;27967:6;27942:8;:32::i;:::-;27991:4;27984:11;;;27805:197;;;;;:::o;42105:151::-;38877:22;;-1:-1:-1;;;;;38877:22:0;38863:10;:36;38842:124;;;;-1:-1:-1;;;38842:124:0;;9866:2:1;38842:124:0;;;9848:21:1;9905:2;9885:18;;;9878:30;9944:34;9924:18;;;9917:62;-1:-1:-1;;;9995:18:1;;;9988:39;10044:19;;38842:124:0;;;;;;;;;42218:31:::1;42233:7;42242:6;42218:14;:31::i;:::-;42105:151:::0;;:::o;41206:342::-;41333:4;41349:15;41367:25;41385:6;41367:17;:25::i;:::-;41349:43;;41402:29;41417:4;41423:7;41402:14;:29::i;:::-;41441:14;41458:16;41467:7;41458:6;:16;:::i;:::-;41441:33;;41484:36;41503:4;41509:2;41513:6;41484:18;:36::i;:::-;-1:-1:-1;41537:4:0;;41206:342;-1:-1:-1;;;;;;41206:342:0:o;38990:532::-;11759:19;11782:13;;;;;;11781:14;;11827:34;;;;-1:-1:-1;11845:12:0;;11860:1;11845:12;;;;:16;11827:34;11826:108;;;-1:-1:-1;11906:4:0;1684:19;:23;;;11867:66;;-1:-1:-1;11916:12:0;;;;;:17;11867:66;11805:201;;;;-1:-1:-1;;;11805:201:0;;10538:2:1;11805:201:0;;;10520:21:1;10577:2;10557:18;;;10550:30;10616:34;10596:18;;;10589:62;-1:-1:-1;;;10667:18:1;;;10660:44;10721:19;;11805:201:0;10336:410:1;11805:201:0;12016:12;:16;;-1:-1:-1;;12016:16:0;12031:1;12016:16;;;12042:65;;;;12076:13;:20;;-1:-1:-1;;12076:20:0;;;;;12042:65;39207:16:::1;:14;:16::i;:::-;39233:28;39246:5;39253:7;39233:12;:28::i;:::-;39271:39;39296:13;39300:9:::0;39296:2:::1;:13;:::i;:::-;39290:19;::::0;:3;:19:::1;:::i;:::-;39271:18;:39::i;:::-;39320:13:::0;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;39343:17:0;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;39370:9:0::1;:21:::0;;-1:-1:-1;;39370:21:0::1;;::::0;::::1;;::::0;;39414:9:::1;39401:10;:22:::0;39433:4:::1;:10:::0;;;39453:7:::1;:16:::0;;;39479:36:::1;39493:4;39500:14:::0;39479:5:::1;:36::i;:::-;12131:14:::0;12127:99;;;12177:5;12161:21;;-1:-1:-1;;12161:21:0;;;12201:14;;-1:-1:-1;4235:36:1;;12201:14:0;;4223:2:1;4208:18;12201:14:0;;;;;;;12127:99;11749:483;38990:532;;;;;;:::o;29245:234::-;29333:4;16053:10;29387:64;16053:10;29403:7;29440:10;29412:25;16053:10;29403:7;29412:9;:25::i;:::-;:38;;;;:::i;:::-;29387:8;:64::i;41941:158::-;17765:13;:11;:13::i;:::-;42051:22:::1;:41:::0;;-1:-1:-1;;;;;;42051:41:0::1;-1:-1:-1::0;;;;;42051:41:0;;;::::1;::::0;;;::::1;::::0;;41941:158::o;18502:101::-;17765:13;:11;:13::i;:::-;18566:30:::1;18593:1;18566:18;:30::i;:::-;18502:101::o:0;40056:95::-;40101:16;40136:8;40129:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;40129:15:0;;;;;;;;;;;;;;;;;;;;;;40056:95;:::o;25739:102::-;25795:13;25827:7;25820:14;;;;;:::i;40157:234::-;17765:13;:11;:13::i;:::-;40241:40:::1;40252:8;40241:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;40241:40:0::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;40262:5;40269:11;40241:10;:40::i;:::-;40291:15;40298:8;;40291:15;:::i;:::-;40316:19:::0;;::::1;::::0;:8:::1;::::0;:19:::1;::::0;::::1;::::0;::::1;:::i;:::-;;40345:39;40356:8;40366:4;40372:11;40345:10;:39::i;:::-;40157:234:::0;:::o;29966:427::-;30059:4;16053:10;30059:4;30140:25;16053:10;30157:7;30140:9;:25::i;:::-;30113:52;;30203:15;30183:16;:35;;30175:85;;;;-1:-1:-1;;;30175:85:0;;12841:2:1;30175:85:0;;;12823:21:1;12880:2;12860:18;;;12853:30;12919:34;12899:18;;;12892:62;-1:-1:-1;;;12970:18:1;;;12963:35;13015:19;;30175:85:0;12639:401:1;30175:85:0;30294:60;30303:5;30310:7;30338:15;30319:16;:34;30294:8;:60::i;:::-;-1:-1:-1;30382:4:0;;29966:427;-1:-1:-1;;;;29966:427:0:o;40749:451::-;40851:4;40889:7;17944:6;;-1:-1:-1;;;;;17944:6:0;;17872:85;40889:7;-1:-1:-1;;;;;40875:21:0;:10;-1:-1:-1;;;;;40875:21:0;;40871:302;;;40912:33;40927:9;40938:6;40912:14;:33::i;:::-;;40871:302;;;40976:15;40994:25;41012:6;40994:17;:25::i;:::-;40976:43;;41033:35;41048:10;41060:7;41033:14;:35::i;:::-;41082:14;41099:16;41108:7;41099:6;:16;:::i;:::-;41082:33;;41129;41144:9;41155:6;41129:14;:33::i;:::-;;40962:211;;40871:302;-1:-1:-1;41189:4:0;40749:451;;;;:::o;39761:100::-;17765:13;:11;:13::i;:::-;39834:10:::1;:20:::0;39761:100::o;39955:95::-;17765:13;:11;:13::i;:::-;40023:7:::1;:20:::0;39955:95::o;27348:149::-;-1:-1:-1;;;;;27463:18:0;;;27437:7;27463:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;27348:149::o;42262:1364::-;42526:15;42514:8;:27;;42506:56;;;;-1:-1:-1;;;42506:56:0;;13247:2:1;42506:56:0;;;13229:21:1;13286:2;13266:18;;;13259:30;-1:-1:-1;;;13305:18:1;;;13298:46;13361:18;;42506:56:0;13045:340:1;42506:56:0;42581:24;;;;:14;:24;;;;;;;;42580:25;42572:54;;;;-1:-1:-1;;;42572:54:0;;13592:2:1;42572:54:0;;;13574:21:1;13631:2;13611:18;;;13604:30;-1:-1:-1;;;13650:18:1;;;13643:46;13706:18;;42572:54:0;13390:340:1;42572:54:0;42655:10;42637:15;42691:13;17944:6;;-1:-1:-1;;;;;17944:6:0;;17872:85;42691:13;42761:238;;-1:-1:-1;;;42761:238:0;;;14104:28:1;42715:20:0;14148:11:1;;;14141:36;;;-1:-1:-1;;14264:2:1;14260:15;;;14256:24;;14243:11;;;14236:45;14315:15;;;14311:24;;14297:12;;;14290:46;14370:15;;;14366:24;14352:12;;;14345:46;14407:12;;;14400:28;;;14444:12;;;14437:28;;;14481:13;;;14474:29;;;42675::0;;-1:-1:-1;14519:13:1;;42761:238:0;;;;;;;;;;;;42738:271;;;;;;42715:294;;43020:16;43059:21;43099:8;43094:257;43117:1;:8;43113:1;-1:-1:-1;;;;;43113:12:0;;43094:257;;;43146:17;43166:41;43176:12;43190:1;43192;-1:-1:-1;;;;;43190:4:0;;;;;;;;;:::i;:::-;;;;;;;43196:1;43198;-1:-1:-1;;;;;43196:4:0;;;;;;;;;:::i;:::-;;;;;;;43202:1;43204;-1:-1:-1;;;;;43202:4:0;;;;;;;;;:::i;:::-;;;;;;;43166:41;;;;;;;;;;;;;;;;;14902:25:1;;;14975:4;14963:17;;;;14958:2;14943:18;;14936:45;15012:2;14997:18;;14990:34;15055:2;15040:18;;15033:34;14889:3;14874:19;;14675:398;43166:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43146:61;;43237:8;-1:-1:-1;;;;;43225:20:0;:9;-1:-1:-1;;;;;43225:20:0;;:46;;;;-1:-1:-1;;;;;;43249:22:0;;;;;;:11;:22;;;;;;;;43225:46;43221:85;;;43289:17;;;;:::i;:::-;;;;43221:85;43331:9;-1:-1:-1;43127:3:0;;;;:::i;:::-;;;;43094:257;;;-1:-1:-1;43387:8:0;:15;43368:34;;;;43360:62;;;;-1:-1:-1;;;43360:62:0;;15674:2:1;43360:62:0;;;15656:21:1;15713:2;15693:18;;;15686:30;-1:-1:-1;;;15732:18:1;;;15725:45;15787:18;;43360:62:0;15472:339:1;43360:62:0;43432:24;;;;:14;:24;;;;;;:31;;-1:-1:-1;;43432:31:0;43459:4;43432:31;;;43515:10;;43493:37;;-1:-1:-1;;;;;43493:14:0;;;43515:10;43432:24;43493:37;43432:24;43493:37;43515:10;43493:14;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43474:56;;;43548:7;43540:39;;;;-1:-1:-1;;;43540:39:0;;16228:2:1;43540:39:0;;;16210:21:1;16267:2;16247:18;;;16240:30;-1:-1:-1;;;16286:18:1;;;16279:49;16345:18;;43540:39:0;16026:343:1;43540:39:0;43589:30;43601:9;43612:6;43589:11;:30::i;:::-;42496:1130;;;;;;42262:1364;;;;;;;:::o;18752:198::-;17765:13;:11;:13::i;:::-;-1:-1:-1;;;;;18840:22:0;::::1;18832:73;;;::::0;-1:-1:-1;;;18832:73:0;;16576:2:1;18832:73:0::1;::::0;::::1;16558:21:1::0;16615:2;16595:18;;;16588:30;16654:34;16634:18;;;16627:62;-1:-1:-1;;;16705:18:1;;;16698:36;16751:19;;18832:73:0::1;16374:402:1::0;18832:73:0::1;18915:28;18934:8;18915:18;:28::i;33878:370::-:0;-1:-1:-1;;;;;34009:19:0;;34001:68;;;;-1:-1:-1;;;34001:68:0;;16983:2:1;34001:68:0;;;16965:21:1;17022:2;17002:18;;;16995:30;17061:34;17041:18;;;17034:62;-1:-1:-1;;;17112:18:1;;;17105:34;17156:19;;34001:68:0;16781:400:1;34001:68:0;-1:-1:-1;;;;;34087:21:0;;34079:68;;;;-1:-1:-1;;;34079:68:0;;17388:2:1;34079:68:0;;;17370:21:1;17427:2;17407:18;;;17400:30;17466:34;17446:18;;;17439:62;-1:-1:-1;;;17517:18:1;;;17510:32;17559:19;;34079:68:0;17186:398:1;34079:68:0;-1:-1:-1;;;;;34158:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;34209:32;;1662:25:1;;;34209:32:0;;1635:18:1;34209:32:0;;;;;;;;33878:370;;;:::o;41717:218::-;41792:22;41798:7;41807:6;41792:5;:22::i;:::-;41852:6;41838:11;;:20;;;;:::i;:::-;41824:11;:34;-1:-1:-1;;;;;41895:24:0;;;;;;:15;:24;;;;;;:33;;41922:6;;41895:33;:::i;:::-;-1:-1:-1;;;;;41868:24:0;;;;;;;:15;:24;;;;;:60;;;;-1:-1:-1;41717:218:0:o;41554:157::-;41619:7;41638:15;41677:3;41666:7;;41657:6;:16;;;;:::i;:::-;41656:24;;;;:::i;:::-;41638:42;41554:157;-1:-1:-1;;;41554:157:0:o;28564:286::-;28691:4;16053:10;28747:38;28763:4;16053:10;28778:6;28747:15;:38::i;:::-;28795:27;28805:4;28811:2;28815:6;28795:9;:27::i;17434:95::-;13854:13;;;;;;;13846:69;;;;-1:-1:-1;;;13846:69:0;;;;;;;:::i;:::-;17496:26:::1;:24;:26::i;25151:147::-:0;13854:13;;;;;;;13846:69;;;;-1:-1:-1;;;13846:69:0;;;;;;;:::i;:::-;25253:38:::1;25276:5;25283:7;25253:22;:38::i;37228:119::-:0;13854:13;;;;;;;13846:69;;;;-1:-1:-1;;;13846:69:0;;;;;;;:::i;:::-;37306:34:::1;37335:4;37306:28;:34::i;37724:215::-:0;37660:4;;37849:6;37816:30;26703:12;;;26616:106;37816:30;:39;;;;:::i;:::-;:48;;37808:86;;;;-1:-1:-1;;;37808:86:0;;18425:2:1;37808:86:0;;;18407:21:1;18464:2;18444:18;;;18437:30;18503:27;18483:18;;;18476:55;18548:18;;37808:86:0;18223:349:1;37808:86:0;37904:28;37916:7;37925:6;37904:11;:28::i;18030:130::-;17944:6;;-1:-1:-1;;;;;17944:6:0;16053:10;18093:23;18085:68;;;;-1:-1:-1;;;18085:68:0;;18779:2:1;18085:68:0;;;18761:21:1;;;18798:18;;;18791:30;18857:34;18837:18;;;18830:62;18909:18;;18085:68:0;18577:356:1;19104:187:0;19196:6;;;-1:-1:-1;;;;;19212:17:0;;;-1:-1:-1;;;;;;19212:17:0;;;;;;;19244:40;;19196:6;;;19212:17;19196:6;;19244:40;;19177:16;;19244:40;19167:124;19104:187;:::o;40510:233::-;40657:8;40652:85;40675:3;:10;40671:1;-1:-1:-1;;;;;40671:14:0;;40652:85;;;40720:6;40706:3;:11;40710:3;40714:1;-1:-1:-1;;;;;40710:6:0;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;40706:11:0;;;;;;;;;;;-1:-1:-1;40706:11:0;:20;;-1:-1:-1;;40706:20:0;;;;;;;;;;40687:3;;;;:::i;:::-;;;;40652:85;;;;40510:233;;;:::o;27101:189::-;27180:4;16053:10;27234:28;16053:10;27251:2;27255:6;27234:9;:28::i;32796:659::-;-1:-1:-1;;;;;32879:21:0;;32871:67;;;;-1:-1:-1;;;32871:67:0;;19140:2:1;32871:67:0;;;19122:21:1;19179:2;19159:18;;;19152:30;19218:34;19198:18;;;19191:62;-1:-1:-1;;;19269:18:1;;;19262:31;19310:19;;32871:67:0;18938:397:1;32871:67:0;-1:-1:-1;;;;;33034:18:0;;33009:22;33034:18;;;:9;:18;;;;;;33070:24;;;;33062:71;;;;-1:-1:-1;;;33062:71:0;;19542:2:1;33062:71:0;;;19524:21:1;19581:2;19561:18;;;19554:30;19620:34;19600:18;;;19593:62;-1:-1:-1;;;19671:18:1;;;19664:32;19713:19;;33062:71:0;19340:398:1;33062:71:0;-1:-1:-1;;;;;33167:18:0;;;;;;:9;:18;;;;;;;;33188:23;;;33167:44;;33304:12;:22;;;;;;;33352:37;1662:25:1;;;33167:18:0;;;33352:37;;1635:18:1;33352:37:0;1516:177:1;33400:48:0;32861:594;32796:659;;:::o;34529:441::-;34659:24;34686:25;34696:5;34703:7;34686:9;:25::i;:::-;34659:52;;-1:-1:-1;;34725:16:0;:37;34721:243;;34806:6;34786:16;:26;;34778:68;;;;-1:-1:-1;;;34778:68:0;;19945:2:1;34778:68:0;;;19927:21:1;19984:2;19964:18;;;19957:30;20023:31;20003:18;;;19996:59;20072:18;;34778:68:0;19743:353:1;34778:68:0;34888:51;34897:5;34904:7;34932:6;34913:16;:25;34888:8;:51::i;30847:818::-;-1:-1:-1;;;;;30973:18:0;;30965:68;;;;-1:-1:-1;;;30965:68:0;;20303:2:1;30965:68:0;;;20285:21:1;20342:2;20322:18;;;20315:30;20381:34;20361:18;;;20354:62;-1:-1:-1;;;20432:18:1;;;20425:35;20477:19;;30965:68:0;20101:401:1;30965:68:0;-1:-1:-1;;;;;31051:16:0;;31043:64;;;;-1:-1:-1;;;31043:64:0;;20709:2:1;31043:64:0;;;20691:21:1;20748:2;20728:18;;;20721:30;20787:34;20767:18;;;20760:62;-1:-1:-1;;;20838:18:1;;;20831:33;20881:19;;31043:64:0;20507:399:1;31043:64:0;-1:-1:-1;;;;;31189:15:0;;31167:19;31189:15;;;:9;:15;;;;;;31222:21;;;;31214:72;;;;-1:-1:-1;;;31214:72:0;;21113:2:1;31214:72:0;;;21095:21:1;21152:2;21132:18;;;21125:30;21191:34;21171:18;;;21164:62;-1:-1:-1;;;21242:18:1;;;21235:36;21288:19;;31214:72:0;20911:402:1;31214:72:0;-1:-1:-1;;;;;31320:15:0;;;;;;;:9;:15;;;;;;31338:20;;;31320:38;;31535:13;;;;;;;;;;:23;;;;;;31584:26;;;;;;31352:6;1662:25:1;;1650:2;1635:18;;1516:177;31584:26:0;;;;;;;;31621:37;32796:659;17535:111;13854:13;;;;;;;13846:69;;;;-1:-1:-1;;;13846:69:0;;;;;;;:::i;:::-;17607:32:::1;16053:10:::0;17607:18:::1;:32::i;25304:159::-:0;13854:13;;;;;;;13846:69;;;;-1:-1:-1;;;13846:69:0;;;;;;;:::i;:::-;25416:13;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;25439:17:0;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;37353:158::-:0;13854:13;;;;;;;13846:69;;;;-1:-1:-1;;;13846:69:0;;;;;;;:::i;:::-;37456:1:::1;37449:4;:8;37441:42;;;::::0;-1:-1:-1;;;37441:42:0;;21520:2:1;37441:42:0::1;::::0;::::1;21502:21:1::0;21559:2;21539:18;;;21532:30;-1:-1:-1;;;21578:18:1;;;21571:51;21639:18;;37441:42:0::1;21318:345:1::0;37441:42:0::1;37493:4;:11:::0;37353:158::o;31941:535::-;-1:-1:-1;;;;;32024:21:0;;32016:65;;;;-1:-1:-1;;;32016:65:0;;21870:2:1;32016:65:0;;;21852:21:1;21909:2;21889:18;;;21882:30;21948:33;21928:18;;;21921:61;21999:18;;32016:65:0;21668:355:1;32016:65:0;32168:6;32152:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;32320:18:0;;;;;;:9;:18;;;;;;;;:28;;;;;;32373:37;1662:25:1;;;32373:37:0;;1635:18:1;32373:37:0;;;;;;;42105:151;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:597:1;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:131::-;-1:-1:-1;;;;;691:31:1;;681:42;;671:70;;737:1;734;727:12;752:247;811:6;864:2;852:9;843:7;839:23;835:32;832:52;;;880:1;877;870:12;832:52;919:9;906:23;938:31;963:5;938:31;:::i;1196:315::-;1264:6;1272;1325:2;1313:9;1304:7;1300:23;1296:32;1293:52;;;1341:1;1338;1331:12;1293:52;1380:9;1367:23;1399:31;1424:5;1399:31;:::i;:::-;1449:5;1501:2;1486:18;;;;1473:32;;-1:-1:-1;;;1196:315:1:o;1698:456::-;1775:6;1783;1791;1844:2;1832:9;1823:7;1819:23;1815:32;1812:52;;;1860:1;1857;1850:12;1812:52;1899:9;1886:23;1918:31;1943:5;1918:31;:::i;:::-;1968:5;-1:-1:-1;2025:2:1;2010:18;;1997:32;2038:33;1997:32;2038:33;:::i;:::-;1698:456;;2090:7;;-1:-1:-1;;;2144:2:1;2129:18;;;;2116:32;;1698:456::o;2159:127::-;2220:10;2215:3;2211:20;2208:1;2201:31;2251:4;2248:1;2241:15;2275:4;2272:1;2265:15;2291:275;2362:2;2356:9;2427:2;2408:13;;-1:-1:-1;;2404:27:1;2392:40;;-1:-1:-1;;;;;2447:34:1;;2483:22;;;2444:62;2441:88;;;2509:18;;:::i;:::-;2545:2;2538:22;2291:275;;-1:-1:-1;2291:275:1:o;2571:531::-;2614:5;2667:3;2660:4;2652:6;2648:17;2644:27;2634:55;;2685:1;2682;2675:12;2634:55;2721:6;2708:20;-1:-1:-1;;;;;2743:2:1;2740:26;2737:52;;;2769:18;;:::i;:::-;2813:55;2856:2;2837:13;;-1:-1:-1;;2833:27:1;2862:4;2829:38;2813:55;:::i;:::-;2893:2;2884:7;2877:19;2939:3;2932:4;2927:2;2919:6;2915:15;2911:26;2908:35;2905:55;;;2956:1;2953;2946:12;2905:55;3021:2;3014:4;3006:6;3002:17;2995:4;2986:7;2982:18;2969:55;3069:1;3044:16;;;3062:4;3040:27;3033:38;;;;3048:7;2571:531;-1:-1:-1;;;2571:531:1:o;3107:156::-;3173:20;;3233:4;3222:16;;3212:27;;3202:55;;3253:1;3250;3243:12;3202:55;3107:156;;;:::o;3268:820::-;3390:6;3398;3406;3414;3422;3430;3483:3;3471:9;3462:7;3458:23;3454:33;3451:53;;;3500:1;3497;3490:12;3451:53;3540:9;3527:23;-1:-1:-1;;;;;3610:2:1;3602:6;3599:14;3596:34;;;3626:1;3623;3616:12;3596:34;3649:50;3691:7;3682:6;3671:9;3667:22;3649:50;:::i;:::-;3639:60;;3752:2;3741:9;3737:18;3724:32;3708:48;;3781:2;3771:8;3768:16;3765:36;;;3797:1;3794;3787:12;3765:36;;3820:52;3864:7;3853:8;3842:9;3838:24;3820:52;:::i;:::-;3810:62;;;3891:36;3923:2;3912:9;3908:18;3891:36;:::i;:::-;3881:46;;3974:2;3963:9;3959:18;3946:32;3936:42;;4025:3;4014:9;4010:19;3997:33;3987:43;;4077:3;4066:9;4062:19;4049:33;4039:43;;3268:820;;;;;;;;:::o;4490:658::-;4661:2;4713:21;;;4783:13;;4686:18;;;4805:22;;;4632:4;;4661:2;4884:15;;;;4858:2;4843:18;;;4632:4;4927:195;4941:6;4938:1;4935:13;4927:195;;;5006:13;;-1:-1:-1;;;;;5002:39:1;4990:52;;5097:15;;;;5062:12;;;;5038:1;4956:9;4927:195;;;-1:-1:-1;5139:3:1;;4490:658;-1:-1:-1;;;;;;4490:658:1:o;5153:183::-;5213:4;-1:-1:-1;;;;;5238:6:1;5235:30;5232:56;;;5268:18;;:::i;:::-;-1:-1:-1;5313:1:1;5309:14;5325:4;5305:25;;5153:183::o;5341:966::-;5425:6;5456:2;5499;5487:9;5478:7;5474:23;5470:32;5467:52;;;5515:1;5512;5505:12;5467:52;5555:9;5542:23;-1:-1:-1;;;;;5580:6:1;5577:30;5574:50;;;5620:1;5617;5610:12;5574:50;5643:22;;5696:4;5688:13;;5684:27;-1:-1:-1;5674:55:1;;5725:1;5722;5715:12;5674:55;5761:2;5748:16;5784:60;5800:43;5840:2;5800:43;:::i;:::-;5784:60;:::i;:::-;5878:15;;;5960:1;5956:10;;;;5948:19;;5944:28;;;5909:12;;;;5984:19;;;5981:39;;;6016:1;6013;6006:12;5981:39;6040:11;;;;6060:217;6076:6;6071:3;6068:15;6060:217;;;6156:3;6143:17;6173:31;6198:5;6173:31;:::i;:::-;6217:18;;6093:12;;;;6255;;;;6060:217;;;6296:5;5341:966;-1:-1:-1;;;;;;;5341:966:1:o;6312:180::-;6371:6;6424:2;6412:9;6403:7;6399:23;6395:32;6392:52;;;6440:1;6437;6430:12;6392:52;-1:-1:-1;6463:23:1;;6312:180;-1:-1:-1;6312:180:1:o;6497:388::-;6565:6;6573;6626:2;6614:9;6605:7;6601:23;6597:32;6594:52;;;6642:1;6639;6632:12;6594:52;6681:9;6668:23;6700:31;6725:5;6700:31;:::i;:::-;6750:5;-1:-1:-1;6807:2:1;6792:18;;6779:32;6820:33;6779:32;6820:33;:::i;:::-;6872:7;6862:17;;;6497:388;;;;;:::o;6890:662::-;6944:5;6997:3;6990:4;6982:6;6978:17;6974:27;6964:55;;7015:1;7012;7005:12;6964:55;7051:6;7038:20;7077:4;7101:60;7117:43;7157:2;7117:43;:::i;7101:60::-;7195:15;;;7281:1;7277:10;;;;7265:23;;7261:32;;;7226:12;;;;7305:15;;;7302:35;;;7333:1;7330;7323:12;7302:35;7369:2;7361:6;7357:15;7381:142;7397:6;7392:3;7389:15;7381:142;;;7463:17;;7451:30;;7501:12;;;;7414;;7381:142;;;-1:-1:-1;7541:5:1;6890:662;-1:-1:-1;;;;;;6890:662:1:o;7557:1717::-;7751:6;7759;7767;7775;7783;7791;7799;7852:3;7840:9;7831:7;7827:23;7823:33;7820:53;;;7869:1;7866;7859:12;7820:53;7908:9;7895:23;7927:31;7952:5;7927:31;:::i;:::-;7977:5;-1:-1:-1;8001:2:1;8035:18;;;8022:32;;-1:-1:-1;8101:2:1;8086:18;;8073:32;;-1:-1:-1;8152:2:1;8137:18;;8124:32;;-1:-1:-1;8207:3:1;8192:19;;8179:33;-1:-1:-1;;;;;8261:14:1;;;8258:34;;;8288:1;8285;8278:12;8258:34;8326:6;8315:9;8311:22;8301:32;;8371:7;8364:4;8360:2;8356:13;8352:27;8342:55;;8393:1;8390;8383:12;8342:55;8429:2;8416:16;8452:60;8468:43;8508:2;8468:43;:::i;8452:60::-;8546:15;;;8628:1;8624:10;;;;8616:19;;8612:28;;;8577:12;;;;8652:19;;;8649:39;;;8684:1;8681;8674:12;8649:39;8708:11;;;;8728:146;8744:6;8739:3;8736:15;8728:146;;;8810:21;8827:3;8810:21;:::i;:::-;8798:34;;8761:12;;;;8852;;;;8728:146;;;8893:5;-1:-1:-1;;;8951:3:1;8936:19;;8923:33;;-1:-1:-1;8968:16:1;;;8965:36;;;8997:1;8994;8987:12;8965:36;9020:63;9075:7;9064:8;9053:9;9049:24;9020:63;:::i;:::-;9010:73;;9136:3;9125:9;9121:19;9108:33;9092:49;;9166:2;9156:8;9153:16;9150:36;;;9182:1;9179;9172:12;9150:36;;;9205:63;9260:7;9249:8;9238:9;9234:24;9205:63;:::i;:::-;9195:73;;;7557:1717;;;;;;;;;;:::o;9279:380::-;9358:1;9354:12;;;;9401;;;9422:61;;9476:4;9468:6;9464:17;9454:27;;9422:61;9529:2;9521:6;9518:14;9498:18;9495:38;9492:161;;;9575:10;9570:3;9566:20;9563:1;9556:31;9610:4;9607:1;9600:15;9638:4;9635:1;9628:15;9492:161;;9279:380;;;:::o;10074:127::-;10135:10;10130:3;10126:20;10123:1;10116:31;10166:4;10163:1;10156:15;10190:4;10187:1;10180:15;10206:125;10246:4;10274:1;10271;10268:8;10265:34;;;10279:18;;:::i;:::-;-1:-1:-1;10316:9:1;;10206:125::o;10751:422::-;10840:1;10883:5;10840:1;10897:270;10918:7;10908:8;10905:21;10897:270;;;10977:4;10973:1;10969:6;10965:17;10959:4;10956:27;10953:53;;;10986:18;;:::i;:::-;11036:7;11026:8;11022:22;11019:55;;;11056:16;;;;11019:55;11135:22;;;;11095:15;;;;10897:270;;;10901:3;10751:422;;;;;:::o;11178:806::-;11227:5;11257:8;11247:80;;-1:-1:-1;11298:1:1;11312:5;;11247:80;11346:4;11336:76;;-1:-1:-1;11383:1:1;11397:5;;11336:76;11428:4;11446:1;11441:59;;;;11514:1;11509:130;;;;11421:218;;11441:59;11471:1;11462:10;;11485:5;;;11509:130;11546:3;11536:8;11533:17;11530:43;;;11553:18;;:::i;:::-;-1:-1:-1;;11609:1:1;11595:16;;11624:5;;11421:218;;11723:2;11713:8;11710:16;11704:3;11698:4;11695:13;11691:36;11685:2;11675:8;11672:16;11667:2;11661:4;11658:12;11654:35;11651:77;11648:159;;;-1:-1:-1;11760:19:1;;;11792:5;;11648:159;11839:34;11864:8;11858:4;11839:34;:::i;:::-;11909:6;11905:1;11901:6;11897:19;11888:7;11885:32;11882:58;;;11920:18;;:::i;:::-;11958:20;;11178:806;-1:-1:-1;;;11178:806:1:o;11989:140::-;12047:5;12076:47;12117:4;12107:8;12103:19;12097:4;12076:47;:::i;12134:168::-;12174:7;12240:1;12236;12232:6;12228:14;12225:1;12222:21;12217:1;12210:9;12203:17;12199:45;12196:71;;;12247:18;;:::i;:::-;-1:-1:-1;12287:9:1;;12134:168::o;12506:128::-;12546:3;12577:1;12573:6;12570:1;12567:13;12564:39;;;12583:18;;:::i;:::-;-1:-1:-1;12619:9:1;;12506:128::o;14543:127::-;14604:10;14599:3;14595:20;14592:1;14585:31;14635:4;14632:1;14625:15;14659:4;14656:1;14649:15;15078:175;15115:3;15159:4;15152:5;15148:16;15188:4;15179:7;15176:17;15173:43;;;15196:18;;:::i;:::-;15245:1;15232:15;;15078:175;-1:-1:-1;;15078:175:1:o;15258:209::-;15296:3;-1:-1:-1;;;;;15377:2:1;15370:5;15366:14;15404:2;15395:7;15392:15;15389:41;;;15410:18;;:::i;:::-;15459:1;15446:15;;15258:209;-1:-1:-1;;;15258:209:1:o;17589:217::-;17629:1;17655;17645:132;;17699:10;17694:3;17690:20;17687:1;17680:31;17734:4;17731:1;17724:15;17762:4;17759:1;17752:15;17645:132;-1:-1:-1;17791:9:1;;17589:217::o;17811:407::-;18013:2;17995:21;;;18052:2;18032:18;;;18025:30;18091:34;18086:2;18071:18;;18064:62;-1:-1:-1;;;18157:2:1;18142:18;;18135:41;18208:3;18193:19;;17811:407::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1702800",
								"executionCost": "1792",
								"totalCost": "1704592"
							},
							"external": {
								"_mapSigners(address)": "2570",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24691",
								"balanceOf(address)": "2620",
								"cap()": "2382",
								"decimals()": "2357",
								"decreaseAllowance(address,uint256)": "27012",
								"getRewardAmt()": "2403",
								"getSigners()": "infinite",
								"getTaxFee()": "2380",
								"increaseAllowance(address,uint256)": "27089",
								"initialize(string,string,uint8,uint256,uint256,uint256)": "infinite",
								"mapSigner(address)": "2612",
								"name()": "infinite",
								"nodeControllerBurn(address,uint256)": "infinite",
								"owner()": "2347",
								"permitMint(address,uint256,uint256,uint256,uint8[],bytes32[],bytes32[])": "infinite",
								"renounceOwnership()": "infinite",
								"setNodeControllerContract(address)": "26796",
								"setRewardAmtInWei(uint256)": "24533",
								"setSigners(address[])": "infinite",
								"setTaxFee(uint256)": "24555",
								"symbol()": "infinite",
								"totalBurned()": "2384",
								"totalSupply()": "2327",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniqueIdExists(uint256)": "2560",
								"userTotalBurned(address)": "2581"
							},
							"internal": {
								"_burnAndUpdate(address,uint256)": "infinite",
								"_calculateBurnAmt(uint256)": "2288",
								"_updateMap(address[] memory,bool,mapping(address => bool))": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 38295,
									"end": 43628,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38295,
									"end": 43628,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202571d74ca8ad0dcbccfcb1a364320574301c7155b19f997bac11a461f77e6a2d64736f6c634300080c0033",
									".code": [
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "B24A0893"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "E4C97E6A"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "E4C97E6A"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "F66608FE"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "F9342285"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "B24A0893"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "C4081A4C"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "D89135CD"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "A3772662"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "A3772662"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "AC7FA3C6"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "94CF795E"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "2B9A1D3C"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "3DE47E32"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "3DE47E32"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "4CDBAB5B"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "2B9A1D3C"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "355274EA"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "1E0D4CE9"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "1E71E435"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "7C351DD"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38295,
											"end": 43628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40478,
											"end": 40497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40455,
											"end": 40459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40478,
											"end": 40497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40489,
											"name": "PUSH",
											"source": 0,
											"value": "D2"
										},
										{
											"begin": 40478,
											"end": 40497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40478,
											"end": 40497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40478,
											"end": 40497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40497,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40497,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40497,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 40478,
											"end": 40497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40397,
											"end": 40504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26703,
											"end": 26715,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 26703,
											"end": 26715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1652,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1516,
											"end": 1693,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "PUSH",
											"source": 0,
											"value": "D4"
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38712,
											"end": 38762,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39645,
											"end": 39654,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 39645,
											"end": 39654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39654,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 39645,
											"end": 39654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4235,
											"end": 4271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4235,
											"end": 4271,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39563,
											"end": 39661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4093,
											"end": 4277,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37590,
											"end": 37671,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 37590,
											"end": 37671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37671,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37671,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 37590,
											"end": 37671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37590,
											"end": 37671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37671,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37671,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 37590,
											"end": 37671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37660,
											"end": 37664,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 37660,
											"end": 37664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 37590,
											"end": 37671,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "PUSH",
											"source": 0,
											"value": "D2"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38654,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26854,
											"end": 26861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26889,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4401,
											"end": 4419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4282,
											"end": 4485,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39667,
											"end": 39755,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 39667,
											"end": 39755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39667,
											"end": 39755,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 39667,
											"end": 39755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39667,
											"end": 39755,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39667,
											"end": 39755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 39667,
											"end": 39755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39667,
											"end": 39755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39667,
											"end": 39755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39667,
											"end": 39755,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39667,
											"end": 39755,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 39667,
											"end": 39755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39738,
											"end": 39748,
											"name": "PUSH",
											"source": 0,
											"value": "CD"
										},
										{
											"begin": 39738,
											"end": 39748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39667,
											"end": 39755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 39667,
											"end": 39755,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "PUSH",
											"source": 0,
											"value": "D0"
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38573,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39867,
											"end": 39949,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 39867,
											"end": 39949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39867,
											"end": 39949,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 39867,
											"end": 39949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39867,
											"end": 39949,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39867,
											"end": 39949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 39867,
											"end": 39949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39867,
											"end": 39949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39867,
											"end": 39949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39867,
											"end": 39949,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39867,
											"end": 39949,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 39867,
											"end": 39949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39935,
											"end": 39942,
											"name": "PUSH",
											"source": 0,
											"value": "CF"
										},
										{
											"begin": 39935,
											"end": 39942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39867,
											"end": 39949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 39867,
											"end": 39949,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "D3"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38660,
											"end": 38706,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25582,
											"end": 25595,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25614,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27888,
											"end": 27892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27942,
											"end": 27974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27958,
											"end": 27965,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27967,
											"end": 27973,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27942,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 27942,
											"end": 27974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27942,
											"end": 27974,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 27942,
											"end": 27974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27991,
											"end": 27995,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27984,
											"end": 27995,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 27995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 27995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38877,
											"end": 38899,
											"name": "PUSH",
											"source": 0,
											"value": "D5"
										},
										{
											"begin": 38877,
											"end": 38899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38877,
											"end": 38899,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38863,
											"end": 38873,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38863,
											"end": 38899,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9907,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9978,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C792063616C6C61626C652066726F6D206E6F6465436F6E74726F6C6C65"
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9917,
											"end": 9979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C90DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9988,
											"end": 10027,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10044,
											"end": 10063,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10044,
											"end": 10063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 38842,
											"end": 38966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42218,
											"end": 42249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 42233,
											"end": 42240,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42242,
											"end": 42248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42218,
											"end": 42232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 42218,
											"end": 42249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42218,
											"end": 42249,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 42218,
											"end": 42249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41333,
											"end": 41337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41349,
											"end": 41364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41367,
											"end": 41392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 41385,
											"end": 41391,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41367,
											"end": 41384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 41367,
											"end": 41392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41367,
											"end": 41392,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 41367,
											"end": 41392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41349,
											"end": 41392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41349,
											"end": 41392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41402,
											"end": 41431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 41417,
											"end": 41421,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41423,
											"end": 41430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41402,
											"end": 41416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 41402,
											"end": 41431,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41402,
											"end": 41431,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 41402,
											"end": 41431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41441,
											"end": 41455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41458,
											"end": 41474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 41467,
											"end": 41474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41458,
											"end": 41464,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41458,
											"end": 41474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 41458,
											"end": 41474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41458,
											"end": 41474,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 41458,
											"end": 41474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41441,
											"end": 41474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41441,
											"end": 41474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41484,
											"end": 41520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 41503,
											"end": 41507,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41509,
											"end": 41511,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41513,
											"end": 41519,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41484,
											"end": 41502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 41484,
											"end": 41520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41484,
											"end": 41520,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 41484,
											"end": 41520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41537,
											"end": 41541,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41537,
											"end": 41541,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41206,
											"end": 41548,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11782,
											"end": 11795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11782,
											"end": 11795,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11782,
											"end": 11795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11782,
											"end": 11795,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11782,
											"end": 11795,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11782,
											"end": 11795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11781,
											"end": 11795,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11781,
											"end": 11795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11861,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 11827,
											"end": 11861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11845,
											"end": 11857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11845,
											"end": 11857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11860,
											"end": 11861,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11845,
											"end": 11857,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11845,
											"end": 11857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11845,
											"end": 11857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11845,
											"end": 11857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11845,
											"end": 11861,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11861,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 11827,
											"end": 11861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11826,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11826,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 11826,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11906,
											"end": 11910,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1703,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1707,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1707,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11867,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 11867,
											"end": 11933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11916,
											"end": 11928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11916,
											"end": 11928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11928,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11916,
											"end": 11928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11928,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11916,
											"end": 11933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11867,
											"end": 11933,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 11867,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11805,
											"end": 12006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 11805,
											"end": 12006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11805,
											"end": 12006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11805,
											"end": 12006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11805,
											"end": 12006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11805,
											"end": 12006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10538,
											"end": 10540,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11805,
											"end": 12006,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11805,
											"end": 12006,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11805,
											"end": 12006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10520,
											"end": 10541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10577,
											"end": 10579,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 10557,
											"end": 10575,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10557,
											"end": 10575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10580,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10650,
											"name": "PUSH",
											"source": 1,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 10596,
											"end": 10614,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10596,
											"end": 10614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10596,
											"end": 10614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10589,
											"end": 10651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10667,
											"end": 10685,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10667,
											"end": 10685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10660,
											"end": 10704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10721,
											"end": 10740,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10721,
											"end": 10740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11805,
											"end": 12006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 10336,
											"end": 10746,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11805,
											"end": 12006,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 11805,
											"end": 12006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12016,
											"end": 12028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12016,
											"end": 12032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12016,
											"end": 12032,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12016,
											"end": 12032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12031,
											"end": 12032,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12016,
											"end": 12032,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12016,
											"end": 12032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12016,
											"end": 12032,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12107,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 12042,
											"end": 12107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 12089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12076,
											"end": 12096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 12096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12076,
											"end": 12096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 12096,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12076,
											"end": 12096,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 12096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 12096,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12107,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 12042,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39207,
											"end": 39223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 39207,
											"end": 39221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 39207,
											"end": 39223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39207,
											"end": 39223,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 39207,
											"end": 39223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39233,
											"end": 39261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 39246,
											"end": 39251,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 39253,
											"end": 39260,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 39233,
											"end": 39245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 39233,
											"end": 39261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39233,
											"end": 39261,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 39233,
											"end": 39261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39271,
											"end": 39310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 39296,
											"end": 39309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 39300,
											"end": 39309,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39296,
											"end": 39298,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 39296,
											"end": 39309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 39296,
											"end": 39309,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39296,
											"end": 39309,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 39296,
											"end": 39309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39290,
											"end": 39309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 39290,
											"end": 39309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39290,
											"end": 39293,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39290,
											"end": 39309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 39290,
											"end": 39309,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39290,
											"end": 39309,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 39290,
											"end": 39309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39271,
											"end": 39289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 39271,
											"end": 39310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39271,
											"end": 39310,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 39271,
											"end": 39310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39333,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 39320,
											"end": 39333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39325,
											"name": "PUSH",
											"source": 0,
											"value": "CA"
										},
										{
											"begin": 39320,
											"end": 39325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39320,
											"end": 39333,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 39320,
											"end": 39333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39320,
											"end": 39333,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 39320,
											"end": 39333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39343,
											"end": 39360,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39343,
											"end": 39360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39343,
											"end": 39360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 39343,
											"end": 39360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39343,
											"end": 39350,
											"name": "PUSH",
											"source": 0,
											"value": "CB"
										},
										{
											"begin": 39343,
											"end": 39350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39343,
											"end": 39360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39343,
											"end": 39360,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 39343,
											"end": 39360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39343,
											"end": 39360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39343,
											"end": 39360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 39343,
											"end": 39360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39343,
											"end": 39360,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 39343,
											"end": 39360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39370,
											"end": 39379,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 39370,
											"end": 39391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 39370,
											"end": 39391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39391,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 39370,
											"end": 39391,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39391,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39391,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39414,
											"end": 39423,
											"name": "PUSH",
											"source": 0,
											"value": "16345785D8A0000"
										},
										{
											"begin": 39401,
											"end": 39411,
											"name": "PUSH",
											"source": 0,
											"value": "CD"
										},
										{
											"begin": 39401,
											"end": 39423,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39433,
											"end": 39437,
											"name": "PUSH",
											"source": 0,
											"value": "CE"
										},
										{
											"begin": 39433,
											"end": 39443,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39433,
											"end": 39443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39433,
											"end": 39443,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39453,
											"end": 39460,
											"name": "PUSH",
											"source": 0,
											"value": "CF"
										},
										{
											"begin": 39453,
											"end": 39469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39453,
											"end": 39469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39453,
											"end": 39469,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39479,
											"end": 39515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 39493,
											"end": 39497,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 39500,
											"end": 39514,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39479,
											"end": 39484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 39479,
											"end": 39515,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39479,
											"end": 39515,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 39479,
											"end": 39515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12131,
											"end": 12145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12127,
											"end": 12226,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12127,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 12127,
											"end": 12226,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12177,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12161,
											"end": 12182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12182,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12161,
											"end": 12182,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12182,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12201,
											"end": 12215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4235,
											"end": 4271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4235,
											"end": 4271,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12201,
											"end": 12215,
											"name": "PUSH",
											"source": 0,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 12201,
											"end": 12215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12201,
											"end": 12215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12201,
											"end": 12215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12215,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 12127,
											"end": 12226,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 12127,
											"end": 12226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11749,
											"end": 12232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39522,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29333,
											"end": 29337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29403,
											"end": 29410,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29440,
											"end": 29450,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29412,
											"end": 29437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29403,
											"end": 29410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29412,
											"end": 29421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 29412,
											"end": 29437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29412,
											"end": 29437,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 29412,
											"end": 29437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29412,
											"end": 29450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 29412,
											"end": 29450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29412,
											"end": 29450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29412,
											"end": 29450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 29412,
											"end": 29450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29412,
											"end": 29450,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 29412,
											"end": 29450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 29387,
											"end": 29451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 17765,
											"end": 17776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42051,
											"end": 42073,
											"name": "PUSH",
											"source": 0,
											"value": "D5"
										},
										{
											"begin": 42051,
											"end": 42092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42051,
											"end": 42092,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 42051,
											"end": 42092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42051,
											"end": 42092,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42051,
											"end": 42092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42051,
											"end": 42092,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42051,
											"end": 42092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42051,
											"end": 42092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42051,
											"end": 42092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42051,
											"end": 42092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42051,
											"end": 42092,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 42051,
											"end": 42092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42051,
											"end": 42092,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41941,
											"end": 42099,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 17765,
											"end": 17776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 18596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 18593,
											"end": 18594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18566,
											"end": 18584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 18566,
											"end": 18596,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18566,
											"end": 18596,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 18566,
											"end": 18596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18603,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40101,
											"end": 40117,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40136,
											"end": 40144,
											"name": "PUSH",
											"source": 0,
											"value": "D1"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40129,
											"end": 40144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40056,
											"end": 40151,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25795,
											"end": 25808,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25827,
											"end": 25834,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25820,
											"end": 25834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25820,
											"end": 25834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25820,
											"end": 25834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 25820,
											"end": 25834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25820,
											"end": 25834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 25820,
											"end": 25834,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 17765,
											"end": 17776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 40252,
											"end": 40260,
											"name": "PUSH",
											"source": 0,
											"value": "D1"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40262,
											"end": 40267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40269,
											"end": 40280,
											"name": "PUSH",
											"source": 0,
											"value": "D2"
										},
										{
											"begin": 40241,
											"end": 40251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 40241,
											"end": 40281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40291,
											"end": 40306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 40298,
											"end": 40306,
											"name": "PUSH",
											"source": 0,
											"value": "D1"
										},
										{
											"begin": 40298,
											"end": 40306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40291,
											"end": 40306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 40291,
											"end": 40306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40291,
											"end": 40306,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 40291,
											"end": 40306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40316,
											"end": 40335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40316,
											"end": 40335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40316,
											"end": 40335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 40316,
											"end": 40335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40316,
											"end": 40324,
											"name": "PUSH",
											"source": 0,
											"value": "D1"
										},
										{
											"begin": 40316,
											"end": 40324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40316,
											"end": 40335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40316,
											"end": 40335,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40316,
											"end": 40335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40316,
											"end": 40335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40316,
											"end": 40335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 40316,
											"end": 40335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40316,
											"end": 40335,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 40316,
											"end": 40335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40316,
											"end": 40335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40345,
											"end": 40384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 40356,
											"end": 40364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40366,
											"end": 40370,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40372,
											"end": 40383,
											"name": "PUSH",
											"source": 0,
											"value": "D2"
										},
										{
											"begin": 40345,
											"end": 40355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 40345,
											"end": 40384,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40345,
											"end": 40384,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 40345,
											"end": 40384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40157,
											"end": 40391,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30059,
											"end": 30063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30059,
											"end": 30063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30140,
											"end": 30165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30157,
											"end": 30164,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30140,
											"end": 30149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 30140,
											"end": 30165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30140,
											"end": 30165,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 30140,
											"end": 30165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30113,
											"end": 30165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30113,
											"end": 30165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30203,
											"end": 30218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30183,
											"end": 30199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30183,
											"end": 30218,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30183,
											"end": 30218,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12841,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12823,
											"end": 12844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12880,
											"end": 12882,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 12860,
											"end": 12878,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12860,
											"end": 12878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12860,
											"end": 12878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 12883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12919,
											"end": 12953,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 12899,
											"end": 12917,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12899,
											"end": 12917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12899,
											"end": 12917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12892,
											"end": 12954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12970,
											"end": 12988,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12970,
											"end": 12988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12970,
											"end": 12988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12963,
											"end": 12998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13015,
											"end": 13034,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13015,
											"end": 13034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 12639,
											"end": 13040,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30294,
											"end": 30354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 30303,
											"end": 30308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30317,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30338,
											"end": 30353,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30335,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30294,
											"end": 30302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 30294,
											"end": 30354,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30294,
											"end": 30354,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 30294,
											"end": 30354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30382,
											"end": 30386,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30382,
											"end": 30386,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40851,
											"end": 40855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40889,
											"end": 40896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40889,
											"end": 40896,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 40889,
											"end": 40896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40875,
											"end": 40896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40875,
											"end": 40885,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40875,
											"end": 40896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40875,
											"end": 40896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40871,
											"end": 41173,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40871,
											"end": 41173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 40871,
											"end": 41173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40912,
											"end": 40945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 40927,
											"end": 40936,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40938,
											"end": 40944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40912,
											"end": 40926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 40912,
											"end": 40945,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40912,
											"end": 40945,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 40912,
											"end": 40945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40912,
											"end": 40945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40871,
											"end": 41173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 40871,
											"end": 41173,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40871,
											"end": 41173,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 40871,
											"end": 41173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40976,
											"end": 40991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40994,
											"end": 41019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 41012,
											"end": 41018,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40994,
											"end": 41011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 40994,
											"end": 41019,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40994,
											"end": 41019,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 40994,
											"end": 41019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40976,
											"end": 41019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40976,
											"end": 41019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41033,
											"end": 41068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 41048,
											"end": 41058,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 41060,
											"end": 41067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41033,
											"end": 41047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 41033,
											"end": 41068,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41033,
											"end": 41068,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 41033,
											"end": 41068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41082,
											"end": 41096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41099,
											"end": 41115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 41108,
											"end": 41115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41099,
											"end": 41105,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41099,
											"end": 41115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 41099,
											"end": 41115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41099,
											"end": 41115,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 41099,
											"end": 41115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41082,
											"end": 41115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41082,
											"end": 41115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41129,
											"end": 41162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 41144,
											"end": 41153,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41155,
											"end": 41161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41129,
											"end": 41143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 41129,
											"end": 41162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41129,
											"end": 41162,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 41129,
											"end": 41162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41129,
											"end": 41162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 41173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40962,
											"end": 41173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40871,
											"end": 41173,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 40871,
											"end": 41173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41189,
											"end": 41193,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40749,
											"end": 41200,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 17765,
											"end": 17776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39834,
											"end": 39844,
											"name": "PUSH",
											"source": 0,
											"value": "CD"
										},
										{
											"begin": 39834,
											"end": 39854,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39761,
											"end": 39861,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 17765,
											"end": 17776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40030,
											"name": "PUSH",
											"source": 0,
											"value": "CF"
										},
										{
											"begin": 40023,
											"end": 40043,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39955,
											"end": 40050,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27474,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42526,
											"end": 42541,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 42514,
											"end": 42522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42514,
											"end": 42541,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42514,
											"end": 42541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42506,
											"end": 42562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 42506,
											"end": 42562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42506,
											"end": 42562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42506,
											"end": 42562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42506,
											"end": 42562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42506,
											"end": 42562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13247,
											"end": 13249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 42506,
											"end": 42562,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42506,
											"end": 42562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42506,
											"end": 42562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13229,
											"end": 13250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13286,
											"end": 13288,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13259,
											"end": 13289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4578706972656420646561646C696E65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13305,
											"end": 13323,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13305,
											"end": 13323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13305,
											"end": 13323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13298,
											"end": 13344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13361,
											"end": 13379,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13361,
											"end": 13379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42506,
											"end": 42562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13045,
											"end": 13385,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42506,
											"end": 42562,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 42506,
											"end": 42562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42581,
											"end": 42605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42581,
											"end": 42605,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42581,
											"end": 42605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42581,
											"end": 42605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42581,
											"end": 42595,
											"name": "PUSH",
											"source": 0,
											"value": "D3"
										},
										{
											"begin": 42581,
											"end": 42605,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42581,
											"end": 42605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42581,
											"end": 42605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42581,
											"end": 42605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42581,
											"end": 42605,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42581,
											"end": 42605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42581,
											"end": 42605,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 42581,
											"end": 42605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42580,
											"end": 42605,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42572,
											"end": 42626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 42572,
											"end": 42626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42572,
											"end": 42626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42572,
											"end": 42626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42572,
											"end": 42626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42572,
											"end": 42626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13592,
											"end": 13594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 42572,
											"end": 42626,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42572,
											"end": 42626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42572,
											"end": 42626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13574,
											"end": 13595,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13631,
											"end": 13633,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 13611,
											"end": 13629,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13611,
											"end": 13629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13611,
											"end": 13629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13604,
											"end": 13634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "556E6971756520696420657869737473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13650,
											"end": 13668,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13650,
											"end": 13668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13650,
											"end": 13668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13643,
											"end": 13689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13706,
											"end": 13724,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13706,
											"end": 13724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42572,
											"end": 42626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13390,
											"end": 13730,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42572,
											"end": 42626,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 42572,
											"end": 42626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42655,
											"end": 42665,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 42652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42691,
											"end": 42704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 17957,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42691,
											"end": 42704,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 42691,
											"end": 42704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14104,
											"end": 14132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 42715,
											"end": 42735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14148,
											"end": 14159,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 14148,
											"end": 14159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14148,
											"end": 14159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14141,
											"end": 14177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14141,
											"end": 14177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14141,
											"end": 14177,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14264,
											"end": 14266,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14260,
											"end": 14275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14260,
											"end": 14275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14260,
											"end": 14275,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14256,
											"end": 14280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14256,
											"end": 14280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14243,
											"end": 14254,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 14243,
											"end": 14254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14243,
											"end": 14254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14236,
											"end": 14281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14311,
											"end": 14335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14311,
											"end": 14335,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14297,
											"end": 14309,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 14297,
											"end": 14309,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14297,
											"end": 14309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14290,
											"end": 14336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14370,
											"end": 14385,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 14370,
											"end": 14385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14370,
											"end": 14385,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14366,
											"end": 14390,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14352,
											"end": 14364,
											"name": "PUSH",
											"source": 1,
											"value": "4A"
										},
										{
											"begin": 14352,
											"end": 14364,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14352,
											"end": 14364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14345,
											"end": 14391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14407,
											"end": 14419,
											"name": "PUSH",
											"source": 1,
											"value": "5E"
										},
										{
											"begin": 14407,
											"end": 14419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14407,
											"end": 14419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14400,
											"end": 14428,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 14400,
											"end": 14428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14400,
											"end": 14428,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14444,
											"end": 14456,
											"name": "PUSH",
											"source": 1,
											"value": "7E"
										},
										{
											"begin": 14444,
											"end": 14456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14444,
											"end": 14456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14437,
											"end": 14465,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 14437,
											"end": 14465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14437,
											"end": 14465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14481,
											"end": 14494,
											"name": "PUSH",
											"source": 1,
											"value": "9E"
										},
										{
											"begin": 14481,
											"end": 14494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14481,
											"end": 14494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14474,
											"end": 14503,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14474,
											"end": 14503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14474,
											"end": 14503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 42675,
											"end": 42704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42675,
											"end": 42704,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14519,
											"end": 14532,
											"name": "PUSH",
											"source": 1,
											"value": "BE"
										},
										{
											"begin": 14519,
											"end": 14532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42761,
											"end": 42999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42738,
											"end": 43009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42738,
											"end": 43009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42738,
											"end": 43009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42738,
											"end": 43009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42738,
											"end": 43009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42738,
											"end": 43009,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42715,
											"end": 43009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42715,
											"end": 43009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43020,
											"end": 43036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43059,
											"end": 43080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43094,
											"end": 43351,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 43094,
											"end": 43351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43117,
											"end": 43118,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 43117,
											"end": 43125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43113,
											"end": 43114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43113,
											"end": 43125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43113,
											"end": 43125,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43094,
											"end": 43351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43094,
											"end": 43351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 43094,
											"end": 43351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43146,
											"end": 43163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43176,
											"end": 43188,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43190,
											"end": 43191,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 43192,
											"end": 43193,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43190,
											"end": 43194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43197,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 43198,
											"end": 43199,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43202,
											"end": 43203,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 43204,
											"end": 43205,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43202,
											"end": 43206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14902,
											"end": 14927,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14902,
											"end": 14927,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14902,
											"end": 14927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14975,
											"end": 14979,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 14963,
											"end": 14980,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14963,
											"end": 14980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14963,
											"end": 14980,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14963,
											"end": 14980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14958,
											"end": 14960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14943,
											"end": 14961,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14936,
											"end": 14981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15012,
											"end": 15014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14997,
											"end": 15015,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14990,
											"end": 15024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15055,
											"end": 15057,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15033,
											"end": 15067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14889,
											"end": 14892,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14874,
											"end": 14893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14874,
											"end": 14893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14675,
											"end": 15073,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43166,
											"end": 43207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43146,
											"end": 43207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43146,
											"end": 43207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43237,
											"end": 43245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43225,
											"end": 43245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43225,
											"end": 43234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43225,
											"end": 43245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43225,
											"end": 43245,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43225,
											"end": 43271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43225,
											"end": 43271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43225,
											"end": 43271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 43225,
											"end": 43271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43249,
											"end": 43271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43249,
											"end": 43271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43249,
											"end": 43271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43249,
											"end": 43271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43249,
											"end": 43271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43249,
											"end": 43271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43249,
											"end": 43260,
											"name": "PUSH",
											"source": 0,
											"value": "D2"
										},
										{
											"begin": 43249,
											"end": 43271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43249,
											"end": 43271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43249,
											"end": 43271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43249,
											"end": 43271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43249,
											"end": 43271,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43249,
											"end": 43271,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43249,
											"end": 43271,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 43249,
											"end": 43271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43225,
											"end": 43271,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 43225,
											"end": 43271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43221,
											"end": 43306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43221,
											"end": 43306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 43221,
											"end": 43306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43289,
											"end": 43306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43289,
											"end": 43306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 43289,
											"end": 43306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43289,
											"end": 43306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 43289,
											"end": 43306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43289,
											"end": 43306,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 43289,
											"end": 43306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43289,
											"end": 43306,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43289,
											"end": 43306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43289,
											"end": 43306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43221,
											"end": 43306,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 43221,
											"end": 43306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43331,
											"end": 43340,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43127,
											"end": 43130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 43127,
											"end": 43130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 43127,
											"end": 43130,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43127,
											"end": 43130,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 43127,
											"end": 43130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43094,
											"end": 43351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 43094,
											"end": 43351,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43094,
											"end": 43351,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 43094,
											"end": 43351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43387,
											"end": 43395,
											"name": "PUSH",
											"source": 0,
											"value": "D1"
										},
										{
											"begin": 43387,
											"end": 43402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43368,
											"end": 43402,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 43368,
											"end": 43402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43368,
											"end": 43402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43368,
											"end": 43402,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43360,
											"end": 43422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 43360,
											"end": 43422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43360,
											"end": 43422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43360,
											"end": 43422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43360,
											"end": 43422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43360,
											"end": 43422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15674,
											"end": 15676,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 43360,
											"end": 43422,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43360,
											"end": 43422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43360,
											"end": 43422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15656,
											"end": 15677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15713,
											"end": 15715,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 15693,
											"end": 15711,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15693,
											"end": 15711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15686,
											"end": 15716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964207369676E657273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15732,
											"end": 15750,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15732,
											"end": 15750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15732,
											"end": 15750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15725,
											"end": 15770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15787,
											"end": 15805,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15787,
											"end": 15805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43360,
											"end": 43422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 15472,
											"end": 15811,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 43360,
											"end": 43422,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 43360,
											"end": 43422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43432,
											"end": 43456,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43446,
											"name": "PUSH",
											"source": 0,
											"value": "D3"
										},
										{
											"begin": 43432,
											"end": 43456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43432,
											"end": 43456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43432,
											"end": 43456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43456,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43463,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43432,
											"end": 43463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43459,
											"end": 43463,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43432,
											"end": 43463,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43463,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 43525,
											"name": "PUSH",
											"source": 0,
											"value": "CD"
										},
										{
											"begin": 43515,
											"end": 43525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43493,
											"end": 43507,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 43525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 43525,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43507,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43493,
											"end": 43530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43548,
											"end": 43555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43540,
											"end": 43579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 43540,
											"end": 43579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43540,
											"end": 43579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43540,
											"end": 43579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43540,
											"end": 43579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43540,
											"end": 43579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16228,
											"end": 16230,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 43540,
											"end": 43579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43540,
											"end": 43579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43540,
											"end": 43579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16210,
											"end": 16231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16269,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 16247,
											"end": 16265,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16247,
											"end": 16265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16247,
											"end": 16265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16240,
											"end": 16270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8CC2D2D8CAC840E8DE40E6CADCC8409ACAC6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16286,
											"end": 16304,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 16286,
											"end": 16304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16286,
											"end": 16304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16279,
											"end": 16328,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16345,
											"end": 16363,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 16345,
											"end": 16363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43540,
											"end": 43579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 16026,
											"end": 16369,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 43540,
											"end": 43579,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 43540,
											"end": 43579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43589,
											"end": 43619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 43601,
											"end": 43610,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 43612,
											"end": 43618,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 43589,
											"end": 43600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 43589,
											"end": 43619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43589,
											"end": 43619,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 43589,
											"end": 43619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42496,
											"end": 43626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42496,
											"end": 43626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42496,
											"end": 43626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42496,
											"end": 43626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42496,
											"end": 43626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42496,
											"end": 43626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42262,
											"end": 43626,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18752,
											"end": 18950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 17765,
											"end": 17776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 17765,
											"end": 17778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18840,
											"end": 18862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18840,
											"end": 18862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18832,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 18832,
											"end": 18905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18832,
											"end": 18905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18832,
											"end": 18905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18832,
											"end": 18905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18832,
											"end": 18905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16576,
											"end": 16578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18832,
											"end": 18905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18832,
											"end": 18905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18832,
											"end": 18905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16558,
											"end": 16579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16615,
											"end": 16617,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 16595,
											"end": 16613,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16595,
											"end": 16613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16595,
											"end": 16613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16588,
											"end": 16618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16654,
											"end": 16688,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 16634,
											"end": 16652,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 16634,
											"end": 16652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16634,
											"end": 16652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16705,
											"end": 16723,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 16705,
											"end": 16723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16705,
											"end": 16723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16698,
											"end": 16734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16751,
											"end": 16770,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 16751,
											"end": 16770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18832,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 16374,
											"end": 16776,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18832,
											"end": 18905,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 18832,
											"end": 18905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18915,
											"end": 18943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 18934,
											"end": 18942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18915,
											"end": 18933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 18915,
											"end": 18943,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33878,
											"end": 34248,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 33878,
											"end": 34248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34009,
											"end": 34028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16983,
											"end": 16985,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 16986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17022,
											"end": 17024,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17002,
											"end": 17020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17002,
											"end": 17020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17002,
											"end": 17020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17061,
											"end": 17095,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 17041,
											"end": 17059,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 17041,
											"end": 17059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17041,
											"end": 17059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17096,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17112,
											"end": 17130,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 17112,
											"end": 17130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17112,
											"end": 17130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17105,
											"end": 17139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17156,
											"end": 17175,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 17156,
											"end": 17175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 16781,
											"end": 17181,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34087,
											"end": 34108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34087,
											"end": 34108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17370,
											"end": 17391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17427,
											"end": 17429,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 17407,
											"end": 17425,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17407,
											"end": 17425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17407,
											"end": 17425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17400,
											"end": 17430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17466,
											"end": 17500,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 17446,
											"end": 17464,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 17446,
											"end": 17464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17446,
											"end": 17464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17439,
											"end": 17501,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17517,
											"end": 17535,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 17517,
											"end": 17535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17517,
											"end": 17535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17510,
											"end": 17542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17559,
											"end": 17578,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 17559,
											"end": 17578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 17186,
											"end": 17584,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34169,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34194,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34194,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 33878,
											"end": 34248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33878,
											"end": 34248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33878,
											"end": 34248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33878,
											"end": 34248,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41717,
											"end": 41935,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 41717,
											"end": 41935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41792,
											"end": 41814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 41798,
											"end": 41805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41813,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41792,
											"end": 41797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 41792,
											"end": 41814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41792,
											"end": 41814,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 41792,
											"end": 41814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41838,
											"end": 41849,
											"name": "PUSH",
											"source": 0,
											"value": "D0"
										},
										{
											"begin": 41838,
											"end": 41849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41838,
											"end": 41858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 41838,
											"end": 41858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41838,
											"end": 41858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41838,
											"end": 41858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 41838,
											"end": 41858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41838,
											"end": 41858,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 41838,
											"end": 41858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41824,
											"end": 41835,
											"name": "PUSH",
											"source": 0,
											"value": "D0"
										},
										{
											"begin": 41824,
											"end": 41858,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41895,
											"end": 41919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41919,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41895,
											"end": 41919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41910,
											"name": "PUSH",
											"source": 0,
											"value": "D4"
										},
										{
											"begin": 41895,
											"end": 41919,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41895,
											"end": 41919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41895,
											"end": 41919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41919,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41919,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 41895,
											"end": 41928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41922,
											"end": 41928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41922,
											"end": 41928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 41895,
											"end": 41928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41895,
											"end": 41928,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 41895,
											"end": 41928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41868,
											"end": 41892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41892,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41868,
											"end": 41892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41883,
											"name": "PUSH",
											"source": 0,
											"value": "D4"
										},
										{
											"begin": 41868,
											"end": 41892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41868,
											"end": 41892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41868,
											"end": 41892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41892,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41928,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41717,
											"end": 41935,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41554,
											"end": 41711,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 41554,
											"end": 41711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41619,
											"end": 41626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41638,
											"end": 41653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41677,
											"end": 41680,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 41666,
											"end": 41673,
											"name": "PUSH",
											"source": 0,
											"value": "CF"
										},
										{
											"begin": 41666,
											"end": 41673,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41657,
											"end": 41663,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41657,
											"end": 41673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 41657,
											"end": 41673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41657,
											"end": 41673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41657,
											"end": 41673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 41657,
											"end": 41673,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41657,
											"end": 41673,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 41657,
											"end": 41673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41656,
											"end": 41680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 41656,
											"end": 41680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41656,
											"end": 41680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41656,
											"end": 41680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 41656,
											"end": 41680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41656,
											"end": 41680,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 41656,
											"end": 41680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41638,
											"end": 41680,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41554,
											"end": 41711,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41554,
											"end": 41711,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28691,
											"end": 28695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28747,
											"end": 28785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 28763,
											"end": 28767,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28778,
											"end": 28784,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28747,
											"end": 28762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 28747,
											"end": 28785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28747,
											"end": 28785,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 28747,
											"end": 28785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28795,
											"end": 28822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 28805,
											"end": 28809,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28811,
											"end": 28813,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28815,
											"end": 28821,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28795,
											"end": 28804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 28795,
											"end": 28822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17434,
											"end": 17529,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 17434,
											"end": 17529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17496,
											"end": 17522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 17496,
											"end": 17520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 17496,
											"end": 17522,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25151,
											"end": 25298,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 25151,
											"end": 25298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25253,
											"end": 25291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 25276,
											"end": 25281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25283,
											"end": 25290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25253,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 25253,
											"end": 25291,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37228,
											"end": 37347,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 37228,
											"end": 37347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37306,
											"end": 37340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 37335,
											"end": 37339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37306,
											"end": 37334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 37306,
											"end": 37340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37724,
											"end": 37939,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 37724,
											"end": 37939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37660,
											"end": 37664,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 37660,
											"end": 37664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37849,
											"end": 37855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37816,
											"end": 37846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 26703,
											"end": 26715,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 26703,
											"end": 26715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26703,
											"end": 26715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37816,
											"end": 37846,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 37816,
											"end": 37846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37816,
											"end": 37855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 37816,
											"end": 37855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37816,
											"end": 37855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37816,
											"end": 37855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 37816,
											"end": 37855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37816,
											"end": 37855,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 37816,
											"end": 37855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37816,
											"end": 37864,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37816,
											"end": 37864,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 37808,
											"end": 37894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37808,
											"end": 37894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37808,
											"end": 37894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18425,
											"end": 18427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 37808,
											"end": 37894,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37808,
											"end": 37894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18407,
											"end": 18428,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18464,
											"end": 18466,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 18444,
											"end": 18462,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18444,
											"end": 18462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18444,
											"end": 18462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18437,
											"end": 18467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18503,
											"end": 18530,
											"name": "PUSH",
											"source": 1,
											"value": "45524332304361707065643A2063617020657863656564656400000000000000"
										},
										{
											"begin": 18483,
											"end": 18501,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 18483,
											"end": 18501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18483,
											"end": 18501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18531,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18548,
											"end": 18566,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 18548,
											"end": 18566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37808,
											"end": 37894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 18223,
											"end": 18572,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37808,
											"end": 37894,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 37808,
											"end": 37894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 37932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 37916,
											"end": 37923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37925,
											"end": 37931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 37915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 37904,
											"end": 37932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18030,
											"end": 18160,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 18030,
											"end": 18160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 18085,
											"end": 18153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18085,
											"end": 18153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18085,
											"end": 18153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18781,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18085,
											"end": 18153,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18085,
											"end": 18153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18761,
											"end": 18782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18761,
											"end": 18782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18761,
											"end": 18782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18798,
											"end": 18816,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18798,
											"end": 18816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18798,
											"end": 18816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18791,
											"end": 18821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18857,
											"end": 18891,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18837,
											"end": 18855,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 18837,
											"end": 18855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18837,
											"end": 18855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18830,
											"end": 18892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18909,
											"end": 18927,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 18909,
											"end": 18927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18085,
											"end": 18153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 18577,
											"end": 18933,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19104,
											"end": 19291,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 19104,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19196,
											"end": 19202,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 19196,
											"end": 19202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19196,
											"end": 19202,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19212,
											"end": 19229,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19212,
											"end": 19229,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19229,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19229,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19229,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19244,
											"end": 19284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19244,
											"end": 19284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19196,
											"end": 19202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19196,
											"end": 19202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19196,
											"end": 19202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19196,
											"end": 19202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19196,
											"end": 19202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19244,
											"end": 19284,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 19244,
											"end": 19284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19177,
											"end": 19193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19244,
											"end": 19284,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 19167,
											"end": 19291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19104,
											"end": 19291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19104,
											"end": 19291,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40510,
											"end": 40743,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 40510,
											"end": 40743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40657,
											"end": 40665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40652,
											"end": 40737,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 40652,
											"end": 40737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40675,
											"end": 40678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40675,
											"end": 40685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40671,
											"end": 40685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40685,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40652,
											"end": 40737,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40652,
											"end": 40737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 40652,
											"end": 40737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40720,
											"end": 40726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40710,
											"end": 40713,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40714,
											"end": 40715,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40710,
											"end": 40716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40706,
											"end": 40717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40717,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40706,
											"end": 40717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 40706,
											"end": 40717,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40706,
											"end": 40726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40726,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40726,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40726,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40726,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40687,
											"end": 40690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40687,
											"end": 40690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 40687,
											"end": 40690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40687,
											"end": 40690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 40687,
											"end": 40690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40687,
											"end": 40690,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 40687,
											"end": 40690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40687,
											"end": 40690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40687,
											"end": 40690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40687,
											"end": 40690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40652,
											"end": 40737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 40652,
											"end": 40737,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40652,
											"end": 40737,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 40652,
											"end": 40737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40652,
											"end": 40737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40510,
											"end": 40743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40510,
											"end": 40743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40510,
											"end": 40743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40510,
											"end": 40743,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27180,
											"end": 27184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27234,
											"end": 27262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27251,
											"end": 27253,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27255,
											"end": 27261,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27234,
											"end": 27243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 27234,
											"end": 27262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32796,
											"end": 33455,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 32796,
											"end": 33455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32879,
											"end": 32900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32879,
											"end": 32900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32871,
											"end": 32938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 32871,
											"end": 32938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32871,
											"end": 32938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32871,
											"end": 32938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32871,
											"end": 32938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32871,
											"end": 32938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19142,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32871,
											"end": 32938,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32871,
											"end": 32938,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32871,
											"end": 32938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19122,
											"end": 19143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19179,
											"end": 19181,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 19159,
											"end": 19177,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19159,
											"end": 19177,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19159,
											"end": 19177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19152,
											"end": 19182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19218,
											"end": 19252,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 19198,
											"end": 19216,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 19198,
											"end": 19216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19198,
											"end": 19216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19191,
											"end": 19253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19269,
											"end": 19287,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 19269,
											"end": 19287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19269,
											"end": 19287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19262,
											"end": 19293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19310,
											"end": 19329,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 19310,
											"end": 19329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32871,
											"end": 32938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 18938,
											"end": 19335,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32871,
											"end": 32938,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 32871,
											"end": 32938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33034,
											"end": 33052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33034,
											"end": 33052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33009,
											"end": 33031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33034,
											"end": 33052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33034,
											"end": 33052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33034,
											"end": 33052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33034,
											"end": 33043,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 33034,
											"end": 33052,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33034,
											"end": 33052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33034,
											"end": 33052,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33034,
											"end": 33052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33034,
											"end": 33052,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33034,
											"end": 33052,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33070,
											"end": 33094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33070,
											"end": 33094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33070,
											"end": 33094,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33070,
											"end": 33094,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33062,
											"end": 33133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 33062,
											"end": 33133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33062,
											"end": 33133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33062,
											"end": 33133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33062,
											"end": 33133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33062,
											"end": 33133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19542,
											"end": 19544,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33062,
											"end": 33133,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33062,
											"end": 33133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33062,
											"end": 33133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19524,
											"end": 19545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19581,
											"end": 19583,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 19561,
											"end": 19579,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19561,
											"end": 19579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19561,
											"end": 19579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19554,
											"end": 19584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19620,
											"end": 19654,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 19600,
											"end": 19618,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 19600,
											"end": 19618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19600,
											"end": 19618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19593,
											"end": 19655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19671,
											"end": 19689,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 19671,
											"end": 19689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19671,
											"end": 19689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19664,
											"end": 19696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19713,
											"end": 19732,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 19713,
											"end": 19732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33062,
											"end": 33133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 19340,
											"end": 19738,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33062,
											"end": 33133,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 33062,
											"end": 33133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33167,
											"end": 33176,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33188,
											"end": 33211,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33188,
											"end": 33211,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33188,
											"end": 33211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33167,
											"end": 33211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33167,
											"end": 33211,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33316,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 33304,
											"end": 33326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33326,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33326,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33326,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33326,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33352,
											"end": 33389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33167,
											"end": 33185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33352,
											"end": 33389,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 33352,
											"end": 33389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33352,
											"end": 33389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 1516,
											"end": 1693,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33400,
											"end": 33448,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 33400,
											"end": 33448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32861,
											"end": 33455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32796,
											"end": 33455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32796,
											"end": 33455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32796,
											"end": 33455,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34529,
											"end": 34970,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 34529,
											"end": 34970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34686,
											"end": 34711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 34696,
											"end": 34701,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34703,
											"end": 34710,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34686,
											"end": 34695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 34686,
											"end": 34711,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34686,
											"end": 34711,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 34686,
											"end": 34711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34725,
											"end": 34741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34725,
											"end": 34762,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34721,
											"end": 34964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 34721,
											"end": 34964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34806,
											"end": 34812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34786,
											"end": 34802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34786,
											"end": 34812,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34786,
											"end": 34812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19945,
											"end": 19947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19927,
											"end": 19948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19984,
											"end": 19986,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 19964,
											"end": 19982,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19964,
											"end": 19982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19964,
											"end": 19982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19957,
											"end": 19987,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20023,
											"end": 20054,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 20003,
											"end": 20021,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 20003,
											"end": 20021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20003,
											"end": 20021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19996,
											"end": 20055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20072,
											"end": 20090,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 20072,
											"end": 20090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 19743,
											"end": 20096,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34888,
											"end": 34939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 34897,
											"end": 34902,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 34911,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34932,
											"end": 34938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34913,
											"end": 34929,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34913,
											"end": 34938,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34888,
											"end": 34896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 34888,
											"end": 34939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30847,
											"end": 31665,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 30847,
											"end": 31665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30973,
											"end": 30991,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30973,
											"end": 30991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20303,
											"end": 20305,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20306,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20342,
											"end": 20344,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 20322,
											"end": 20340,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20322,
											"end": 20340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20322,
											"end": 20340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20315,
											"end": 20345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20381,
											"end": 20415,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 20361,
											"end": 20379,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 20361,
											"end": 20379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20361,
											"end": 20379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20354,
											"end": 20416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20432,
											"end": 20450,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 20432,
											"end": 20450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20432,
											"end": 20450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20425,
											"end": 20460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20477,
											"end": 20496,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 20477,
											"end": 20496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 20101,
											"end": 20502,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31051,
											"end": 31067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31051,
											"end": 31067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20709,
											"end": 20711,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20691,
											"end": 20712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20750,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 20728,
											"end": 20746,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20728,
											"end": 20746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20728,
											"end": 20746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20721,
											"end": 20751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20787,
											"end": 20821,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 20767,
											"end": 20785,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 20767,
											"end": 20785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20767,
											"end": 20785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20760,
											"end": 20822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20838,
											"end": 20856,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 20838,
											"end": 20856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20838,
											"end": 20856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20881,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 20881,
											"end": 20900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 20507,
											"end": 20906,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31167,
											"end": 31186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31198,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31222,
											"end": 31243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31222,
											"end": 31243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31222,
											"end": 31243,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31222,
											"end": 31243,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21113,
											"end": 21115,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21152,
											"end": 21154,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 21132,
											"end": 21150,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21132,
											"end": 21150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21132,
											"end": 21150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21125,
											"end": 21155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21191,
											"end": 21225,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 21171,
											"end": 21189,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 21171,
											"end": 21189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21171,
											"end": 21189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21164,
											"end": 21226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21242,
											"end": 21260,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 21242,
											"end": 21260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21242,
											"end": 21260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21235,
											"end": 21271,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21288,
											"end": 21307,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 21288,
											"end": 21307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 20911,
											"end": 21313,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31329,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31358,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31358,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31358,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31558,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31352,
											"end": 31358,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1652,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1693,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 32796,
											"end": 33455,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17535,
											"end": 17646,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 17535,
											"end": 17646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 17607,
											"end": 17639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25304,
											"end": 25463,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 25304,
											"end": 25463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25416,
											"end": 25429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25416,
											"end": 25429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25416,
											"end": 25429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 25416,
											"end": 25429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25416,
											"end": 25421,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25416,
											"end": 25421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25416,
											"end": 25429,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25416,
											"end": 25429,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25416,
											"end": 25429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25416,
											"end": 25429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25416,
											"end": 25429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 25416,
											"end": 25429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25416,
											"end": 25429,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 25416,
											"end": 25429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25439,
											"end": 25456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25439,
											"end": 25456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25439,
											"end": 25456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 25439,
											"end": 25456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25439,
											"end": 25446,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25439,
											"end": 25446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25439,
											"end": 25456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25439,
											"end": 25456,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25439,
											"end": 25456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25439,
											"end": 25456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25439,
											"end": 25456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 25439,
											"end": 25456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37353,
											"end": 37511,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 37353,
											"end": 37511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13854,
											"end": 13867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 13846,
											"end": 13915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37456,
											"end": 37457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37449,
											"end": 37453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37449,
											"end": 37457,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37441,
											"end": 37483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 37441,
											"end": 37483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37441,
											"end": 37483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37441,
											"end": 37483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37441,
											"end": 37483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37441,
											"end": 37483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21520,
											"end": 21522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 37441,
											"end": 37483,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37441,
											"end": 37483,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37441,
											"end": 37483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21502,
											"end": 21523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21559,
											"end": 21561,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 21539,
											"end": 21557,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21539,
											"end": 21557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21539,
											"end": 21557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21532,
											"end": 21562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45524332304361707065643A20636170206973203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21578,
											"end": 21596,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 21578,
											"end": 21596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21578,
											"end": 21596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21571,
											"end": 21622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21639,
											"end": 21657,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 21639,
											"end": 21657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37441,
											"end": 37483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 21318,
											"end": 21663,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37441,
											"end": 37483,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 37441,
											"end": 37483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37493,
											"end": 37497,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 37493,
											"end": 37504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37353,
											"end": 37511,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31941,
											"end": 32476,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 31941,
											"end": 32476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32024,
											"end": 32045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 32016,
											"end": 32081,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32081,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32016,
											"end": 32081,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32016,
											"end": 32081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21870,
											"end": 21872,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32016,
											"end": 32081,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32016,
											"end": 32081,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21852,
											"end": 21873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21909,
											"end": 21911,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 21889,
											"end": 21907,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21889,
											"end": 21907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21889,
											"end": 21907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21948,
											"end": 21981,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 21928,
											"end": 21946,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 21928,
											"end": 21946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21928,
											"end": 21946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21921,
											"end": 21982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21999,
											"end": 22017,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 21999,
											"end": 22017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 21668,
											"end": 22023,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32081,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 32016,
											"end": 32081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32168,
											"end": 32174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32152,
											"end": 32164,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 32152,
											"end": 32164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32152,
											"end": 32174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32152,
											"end": 32174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32152,
											"end": 32174,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32152,
											"end": 32174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 32152,
											"end": 32174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32152,
											"end": 32174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32152,
											"end": 32174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 32152,
											"end": 32174,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32152,
											"end": 32174,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 32152,
											"end": 32174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32152,
											"end": 32174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32152,
											"end": 32174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32152,
											"end": 32174,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32320,
											"end": 32338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32320,
											"end": 32338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32329,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 32320,
											"end": 32338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32320,
											"end": 32338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32320,
											"end": 32338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32338,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32338,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32348,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32320,
											"end": 32348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32373,
											"end": 32410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32373,
											"end": 32410,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 32373,
											"end": 32410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32373,
											"end": 32410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32373,
											"end": 32410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32373,
											"end": 32410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32373,
											"end": 32410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32373,
											"end": 32410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32373,
											"end": 32410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32373,
											"end": 32410,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42105,
											"end": 42256,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "237"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "490"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "188"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "490"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "492"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "495"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "492"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "493"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "495"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "493"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "495"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "494"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "495"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "494"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "495"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "496"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "497"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "496"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "280"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "283"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "497"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "282"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "495"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "501"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "495"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "501"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "497"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "504"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "496"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "504"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 616,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 691,
											"end": 722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 691,
											"end": 722,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 681,
											"end": 723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 681,
											"end": 723,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 671,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 671,
											"end": 741,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 737,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 727,
											"end": 739,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 752,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 752,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 843,
											"end": 850,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 839,
											"end": 862,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 832,
											"end": 884,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 832,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 832,
											"end": 884,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 878,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 870,
											"end": 882,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 832,
											"end": 884,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 832,
											"end": 884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 919,
											"end": 928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 906,
											"end": 929,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 963,
											"end": 968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 938,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 938,
											"end": 969,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1511,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1196,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1322,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1311,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1323,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1328,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1343,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1390,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 1424,
											"end": 1429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 1399,
											"end": 1430,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1399,
											"end": 1430,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 1399,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1505,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1505,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1196,
											"end": 1511,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1698,
											"end": 2154,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1698,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1846,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1832,
											"end": 1841,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1830,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1815,
											"end": 1847,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1864,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 1812,
											"end": 1864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1850,
											"end": 1862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1864,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 1812,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1908,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1886,
											"end": 1909,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 1943,
											"end": 1948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 1918,
											"end": 1949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 1918,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 1973,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2029,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 1997,
											"end": 2029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 2038,
											"end": 2071,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2038,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 2038,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 2154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 2154,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2097,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2097,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2144,
											"end": 2146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2129,
											"end": 2147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2116,
											"end": 2148,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2116,
											"end": 2148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 2154,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2159,
											"end": 2286,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 2159,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2230,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2215,
											"end": 2218,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2211,
											"end": 2231,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2248,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2279,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2272,
											"end": 2273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2280,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2566,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 2291,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2447,
											"end": 2481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2481,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2506,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2529,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 2441,
											"end": 2529,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2291,
											"end": 2566,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2571,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 2571,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2671,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 2634,
											"end": 2689,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2685,
											"end": 2686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2687,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2689,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 2634,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2766,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2789,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 2737,
											"end": 2789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2837,
											"end": 2850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2833,
											"end": 2860,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2829,
											"end": 2867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 2813,
											"end": 2868,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2813,
											"end": 2868,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 2813,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 2895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 2891,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2942,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2936,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 2929,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 2925,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2943,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2960,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 2905,
											"end": 2960,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2958,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2960,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 2905,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3006,
											"end": 3012,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2986,
											"end": 2993,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 3024,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3066,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3040,
											"end": 3067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3055,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 3102,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2571,
											"end": 3102,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3107,
											"end": 3263,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 3107,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3193,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3237,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3222,
											"end": 3238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3238,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3239,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 3202,
											"end": 3257,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3253,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3255,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3257,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 3202,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3263,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3420,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3422,
											"end": 3428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3486,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 3471,
											"end": 3480,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3469,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3487,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 3451,
											"end": 3504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3502,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3504,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 3451,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3550,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3610,
											"end": 3612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3613,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3630,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 3596,
											"end": 3630,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3630,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 3596,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 3691,
											"end": 3698,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3680,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 3649,
											"end": 3699,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3649,
											"end": 3699,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 3649,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3699,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 3754,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3741,
											"end": 3750,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3724,
											"end": 3756,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 3779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3784,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3795,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 3864,
											"end": 3871,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3853,
											"end": 3861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3872,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 3923,
											"end": 3925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 3891,
											"end": 3927,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3891,
											"end": 3927,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 3891,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3881,
											"end": 3927,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3881,
											"end": 3927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3976,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3963,
											"end": 3972,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 3977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 3978,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3978,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4028,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4014,
											"end": 4023,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4010,
											"end": 4029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3997,
											"end": 4030,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4066,
											"end": 4075,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4082,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4490,
											"end": 5148,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4490,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4713,
											"end": 4734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4796,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4899,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4860,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4843,
											"end": 4861,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4636,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 5122,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 4927,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 4939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 4948,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 5122,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 4927,
											"end": 5122,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5006,
											"end": 5019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5006,
											"end": 5019,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5002,
											"end": 5041,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5042,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5039,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 4927,
											"end": 5122,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 5122,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 4927,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5139,
											"end": 5142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5142,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4490,
											"end": 5148,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4490,
											"end": 5148,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5153,
											"end": 5336,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 5153,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5238,
											"end": 5244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5235,
											"end": 5265,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5288,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 5232,
											"end": 5288,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5313,
											"end": 5314,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5309,
											"end": 5323,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5325,
											"end": 5329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5305,
											"end": 5330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5305,
											"end": 5330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5336,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5341,
											"end": 6307,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5341,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5501,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5496,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5485,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5474,
											"end": 5497,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5467,
											"end": 5519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5467,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 5467,
											"end": 5519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5517,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5467,
											"end": 5519,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 5467,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5555,
											"end": 5564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5565,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5580,
											"end": 5586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5607,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5624,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 5574,
											"end": 5624,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5624,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 5574,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5665,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5696,
											"end": 5700,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5688,
											"end": 5701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5711,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5674,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 5674,
											"end": 5729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5729,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 5674,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5763,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5748,
											"end": 5764,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 5800,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 5840,
											"end": 5842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5800,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 5800,
											"end": 5843,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5800,
											"end": 5843,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 5800,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 5784,
											"end": 5844,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5784,
											"end": 5844,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 5784,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5960,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5956,
											"end": 5966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5966,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5948,
											"end": 5967,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5948,
											"end": 5967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5972,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 5921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 5921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 5921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 5921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5984,
											"end": 6003,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5984,
											"end": 6003,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5984,
											"end": 6003,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6020,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 5981,
											"end": 6020,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6013,
											"end": 6014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6018,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6020,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 5981,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6071,
											"end": 6074,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6083,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6159,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6160,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6173,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 6198,
											"end": 6203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6173,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 6173,
											"end": 6204,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6173,
											"end": 6204,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 6173,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6105,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6255,
											"end": 6267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6255,
											"end": 6267,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6255,
											"end": 6267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6255,
											"end": 6267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6301,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 6307,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 6307,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6312,
											"end": 6492,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6312,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6371,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6426,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6412,
											"end": 6421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6403,
											"end": 6410,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6399,
											"end": 6422,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6395,
											"end": 6427,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6444,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 6392,
											"end": 6444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6437,
											"end": 6438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6442,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6444,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 6392,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6492,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6565,
											"end": 6571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6573,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6626,
											"end": 6628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6614,
											"end": 6623,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6624,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6597,
											"end": 6629,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6646,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 6594,
											"end": 6646,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6639,
											"end": 6640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6632,
											"end": 6644,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6646,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 6594,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6691,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6700,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 6725,
											"end": 6730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6700,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 6700,
											"end": 6731,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6700,
											"end": 6731,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 6700,
											"end": 6731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6750,
											"end": 6755,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6807,
											"end": 6809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6792,
											"end": 6810,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6811,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 6779,
											"end": 6811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 6820,
											"end": 6853,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6820,
											"end": 6853,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 6820,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6890,
											"end": 7552,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 6890,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6997,
											"end": 7000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6990,
											"end": 6994,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6982,
											"end": 6988,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 7001,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6964,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 6964,
											"end": 7019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7005,
											"end": 7017,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6964,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 6964,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7058,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7101,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 7117,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 7157,
											"end": 7159,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 7117,
											"end": 7160,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7101,
											"end": 7161,
											"name": "tag",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 7101,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7282,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 7277,
											"end": 7287,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7287,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7287,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7265,
											"end": 7288,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7265,
											"end": 7288,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7261,
											"end": 7293,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7261,
											"end": 7293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7261,
											"end": 7293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7226,
											"end": 7238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7226,
											"end": 7238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7226,
											"end": 7238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7226,
											"end": 7238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7320,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7320,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7320,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7337,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 7302,
											"end": 7337,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7333,
											"end": 7334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7323,
											"end": 7335,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7337,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 7302,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7367,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7397,
											"end": 7403,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7392,
											"end": 7395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7404,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7480,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7480,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7451,
											"end": 7481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7451,
											"end": 7481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7513,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7513,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7414,
											"end": 7426,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7414,
											"end": 7426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7541,
											"end": 7546,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 7552,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6890,
											"end": 7552,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7751,
											"end": 7757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7759,
											"end": 7765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7767,
											"end": 7773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7783,
											"end": 7789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7855,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7840,
											"end": 7849,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7831,
											"end": 7838,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 7850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7856,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7820,
											"end": 7873,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7820,
											"end": 7873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 7820,
											"end": 7873,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7866,
											"end": 7867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7871,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7820,
											"end": 7873,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 7820,
											"end": 7873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7917,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7918,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7927,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 7952,
											"end": 7957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7927,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 7927,
											"end": 7958,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7927,
											"end": 7958,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 7927,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7977,
											"end": 7982,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8001,
											"end": 8003,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8035,
											"end": 8053,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8054,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8054,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8101,
											"end": 8103,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8105,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8105,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8152,
											"end": 8154,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8137,
											"end": 8155,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8124,
											"end": 8156,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8124,
											"end": 8156,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8207,
											"end": 8210,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8192,
											"end": 8211,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8179,
											"end": 8212,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8261,
											"end": 8275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8261,
											"end": 8275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8261,
											"end": 8275,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8292,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 8258,
											"end": 8292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8288,
											"end": 8289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8278,
											"end": 8290,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8292,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 8258,
											"end": 8292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8326,
											"end": 8332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8315,
											"end": 8324,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 8311,
											"end": 8333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8378,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 8364,
											"end": 8368,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8360,
											"end": 8362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8356,
											"end": 8369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8379,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8342,
											"end": 8397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 8342,
											"end": 8397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8393,
											"end": 8394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8390,
											"end": 8391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8395,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8342,
											"end": 8397,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 8342,
											"end": 8397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8429,
											"end": 8431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8416,
											"end": 8432,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8452,
											"end": 8512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 8468,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 8508,
											"end": 8510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8468,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 8468,
											"end": 8511,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8452,
											"end": 8512,
											"name": "tag",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 8452,
											"end": 8512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8546,
											"end": 8561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8546,
											"end": 8561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8546,
											"end": 8561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8628,
											"end": 8629,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8624,
											"end": 8634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8624,
											"end": 8634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8624,
											"end": 8634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8624,
											"end": 8634,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8635,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8612,
											"end": 8640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8612,
											"end": 8640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8612,
											"end": 8640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8577,
											"end": 8589,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8577,
											"end": 8589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8577,
											"end": 8589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8577,
											"end": 8589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8671,
											"name": "DUP15",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8671,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8671,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8649,
											"end": 8688,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8649,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 8649,
											"end": 8688,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8684,
											"end": 8685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8681,
											"end": 8682,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8686,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8649,
											"end": 8688,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 8649,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8708,
											"end": 8719,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8708,
											"end": 8719,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8708,
											"end": 8719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8708,
											"end": 8719,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8744,
											"end": 8750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8739,
											"end": 8742,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8736,
											"end": 8751,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 8827,
											"end": 8830,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 8810,
											"end": 8831,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8810,
											"end": 8831,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 8810,
											"end": 8831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8798,
											"end": 8832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8798,
											"end": 8832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8761,
											"end": 8773,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8761,
											"end": 8773,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8761,
											"end": 8773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8761,
											"end": 8773,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8852,
											"end": 8864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8852,
											"end": 8864,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8852,
											"end": 8864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8852,
											"end": 8864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8893,
											"end": 8898,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8951,
											"end": 8954,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8936,
											"end": 8955,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8923,
											"end": 8956,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8923,
											"end": 8956,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8968,
											"end": 8984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 8984,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 8984,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8965,
											"end": 9001,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8965,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 8965,
											"end": 9001,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8997,
											"end": 8998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8994,
											"end": 8995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8987,
											"end": 8999,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8965,
											"end": 9001,
											"name": "tag",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 8965,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 9064,
											"end": 9072,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9053,
											"end": 9062,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 9049,
											"end": 9073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 9020,
											"end": 9083,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9020,
											"end": 9083,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 9020,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9010,
											"end": 9083,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9010,
											"end": 9083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 9125,
											"end": 9134,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 9121,
											"end": 9140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9108,
											"end": 9141,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9141,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9166,
											"end": 9168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9156,
											"end": 9164,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9169,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9150,
											"end": 9186,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9150,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 9150,
											"end": 9186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9182,
											"end": 9183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9179,
											"end": 9180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9184,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9150,
											"end": 9186,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 9150,
											"end": 9186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9150,
											"end": 9186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9150,
											"end": 9186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9205,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 9260,
											"end": 9267,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9238,
											"end": 9247,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 9234,
											"end": 9258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9205,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 9205,
											"end": 9268,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9205,
											"end": 9268,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 9205,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9195,
											"end": 9268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9195,
											"end": 9268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9195,
											"end": 9268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9279,
											"end": 9659,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9279,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9358,
											"end": 9359,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9354,
											"end": 9366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9366,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9401,
											"end": 9413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9401,
											"end": 9413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9401,
											"end": 9413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 9422,
											"end": 9483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9476,
											"end": 9480,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 9468,
											"end": 9474,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9481,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9454,
											"end": 9481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9454,
											"end": 9481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9483,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 9422,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9531,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9521,
											"end": 9527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9518,
											"end": 9532,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9498,
											"end": 9516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9495,
											"end": 9533,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9653,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 9492,
											"end": 9653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9575,
											"end": 9585,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9570,
											"end": 9573,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9566,
											"end": 9586,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9556,
											"end": 9587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9610,
											"end": 9614,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9607,
											"end": 9608,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9600,
											"end": 9615,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 9642,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9635,
											"end": 9636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9628,
											"end": 9643,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9653,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 9492,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9659,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10074,
											"end": 10201,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 10074,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10135,
											"end": 10145,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 10130,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10126,
											"end": 10146,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10123,
											"end": 10124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10116,
											"end": 10147,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10166,
											"end": 10170,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10163,
											"end": 10164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10156,
											"end": 10171,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10194,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10187,
											"end": 10188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10180,
											"end": 10195,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10206,
											"end": 10331,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 10206,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10246,
											"end": 10250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10274,
											"end": 10275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10271,
											"end": 10272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10268,
											"end": 10276,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10265,
											"end": 10299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10265,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 10265,
											"end": 10299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10279,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 10279,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 10279,
											"end": 10297,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10279,
											"end": 10297,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 10279,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10316,
											"end": 10325,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10206,
											"end": 10331,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10751,
											"end": 11173,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 10751,
											"end": 11173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10841,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10883,
											"end": 10888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10897,
											"end": 11167,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 10897,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10918,
											"end": 10925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10908,
											"end": 10916,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10905,
											"end": 10926,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10897,
											"end": 11167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10897,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 10897,
											"end": 11167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10977,
											"end": 10981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10973,
											"end": 10974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10969,
											"end": 10975,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10965,
											"end": 10982,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 10983,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10953,
											"end": 11006,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10953,
											"end": 11006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 10953,
											"end": 11006,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11036,
											"end": 11043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11034,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11022,
											"end": 11044,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11074,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 11019,
											"end": 11074,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11056,
											"end": 11072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11056,
											"end": 11072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11056,
											"end": 11072,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11056,
											"end": 11072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11074,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 11019,
											"end": 11074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11135,
											"end": 11157,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11135,
											"end": 11157,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11135,
											"end": 11157,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 11135,
											"end": 11157,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 11110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 11110,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 11110,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 11110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10897,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 10897,
											"end": 11167,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10897,
											"end": 11167,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 10897,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10901,
											"end": 10904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 11173,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 11173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 11173,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 11173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 11173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 11173,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11178,
											"end": 11984,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 11178,
											"end": 11984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11257,
											"end": 11265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11247,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 11247,
											"end": 11327,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11298,
											"end": 11299,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11312,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 11312,
											"end": 11317,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11247,
											"end": 11327,
											"name": "tag",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 11247,
											"end": 11327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 11336,
											"end": 11412,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11383,
											"end": 11384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11397,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 11397,
											"end": 11402,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11412,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 11336,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11446,
											"end": 11447,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11441,
											"end": 11500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11441,
											"end": 11500,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11441,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 11441,
											"end": 11500,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11515,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11509,
											"end": 11639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11509,
											"end": 11639,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11509,
											"end": 11639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 11509,
											"end": 11639,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 11421,
											"end": 11639,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11441,
											"end": 11500,
											"name": "tag",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 11441,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11471,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11462,
											"end": 11472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11462,
											"end": 11472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11485,
											"end": 11490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11485,
											"end": 11490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 11485,
											"end": 11490,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11509,
											"end": 11639,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 11509,
											"end": 11639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11546,
											"end": 11549,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11536,
											"end": 11544,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11550,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11530,
											"end": 11573,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11530,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 11530,
											"end": 11573,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11553,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 11553,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 11553,
											"end": 11571,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11553,
											"end": 11571,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 11553,
											"end": 11571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11609,
											"end": 11610,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11595,
											"end": 11611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11595,
											"end": 11611,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11624,
											"end": 11629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 11624,
											"end": 11629,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11639,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 11421,
											"end": 11639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11723,
											"end": 11725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11713,
											"end": 11721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11726,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11704,
											"end": 11707,
											"name": "PUSH",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 11698,
											"end": 11702,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11695,
											"end": 11708,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11691,
											"end": 11727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11685,
											"end": 11687,
											"name": "PUSH",
											"source": 1,
											"value": "4E"
										},
										{
											"begin": 11675,
											"end": 11683,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11672,
											"end": 11688,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11667,
											"end": 11669,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 11661,
											"end": 11665,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11658,
											"end": 11670,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11654,
											"end": 11689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11651,
											"end": 11728,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11807,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 11648,
											"end": 11807,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11760,
											"end": 11779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11760,
											"end": 11779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11760,
											"end": 11779,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 11792,
											"end": 11797,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11807,
											"name": "tag",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 11648,
											"end": 11807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 11864,
											"end": 11872,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11858,
											"end": 11862,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 11839,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11909,
											"end": 11915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 11906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11901,
											"end": 11907,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 11897,
											"end": 11916,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11888,
											"end": 11895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11885,
											"end": 11917,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11882,
											"end": 11940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11882,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 11882,
											"end": 11940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11958,
											"end": 11978,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11958,
											"end": 11978,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11984,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11178,
											"end": 11984,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11989,
											"end": 12129,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 11989,
											"end": 12129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12047,
											"end": 12052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12076,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 12117,
											"end": 12121,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12107,
											"end": 12115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12103,
											"end": 12122,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12097,
											"end": 12101,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12076,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 12076,
											"end": 12123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12134,
											"end": 12302,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 12134,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12240,
											"end": 12241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12236,
											"end": 12237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12232,
											"end": 12238,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12242,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12225,
											"end": 12226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12222,
											"end": 12243,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12210,
											"end": 12219,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12203,
											"end": 12220,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12199,
											"end": 12244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12196,
											"end": 12267,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12196,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 12196,
											"end": 12267,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12247,
											"end": 12265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 12247,
											"end": 12265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 12247,
											"end": 12265,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12247,
											"end": 12265,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 12247,
											"end": 12265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12287,
											"end": 12296,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12287,
											"end": 12296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12134,
											"end": 12302,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12506,
											"end": 12634,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 12506,
											"end": 12634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12546,
											"end": 12549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12577,
											"end": 12578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12573,
											"end": 12579,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12567,
											"end": 12580,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12564,
											"end": 12603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12564,
											"end": 12603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 12564,
											"end": 12603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "tag",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12619,
											"end": 12628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12619,
											"end": 12628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12506,
											"end": 12634,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14543,
											"end": 14670,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 14543,
											"end": 14670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14604,
											"end": 14614,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 14599,
											"end": 14602,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14595,
											"end": 14615,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14592,
											"end": 14593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14585,
											"end": 14616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14639,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 14632,
											"end": 14633,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14625,
											"end": 14640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14659,
											"end": 14663,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14656,
											"end": 14657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14649,
											"end": 14664,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15078,
											"end": 15253,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 15078,
											"end": 15253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15159,
											"end": 15163,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 15152,
											"end": 15157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15148,
											"end": 15164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15192,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 15179,
											"end": 15186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15176,
											"end": 15193,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15173,
											"end": 15216,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15173,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 15173,
											"end": 15216,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15246,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15232,
											"end": 15247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15232,
											"end": 15247,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15078,
											"end": 15253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15078,
											"end": 15253,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15258,
											"end": 15467,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 15258,
											"end": 15467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15296,
											"end": 15299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15377,
											"end": 15379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15370,
											"end": 15375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15366,
											"end": 15380,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15395,
											"end": 15402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15392,
											"end": 15407,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15389,
											"end": 15430,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15389,
											"end": 15430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 15389,
											"end": 15430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15410,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 15410,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 15410,
											"end": 15428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15410,
											"end": 15428,
											"name": "tag",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 15410,
											"end": 15428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15459,
											"end": 15460,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15446,
											"end": 15461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15446,
											"end": 15461,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15258,
											"end": 15467,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15258,
											"end": 15467,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17589,
											"end": 17806,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 17589,
											"end": 17806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17629,
											"end": 17630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17655,
											"end": 17656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17645,
											"end": 17777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 17645,
											"end": 17777,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17699,
											"end": 17709,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 17694,
											"end": 17697,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17690,
											"end": 17710,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17687,
											"end": 17688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17680,
											"end": 17711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17734,
											"end": 17738,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 17731,
											"end": 17732,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17724,
											"end": 17739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17762,
											"end": 17766,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17759,
											"end": 17760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17752,
											"end": 17767,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17645,
											"end": 17777,
											"name": "tag",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 17645,
											"end": 17777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17791,
											"end": 17800,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 17791,
											"end": 17800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17589,
											"end": 17806,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17811,
											"end": 18218,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 17811,
											"end": 18218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18013,
											"end": 18015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17995,
											"end": 18016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17995,
											"end": 18016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17995,
											"end": 18016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18052,
											"end": 18054,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 18032,
											"end": 18050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18050,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18025,
											"end": 18055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18091,
											"end": 18125,
											"name": "PUSH",
											"source": 1,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 18086,
											"end": 18088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18064,
											"end": 18126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18157,
											"end": 18159,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 18142,
											"end": 18160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18142,
											"end": 18160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18135,
											"end": 18176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18208,
											"end": 18211,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18193,
											"end": 18212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18193,
											"end": 18212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17811,
											"end": 18218,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_mapSigners(address)": "3de47e32",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getRewardAmt()": "ac7fa3c6",
							"getSigners()": "94cf795e",
							"getTaxFee()": "f66608fe",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize(string,string,uint8,uint256,uint256,uint256)": "2b9a1d3c",
							"mapSigner(address)": "07c351dd",
							"name()": "06fdde03",
							"nodeControllerBurn(address,uint256)": "1e71e435",
							"owner()": "8da5cb5b",
							"permitMint(address,uint256,uint256,uint256,uint8[],bytes32[],bytes32[])": "e4c97e6a",
							"renounceOwnership()": "715018a6",
							"setNodeControllerContract(address)": "4cdbab5b",
							"setRewardAmtInWei(uint256)": "b24a0893",
							"setSigners(address[])": "a3772662",
							"setTaxFee(uint256)": "c4081a4c",
							"symbol()": "95d89b41",
							"totalBurned()": "d89135cd",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniqueIdExists(uint256)": "f9342285",
							"userTotalBurned(address)": "1e0d4ce9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_mapSigners\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardAmt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_NAME\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_SYMBOL\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_DECIMALS\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"taxFee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"mapSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"nodeControllerBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"uniqueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8[]\",\"name\":\"v\",\"type\":\"uint8[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"r\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"s\",\"type\":\"bytes32[]\"}],\"name\":\"permitMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"setNodeControllerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newAmt\",\"type\":\"uint256\"}],\"name\":\"setRewardAmtInWei\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"signers_\",\"type\":\"address[]\"}],\"name\":\"setSigners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTaxFee\",\"type\":\"uint256\"}],\"name\":\"setTaxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uniqueIdExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userTotalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DeAnt3Token_flat.sol\":\"DeAnt3Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DeAnt3Token_flat.sol\":{\"keccak256\":\"0x41414b265c0e7d535f9e85b03f38beabcfcb262d94d9dc9e148844d9bb1fa10c\",\"urls\":[\"bzz-raw://40373f60f94c46bac577ed29841a36ecdc28ea8e794fd17653ce68069a35ebe4\",\"dweb:/ipfs/QmXrHruRFEyPiwPaM5weES4G43xEqrXT5WsCBb27HgzX3p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 297,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 300,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 498,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 742,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 748,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 750,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 752,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 754,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 1334,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							},
							{
								"astId": 1343,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_cap",
								"offset": 0,
								"slot": "101",
								"type": "t_uint256"
							},
							{
								"astId": 1418,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 507,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_owner",
								"offset": 0,
								"slot": "152",
								"type": "t_address"
							},
							{
								"astId": 627,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "__gap",
								"offset": 0,
								"slot": "153",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1428,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_name",
								"offset": 0,
								"slot": "202",
								"type": "t_string_storage"
							},
							{
								"astId": 1430,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "203",
								"type": "t_string_storage"
							},
							{
								"astId": 1432,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "204",
								"type": "t_uint8"
							},
							{
								"astId": 1434,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_rewardAmt",
								"offset": 0,
								"slot": "205",
								"type": "t_uint256"
							},
							{
								"astId": 1436,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_cap",
								"offset": 0,
								"slot": "206",
								"type": "t_uint256"
							},
							{
								"astId": 1438,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_taxFee",
								"offset": 0,
								"slot": "207",
								"type": "t_uint256"
							},
							{
								"astId": 1440,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "totalBurned",
								"offset": 0,
								"slot": "208",
								"type": "t_uint256"
							},
							{
								"astId": 1443,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_signers",
								"offset": 0,
								"slot": "209",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1447,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "_mapSigners",
								"offset": 0,
								"slot": "210",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1451,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "uniqueIdExists",
								"offset": 0,
								"slot": "211",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 1455,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "userTotalBurned",
								"offset": 0,
								"slot": "212",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1457,
								"contract": "DeAnt3Token_flat.sol:DeAnt3Token",
								"label": "nodeControllerContract",
								"offset": 0,
								"slot": "213",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20CappedUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:storage-size": "51",
						"details": "Extension of {ERC20} that adds a cap to the supply of tokens.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:storage-size\":\"51\",\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DeAnt3Token_flat.sol\":\"ERC20CappedUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DeAnt3Token_flat.sol\":{\"keccak256\":\"0x41414b265c0e7d535f9e85b03f38beabcfcb262d94d9dc9e148844d9bb1fa10c\",\"urls\":[\"bzz-raw://40373f60f94c46bac577ed29841a36ecdc28ea8e794fd17653ce68069a35ebe4\",\"dweb:/ipfs/QmXrHruRFEyPiwPaM5weES4G43xEqrXT5WsCBb27HgzX3p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 297,
								"contract": "DeAnt3Token_flat.sol:ERC20CappedUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 300,
								"contract": "DeAnt3Token_flat.sol:ERC20CappedUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 498,
								"contract": "DeAnt3Token_flat.sol:ERC20CappedUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 742,
								"contract": "DeAnt3Token_flat.sol:ERC20CappedUpgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 748,
								"contract": "DeAnt3Token_flat.sol:ERC20CappedUpgradeable",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 750,
								"contract": "DeAnt3Token_flat.sol:ERC20CappedUpgradeable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 752,
								"contract": "DeAnt3Token_flat.sol:ERC20CappedUpgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 754,
								"contract": "DeAnt3Token_flat.sol:ERC20CappedUpgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 1334,
								"contract": "DeAnt3Token_flat.sol:ERC20CappedUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							},
							{
								"astId": 1343,
								"contract": "DeAnt3Token_flat.sol:ERC20CappedUpgradeable",
								"label": "_cap",
								"offset": 0,
								"slot": "101",
								"type": "t_uint256"
							},
							{
								"astId": 1418,
								"contract": "DeAnt3Token_flat.sol:ERC20CappedUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DeAnt3Token_flat.sol\":24517:36676  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DeAnt3Token_flat.sol\":24517:36676  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DeAnt3Token_flat.sol\":25528:25626  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DeAnt3Token_flat.sol\":27805:28002  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"DeAnt3Token_flat.sol\":27805:28002  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":26616:26722  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"DeAnt3Token_flat.sol\":26703:26715  _totalSupply */\n      sload(0x35)\n        /* \"DeAnt3Token_flat.sol\":26616:26722  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"DeAnt3Token_flat.sol\":26616:26722  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":28564:28850  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":26465:26556  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"DeAnt3Token_flat.sol\":26547:26549  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"DeAnt3Token_flat.sol\":26465:26556  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":29245:29479  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":26780:26905  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":26880:26898  _balances[account] */\n      and\n        /* \"DeAnt3Token_flat.sol\":26854:26861  uint256 */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":26880:26898  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":26880:26889  _balances */\n      0x33\n        /* \"DeAnt3Token_flat.sol\":26880:26898  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"DeAnt3Token_flat.sol\":26780:26905  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"DeAnt3Token_flat.sol\":25739:25841  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":29966:30393  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":27101:27290  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":27348:27497  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":25528:25626  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"DeAnt3Token_flat.sol\":25582:25595  string memory */\n      0x60\n        /* \"DeAnt3Token_flat.sol\":25614:25619  _name */\n      0x36\n        /* \"DeAnt3Token_flat.sol\":25607:25619  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DeAnt3Token_flat.sol\":25528:25626  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":27805:28002  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"DeAnt3Token_flat.sol\":27888:27892  bool */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":27942:27974  _approve(owner, spender, amount) */\n      tag_73\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":27958:27965  spender */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":27967:27973  amount */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":27942:27950  _approve */\n      tag_74\n        /* \"DeAnt3Token_flat.sol\":27942:27974  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"DeAnt3Token_flat.sol\":27991:27995  true */\n      0x01\n      swap4\n        /* \"DeAnt3Token_flat.sol\":27805:28002  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":28564:28850  function transferFrom(... */\n    tag_32:\n        /* \"DeAnt3Token_flat.sol\":28691:28695  bool */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":28747:28785  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"DeAnt3Token_flat.sol\":28763:28767  from */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":28778:28784  amount */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":28747:28762  _spendAllowance */\n      tag_79\n        /* \"DeAnt3Token_flat.sol\":28747:28785  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"DeAnt3Token_flat.sol\":28795:28822  _transfer(from, to, amount) */\n      tag_80\n        /* \"DeAnt3Token_flat.sol\":28805:28809  from */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":28811:28813  to */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":28815:28821  amount */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":28795:28804  _transfer */\n      tag_81\n        /* \"DeAnt3Token_flat.sol\":28795:28822  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"DeAnt3Token_flat.sol\":28839:28843  true */\n      0x01\n      swap5\n        /* \"DeAnt3Token_flat.sol\":28564:28850  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":29245:29479  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"DeAnt3Token_flat.sol\":29333:29337  bool */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":29387:29451  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":29403:29410  spender */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":29440:29450  addedValue */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":29412:29437  allowance(owner, spender) */\n      tag_86\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      dup4\n        /* \"DeAnt3Token_flat.sol\":29403:29410  spender */\n      dup4\n        /* \"DeAnt3Token_flat.sol\":29412:29421  allowance */\n      tag_61\n        /* \"DeAnt3Token_flat.sol\":29412:29437  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"DeAnt3Token_flat.sol\":29412:29450  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"DeAnt3Token_flat.sol\":29387:29395  _approve */\n      tag_74\n        /* \"DeAnt3Token_flat.sol\":29387:29451  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":25739:25841  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"DeAnt3Token_flat.sol\":25795:25808  string memory */\n      0x60\n        /* \"DeAnt3Token_flat.sol\":25827:25834  _symbol */\n      0x37\n        /* \"DeAnt3Token_flat.sol\":25820:25834  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":29966:30393  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"DeAnt3Token_flat.sol\":30059:30063  bool */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":30059:30063  bool */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":30140:30165  allowance(owner, spender) */\n      tag_98\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":30157:30164  spender */\n      dup7\n        /* \"DeAnt3Token_flat.sol\":30140:30149  allowance */\n      tag_61\n        /* \"DeAnt3Token_flat.sol\":30140:30165  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"DeAnt3Token_flat.sol\":30113:30165  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"DeAnt3Token_flat.sol\":30203:30218  subtractedValue */\n      dup4\n        /* \"DeAnt3Token_flat.sol\":30183:30199  currentAllowance */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":30183:30218  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"DeAnt3Token_flat.sol\":30175:30260  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":30175:30260  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":30175:30260  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"DeAnt3Token_flat.sol\":30294:30354  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"DeAnt3Token_flat.sol\":30303:30308  owner */\n      dup3\n        /* \"DeAnt3Token_flat.sol\":30310:30317  spender */\n      dup7\n        /* \"DeAnt3Token_flat.sol\":30338:30353  subtractedValue */\n      dup7\n        /* \"DeAnt3Token_flat.sol\":30319:30335  currentAllowance */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":30319:30353  currentAllowance - subtractedValue */\n      sub\n        /* \"DeAnt3Token_flat.sol\":30294:30302  _approve */\n      tag_74\n        /* \"DeAnt3Token_flat.sol\":30294:30354  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":27101:27290  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"DeAnt3Token_flat.sol\":27180:27184  bool */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      caller\n        /* \"DeAnt3Token_flat.sol\":27234:27262  _transfer(owner, to, amount) */\n      tag_73\n        /* \"DeAnt3Token_flat.sol\":16053:16063  msg.sender */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":27251:27253  to */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":27255:27261  amount */\n      dup6\n        /* \"DeAnt3Token_flat.sol\":27234:27243  _transfer */\n      tag_81\n        /* \"DeAnt3Token_flat.sol\":27234:27262  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"DeAnt3Token_flat.sol\":27348:27497  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":27463:27481  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"DeAnt3Token_flat.sol\":27437:27444  uint256 */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":27463:27481  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":27463:27474  _allowances */\n      0x34\n        /* \"DeAnt3Token_flat.sol\":27463:27481  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":27463:27490  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"DeAnt3Token_flat.sol\":27348:27497  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":33878:34248  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":34009:34028  owner != address(0) */\n      dup4\n      and\n        /* \"DeAnt3Token_flat.sol\":34001:34069  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":34001:34069  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":34001:34069  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":34001:34069  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":34087:34108  spender != address(0) */\n      dup3\n      and\n        /* \"DeAnt3Token_flat.sol\":34079:34147  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":34079:34147  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":34079:34147  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":34079:34147  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":34158:34176  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":34158:34169  _allowances */\n      0x34\n        /* \"DeAnt3Token_flat.sol\":34158:34176  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":34158:34185  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":34158:34194  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":34209:34241  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":34209:34241  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"DeAnt3Token_flat.sol\":34209:34241  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DeAnt3Token_flat.sol\":33878:34248  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":34529:34970  function _spendAllowance(... */\n    tag_79:\n        /* \"DeAnt3Token_flat.sol\":34659:34683  uint256 currentAllowance */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":34686:34711  allowance(owner, spender) */\n      tag_117\n        /* \"DeAnt3Token_flat.sol\":34696:34701  owner */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":34703:34710  spender */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":34686:34695  allowance */\n      tag_61\n        /* \"DeAnt3Token_flat.sol\":34686:34711  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"DeAnt3Token_flat.sol\":34659:34711  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"DeAnt3Token_flat.sol\":34725:34741  currentAllowance */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":34725:34762  currentAllowance != type(uint256).max */\n      eq\n        /* \"DeAnt3Token_flat.sol\":34721:34964  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"DeAnt3Token_flat.sol\":34806:34812  amount */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":34786:34802  currentAllowance */\n      dup2\n        /* \"DeAnt3Token_flat.sol\":34786:34812  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"DeAnt3Token_flat.sol\":34778:34846  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":34778:34846  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"DeAnt3Token_flat.sol\":34778:34846  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":34778:34846  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"DeAnt3Token_flat.sol\":34888:34939  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"DeAnt3Token_flat.sol\":34897:34902  owner */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":34904:34911  spender */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":34932:34938  amount */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":34913:34929  currentAllowance */\n      dup5\n        /* \"DeAnt3Token_flat.sol\":34913:34938  currentAllowance - amount */\n      sub\n        /* \"DeAnt3Token_flat.sol\":34888:34896  _approve */\n      tag_74\n        /* \"DeAnt3Token_flat.sol\":34888:34939  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"DeAnt3Token_flat.sol\":34649:34970  {... */\n      pop\n        /* \"DeAnt3Token_flat.sol\":34529:34970  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DeAnt3Token_flat.sol\":30847:31665  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":30973:30991  from != address(0) */\n      dup4\n      and\n        /* \"DeAnt3Token_flat.sol\":30965:31033  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":30965:31033  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":30965:31033  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":30965:31033  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":31051:31067  to != address(0) */\n      dup3\n      and\n        /* \"DeAnt3Token_flat.sol\":31043:31107  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":31043:31107  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":31043:31107  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":31043:31107  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":31189:31204  _balances[from] */\n      dup4\n      and\n        /* \"DeAnt3Token_flat.sol\":31167:31186  uint256 fromBalance */\n      0x00\n        /* \"DeAnt3Token_flat.sol\":31189:31204  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":31189:31198  _balances */\n      0x33\n        /* \"DeAnt3Token_flat.sol\":31189:31204  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DeAnt3Token_flat.sol\":31222:31243  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"DeAnt3Token_flat.sol\":31214:31286  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"DeAnt3Token_flat.sol\":31214:31286  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"DeAnt3Token_flat.sol\":31214:31286  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":31214:31286  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DeAnt3Token_flat.sol\":31320:31335  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DeAnt3Token_flat.sol\":31320:31329  _balances */\n      0x33\n        /* \"DeAnt3Token_flat.sol\":31320:31335  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":31338:31358  fromBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"DeAnt3Token_flat.sol\":31320:31358  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":31535:31548  _balances[to] */\n      swap3\n      dup7\n      and\n      dup1\n      dup3\n      mstore\n      swap1\n      dup4\n      swap1\n      keccak256\n        /* \"DeAnt3Token_flat.sol\":31535:31558  _balances[to] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"DeAnt3Token_flat.sol\":31584:31610  Transfer(from, to, amount) */\n      swap2\n      mload\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_135\n      swap1\n        /* \"DeAnt3Token_flat.sol\":31352:31358  amount */\n      dup7\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"DeAnt3Token_flat.sol\":31584:31610  Transfer(from, to, amount) */\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DeAnt3Token_flat.sol\":31621:31658  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"DeAnt3Token_flat.sol\":35554:35675  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_146:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_140:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_148:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_150:\n        /* \"#utility.yul\":962:991   */\n      tag_151\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_140\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_155:\n        /* \"#utility.yul\":1612:1641   */\n      tag_156\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_157\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_160:\n        /* \"#utility.yul\":2100:2129   */\n      tag_161\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_140\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_163:\n        /* \"#utility.yul\":2308:2337   */\n      tag_164\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_165\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_140\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_167:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      eq\n        /* \"#utility.yul\":2618:2779   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_170:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fcd6a794d1486802750fc41cc949ca91d6f0dad3d618635ecdbadb37c99d104d64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610864806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106a1565b60405180910390f35b6100df6100da366004610712565b610232565b60405190151581526020016100c3565b6035545b6040519081526020016100c3565b6100df61010f36600461073c565b61024a565b604051601281526020016100c3565b6100df610131366004610712565b61026e565b6100f3610144366004610778565b6001600160a01b031660009081526033602052604090205490565b6100b6610290565b6100df610175366004610712565b61029f565b6100df610188366004610712565b61031f565b6100f361019b36600461079a565b61032d565b6060603680546101af906107cd565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107cd565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b9190610808565b610358565b6060603780546101af906107cd565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260336020526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106949086815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106ce578581018301518582016040015282016106b2565b818111156106e0576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070d57600080fd5b919050565b6000806040838503121561072557600080fd5b61072e836106f6565b946020939093013593505050565b60008060006060848603121561075157600080fd5b61075a846106f6565b9250610768602085016106f6565b9150604084013590509250925092565b60006020828403121561078a57600080fd5b610793826106f6565b9392505050565b600080604083850312156107ad57600080fd5b6107b6836106f6565b91506107c4602084016106f6565b90509250929050565b600181811c908216806107e157607f821691505b6020821081141561080257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561082957634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220fcd6a794d1486802750fc41cc949ca91d6f0dad3d618635ecdbadb37c99d104d64736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x864 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x79A JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7CD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7CD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x694 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6CE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6B2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72E DUP4 PUSH2 0x6F6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75A DUP5 PUSH2 0x6F6 JUMP JUMPDEST SWAP3 POP PUSH2 0x768 PUSH1 0x20 DUP6 ADD PUSH2 0x6F6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x793 DUP3 PUSH2 0x6F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP4 PUSH2 0x6F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x7C4 PUSH1 0x20 DUP5 ADD PUSH2 0x6F6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7E1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x802 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x829 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0xD6 0xA7 SWAP5 0xD1 BASEFEE PUSH9 0x2750FC41CC949CA91 0xD6 CREATE 0xDA 0xD3 0xD6 XOR PUSH4 0x5ECDBADB CALLDATACOPY 0xC9 SWAP14 LT 0x4D PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "24517:12159:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1329": {
									"entryPoint": null,
									"id": 1329,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1264": {
									"entryPoint": 856,
									"id": 1264,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1318": {
									"entryPoint": null,
									"id": 1318,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_484": {
									"entryPoint": null,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1307": {
									"entryPoint": 1148,
									"id": 1307,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1090": {
									"entryPoint": 1270,
									"id": 1090,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_885": {
									"entryPoint": 813,
									"id": 885,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_910": {
									"entryPoint": 562,
									"id": 910,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_842": {
									"entryPoint": null,
									"id": 842,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_818": {
									"entryPoint": null,
									"id": 818,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1013": {
									"entryPoint": 671,
									"id": 1013,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_972": {
									"entryPoint": 622,
									"id": 972,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_798": {
									"entryPoint": 416,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_808": {
									"entryPoint": 656,
									"id": 808,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_828": {
									"entryPoint": null,
									"id": 828,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_943": {
									"entryPoint": 586,
									"id": 943,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_867": {
									"entryPoint": 799,
									"id": 867,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:1"
															},
															"nodeType": "YulIf",
															"src": "443:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:1"
															},
															"nodeType": "YulIf",
															"src": "713:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:1",
														"type": ""
													}
												],
												"src": "616:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:1"
															},
															"nodeType": "YulIf",
															"src": "891:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:1",
														"type": ""
													}
												],
												"src": "794:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:1",
														"type": ""
													}
												],
												"src": "1053:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:1",
														"type": ""
													}
												],
												"src": "1245:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:1"
															},
															"nodeType": "YulIf",
															"src": "1541:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:1",
														"type": ""
													}
												],
												"src": "1427:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:1",
														"type": ""
													}
												],
												"src": "1760:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:1"
															},
															"nodeType": "YulIf",
															"src": "2029:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:1",
														"type": ""
													}
												],
												"src": "1949:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:1"
															},
															"nodeType": "YulIf",
															"src": "2237:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:1",
														"type": ""
													}
												],
												"src": "2140:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:1"
															},
															"nodeType": "YulIf",
															"src": "2548:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:1"
															},
															"nodeType": "YulIf",
															"src": "2618:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:1",
														"type": ""
													}
												],
												"src": "2405:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:1"
															},
															"nodeType": "YulIf",
															"src": "2848:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:1",
														"type": ""
													}
												],
												"src": "2790:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:1",
														"type": ""
													}
												],
												"src": "3020:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:1",
														"type": ""
													}
												],
												"src": "3426:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:1",
														"type": ""
													}
												],
												"src": "3831:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:1",
														"type": ""
													}
												],
												"src": "4234:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:1",
														"type": ""
													}
												],
												"src": "4592:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:1",
														"type": ""
													}
												],
												"src": "4998:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:1",
														"type": ""
													}
												],
												"src": "5402:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106a1565b60405180910390f35b6100df6100da366004610712565b610232565b60405190151581526020016100c3565b6035545b6040519081526020016100c3565b6100df61010f36600461073c565b61024a565b604051601281526020016100c3565b6100df610131366004610712565b61026e565b6100f3610144366004610778565b6001600160a01b031660009081526033602052604090205490565b6100b6610290565b6100df610175366004610712565b61029f565b6100df610188366004610712565b61031f565b6100f361019b36600461079a565b61032d565b6060603680546101af906107cd565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107cd565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b9190610808565b610358565b6060603780546101af906107cd565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260336020526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106949086815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106ce578581018301518582016040015282016106b2565b818111156106e0576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070d57600080fd5b919050565b6000806040838503121561072557600080fd5b61072e836106f6565b946020939093013593505050565b60008060006060848603121561075157600080fd5b61075a846106f6565b9250610768602085016106f6565b9150604084013590509250925092565b60006020828403121561078a57600080fd5b610793826106f6565b9392505050565b600080604083850312156107ad57600080fd5b6107b6836106f6565b91506107c4602084016106f6565b90509250929050565b600181811c908216806107e157607f821691505b6020821081141561080257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561082957634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220fcd6a794d1486802750fc41cc949ca91d6f0dad3d618635ecdbadb37c99d104d64736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x79A JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7CD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7CD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x694 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6CE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6B2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72E DUP4 PUSH2 0x6F6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75A DUP5 PUSH2 0x6F6 JUMP JUMPDEST SWAP3 POP PUSH2 0x768 PUSH1 0x20 DUP6 ADD PUSH2 0x6F6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x793 DUP3 PUSH2 0x6F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP4 PUSH2 0x6F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x7C4 PUSH1 0x20 DUP5 ADD PUSH2 0x6F6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7E1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x802 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x829 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0xD6 0xA7 SWAP5 0xD1 BASEFEE PUSH9 0x2750FC41CC949CA91 0xD6 CREATE 0xDA 0xD3 0xD6 XOR PUSH4 0x5ECDBADB CALLDATACOPY 0xC9 SWAP14 LT 0x4D PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "24517:12159:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25528:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27805:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;27805:197:0;1053:187:1;26616:106:0;26703:12;;26616:106;;;1391:25:1;;;1379:2;1364:18;26616:106:0;1245:177:1;28564:286:0;;;;;;:::i;:::-;;:::i;26465:91::-;;;26547:2;1902:36:1;;1890:2;1875:18;26465:91:0;1760:184:1;29245:234:0;;;;;;:::i;:::-;;:::i;26780:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;26880:18:0;26854:7;26880:18;;;:9;:18;;;;;;;26780:125;25739:102;;;:::i;29966:427::-;;;;;;:::i;:::-;;:::i;27101:189::-;;;;;;:::i;:::-;;:::i;27348:149::-;;;;;;:::i;:::-;;:::i;25528:98::-;25582:13;25614:5;25607:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25528:98;:::o;27805:197::-;27888:4;16053:10;27942:32;16053:10;27958:7;27967:6;27942:8;:32::i;:::-;-1:-1:-1;27991:4:0;;27805:197;-1:-1:-1;;;27805:197:0:o;28564:286::-;28691:4;16053:10;28747:38;28763:4;16053:10;28778:6;28747:15;:38::i;:::-;28795:27;28805:4;28811:2;28815:6;28795:9;:27::i;:::-;-1:-1:-1;28839:4:0;;28564:286;-1:-1:-1;;;;28564:286:0:o;29245:234::-;29333:4;16053:10;29387:64;16053:10;29403:7;29440:10;29412:25;16053:10;29403:7;29412:9;:25::i;:::-;:38;;;;:::i;:::-;29387:8;:64::i;25739:102::-;25795:13;25827:7;25820:14;;;;;:::i;29966:427::-;30059:4;16053:10;30059:4;30140:25;16053:10;30157:7;30140:9;:25::i;:::-;30113:52;;30203:15;30183:16;:35;;30175:85;;;;-1:-1:-1;;;30175:85:0;;3222:2:1;30175:85:0;;;3204:21:1;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:1;;;3344:35;3396:19;;30175:85:0;;;;;;;;;30294:60;30303:5;30310:7;30338:15;30319:16;:34;30294:8;:60::i;27101:189::-;27180:4;16053:10;27234:28;16053:10;27251:2;27255:6;27234:9;:28::i;27348:149::-;-1:-1:-1;;;;;27463:18:0;;;27437:7;27463:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;27348:149::o;33878:370::-;-1:-1:-1;;;;;34009:19:0;;34001:68;;;;-1:-1:-1;;;34001:68:0;;3628:2:1;34001:68:0;;;3610:21:1;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:1;;;3750:34;3801:19;;34001:68:0;3426:400:1;34001:68:0;-1:-1:-1;;;;;34087:21:0;;34079:68;;;;-1:-1:-1;;;34079:68:0;;4033:2:1;34079:68:0;;;4015:21:1;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:1;;;4155:32;4204:19;;34079:68:0;3831:398:1;34079:68:0;-1:-1:-1;;;;;34158:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;34209:32;;1391:25:1;;;34209:32:0;;1364:18:1;34209:32:0;;;;;;;33878:370;;;:::o;34529:441::-;34659:24;34686:25;34696:5;34703:7;34686:9;:25::i;:::-;34659:52;;-1:-1:-1;;34725:16:0;:37;34721:243;;34806:6;34786:16;:26;;34778:68;;;;-1:-1:-1;;;34778:68:0;;4436:2:1;34778:68:0;;;4418:21:1;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;34778:68:0;4234:353:1;34778:68:0;34888:51;34897:5;34904:7;34932:6;34913:16;:25;34888:8;:51::i;:::-;34649:321;34529:441;;;:::o;30847:818::-;-1:-1:-1;;;;;30973:18:0;;30965:68;;;;-1:-1:-1;;;30965:68:0;;4794:2:1;30965:68:0;;;4776:21:1;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:1;;;4916:35;4968:19;;30965:68:0;4592:401:1;30965:68:0;-1:-1:-1;;;;;31051:16:0;;31043:64;;;;-1:-1:-1;;;31043:64:0;;5200:2:1;31043:64:0;;;5182:21:1;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:1;;;5322:33;5372:19;;31043:64:0;4998:399:1;31043:64:0;-1:-1:-1;;;;;31189:15:0;;31167:19;31189:15;;;:9;:15;;;;;;31222:21;;;;31214:72;;;;-1:-1:-1;;;31214:72:0;;5604:2:1;31214:72:0;;;5586:21:1;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:1;;;5726:36;5779:19;;31214:72:0;5402:402:1;31214:72:0;-1:-1:-1;;;;;31320:15:0;;;;;;;:9;:15;;;;;;31338:20;;;31320:38;;31535:13;;;;;;;;;;:23;;;;;;31584:26;;;;;;31352:6;1391:25:1;;1379:2;1364:18;;1245:177;31584:26:0;;;;;;;;31621:37;35554:121;14:597:1;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:1:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:1;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "429600",
								"executionCost": "468",
								"totalCost": "430068"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2559",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51143",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__ERC20_init(string memory,string memory)": "infinite",
								"__ERC20_init_unchained(string memory,string memory)": "infinite",
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24517,
									"end": 36676,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24517,
									"end": 36676,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fcd6a794d1486802750fc41cc949ca91d6f0dad3d618635ecdbadb37c99d104d64736f6c634300080c0033",
									".code": [
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 36676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26703,
											"end": 26715,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 26703,
											"end": 26715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26616,
											"end": 26722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26465,
											"end": 26556,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26465,
											"end": 26556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26465,
											"end": 26556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26465,
											"end": 26556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26547,
											"end": 26549,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26465,
											"end": 26556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26854,
											"end": 26861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26889,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26905,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25582,
											"end": 25595,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25614,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25607,
											"end": 25619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25626,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27888,
											"end": 27892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27942,
											"end": 27974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27958,
											"end": 27965,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27967,
											"end": 27973,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27942,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 27942,
											"end": 27974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27942,
											"end": 27974,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 27942,
											"end": 27974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27991,
											"end": 27995,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27991,
											"end": 27995,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27805,
											"end": 28002,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28691,
											"end": 28695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28747,
											"end": 28785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28763,
											"end": 28767,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28778,
											"end": 28784,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28747,
											"end": 28762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28747,
											"end": 28785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28747,
											"end": 28785,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28747,
											"end": 28785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28795,
											"end": 28822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28805,
											"end": 28809,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28811,
											"end": 28813,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28815,
											"end": 28821,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28795,
											"end": 28804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28795,
											"end": 28822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28795,
											"end": 28822,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28795,
											"end": 28822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28839,
											"end": 28843,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28839,
											"end": 28843,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28564,
											"end": 28850,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29245,
											"end": 29479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29333,
											"end": 29337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29403,
											"end": 29410,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29440,
											"end": 29450,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29412,
											"end": 29437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29403,
											"end": 29410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29412,
											"end": 29421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 29412,
											"end": 29437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29412,
											"end": 29437,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 29412,
											"end": 29437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29412,
											"end": 29450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29412,
											"end": 29450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29412,
											"end": 29450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29412,
											"end": 29450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 29412,
											"end": 29450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29412,
											"end": 29450,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29412,
											"end": 29450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29387,
											"end": 29451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 25739,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25795,
											"end": 25808,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25827,
											"end": 25834,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25820,
											"end": 25834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25820,
											"end": 25834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25820,
											"end": 25834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25820,
											"end": 25834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25820,
											"end": 25834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 25820,
											"end": 25834,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 29966,
											"end": 30393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30059,
											"end": 30063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30059,
											"end": 30063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30140,
											"end": 30165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30157,
											"end": 30164,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30140,
											"end": 30149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 30140,
											"end": 30165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30140,
											"end": 30165,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 30140,
											"end": 30165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30113,
											"end": 30165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30113,
											"end": 30165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30203,
											"end": 30218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30183,
											"end": 30199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30183,
											"end": 30218,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30183,
											"end": 30218,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 30175,
											"end": 30260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30294,
											"end": 30354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30303,
											"end": 30308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30317,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30338,
											"end": 30353,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30335,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30294,
											"end": 30302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 30294,
											"end": 30354,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 27101,
											"end": 27290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27180,
											"end": 27184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27234,
											"end": 27262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 16053,
											"end": 16063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27251,
											"end": 27253,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27255,
											"end": 27261,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27234,
											"end": 27243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 27234,
											"end": 27262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27474,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27481,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27497,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33878,
											"end": 34248,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 33878,
											"end": 34248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34009,
											"end": 34028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34009,
											"end": 34028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 34001,
											"end": 34069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34087,
											"end": 34108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34087,
											"end": 34108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 34079,
											"end": 34147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34169,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34185,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34194,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34194,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34209,
											"end": 34241,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 33878,
											"end": 34248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33878,
											"end": 34248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33878,
											"end": 34248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33878,
											"end": 34248,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34529,
											"end": 34970,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 34529,
											"end": 34970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34686,
											"end": 34711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 34696,
											"end": 34701,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34703,
											"end": 34710,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34686,
											"end": 34695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 34686,
											"end": 34711,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34686,
											"end": 34711,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 34686,
											"end": 34711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34725,
											"end": 34741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34725,
											"end": 34762,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34721,
											"end": 34964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 34721,
											"end": 34964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34806,
											"end": 34812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34786,
											"end": 34802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34786,
											"end": 34812,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34786,
											"end": 34812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 34778,
											"end": 34846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34888,
											"end": 34939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 34897,
											"end": 34902,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 34911,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34932,
											"end": 34938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34913,
											"end": 34929,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34913,
											"end": 34938,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34888,
											"end": 34896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 34888,
											"end": 34939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34888,
											"end": 34939,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 34888,
											"end": 34939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34529,
											"end": 34970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34529,
											"end": 34970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34529,
											"end": 34970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34529,
											"end": 34970,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30847,
											"end": 31665,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 30847,
											"end": 31665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30973,
											"end": 30991,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30973,
											"end": 30991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 30965,
											"end": 31033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31051,
											"end": 31067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31051,
											"end": 31067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31043,
											"end": 31107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31167,
											"end": 31186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31198,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31204,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31222,
											"end": 31243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31222,
											"end": 31243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31222,
											"end": 31243,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31222,
											"end": 31243,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31329,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31335,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31358,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31358,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31320,
											"end": 31358,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31548,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31558,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31535,
											"end": 31558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31352,
											"end": 31358,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31584,
											"end": 31610,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 35554,
											"end": 35675,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DeAnt3Token_flat.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DeAnt3Token_flat.sol\":{\"keccak256\":\"0x41414b265c0e7d535f9e85b03f38beabcfcb262d94d9dc9e148844d9bb1fa10c\",\"urls\":[\"bzz-raw://40373f60f94c46bac577ed29841a36ecdc28ea8e794fd17653ce68069a35ebe4\",\"dweb:/ipfs/QmXrHruRFEyPiwPaM5weES4G43xEqrXT5WsCBb27HgzX3p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 297,
								"contract": "DeAnt3Token_flat.sol:ERC20Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 300,
								"contract": "DeAnt3Token_flat.sol:ERC20Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 498,
								"contract": "DeAnt3Token_flat.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 742,
								"contract": "DeAnt3Token_flat.sol:ERC20Upgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 748,
								"contract": "DeAnt3Token_flat.sol:ERC20Upgradeable",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 750,
								"contract": "DeAnt3Token_flat.sol:ERC20Upgradeable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 752,
								"contract": "DeAnt3Token_flat.sol:ERC20Upgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 754,
								"contract": "DeAnt3Token_flat.sol:ERC20Upgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 1334,
								"contract": "DeAnt3Token_flat.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDeAnt3": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "nodeControllerBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nodeControllerBurn(address,uint256)": "1e71e435"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"nodeControllerBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DeAnt3Token_flat.sol\":\"IDeAnt3\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DeAnt3Token_flat.sol\":{\"keccak256\":\"0x41414b265c0e7d535f9e85b03f38beabcfcb262d94d9dc9e148844d9bb1fa10c\",\"urls\":[\"bzz-raw://40373f60f94c46bac577ed29841a36ecdc28ea8e794fd17653ce68069a35ebe4\",\"dweb:/ipfs/QmXrHruRFEyPiwPaM5weES4G43xEqrXT5WsCBb27HgzX3p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20MetadataUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DeAnt3Token_flat.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DeAnt3Token_flat.sol\":{\"keccak256\":\"0x41414b265c0e7d535f9e85b03f38beabcfcb262d94d9dc9e148844d9bb1fa10c\",\"urls\":[\"bzz-raw://40373f60f94c46bac577ed29841a36ecdc28ea8e794fd17653ce68069a35ebe4\",\"dweb:/ipfs/QmXrHruRFEyPiwPaM5weES4G43xEqrXT5WsCBb27HgzX3p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DeAnt3Token_flat.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DeAnt3Token_flat.sol\":{\"keccak256\":\"0x41414b265c0e7d535f9e85b03f38beabcfcb262d94d9dc9e148844d9bb1fa10c\",\"urls\":[\"bzz-raw://40373f60f94c46bac577ed29841a36ecdc28ea8e794fd17653ce68069a35ebe4\",\"dweb:/ipfs/QmXrHruRFEyPiwPaM5weES4G43xEqrXT5WsCBb27HgzX3p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DeAnt3Token_flat.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DeAnt3Token_flat.sol\":{\"keccak256\":\"0x41414b265c0e7d535f9e85b03f38beabcfcb262d94d9dc9e148844d9bb1fa10c\",\"urls\":[\"bzz-raw://40373f60f94c46bac577ed29841a36ecdc28ea8e794fd17653ce68069a35ebe4\",\"dweb:/ipfs/QmXrHruRFEyPiwPaM5weES4G43xEqrXT5WsCBb27HgzX3p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 297,
								"contract": "DeAnt3Token_flat.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 300,
								"contract": "DeAnt3Token_flat.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DeAnt3Token_flat.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DeAnt3Token_flat.sol\":{\"keccak256\":\"0x41414b265c0e7d535f9e85b03f38beabcfcb262d94d9dc9e148844d9bb1fa10c\",\"urls\":[\"bzz-raw://40373f60f94c46bac577ed29841a36ecdc28ea8e794fd17653ce68069a35ebe4\",\"dweb:/ipfs/QmXrHruRFEyPiwPaM5weES4G43xEqrXT5WsCBb27HgzX3p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 297,
								"contract": "DeAnt3Token_flat.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 300,
								"contract": "DeAnt3Token_flat.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 498,
								"contract": "DeAnt3Token_flat.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 507,
								"contract": "DeAnt3Token_flat.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 627,
								"contract": "DeAnt3Token_flat.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> DeAnt3Token_flat.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "DeAnt3Token_flat.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"DeAnt3Token_flat.sol": {
				"ast": {
					"absolutePath": "DeAnt3Token_flat.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							292
						],
						"ContextUpgradeable": [
							499
						],
						"DeAnt3Token": [
							1999
						],
						"ERC20CappedUpgradeable": [
							1419
						],
						"ERC20Upgradeable": [
							1335
						],
						"IDeAnt3": [
							9
						],
						"IERC20MetadataUpgradeable": [
							728
						],
						"IERC20Upgradeable": [
							705
						],
						"Initializable": [
							459
						],
						"OwnableUpgradeable": [
							628
						]
					},
					"id": 2000,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDeAnt3",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "IDeAnt3",
							"nameLocation": "76:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1e71e435",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nodeControllerBurn",
									"nameLocation": "99:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "126:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "118:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "143:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "135:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "117:33:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "159:0:0"
									},
									"scope": 9,
									"src": "90:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2000,
							"src": "66:96:0",
							"usedErrors": []
						},
						{
							"id": 10,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "309:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 11,
								"nodeType": "StructuredDocumentation",
								"src": "334:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 292,
							"linearizedBaseContracts": [
								292
							],
							"name": "AddressUpgradeable",
							"nameLocation": "410:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1460:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 19,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "1684:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1684:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1684:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1706:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1684:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 18,
												"id": 24,
												"nodeType": "Return",
												"src": "1677:30:0"
											}
										]
									},
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "435:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1403:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1422:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1414:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1413:17:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1454:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1454:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1453:6:0"
									},
									"scope": 292,
									"src": "1394:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2702:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 37,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2728:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$292",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$292",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 36,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2720:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 35,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2720:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2720:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2720:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "2745:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2720:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2753:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2712:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2712:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "2712:73:0"
											},
											{
												"assignments": [
													46,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 46,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2802:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 59,
														"src": "2797:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 45,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2797:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 53,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2845:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 47,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2815:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2815:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 49,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "2837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2815:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2815:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2796:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 55,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "2866:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2875:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 54,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2858:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2858:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "2858:78:0"
											}
										]
									},
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1720:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2640:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2666:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2650:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2650:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2685:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2677:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:43:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2702:0:0"
									},
									"scope": 292,
									"src": "2631:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "3774:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 71,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "3813:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 72,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "3821:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3827:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3830:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 70,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															118,
															162
														],
														"referencedDeclaration": 162,
														"src": "3791:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3791:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 69,
												"id": 76,
												"nodeType": "Return",
												"src": "3784:79:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2949:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3694:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3715:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3707:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3707:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3736:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3723:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 64,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3723:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3706:35:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 67,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3760:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:0"
									},
									"scope": 292,
									"src": "3685:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "4239:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 91,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "4278:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 92,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "4286:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4292:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 94,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "4295:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 90,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															118,
															162
														],
														"referencedDeclaration": 162,
														"src": "4256:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4256:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 89,
												"id": 96,
												"nodeType": "Return",
												"src": "4249:59:0"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3876:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4101:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4131:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4123:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4160:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4147:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 82,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4147:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4188:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4174:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4174:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4113:93:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4225:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 87,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4225:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4224:14:0"
									},
									"scope": 292,
									"src": "4092:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "4820:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 111,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "4859:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 112,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "4867:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 113,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "4873:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4880:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 110,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															118,
															162
														],
														"referencedDeclaration": 162,
														"src": "4837:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4837:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 109,
												"id": 116,
												"nodeType": "Return",
												"src": "4830:94:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "4321:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4686:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4725:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "4717:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4754:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "4741:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 102,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4741:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4776:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "4768:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4707:80:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "4806:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 107,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4806:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4805:14:0"
									},
									"scope": 292,
									"src": "4677:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "5358:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 135,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5384:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$292",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$292",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5376:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 133,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5376:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5376:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5376:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 138,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "5401:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5376:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5408:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5368:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5368:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "5368:81:0"
											},
											{
												"assignments": [
													144,
													146
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5465:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 161,
														"src": "5460:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 143,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5460:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 146,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5487:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 161,
														"src": "5474:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 145,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5474:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"arguments": [
														{
															"id": 151,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "5527:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 147,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "5501:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5501:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 149,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "5520:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5501:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5501:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5459:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 155,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "5576:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 156,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "5584:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 157,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "5593:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 158,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "5605:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 154,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "5549:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5549:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 131,
												"id": 160,
												"nodeType": "Return",
												"src": "5542:76:0"
											}
										]
									},
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "4937:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5188:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5227:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5219:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5256:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5243:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 122,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5243:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5278:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5270:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5307:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5293:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 126,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5293:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5209:116:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5344:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 129,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5344:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5343:14:0"
									},
									"scope": 292,
									"src": "5179:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "5902:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 173,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5938:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 174,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "5946:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5952:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 172,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															179,
															208
														],
														"referencedDeclaration": 208,
														"src": "5919:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5919:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 171,
												"id": 177,
												"nodeType": "Return",
												"src": "5912:80:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "5631:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5811:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5838:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "5830:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5859:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "5846:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 166,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5846:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5829:35:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "5888:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5888:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5887:14:0"
									},
									"scope": 292,
									"src": "5802:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "6341:168:0",
										"statements": [
											{
												"assignments": [
													192,
													194
												],
												"declarations": [
													{
														"constant": false,
														"id": 192,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6357:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 207,
														"src": "6352:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 191,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6352:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6379:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 207,
														"src": "6366:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 193,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6366:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 199,
												"initialValue": {
													"arguments": [
														{
															"id": 197,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 195,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6393:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6393:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6393:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6351:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 201,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6460:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 202,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "6468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 203,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "6477:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 204,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "6489:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 200,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "6433:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6433:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 190,
												"id": 206,
												"nodeType": "Return",
												"src": "6426:76:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "6005:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6192:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6228:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6220:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6257:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6244:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6244:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6285:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6271:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 185,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6271:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6210:93:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6327:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6327:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6326:14:0"
									},
									"scope": 292,
									"src": "6183:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "6991:434:0",
										"statements": [
											{
												"condition": {
													"id": 222,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 213,
													"src": "7005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 244,
													"nodeType": "Block",
													"src": "7361:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 240,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "7383:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 241,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "7395:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 239,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "7375:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7375:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 243,
															"nodeType": "ExpressionStatement",
															"src": "7375:33:0"
														}
													]
												},
												"id": 245,
												"nodeType": "IfStatement",
												"src": "7001:418:0",
												"trueBody": {
													"id": 238,
													"nodeType": "Block",
													"src": "7014:341:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 223,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "7032:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7032:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7053:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7032:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 235,
															"nodeType": "IfStatement",
															"src": "7028:286:0",
															"trueBody": {
																"id": 234,
																"nodeType": "Block",
																"src": "7056:258:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 229,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 211,
																							"src": "7258:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 228,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 26,
																						"src": "7247:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 230,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7247:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7267:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 227,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7239:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7239:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 233,
																		"nodeType": "ExpressionStatement",
																		"src": "7239:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 236,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "7334:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 221,
															"id": 237,
															"nodeType": "Return",
															"src": "7327:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "6515:277:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "6806:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6850:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6842:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6871:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6866:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6866:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6901:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6888:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6888:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6935:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6921:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6921:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6832:121:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6977:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6977:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6976:14:0"
									},
									"scope": 292,
									"src": "6797:628:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "7806:135:0",
										"statements": [
											{
												"condition": {
													"id": 259,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 268,
													"nodeType": "Block",
													"src": "7877:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 264,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "7899:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 265,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "7911:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 263,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "7891:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7891:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 267,
															"nodeType": "ExpressionStatement",
															"src": "7891:33:0"
														}
													]
												},
												"id": 269,
												"nodeType": "IfStatement",
												"src": "7816:119:0",
												"trueBody": {
													"id": 262,
													"nodeType": "Block",
													"src": "7829:42:0",
													"statements": [
														{
															"expression": {
																"id": 260,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "7850:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 258,
															"id": 261,
															"nodeType": "Return",
															"src": "7843:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "7431:210:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7655:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7686:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "7681:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7681:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7716:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "7703:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7703:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7750:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "7736:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7736:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7671:97:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "7792:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7792:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7791:14:0"
									},
									"scope": 292,
									"src": "7646:295:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "8030:457:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 278,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "8106:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8106:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8126:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8106:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "8436:45:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 285,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 275,
																		"src": "8457:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 284,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "8450:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8450:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "8450:20:0"
														}
													]
												},
												"id": 289,
												"nodeType": "IfStatement",
												"src": "8102:379:0",
												"trueBody": {
													"id": 283,
													"nodeType": "Block",
													"src": "8129:301:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8287:133:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8305:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "8334:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8328:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8328:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8309:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8373:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "8377:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8369:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8369:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "8390:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8362:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8362:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8362:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 273,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8334:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 273,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8377:10:0",
																	"valueSize": 1
																}
															],
															"id": 282,
															"nodeType": "InlineAssembly",
															"src": "8278:142:0"
														}
													]
												}
											}
										]
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "7956:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7977:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "7964:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7964:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8003:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "7989:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 274,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7989:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7963:53:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8030:0:0"
									},
									"scope": 292,
									"src": "7947:540:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2000,
							"src": "402:8087:0",
							"usedErrors": []
						},
						{
							"id": 293,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "8649:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 294,
								"nodeType": "StructuredDocumentation",
								"src": "8675:2198:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 459,
							"linearizedBaseContracts": [
								459
							],
							"name": "Initializable",
							"nameLocation": "10892:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "10912:109:0",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 297,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "11040:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 459,
									"src": "11026:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 296,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11026:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "11059:91:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 300,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "11168:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 459,
									"src": "11155:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 299,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11155:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "11188:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"id": 305,
									"name": "Initialized",
									"nameLocation": "11289:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "11307:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "11301:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 302,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11301:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11300:15:0"
									},
									"src": "11283:33:0"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "11749:483:0",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "11764:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "11759:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 308,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11781:14:0",
													"subExpression": {
														"id": 310,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "11782:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11759:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 314,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 309,
																			"src": "11827:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 315,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 297,
																				"src": "11845:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11860:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "11845:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "11827:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 319,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11826:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "11867:45:0",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 324,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "11906:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$459",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$459",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 323,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "11898:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 322,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "11898:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 325,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11898:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 320,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 292,
																						"src": "11868:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$292_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 321,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 26,
																					"src": "11868:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11868:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 328,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 297,
																				"src": "11916:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11932:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "11916:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "11867:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 332,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11866:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11826:108:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11948:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11805:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11805:201:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "11805:201:0"
											},
											{
												"expression": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 337,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "12016:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12031:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12016:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "12016:16:0"
											},
											{
												"condition": {
													"id": 341,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 309,
													"src": "12046:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 347,
												"nodeType": "IfStatement",
												"src": "12042:65:0",
												"trueBody": {
													"id": 346,
													"nodeType": "Block",
													"src": "12062:45:0",
													"statements": [
														{
															"expression": {
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 342,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "12076:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12092:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "12076:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "12076:20:0"
														}
													]
												}
											},
											{
												"id": 348,
												"nodeType": "PlaceholderStatement",
												"src": "12116:1:0"
											},
											{
												"condition": {
													"id": 349,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 309,
													"src": "12131:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "12127:99:0",
												"trueBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "12147:79:0",
													"statements": [
														{
															"expression": {
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 350,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "12161:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12177:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "12161:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 353,
															"nodeType": "ExpressionStatement",
															"src": "12161:21:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12213:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 354,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "12201:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12201:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 357,
															"nodeType": "EmitStatement",
															"src": "12196:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "11322:399:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 361,
									"name": "initializer",
									"nameLocation": "11735:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11746:2:0"
									},
									"src": "11726:506:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "13343:255:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "13361:14:0",
																"subExpression": {
																	"id": 367,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "13362:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 369,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 297,
																	"src": "13379:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 370,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "13394:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "13379:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "13361:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13403:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13353:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13353:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "13353:99:0"
											},
											{
												"expression": {
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 376,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "13462:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 377,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "13477:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "13462:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "13462:22:0"
											},
											{
												"expression": {
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 380,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "13494:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13510:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "13494:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "13494:20:0"
											},
											{
												"id": 384,
												"nodeType": "PlaceholderStatement",
												"src": "13524:1:0"
											},
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 385,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "13535:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13551:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "13535:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "13535:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 390,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "13583:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 389,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "13571:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13571:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "EmitStatement",
												"src": "13566:25:0"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "12238:1062:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 394,
									"name": "reinitializer",
									"nameLocation": "13314:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "13334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "13328:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 363,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13328:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13327:15:0"
									},
									"src": "13305:293:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "13836:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "13854:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13869:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13846:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13846:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "13846:69:0"
											},
											{
												"id": 402,
												"nodeType": "PlaceholderStatement",
												"src": "13925:1:0"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "13604:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 404,
									"name": "onlyInitializing",
									"nameLocation": "13817:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13833:2:0"
									},
									"src": "13808:125:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "14468:230:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "14486:14:0",
															"subExpression": {
																"id": 409,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "14487:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14502:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14478:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "14478:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 414,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "14558:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14578:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 416,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "14578:5:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 415,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14573:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14573:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14573:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "14558:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 438,
												"nodeType": "IfStatement",
												"src": "14554:138:0",
												"trueBody": {
													"id": 437,
													"nodeType": "Block",
													"src": "14590:102:0",
													"statements": [
														{
															"expression": {
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 421,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 297,
																	"src": "14604:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14624:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 423,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "14624:5:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 422,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "14619:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14619:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "14619:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "14604:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 428,
															"nodeType": "ExpressionStatement",
															"src": "14604:30:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 432,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "14670:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 431,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "14670:5:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 430,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "14665:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14665:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "14665:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 429,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "14653:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14653:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 436,
															"nodeType": "EmitStatement",
															"src": "14648:33:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "13939:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "14428:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14448:2:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14468:0:0"
									},
									"scope": 459,
									"src": "14419:279:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "14875:36:0",
										"statements": [
											{
												"expression": {
													"id": 446,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 297,
													"src": "14892:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 445,
												"id": 447,
												"nodeType": "Return",
												"src": "14885:19:0"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "14704:102:0",
										"text": " @dev Internal function that returns the initialized version. Returns `_initialized`"
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "14820:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14842:2:0"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "14868:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 443,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14868:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14867:7:0"
									},
									"scope": 459,
									"src": "14811:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "15081:37:0",
										"statements": [
											{
												"expression": {
													"id": 455,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 300,
													"src": "15098:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 454,
												"id": 456,
												"nodeType": "Return",
												"src": "15091:20:0"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "14917:103:0",
										"text": " @dev Internal function that returns the initialized version. Returns `_initializing`"
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "15034:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15049:2:0"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "15075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15074:6:0"
									},
									"scope": 459,
									"src": "15025:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2000,
							"src": "10874:4246:0",
							"usedErrors": []
						},
						{
							"id": 460,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "15252:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 462,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 459,
										"src": "15815:13:0"
									},
									"id": 463,
									"nodeType": "InheritanceSpecifier",
									"src": "15815:13:0"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 461,
								"nodeType": "StructuredDocumentation",
								"src": "15278:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 499,
							"linearizedBaseContracts": [
								499,
								459
							],
							"name": "ContextUpgradeable",
							"nameLocation": "15793:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "15887:7:0",
										"statements": []
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 465,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "15870:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15870:16:0"
										}
									],
									"name": "__Context_init",
									"nameLocation": "15844:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15858:2:0"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15887:0:0"
									},
									"scope": 499,
									"src": "15835:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "15962:7:0",
										"statements": []
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 472,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 471,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "15945:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15945:16:0"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "15909:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15933:2:0"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15962:0:0"
									},
									"scope": 499,
									"src": "15900:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "16036:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 480,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "16053:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "16053:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 479,
												"id": 482,
												"nodeType": "Return",
												"src": "16046:17:0"
											}
										]
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "15983:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15993:2:0"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "16027:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16026:9:0"
									},
									"scope": 499,
									"src": "15974:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "16143:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 489,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "16160:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "16160:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 488,
												"id": 491,
												"nodeType": "Return",
												"src": "16153:15:0"
											}
										]
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "16085:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16093:2:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "16127:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16127:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16126:16:0"
									},
									"scope": 499,
									"src": "16076:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "16181:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 498,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "16460:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 499,
									"src": "16440:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 495,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "16440:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 497,
										"length": {
											"hexValue": "3530",
											"id": 496,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "16448:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "16440:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2000,
							"src": "15775:693:0",
							"usedErrors": []
						},
						{
							"id": 500,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16617:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 502,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 459,
										"src": "17179:13:0"
									},
									"id": 503,
									"nodeType": "InheritanceSpecifier",
									"src": "17179:13:0"
								},
								{
									"baseName": {
										"id": 504,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 499,
										"src": "17194:18:0"
									},
									"id": 505,
									"nodeType": "InheritanceSpecifier",
									"src": "17194:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 501,
								"nodeType": "StructuredDocumentation",
								"src": "16644:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 628,
							"linearizedBaseContracts": [
								628,
								499,
								459
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "17157:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 507,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "17235:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "17219:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 506,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "17219:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 513,
									"name": "OwnershipTransferred",
									"nameLocation": "17254:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "17291:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17275:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "17322:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17306:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17274:57:0"
									},
									"src": "17248:84:0"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "17486:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 519,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "17496:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17496:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "17496:26:0"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "17338:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 517,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 516,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "17469:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "17469:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "17443:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17457:2:0"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17486:0:0"
									},
									"scope": 628,
									"src": "17434:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "17597:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 529,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "17626:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17626:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 528,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "17607:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17607:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "17607:32:0"
											}
										]
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 525,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "17580:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "17580:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "17544:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17568:2:0"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17597:0:0"
									},
									"scope": 628,
									"src": "17535:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "17755:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 537,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "17765:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17765:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "17765:13:0"
											},
											{
												"id": 540,
												"nodeType": "PlaceholderStatement",
												"src": "17788:1:0"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "17652:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 542,
									"name": "onlyOwner",
									"nameLocation": "17743:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17752:2:0"
									},
									"src": "17734:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "17927:30:0",
										"statements": [
											{
												"expression": {
													"id": 548,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 507,
													"src": "17944:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 547,
												"id": 549,
												"nodeType": "Return",
												"src": "17937:13:0"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "17802:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "17881:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17886:2:0"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "17918:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17918:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17917:9:0"
									},
									"scope": 628,
									"src": "17872:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "18075:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 556,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "18093:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18093:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 558,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "18104:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18104:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18093:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18118:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18085:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "18085:68:0"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "17963:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "18039:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18050:2:0"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18075:0:0"
									},
									"scope": 628,
									"src": "18030:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "18556:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18593:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18585:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 572,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18585:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18585:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 571,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "18566:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18566:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "18566:30:0"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "18166:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 569,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 568,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 542,
												"src": "18546:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "18546:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "18511:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18528:2:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18556:0:0"
									},
									"scope": 628,
									"src": "18502:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "18822:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 588,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "18840:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18860:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18852:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 589,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18852:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18852:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18840:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18864:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18832:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18832:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "18832:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 598,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "18934:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 597,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "18915:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18915:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "18915:28:0"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "18609:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 585,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 584,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 542,
												"src": "18812:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "18812:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "18761:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "18787:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "18779:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18779:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18778:18:0"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18822:0:0"
									},
									"scope": 628,
									"src": "18752:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "19167:124:0",
										"statements": [
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "19185:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "19177:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 608,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19177:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"id": 610,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 507,
													"src": "19196:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19177:25:0"
											},
											{
												"expression": {
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 612,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "19212:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 613,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "19221:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19212:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "19212:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 617,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "19265:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "19275:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 616,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "19244:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19244:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "EmitStatement",
												"src": "19239:45:0"
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "18956:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "19113:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19140:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "19132:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19132:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19131:18:0"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19167:0:0"
									},
									"scope": 628,
									"src": "19104:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "19297:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 627,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "19576:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "19556:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 624,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "19556:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 626,
										"length": {
											"hexValue": "3439",
											"id": 625,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "19564:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "19556:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2000,
							"src": "17139:2445:0",
							"usedErrors": []
						},
						{
							"id": 629,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "19741:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 630,
								"nodeType": "StructuredDocumentation",
								"src": "19766:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 705,
							"linearizedBaseContracts": [
								705
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "19847:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "19871:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 639,
									"name": "Transfer",
									"nameLocation": "20040:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20065:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "20049:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20087:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "20071:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20099:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "20091:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20048:57:0"
									},
									"src": "20034:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "20112:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 648,
									"name": "Approval",
									"nameLocation": "20271:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20296:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "20280:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20319:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "20303:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20336:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "20328:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20279:63:0"
									},
									"src": "20265:78:0"
								},
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "20349:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "20429:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20440:2:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "20466:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20465:9:0"
									},
									"scope": 705,
									"src": "20420:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "20481:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "20567:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20585:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "20577:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20577:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20576:17:0"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "20617:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20616:9:0"
									},
									"scope": 705,
									"src": "20558:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "20632:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "20848:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20865:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "20857:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20877:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "20869:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20869:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20856:28:0"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "20903:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20903:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20902:6:0"
									},
									"scope": 705,
									"src": "20839:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "20915:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "21193:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21211:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "21203:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21226:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "21218:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21202:32:0"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "21258:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21257:9:0"
									},
									"scope": 705,
									"src": "21184:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "21273:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 692,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "21929:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "21937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21962:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "21954:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21936:33:0"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "21988:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 689,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21988:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21987:6:0"
									},
									"scope": 705,
									"src": "21920:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "22000:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "22301:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22331:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "22323:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22353:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "22345:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22373:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "22365:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22313:72:0"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "22404:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 701,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22404:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22403:6:0"
									},
									"scope": 705,
									"src": "22292:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2000,
							"src": "19837:2575:0",
							"usedErrors": []
						},
						{
							"id": 706,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "22592:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 708,
										"name": "IERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 705,
										"src": "22774:17:0"
									},
									"id": 709,
									"nodeType": "InheritanceSpecifier",
									"src": "22774:17:0"
								}
							],
							"canonicalName": "IERC20MetadataUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 707,
								"nodeType": "StructuredDocumentation",
								"src": "22618:116:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 728,
							"linearizedBaseContracts": [
								728,
								705
							],
							"name": "IERC20MetadataUpgradeable",
							"nameLocation": "22745:25:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "22798:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "22866:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22870:2:0"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "22896:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 712,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22896:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22895:15:0"
									},
									"scope": 728,
									"src": "22857:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "22917:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "22987:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22993:2:0"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "23019:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 718,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23018:15:0"
									},
									"scope": 728,
									"src": "22978:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "23040:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 727,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "23119:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23127:2:0"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "23153:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 724,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "23153:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23152:7:0"
									},
									"scope": 728,
									"src": "23110:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2000,
							"src": "22735:427:0",
							"usedErrors": []
						},
						{
							"id": 729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "23317:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 731,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 459,
										"src": "24546:13:0"
									},
									"id": 732,
									"nodeType": "InheritanceSpecifier",
									"src": "24546:13:0"
								},
								{
									"baseName": {
										"id": 733,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 499,
										"src": "24561:18:0"
									},
									"id": 734,
									"nodeType": "InheritanceSpecifier",
									"src": "24561:18:0"
								},
								{
									"baseName": {
										"id": 735,
										"name": "IERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 705,
										"src": "24581:17:0"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "24581:17:0"
								},
								{
									"baseName": {
										"id": 737,
										"name": "IERC20MetadataUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 728,
										"src": "24600:25:0"
									},
									"id": 738,
									"nodeType": "InheritanceSpecifier",
									"src": "24600:25:0"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 730,
								"nodeType": "StructuredDocumentation",
								"src": "23346:1170:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1335,
							"linearizedBaseContracts": [
								1335,
								728,
								705,
								499,
								459
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "24526:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 742,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "24668:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "24632:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 741,
										"keyType": {
											"id": 739,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24640:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24632:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 740,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24651:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 748,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "24740:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "24684:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 747,
										"keyType": {
											"id": 743,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24692:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24684:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 746,
											"keyType": {
												"id": 744,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "24711:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "24703:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 745,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "24722:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 750,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "24774:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "24758:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 749,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24758:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 752,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "24808:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "24793:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 751,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "24793:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 754,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "24834:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "24819:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 753,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "24819:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "25243:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 765,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "25276:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 766,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "25283:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 764,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "25253:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25253:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "25253:38:0"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "24848:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 762,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 761,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "25226:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25226:16:0"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "25160:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "25187:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "25173:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 756,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25173:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "25208:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "25194:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 758,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25194:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25172:44:0"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25243:0:0"
									},
									"scope": 1335,
									"src": "25151:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "25406:57:0",
										"statements": [
											{
												"expression": {
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 779,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "25416:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 780,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "25424:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "25416:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "25416:13:0"
											},
											{
												"expression": {
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 783,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "25439:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 784,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "25449:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "25439:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "25439:17:0"
											}
										]
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 777,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 776,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "25389:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25389:16:0"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "25313:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "25350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "25336:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25336:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "25371:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "25357:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 773,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25357:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25335:44:0"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25406:0:0"
									},
									"scope": 1335,
									"src": "25304:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										715
									],
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "25597:29:0",
										"statements": [
											{
												"expression": {
													"id": 795,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 752,
													"src": "25614:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 794,
												"id": 796,
												"nodeType": "Return",
												"src": "25607:12:0"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "25469:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "25537:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 791,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25564:8:0"
									},
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25541:2:0"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "25582:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 792,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25582:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25581:15:0"
									},
									"scope": 1335,
									"src": "25528:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										721
									],
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "25810:31:0",
										"statements": [
											{
												"expression": {
													"id": 805,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 754,
													"src": "25827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "25820:14:0"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "25632:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "25748:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 801,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25777:8:0"
									},
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25754:2:0"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "25795:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 802,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25795:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25794:15:0"
									},
									"scope": 1335,
									"src": "25739:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										727
									],
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "26530:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26547:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 814,
												"id": 816,
												"nodeType": "Return",
												"src": "26540:9:0"
											}
										]
									},
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "25847:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "26474:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 811,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26505:8:0"
									},
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26482:2:0"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "26523:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 812,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "26523:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26522:7:0"
									},
									"scope": 1335,
									"src": "26465:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										654
									],
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "26686:36:0",
										"statements": [
											{
												"expression": {
													"id": 825,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 750,
													"src": "26703:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 824,
												"id": 826,
												"nodeType": "Return",
												"src": "26696:19:0"
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "26562:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "26625:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 821,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26659:8:0"
									},
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26636:2:0"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "26677:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26676:9:0"
									},
									"scope": 1335,
									"src": "26616:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "26863:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 837,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "26880:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 839,
													"indexExpression": {
														"id": 838,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "26890:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26880:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 836,
												"id": 840,
												"nodeType": "Return",
												"src": "26873:25:0"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "26728:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "26789:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 833,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26836:8:0"
									},
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "26807:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "26799:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26798:17:0"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "26854:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26853:9:0"
									},
									"scope": 1335,
									"src": "26780:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										672
									],
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "27186:104:0",
										"statements": [
											{
												"assignments": [
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "27204:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 866,
														"src": "27196:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 853,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "27196:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 857,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 855,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "27212:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27212:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27196:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 859,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "27244:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "27251:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "27255:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 858,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "27234:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27234:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "27234:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27279:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 852,
												"id": 865,
												"nodeType": "Return",
												"src": "27272:11:0"
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "26911:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "27110:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 849,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27162:8:0"
									},
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27127:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "27119:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "27139:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "27131:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27118:28:0"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "27180:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27180:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27179:6:0"
									},
									"scope": 1335,
									"src": "27101:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										682
									],
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "27446:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 878,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "27463:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 880,
														"indexExpression": {
															"id": 879,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "27475:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "27463:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 882,
													"indexExpression": {
														"id": 881,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "27482:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "27463:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 877,
												"id": 883,
												"nodeType": "Return",
												"src": "27456:34:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "27296:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "27357:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 874,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27419:8:0"
									},
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "27375:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "27367:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "27390:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "27382:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27366:32:0"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "27437:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27436:9:0"
									},
									"scope": 1335,
									"src": "27348:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										692
									],
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "27894:108:0",
										"statements": [
											{
												"assignments": [
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "27912:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 909,
														"src": "27904:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 896,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "27904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 900,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 898,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "27920:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27920:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27904:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 902,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "27951:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "27958:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "27967:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "27942:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27942:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "27942:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27991:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 895,
												"id": 908,
												"nodeType": "Return",
												"src": "27984:11:0"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "27503:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "27814:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 892,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27870:8:0"
									},
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "27830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "27822:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "27847:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "27839:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27821:33:0"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "27888:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27888:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27887:6:0"
									},
									"scope": 1335,
									"src": "27805:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										704
									],
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "28697:153:0",
										"statements": [
											{
												"assignments": [
													924
												],
												"declarations": [
													{
														"constant": false,
														"id": 924,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "28715:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "28707:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 923,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "28707:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 925,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "28725:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28725:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28707:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "28763:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "28769:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "28778:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 928,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "28747:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28747:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "28747:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 935,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "28805:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "28811:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "28815:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 934,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "28795:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28795:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "28795:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28839:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 922,
												"id": 941,
												"nodeType": "Return",
												"src": "28832:11:0"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "28008:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "28573:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 919,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28673:8:0"
									},
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28603:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "28595:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28625:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "28617:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28645:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "28637:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28585:72:0"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "28691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 920,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28690:6:0"
									},
									"scope": 1335,
									"src": "28564:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "29339:140:0",
										"statements": [
											{
												"assignments": [
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "29357:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 971,
														"src": "29349:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 953,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "29349:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 957,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 955,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "29365:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29365:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29349:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "29396:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 960,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "29403:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 962,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "29422:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 963,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "29429:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 961,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "29412:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29412:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 965,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "29440:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29412:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 958,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "29387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29387:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "29387:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29468:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 952,
												"id": 970,
												"nodeType": "Return",
												"src": "29461:11:0"
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "28856:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "29254:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "29280:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "29272:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "29297:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "29289:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29271:37:0"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "29333:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 950,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29333:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29332:6:0"
									},
									"scope": 1335,
									"src": "29245:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "30065:328:0",
										"statements": [
											{
												"assignments": [
													983
												],
												"declarations": [
													{
														"constant": false,
														"id": 983,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "30083:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1012,
														"src": "30075:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 982,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "30075:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 986,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 984,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "30091:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30091:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30075:28:0"
											},
											{
												"assignments": [
													988
												],
												"declarations": [
													{
														"constant": false,
														"id": 988,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "30121:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1012,
														"src": "30113:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 987,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30113:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [
														{
															"id": 990,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "30150:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 991,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "30157:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 989,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "30140:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30140:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30113:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 995,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "30183:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 996,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "30203:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30183:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30220:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30175:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30175:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "30175:85:0"
											},
											{
												"id": 1009,
												"nodeType": "UncheckedBlock",
												"src": "30270:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1002,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "30303:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1003,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "30310:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1004,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "30319:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1005,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "30338:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30319:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1001,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "30294:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30294:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1008,
														"nodeType": "ExpressionStatement",
														"src": "30294:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "30382:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 981,
												"id": 1011,
												"nodeType": "Return",
												"src": "30375:11:0"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "29485:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "29975:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "30001:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "29993:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "30018:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "30010:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29992:42:0"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "30059:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 979,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30059:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30058:6:0"
									},
									"scope": 1335,
									"src": "29966:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "30955:710:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1024,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "30973:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30989:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "30981:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1025,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "30981:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30981:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "30973:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30993:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1023,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30965:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30965:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "30965:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1034,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "31051:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31065:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31057:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1035,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "31057:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31057:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31051:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31069:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31043:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31043:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "31043:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1044,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "31139:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "31145:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "31149:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1043,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "31118:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31118:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "31118:38:0"
											},
											{
												"assignments": [
													1050
												],
												"declarations": [
													{
														"constant": false,
														"id": 1050,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "31175:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "31167:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1049,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31167:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1054,
												"initialValue": {
													"baseExpression": {
														"id": 1051,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "31189:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1053,
													"indexExpression": {
														"id": 1052,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "31199:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31189:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31167:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1056,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "31222:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1057,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "31237:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31222:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31245:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 1055,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31214:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31214:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "31214:72:0"
											},
											{
												"id": 1076,
												"nodeType": "UncheckedBlock",
												"src": "31296:273:0",
												"statements": [
													{
														"expression": {
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1062,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "31320:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1064,
																"indexExpression": {
																	"id": 1063,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "31330:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31320:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1065,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "31338:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1066,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "31352:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31338:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31320:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1069,
														"nodeType": "ExpressionStatement",
														"src": "31320:38:0"
													},
													{
														"expression": {
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1070,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "31535:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1072,
																"indexExpression": {
																	"id": 1071,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "31545:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31535:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1073,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "31552:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31535:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1075,
														"nodeType": "ExpressionStatement",
														"src": "31535:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1078,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "31593:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "31599:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "31603:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1077,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "31584:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31584:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "EmitStatement",
												"src": "31579:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1084,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "31641:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "31647:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "31651:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1083,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "31621:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31621:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "31621:37:0"
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "30399:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "30856:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "30875:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30905:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "30897:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30897:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30925:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "30917:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30865:72:0"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30955:0:0"
									},
									"scope": 1335,
									"src": "30847:818:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "32006:470:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1099,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "32024:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32043:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32035:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1100,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "32035:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32035:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "32024:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32047:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1098,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32016:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32016:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "32016:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32121:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32113:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1109,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32113:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32113:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "32125:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1114,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "32134:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1108,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "32092:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32092:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "32092:49:0"
											},
											{
												"expression": {
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1117,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "32152:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1118,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "32168:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32152:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "32152:22:0"
											},
											{
												"id": 1127,
												"nodeType": "UncheckedBlock",
												"src": "32184:175:0",
												"statements": [
													{
														"expression": {
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1121,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "32320:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1123,
																"indexExpression": {
																	"id": 1122,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "32330:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32320:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1124,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "32342:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32320:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1126,
														"nodeType": "ExpressionStatement",
														"src": "32320:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32390:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32382:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32382:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32382:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "32394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "32403:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1128,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "32373:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32373:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1136,
												"nodeType": "EmitStatement",
												"src": "32368:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32449:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32441:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1138,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32441:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32441:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "32453:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "32462:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1137,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "32421:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32421:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "32421:48:0"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "31671:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "31950:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "31964:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "31956:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31981:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "31973:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31955:33:0"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32006:0:0"
									},
									"scope": 1335,
									"src": "31941:535:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "32861:594:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1156,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "32879:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32898:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32890:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1157,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "32890:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32890:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "32879:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32902:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32871:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32871:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "32871:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1166,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "32970:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32987:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32979:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1167,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32979:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32979:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "32991:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1165,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "32949:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32949:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "32949:49:0"
											},
											{
												"assignments": [
													1175
												],
												"declarations": [
													{
														"constant": false,
														"id": 1175,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "33017:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "33009:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1174,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33009:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1179,
												"initialValue": {
													"baseExpression": {
														"id": 1176,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "33034:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1178,
													"indexExpression": {
														"id": 1177,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "33044:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33034:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33009:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1181,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "33070:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1182,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "33088:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33070:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33096:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 1180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33062:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33062:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "33062:71:0"
											},
											{
												"id": 1199,
												"nodeType": "UncheckedBlock",
												"src": "33143:194:0",
												"statements": [
													{
														"expression": {
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1187,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "33167:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1189,
																"indexExpression": {
																	"id": 1188,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "33177:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "33167:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1190,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "33188:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1191,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "33205:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33188:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33167:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1194,
														"nodeType": "ExpressionStatement",
														"src": "33167:44:0"
													},
													{
														"expression": {
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1195,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "33304:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 1196,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "33320:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33304:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1198,
														"nodeType": "ExpressionStatement",
														"src": "33304:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1201,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "33361:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33378:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33370:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1202,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33370:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33370:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1206,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "33382:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1200,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "33352:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33352:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "EmitStatement",
												"src": "33347:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1210,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "33420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33437:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33429:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1211,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33429:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33429:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "33441:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1209,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "33400:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33400:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "33400:48:0"
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "32482:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "32805:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "32819:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "32811:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32836:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "32828:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32810:33:0"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32861:0:0"
									},
									"scope": 1335,
									"src": "32796:659:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "33991:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1230,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "34009:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "34018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1231,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "34018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "34009:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34030:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34001:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34001:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "34001:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1240,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "34087:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34106:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "34098:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1241,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "34098:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34098:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "34087:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34110:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34079:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34079:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "34079:68:0"
											},
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1249,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "34158:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1252,
															"indexExpression": {
																"id": 1250,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "34170:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34158:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1253,
														"indexExpression": {
															"id": 1251,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "34177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34158:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1254,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "34188:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34158:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "34158:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1258,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "34218:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1259,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "34225:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1260,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "34234:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1257,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "34209:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34209:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1262,
												"nodeType": "EmitStatement",
												"src": "34204:37:0"
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "33461:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "33887:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33913:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "33905:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "33936:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "33928:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "33961:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "33953:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33895:78:0"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33991:0:0"
									},
									"scope": 1335,
									"src": "33878:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "34649:321:0",
										"statements": [
											{
												"assignments": [
													1275
												],
												"declarations": [
													{
														"constant": false,
														"id": 1275,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "34667:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1306,
														"src": "34659:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34659:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1280,
												"initialValue": {
													"arguments": [
														{
															"id": 1277,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "34696:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1278,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "34703:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1276,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "34686:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34686:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34659:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1281,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "34725:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "34750:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1283,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "34750:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1282,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "34745:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34745:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "34745:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34725:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1305,
												"nodeType": "IfStatement",
												"src": "34721:243:0",
												"trueBody": {
													"id": 1304,
													"nodeType": "Block",
													"src": "34764:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1289,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "34786:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1290,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "34806:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34786:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34814:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1288,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "34778:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34778:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1294,
															"nodeType": "ExpressionStatement",
															"src": "34778:68:0"
														},
														{
															"id": 1303,
															"nodeType": "UncheckedBlock",
															"src": "34860:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1296,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1267,
																				"src": "34897:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1297,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1269,
																				"src": "34904:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1298,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1275,
																					"src": "34913:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1299,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1271,
																					"src": "34932:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "34913:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1295,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "34888:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34888:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1302,
																	"nodeType": "ExpressionStatement",
																	"src": "34888:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "34254:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "34538:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34571:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "34563:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "34594:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "34586:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34586:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "34619:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "34611:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34553:78:0"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34649:0:0"
									},
									"scope": 1335,
									"src": "34529:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "35673:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "34976:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "35563:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "35601:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "35593:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35623:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "35615:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35615:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "35643:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "35635:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35583:72:0"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35673:0:0"
									},
									"scope": 1335,
									"src": "35554:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "36381:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "35681:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "36272:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36309:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "36301:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36331:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "36323:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "36351:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "36343:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36291:72:0"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36381:0:0"
									},
									"scope": 1335,
									"src": "36263:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "36389:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1334,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "36668:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "36648:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$45_storage",
										"typeString": "uint256[45]"
									},
									"typeName": {
										"baseType": {
											"id": 1331,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "36648:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1333,
										"length": {
											"hexValue": "3435",
											"id": 1332,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "36656:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_45_by_1",
												"typeString": "int_const 45"
											},
											"value": "45"
										},
										"nodeType": "ArrayTypeName",
										"src": "36648:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$45_storage_ptr",
											"typeString": "uint256[45]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2000,
							"src": "24517:12159:0",
							"usedErrors": []
						},
						{
							"id": 1336,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36850:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1338,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 459,
										"src": "37029:13:0"
									},
									"id": 1339,
									"nodeType": "InheritanceSpecifier",
									"src": "37029:13:0"
								},
								{
									"baseName": {
										"id": 1340,
										"name": "ERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "37044:16:0"
									},
									"id": 1341,
									"nodeType": "InheritanceSpecifier",
									"src": "37044:16:0"
								}
							],
							"canonicalName": "ERC20CappedUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1337,
								"nodeType": "StructuredDocumentation",
								"src": "36877:107:0",
								"text": " @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n @custom:storage-size 51"
							},
							"fullyImplemented": true,
							"id": 1419,
							"linearizedBaseContracts": [
								1419,
								1335,
								728,
								705,
								499,
								459
							],
							"name": "ERC20CappedUpgradeable",
							"nameLocation": "37003:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1343,
									"mutability": "mutable",
									"name": "_cap",
									"nameLocation": "37083:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1419,
									"src": "37067:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1342,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "37067:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "37296:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1352,
															"name": "cap_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "37335:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1351,
														"name": "__ERC20Capped_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "37306:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37306:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "37306:34:0"
											}
										]
									},
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "37094:129:0",
										"text": " @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1349,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1348,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "37279:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "37279:16:0"
										}
									],
									"name": "__ERC20Capped_init",
									"nameLocation": "37237:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "37264:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "37256:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37255:14:0"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37296:0:0"
									},
									"scope": 1419,
									"src": "37228:119:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "37431:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1364,
																"name": "cap_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "37449:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37456:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37449:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332304361707065643a206361702069732030",
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37459:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828",
																"typeString": "literal_string \"ERC20Capped: cap is 0\""
															},
															"value": "ERC20Capped: cap is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828",
																"typeString": "literal_string \"ERC20Capped: cap is 0\""
															}
														],
														"id": 1363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37441:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37441:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "37441:42:0"
											},
											{
												"expression": {
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1370,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "37493:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1371,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "37500:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37493:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "37493:11:0"
											}
										]
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1361,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1360,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "37414:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "37414:16:0"
										}
									],
									"name": "__ERC20Capped_init_unchained",
									"nameLocation": "37362:28:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "37399:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "37391:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37390:14:0"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37431:0:0"
									},
									"scope": 1419,
									"src": "37353:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "37643:28:0",
										"statements": [
											{
												"expression": {
													"id": 1381,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1343,
													"src": "37660:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1380,
												"id": 1382,
												"nodeType": "Return",
												"src": "37653:11:0"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "37517:68:0",
										"text": " @dev Returns the cap on the token's total supply."
									},
									"functionSelector": "355274ea",
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "37599:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37602:2:0"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "37634:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37633:9:0"
									},
									"scope": 1419,
									"src": "37590:81:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1147
									],
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "37798:141:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1394,
																			"name": "ERC20Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1335,
																			"src": "37816:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20Upgradeable_$1335_$",
																				"typeString": "type(contract ERC20Upgradeable)"
																			}
																		},
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 828,
																		"src": "37816:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37816:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1397,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "37849:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37816:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1399,
																	"name": "cap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "37859:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37859:5:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37816:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332304361707065643a20636170206578636565646564",
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37866:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																"typeString": "literal_string \"ERC20Capped: cap exceeded\""
															},
															"value": "ERC20Capped: cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																"typeString": "literal_string \"ERC20Capped: cap exceeded\""
															}
														],
														"id": 1393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37808:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37808:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "37808:86:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1408,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "37916:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1409,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "37925:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1405,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "37904:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20CappedUpgradeable_$1419_$",
																"typeString": "type(contract super ERC20CappedUpgradeable)"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "37904:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37904:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "37904:28:0"
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "37677:42:0",
										"text": " @dev See {ERC20-_mint}."
									},
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "37733:5:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1391,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37789:8:0"
									},
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "37747:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "37739:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "37764:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "37756:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37738:33:0"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37798:0:0"
									},
									"scope": 1419,
									"src": "37724:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "37945:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1418,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "38224:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1419,
									"src": "38204:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "38204:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1417,
										"length": {
											"hexValue": "3530",
											"id": 1416,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "38212:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "38204:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2000,
							"src": "36985:1247:0",
							"usedErrors": []
						},
						{
							"id": 1420,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "38267:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1421,
										"name": "ERC20CappedUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1419,
										"src": "38319:22:0"
									},
									"id": 1422,
									"nodeType": "InheritanceSpecifier",
									"src": "38319:22:0"
								},
								{
									"baseName": {
										"id": 1423,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 628,
										"src": "38343:18:0"
									},
									"id": 1424,
									"nodeType": "InheritanceSpecifier",
									"src": "38343:18:0"
								},
								{
									"baseName": {
										"id": 1425,
										"name": "IDeAnt3",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 9,
										"src": "38363:7:0"
									},
									"id": 1426,
									"nodeType": "InheritanceSpecifier",
									"src": "38363:7:0"
								}
							],
							"canonicalName": "DeAnt3Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1999,
							"linearizedBaseContracts": [
								1999,
								9,
								628,
								1419,
								1335,
								728,
								705,
								499,
								459
							],
							"name": "DeAnt3Token",
							"nameLocation": "38304:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1428,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "38392:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "38377:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1427,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "38377:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1430,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "38418:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "38403:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1429,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "38403:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1432,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "38445:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "38431:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1431,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "38431:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1434,
									"mutability": "mutable",
									"name": "_rewardAmt",
									"nameLocation": "38476:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "38460:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1433,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "38460:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1436,
									"mutability": "mutable",
									"name": "_cap",
									"nameLocation": "38508:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "38492:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1435,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "38492:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1438,
									"mutability": "mutable",
									"name": "_taxFee",
									"nameLocation": "38534:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "38518:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1437,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "38518:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d89135cd",
									"id": 1440,
									"mutability": "mutable",
									"name": "totalBurned",
									"nameLocation": "38562:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "38547:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1439,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "38547:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1443,
									"mutability": "mutable",
									"name": "_signers",
									"nameLocation": "38597:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "38579:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1441,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "38579:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1442,
										"nodeType": "ArrayTypeName",
										"src": "38579:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3de47e32",
									"id": 1447,
									"mutability": "mutable",
									"name": "_mapSigners",
									"nameLocation": "38643:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "38611:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1446,
										"keyType": {
											"id": 1444,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "38619:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "38611:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1445,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "38630:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f9342285",
									"id": 1451,
									"mutability": "mutable",
									"name": "uniqueIdExists",
									"nameLocation": "38692:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "38660:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 1450,
										"keyType": {
											"id": 1448,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "38668:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "38660:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueType": {
											"id": 1449,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "38679:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1e0d4ce9",
									"id": 1455,
									"mutability": "mutable",
									"name": "userTotalBurned",
									"nameLocation": "38747:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "38712:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1454,
										"keyType": {
											"id": 1452,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "38720:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "38712:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1453,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "38731:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1457,
									"mutability": "mutable",
									"name": "nodeControllerContract",
									"nameLocation": "38777:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "38769:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1456,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "38769:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "38832:152:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1460,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "38863:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "38863:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1462,
																"name": "nodeControllerContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "38877:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "38863:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792063616c6c61626c652066726f6d206e6f6465436f6e74726f6c6c6572436f6e7472616374",
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38913:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e52c60fcbda90554d26f5b0e903bdffb1cb3f4010d793a15617dcee694694e3a",
																"typeString": "literal_string \"Only callable from nodeControllerContract\""
															},
															"value": "Only callable from nodeControllerContract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e52c60fcbda90554d26f5b0e903bdffb1cb3f4010d793a15617dcee694694e3a",
																"typeString": "literal_string \"Only callable from nodeControllerContract\""
															}
														],
														"id": 1459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "38842:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38842:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "38842:124:0"
											},
											{
												"id": 1467,
												"nodeType": "PlaceholderStatement",
												"src": "38976:1:0"
											}
										]
									},
									"id": 1469,
									"name": "onlyController",
									"nameLocation": "38815:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38829:2:0"
									},
									"src": "38806:178:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "39197:325:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1486,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "39207:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39207:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "39207:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1490,
															"name": "_NAME",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "39246:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1491,
															"name": "_SYMBOL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "39253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1489,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "39233:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39233:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "39233:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1495,
																"name": "cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "39290:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39296:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1497,
																	"name": "_DECIMALS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "39300:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "39296:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39290:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1494,
														"name": "__ERC20Capped_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "39271:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39271:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "39271:39:0"
											},
											{
												"expression": {
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1502,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "39320:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1503,
														"name": "_NAME",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "39328:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "39320:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "39320:13:0"
											},
											{
												"expression": {
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1506,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "39343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1507,
														"name": "_SYMBOL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "39353:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "39343:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "39343:17:0"
											},
											{
												"expression": {
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1510,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "39370:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1511,
														"name": "_DECIMALS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "39382:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "39370:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "39370:21:0"
											},
											{
												"expression": {
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1514,
														"name": "_rewardAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "39401:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "302e31",
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39414:9:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000_by_1",
															"typeString": "int_const 100000000000000000"
														},
														"value": "0.1"
													},
													"src": "39401:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "39401:22:0"
											},
											{
												"expression": {
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1518,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "39433:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1519,
														"name": "cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "39440:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39433:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "39433:10:0"
											},
											{
												"expression": {
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1522,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "39453:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1523,
														"name": "taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "39463:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39453:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "39453:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1529,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "39493:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DeAnt3Token_$1999",
																		"typeString": "contract DeAnt3Token"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DeAnt3Token_$1999",
																		"typeString": "contract DeAnt3Token"
																	}
																],
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39485:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1527,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "39485:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39485:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1531,
															"name": "initialBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "39500:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1526,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1413
														],
														"referencedDeclaration": 1413,
														"src": "39479:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39479:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "39479:36:0"
											}
										]
									},
									"functionSelector": "2b9a1d3c",
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1484,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1483,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 361,
												"src": "39185:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "39185:11:0"
										}
									],
									"name": "initialize",
									"nameLocation": "38999:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "_NAME",
												"nameLocation": "39033:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "39019:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "_SYMBOL",
												"nameLocation": "39062:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "39048:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39048:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "_DECIMALS",
												"nameLocation": "39085:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "39079:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1474,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "39079:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "39112:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "39104:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "initialBalance",
												"nameLocation": "39133:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "39125:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "taxFee",
												"nameLocation": "39165:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "39157:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39009:168:0"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39197:0:0"
									},
									"scope": 1999,
									"src": "38990:532:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "39555:2:0",
										"statements": []
									},
									"id": 1539,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39535:2:0"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39555:0:0"
									},
									"scope": 1999,
									"src": "39528:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										818
									],
									"body": {
										"id": 1547,
										"nodeType": "Block",
										"src": "39628:33:0",
										"statements": [
											{
												"expression": {
													"id": 1545,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1432,
													"src": "39645:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1544,
												"id": 1546,
												"nodeType": "Return",
												"src": "39638:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "39572:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1541,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "39603:8:0"
									},
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39580:2:0"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "39621:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1542,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "39621:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39620:7:0"
									},
									"scope": 1999,
									"src": "39563:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "39721:34:0",
										"statements": [
											{
												"expression": {
													"id": 1553,
													"name": "_rewardAmt",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1434,
													"src": "39738:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1552,
												"id": 1554,
												"nodeType": "Return",
												"src": "39731:17:0"
											}
										]
									},
									"functionSelector": "ac7fa3c6",
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardAmt",
									"nameLocation": "39676:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39688:2:0"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "39712:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39711:9:0"
									},
									"scope": 1999,
									"src": "39667:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "39824:37:0",
										"statements": [
											{
												"expression": {
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1563,
														"name": "_rewardAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "39834:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1564,
														"name": "_newAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "39847:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39834:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "39834:20:0"
											}
										]
									},
									"functionSelector": "b24a0893",
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1561,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1560,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 542,
												"src": "39814:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "39814:9:0"
										}
									],
									"name": "setRewardAmtInWei",
									"nameLocation": "39770:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "_newAmt",
												"nameLocation": "39796:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "39788:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39787:17:0"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39824:0:0"
									},
									"scope": 1999,
									"src": "39761:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "39918:31:0",
										"statements": [
											{
												"expression": {
													"id": 1573,
													"name": "_taxFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1438,
													"src": "39935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1572,
												"id": 1574,
												"nodeType": "Return",
												"src": "39928:14:0"
											}
										]
									},
									"functionSelector": "f66608fe",
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaxFee",
									"nameLocation": "39876:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39885:2:0"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "39909:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39908:9:0"
									},
									"scope": 1999,
									"src": "39867:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "40013:37:0",
										"statements": [
											{
												"expression": {
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1583,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "40023:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1584,
														"name": "_newTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1578,
														"src": "40033:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40023:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1586,
												"nodeType": "ExpressionStatement",
												"src": "40023:20:0"
											}
										]
									},
									"functionSelector": "c4081a4c",
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1581,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1580,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 542,
												"src": "40003:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "40003:9:0"
										}
									],
									"name": "setTaxFee",
									"nameLocation": "39964:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "_newTaxFee",
												"nameLocation": "39982:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "39974:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39973:20:0"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40013:0:0"
									},
									"scope": 1999,
									"src": "39955:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "40119:32:0",
										"statements": [
											{
												"expression": {
													"id": 1594,
													"name": "_signers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1443,
													"src": "40136:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1593,
												"id": 1595,
												"nodeType": "Return",
												"src": "40129:15:0"
											}
										]
									},
									"functionSelector": "94cf795e",
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSigners",
									"nameLocation": "40065:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40075:2:0"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "40101:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1590,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "40101:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1591,
													"nodeType": "ArrayTypeName",
													"src": "40101:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40100:18:0"
									},
									"scope": 1999,
									"src": "40056:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1624,
										"nodeType": "Block",
										"src": "40231:160:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1606,
															"name": "_signers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "40252:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40262:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"id": 1608,
															"name": "_mapSigners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "40269:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														],
														"id": 1605,
														"name": "_updateMap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "40241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$_t_mapping$_t_address_$_t_bool_$_$returns$__$",
															"typeString": "function (address[] memory,bool,mapping(address => bool))"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40241:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "40241:40:0"
											},
											{
												"expression": {
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "40291:15:0",
													"subExpression": {
														"id": 1611,
														"name": "_signers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "40298:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "40291:15:0"
											},
											{
												"expression": {
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1614,
														"name": "_signers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "40316:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1615,
														"name": "signers_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "40327:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "40316:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "40316:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1619,
															"name": "signers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "40356:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40366:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 1621,
															"name": "_mapSigners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "40372:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														],
														"id": 1618,
														"name": "_updateMap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "40345:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$_t_mapping$_t_address_$_t_bool_$_$returns$__$",
															"typeString": "function (address[] memory,bool,mapping(address => bool))"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40345:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1623,
												"nodeType": "ExpressionStatement",
												"src": "40345:39:0"
											}
										]
									},
									"functionSelector": "a3772662",
									"id": 1625,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1603,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1602,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 542,
												"src": "40221:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "40221:9:0"
										}
									],
									"name": "setSigners",
									"nameLocation": "40166:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "signers_",
												"nameLocation": "40194:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "40177:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1598,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "40177:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1599,
													"nodeType": "ArrayTypeName",
													"src": "40177:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40176:27:0"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40231:0:0"
									},
									"scope": 1999,
									"src": "40157:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "40461:43:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1632,
														"name": "_mapSigners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "40478:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1634,
													"indexExpression": {
														"id": 1633,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1627,
														"src": "40490:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40478:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1631,
												"id": 1635,
												"nodeType": "Return",
												"src": "40471:26:0"
											}
										]
									},
									"functionSelector": "07c351dd",
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mapSigner",
									"nameLocation": "40406:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "40424:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "40416:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40415:16:0"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "40455:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1629,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40455:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40454:6:0"
									},
									"scope": 1999,
									"src": "40397:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "40642:101:0",
										"statements": [
											{
												"body": {
													"id": 1668,
													"nodeType": "Block",
													"src": "40692:45:0",
													"statements": [
														{
															"expression": {
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1660,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1646,
																		"src": "40706:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1664,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1661,
																			"name": "arr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1640,
																			"src": "40710:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1663,
																		"indexExpression": {
																			"id": 1662,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1650,
																			"src": "40714:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "40710:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "40706:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1665,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "40720:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "40706:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1667,
															"nodeType": "ExpressionStatement",
															"src": "40706:20:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1653,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "40671:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1654,
															"name": "arr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "40675:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "40675:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40671:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1669,
												"initializationExpression": {
													"assignments": [
														1650
													],
													"declarations": [
														{
															"constant": false,
															"id": 1650,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "40664:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1669,
															"src": "40657:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"typeName": {
																"id": 1649,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "40657:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1652,
													"initialValue": {
														"hexValue": "30",
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40668:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "40657:12:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "40687:3:0",
														"subExpression": {
															"id": 1657,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "40687:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1659,
													"nodeType": "ExpressionStatement",
													"src": "40687:3:0"
												},
												"nodeType": "ForStatement",
												"src": "40652:85:0"
											}
										]
									},
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateMap",
									"nameLocation": "40519:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "40556:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "40539:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1638,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "40539:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1639,
													"nodeType": "ArrayTypeName",
													"src": "40539:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "40574:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "40569:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40569:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "40623:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "40590:36:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"typeName": {
													"id": 1645,
													"keyType": {
														"id": 1643,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "40598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "40590:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
														"typeString": "mapping(address => bool)"
													},
													"valueType": {
														"id": 1644,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "40609:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40529:103:0"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40642:0:0"
									},
									"scope": 1999,
									"src": "40510:233:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										867
									],
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "40861:339:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1681,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "40875:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "40875:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "40889:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40889:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "40875:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1719,
													"nodeType": "Block",
													"src": "40962:211:0",
													"statements": [
														{
															"assignments": [
																1695
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1695,
																	"mutability": "mutable",
																	"name": "burnAmt",
																	"nameLocation": "40984:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1719,
																	"src": "40976:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1694,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "40976:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1699,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1697,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1675,
																		"src": "41012:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1696,
																	"name": "_calculateBurnAmt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1783,
																	"src": "40994:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40994:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "40976:43:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1701,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "41048:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "41048:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1703,
																		"name": "burnAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1695,
																		"src": "41060:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1700,
																	"name": "_burnAndUpdate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1812,
																	"src": "41033:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41033:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1705,
															"nodeType": "ExpressionStatement",
															"src": "41033:35:0"
														},
														{
															"assignments": [
																1707
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1707,
																	"mutability": "mutable",
																	"name": "newAmt",
																	"nameLocation": "41090:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1719,
																	"src": "41082:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1706,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "41082:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1711,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1708,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1675,
																	"src": "41099:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1709,
																	"name": "burnAmt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "41108:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "41099:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "41082:33:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1715,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1673,
																		"src": "41144:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1716,
																		"name": "newAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "41155:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1712,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "41129:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1999_$",
																			"typeString": "type(contract super DeAnt3Token)"
																		}
																	},
																	"id": 1714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 867,
																	"src": "41129:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41129:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1718,
															"nodeType": "ExpressionStatement",
															"src": "41129:33:0"
														}
													]
												},
												"id": 1720,
												"nodeType": "IfStatement",
												"src": "40871:302:0",
												"trueBody": {
													"id": 1693,
													"nodeType": "Block",
													"src": "40898:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1689,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1673,
																		"src": "40927:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1690,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1675,
																		"src": "40938:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1686,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "40912:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1999_$",
																			"typeString": "type(contract super DeAnt3Token)"
																		}
																	},
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 867,
																	"src": "40912:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40912:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1692,
															"nodeType": "ExpressionStatement",
															"src": "40912:33:0"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "41189:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1680,
												"id": 1722,
												"nodeType": "Return",
												"src": "41182:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "40758:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1677,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "40825:8:0"
									},
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "40775:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "40767:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "40794:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "40786:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40766:35:0"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "40851:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1678,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40851:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40850:6:0"
									},
									"scope": 1999,
									"src": "40749:451:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										943
									],
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "41339:209:0",
										"statements": [
											{
												"assignments": [
													1737
												],
												"declarations": [
													{
														"constant": false,
														"id": 1737,
														"mutability": "mutable",
														"name": "burnAmt",
														"nameLocation": "41357:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1763,
														"src": "41349:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "41349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1741,
												"initialValue": {
													"arguments": [
														{
															"id": 1739,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "41385:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1738,
														"name": "_calculateBurnAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "41367:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41367:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41349:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1743,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "41417:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1744,
															"name": "burnAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "41423:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1742,
														"name": "_burnAndUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "41402:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41402:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1746,
												"nodeType": "ExpressionStatement",
												"src": "41402:29:0"
											},
											{
												"assignments": [
													1748
												],
												"declarations": [
													{
														"constant": false,
														"id": 1748,
														"mutability": "mutable",
														"name": "newAmt",
														"nameLocation": "41449:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1763,
														"src": "41441:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1747,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "41441:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1752,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1749,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "41458:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1750,
														"name": "burnAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "41467:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41458:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41441:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1756,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "41503:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1757,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "41509:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1758,
															"name": "newAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "41513:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1753,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "41484:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1999_$",
																"typeString": "type(contract super DeAnt3Token)"
															}
														},
														"id": 1755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 943,
														"src": "41484:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41484:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1760,
												"nodeType": "ExpressionStatement",
												"src": "41484:36:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "41537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1735,
												"id": 1762,
												"nodeType": "Return",
												"src": "41530:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "41215:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1732,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "41315:8:0"
									},
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "41245:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "41237:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41267:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "41259:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "41287:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "41279:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41227:72:0"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "41333:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1733,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41333:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41332:6:0"
									},
									"scope": 1999,
									"src": "41206:342:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "41628:83:0",
										"statements": [
											{
												"assignments": [
													1772
												],
												"declarations": [
													{
														"constant": false,
														"id": 1772,
														"mutability": "mutable",
														"name": "burnAmt",
														"nameLocation": "41646:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1782,
														"src": "41638:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "41638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1779,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1773,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "41657:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1774,
																	"name": "_taxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1438,
																	"src": "41666:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "41657:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1776,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "41656:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "41677:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "41656:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41638:42:0"
											},
											{
												"expression": {
													"id": 1780,
													"name": "burnAmt",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1772,
													"src": "41697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1781,
												"nodeType": "Return",
												"src": "41690:14:0"
											}
										]
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateBurnAmt",
									"nameLocation": "41563:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "41589:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "41581:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41580:16:0"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "41619:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41618:9:0"
									},
									"scope": 1999,
									"src": "41554:157:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "41782:153:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1791,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "41798:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1792,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "41807:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1790,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "41792:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41792:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1794,
												"nodeType": "ExpressionStatement",
												"src": "41792:22:0"
											},
											{
												"expression": {
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1795,
														"name": "totalBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "41824:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1796,
															"name": "totalBurned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "41838:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1797,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "41852:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "41838:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41824:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "41824:34:0"
											},
											{
												"expression": {
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1801,
															"name": "userTotalBurned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "41868:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1803,
														"indexExpression": {
															"id": 1802,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "41884:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "41868:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1804,
																"name": "userTotalBurned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "41895:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1806,
															"indexExpression": {
																"id": 1805,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "41911:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "41895:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "41922:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "41895:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41868:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1810,
												"nodeType": "ExpressionStatement",
												"src": "41868:60:0"
											}
										]
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnAndUpdate",
									"nameLocation": "41726:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "41749:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "41741:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "41766:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "41758:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41740:33:0"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41782:0:0"
									},
									"scope": 1999,
									"src": "41717:218:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "42041:58:0",
										"statements": [
											{
												"expression": {
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1819,
														"name": "nodeControllerContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "42051:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1820,
														"name": "_contractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1814,
														"src": "42076:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "42051:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "42051:41:0"
											}
										]
									},
									"functionSelector": "4cdbab5b",
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1817,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1816,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 542,
												"src": "42027:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "42027:9:0"
										}
									],
									"name": "setNodeControllerContract",
									"nameLocation": "41950:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nameLocation": "41984:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "41976:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41975:26:0"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42041:0:0"
									},
									"scope": 1999,
									"src": "41941:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										8
									],
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "42208:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1834,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "42233:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1835,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "42242:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1833,
														"name": "_burnAndUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "42218:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42218:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "42218:31:0"
											}
										]
									},
									"functionSelector": "1e71e435",
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1830,
												"name": "onlyController",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1469,
												"src": "42189:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "42189:14:0"
										}
									],
									"name": "nodeControllerBurn",
									"nameLocation": "42114:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "42141:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "42133:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "42158:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "42150:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42132:33:0"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42208:0:0"
									},
									"scope": 1999,
									"src": "42105:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "42496:1130:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1860,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "42514:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1861,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "42526:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "42526:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "42514:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578706972656420646561646c696e65",
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42543:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d",
																"typeString": "literal_string \"Expired deadline\""
															},
															"value": "Expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d",
																"typeString": "literal_string \"Expired deadline\""
															}
														],
														"id": 1859,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42506:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42506:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1866,
												"nodeType": "ExpressionStatement",
												"src": "42506:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "42580:25:0",
															"subExpression": {
																"baseExpression": {
																	"id": 1868,
																	"name": "uniqueIdExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "42581:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1870,
																"indexExpression": {
																	"id": 1869,
																	"name": "uniqueId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1843,
																	"src": "42596:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "42581:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e6971756520696420657869737473",
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42607:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b",
																"typeString": "literal_string \"Unique id exists\""
															},
															"value": "Unique id exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b",
																"typeString": "literal_string \"Unique id exists\""
															}
														],
														"id": 1867,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42572:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "42572:54:0"
											},
											{
												"assignments": [
													1876
												],
												"declarations": [
													{
														"constant": false,
														"id": 1876,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "42645:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1997,
														"src": "42637:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1875,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42637:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1879,
												"initialValue": {
													"expression": {
														"id": 1877,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "42655:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "42655:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42637:28:0"
											},
											{
												"assignments": [
													1881
												],
												"declarations": [
													{
														"constant": false,
														"id": 1881,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "42683:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1997,
														"src": "42675:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1880,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42675:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1885,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1882,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "42691:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1999_$",
																"typeString": "type(contract super DeAnt3Token)"
															}
														},
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 551,
														"src": "42691:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42691:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42675:29:0"
											},
											{
												"assignments": [
													1887
												],
												"declarations": [
													{
														"constant": false,
														"id": 1887,
														"mutability": "mutable",
														"name": "permitTxHash",
														"nameLocation": "42723:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1997,
														"src": "42715:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1886,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "42715:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1907,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30783139",
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42802:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_25_by_1",
																				"typeString": "int_const 25"
																			},
																			"value": "0x19"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_25_by_1",
																				"typeString": "int_const 25"
																			}
																		],
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "42795:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1891,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "42795:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42795:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42832:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "42825:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1895,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "42825:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42825:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																{
																	"id": 1899,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1881,
																	"src": "42852:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1900,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1876,
																	"src": "42875:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1901,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "42900:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"id": 1902,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1845,
																	"src": "42927:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1903,
																	"name": "uniqueId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1843,
																	"src": "42951:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1904,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "42977:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	{
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1889,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "42761:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "42761:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42761:238:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1888,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "42738:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42738:271:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42715:294:0"
											},
											{
												"assignments": [
													1909
												],
												"declarations": [
													{
														"constant": false,
														"id": 1909,
														"mutability": "mutable",
														"name": "lastAddr",
														"nameLocation": "43028:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1997,
														"src": "43020:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1908,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "43020:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1914,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43047:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "43039:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1910,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "43039:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43039:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43020:29:0"
											},
											{
												"assignments": [
													1916
												],
												"declarations": [
													{
														"constant": false,
														"id": 1916,
														"mutability": "mutable",
														"name": "verifiedSigners",
														"nameLocation": "43065:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1997,
														"src": "43059:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1915,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "43059:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1918,
												"initialValue": {
													"hexValue": "30",
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "43083:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43059:25:0"
											},
											{
												"body": {
													"id": 1960,
													"nodeType": "Block",
													"src": "43132:219:0",
													"statements": [
														{
															"assignments": [
																1931
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1931,
																	"mutability": "mutable",
																	"name": "recovered",
																	"nameLocation": "43154:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1960,
																	"src": "43146:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1930,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "43146:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1944,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1933,
																		"name": "permitTxHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1887,
																		"src": "43176:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1934,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1850,
																			"src": "43190:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																				"typeString": "uint8[] memory"
																			}
																		},
																		"id": 1936,
																		"indexExpression": {
																			"id": 1935,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1920,
																			"src": "43192:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "43190:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1937,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1853,
																			"src": "43196:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1939,
																		"indexExpression": {
																			"id": 1938,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1920,
																			"src": "43198:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "43196:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1940,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1856,
																			"src": "43202:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1942,
																		"indexExpression": {
																			"id": 1941,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1920,
																			"src": "43204:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "43202:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1932,
																	"name": "ecrecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967290,
																	"src": "43166:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																	}
																},
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43166:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "43146:61:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1945,
																		"name": "recovered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "43225:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1946,
																		"name": "lastAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "43237:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "43225:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1948,
																		"name": "_mapSigners",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "43249:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1950,
																	"indexExpression": {
																		"id": 1949,
																		"name": "recovered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "43261:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "43249:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "43225:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1955,
															"nodeType": "IfStatement",
															"src": "43221:85:0",
															"trueBody": {
																"expression": {
																	"id": 1953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "43289:17:0",
																	"subExpression": {
																		"id": 1952,
																		"name": "verifiedSigners",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1916,
																		"src": "43289:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 1954,
																"nodeType": "ExpressionStatement",
																"src": "43289:17:0"
															}
														},
														{
															"expression": {
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1956,
																	"name": "lastAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1909,
																	"src": "43320:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1957,
																	"name": "recovered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "43331:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "43320:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1959,
															"nodeType": "ExpressionStatement",
															"src": "43320:20:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1923,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1920,
														"src": "43113:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1924,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "43117:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																"typeString": "uint8[] memory"
															}
														},
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "43117:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "43113:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1961,
												"initializationExpression": {
													"assignments": [
														1920
													],
													"declarations": [
														{
															"constant": false,
															"id": 1920,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "43106:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1961,
															"src": "43099:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"typeName": {
																"id": 1919,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "43099:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1922,
													"initialValue": {
														"hexValue": "30",
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43110:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "43099:12:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "43127:3:0",
														"subExpression": {
															"id": 1927,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "43127:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1929,
													"nodeType": "ExpressionStatement",
													"src": "43127:3:0"
												},
												"nodeType": "ForStatement",
												"src": "43094:257:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1963,
																"name": "verifiedSigners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1916,
																"src": "43368:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1964,
																	"name": "_signers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "43387:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "43387:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43368:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207369676e657273",
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43404:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67",
																"typeString": "literal_string \"Invalid signers\""
															},
															"value": "Invalid signers"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67",
																"typeString": "literal_string \"Invalid signers\""
															}
														],
														"id": 1962,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "43360:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43360:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1969,
												"nodeType": "ExpressionStatement",
												"src": "43360:62:0"
											},
											{
												"expression": {
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1970,
															"name": "uniqueIdExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "43432:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1972,
														"indexExpression": {
															"id": 1971,
															"name": "uniqueId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1843,
															"src": "43447:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "43432:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43459:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "43432:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1975,
												"nodeType": "ExpressionStatement",
												"src": "43432:31:0"
											},
											{
												"assignments": [
													1977,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1977,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "43480:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1997,
														"src": "43475:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1976,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "43475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1984,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43527:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1978,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "43493:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "43493:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1980,
																"name": "_rewardAmt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "43515:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "43493:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43493:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43474:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1986,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "43548:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e64204d656368",
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43557:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf",
																"typeString": "literal_string \"Failed to send Mech\""
															},
															"value": "Failed to send Mech"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf",
																"typeString": "literal_string \"Failed to send Mech\""
															}
														],
														"id": 1985,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "43540:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43540:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1989,
												"nodeType": "ExpressionStatement",
												"src": "43540:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1993,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "43601:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1994,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "43612:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1990,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "43589:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1999_$",
																"typeString": "type(contract super DeAnt3Token)"
															}
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1413,
														"src": "43589:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43589:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1996,
												"nodeType": "ExpressionStatement",
												"src": "43589:30:0"
											}
										]
									},
									"functionSelector": "e4c97e6a",
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permitMint",
									"nameLocation": "42271:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "42307:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "42291:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42291:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "uniqueId",
												"nameLocation": "42334:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "42326:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "42360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "42352:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "42384:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "42376:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "42417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "42402:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 1848,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "42402:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1849,
													"nodeType": "ArrayTypeName",
													"src": "42402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "42445:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "42428:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1851,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "42428:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1852,
													"nodeType": "ArrayTypeName",
													"src": "42428:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "42473:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "42456:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1854,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "42456:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1855,
													"nodeType": "ArrayTypeName",
													"src": "42456:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42281:199:0"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42496:0:0"
									},
									"scope": 1999,
									"src": "42262:1364:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2000,
							"src": "38295:5333:0",
							"usedErrors": []
						}
					],
					"src": "41:43588:0"
				},
				"id": 0
			}
		}
	}
}